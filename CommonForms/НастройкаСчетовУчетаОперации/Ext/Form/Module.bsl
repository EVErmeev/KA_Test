
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбработатьПереданныеПараметры();
	
	Если НЕ ДоступнаНастройкаСчетовРеглУчета()
		И НЕ ДоступнаНастройкаСчетовМеждународногоУчета() Тогда
		Отказ = Истина;
	Иначе
		УправлениеРеквизитамиЭлементамиФормыПриСоздании();
		ВывестиНаФормуДанныеНастройки(Параметры.ДанныеНастройки);
		
		// Выбор статей и аналитик.
		ПараметрыВыбораСтатейИАналитик = ПараметрыВыбораСтатейИАналитик();
		ДоходыИРасходыСервер.ПриЧтенииНаСервере(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	
	Возврат; // В КА обработчик пустой
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяАктивовПассивовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	// Выбор статей и аналитик.
	ДоходыИРасходыКлиент.НачалоВыбораСтатьи(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяАктивовПассивовПриИзменении(Элемент)
	
	СтатьяАктивовПассивовПриИзмененииНаСервере();
	
	// Выбор статей и аналитик.
	ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаСервере
Процедура СтатьяАктивовПассивовПриИзмененииНаСервере()
	
	МеждународнаяНастройкаДоступна = ДоступнаНастройкаСчетовМеждународногоУчета();
	
	Если МеждународнаяНастройкаДоступна И ПланыСчетовМеждународные.Количество() = 0 Тогда
		ДобавитьРеквизитыЭлементыМеждународногоУчета();
	ИначеЕсли НЕ МеждународнаяНастройкаДоступна И ПланыСчетовМеждународные.Количество() > 0 Тогда
		УдалитьРеквизитыЭлементыМеждународногоУчета();
	КонецЕсли;
	
КонецПроцедуры

//++ Локализация

&НаКлиенте
Процедура Подключаемый_СчетУчетаПриИзменении(Элемент)
	
	СчетУчетаПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СубконтоПриИзменении(Элемент)
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СубконтоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СпособыСубконтоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

//-- Локализация

&НаКлиенте
Процедура Подключаемый_СчетУчетаМеждународныйУчетПриИзменении(Элемент)
	
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СчетУчетаМеждународныйУчетНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СубконтоМеждународныйПриИзменении(Элемент)
	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьНастройкиСчетовИзСтатьи(Команда)
	
	ЗагрузитьНастройкиСчетовИзСтатьиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ДанныеНастройки = НастройкаСчетовУчетаКлиентСервер.СоставНастройкиСчетовУчета();
	
	//++ Локализация
	Если ДоступнаНастройкаСчетовРеглУчета() Тогда
		ДанныеНастройки.СчетУчета = СчетУчета;
		ДанныеНастройки.Субконто1 = Субконто1;
		ДанныеНастройки.Субконто2 = Субконто2;
		ДанныеНастройки.Субконто3 = Субконто3;
	КонецЕсли;
	//-- Локализация
	
	
	ВозвращаемоеЗначение = Новый Структура();
	ВозвращаемоеЗначение.Вставить("ДанныеНастройки", ДанныеНастройки);
	ВозвращаемоеЗначение.Вставить("СтатьяАктивовПассивов", СтатьяАктивовПассивов);
	ВозвращаемоеЗначение.Вставить("АналитикаАктивовПассивов", АналитикаАктивовПассивов);
	
	Если ЗначениеЗаполнено(НастройкаСчетовУчета) Тогда
		ВозвращаемоеЗначение.Вставить("НастройкаСчетовУчета", НастройкаСчетовУчета);
	Иначе
		ВозвращаемоеЗначение.Вставить("НастройкаСчетовУчета", НастройкаСчетовУчетаСлужебныйВызовСервера.СсылкаНовогоЭлементаНастройкиСчетовУчета());
	КонецЕсли;
	
	Закрыть(ВозвращаемоеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияФормы

&НаСервере
Процедура ОбработатьПереданныеПараметры()
	
	Период = Параметры.Период;
	НастройкаСчетовУчета = Параметры.НастройкаСчетовУчета;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.КонтекстНастройки);
	ИсточникиПодбораСубконто.ЗагрузитьЗначения(Параметры.ИсточникиПодбораСубконто.ВыгрузитьЗначения());
	
	СтатьиСНастройкамиПоОбъектам = Новый ФиксированныйМассив(ОбщегоНазначенияУТКлиентСервер.Массив(Параметры.СтатьиСНастройкамиПоОбъектам));
	
КонецПроцедуры

&НаСервере
Функция ДоступнаНастройкаСчетовРеглУчета()
	
	НастройкаДоступна = НастройкаСчетовУчетаСервер.ДоступнаНастройкаСчетовРеглУчета();
	
	Возврат НастройкаДоступна;
	
КонецФункции

&НаСервере
Функция ДоступнаНастройкаСчетовМеждународногоУчета()
	
	НастройкаДоступна = НастройкаСчетовУчетаСервер.ДоступнаНастройкаСчетовМеждународногоУчета();
	
	
	Возврат НастройкаДоступна;
	
КонецФункции

&НаСервере
Процедура УправлениеРеквизитамиЭлементамиФормыПриСоздании()
	
	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	Элементы.КнопкаОК.Видимость = Не Параметры.ТолькоПросмотр;
	
	Если НЕ ЗначениеЗаполнено(СтатьяАктивовПассивов) Тогда
		Элементы.ГруппаСтатьяАналитикаАктивовПассивов.Видимость = Ложь;
	КонецЕсли;
	
	Если ДоступнаНастройкаСчетовРеглУчета() Тогда
		Элементы.СтраницаРеглУчет.Видимость = Истина;
		//++ Локализация
		УстановитьОбработчикиСобытийРегламентированногоУчета();
		//-- Локализация
	Иначе
		Элементы.СтраницаРеглУчет.Видимость = Ложь;
	КонецЕсли;
	
	Если ДоступнаНастройкаСчетовМеждународногоУчета() Тогда
		ДобавитьРеквизитыЭлементыМеждународногоУчета();
	Иначе
		ПланыСчетовМеждународные = Новый ФиксированныйМассив(Новый Массив());
		УправлениеЭлементамиОтображенияСчетов();
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЭлементамиОтображенияСчетов()
	
	КоличествоВидимыхСчетов = 0;
	
	Для Каждого СтраницаСчета Из Элементы.ГруппаСтраницы.ПодчиненныеЭлементы Цикл
		КоличествоВидимыхСчетов = КоличествоВидимыхСчетов + СтраницаСчета.Видимость;
	КонецЦикла;
	
	Если КоличествоВидимыхСчетов = 0 Тогда
		Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		Элементы.ЗагрузитьНастройкиСтатьи.Видимость = Ложь;
		Заголовок = НСтр("ru = 'Настройка счетов учета не требуется'");
	ИначеЕсли КоличествоВидимыхСчетов = 1 Тогда
		Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		Элементы.ЗагрузитьНастройкиСтатьи.Видимость = Истина;
		Элементы.ЗагрузитьНастройкиСтатьи.Заголовок = НСтр("ru = 'Загрузить счет из статьи'");
		Если ТипЗнч(НастройкаСчетовУчета) = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов") Тогда
			Заголовок = НСтр("ru = 'Настройка счета учета в документах по умолчанию'");
		Иначе
			Заголовок = НСтр("ru = 'Настройка счета учета операции'");
		КонецЕсли;
	Иначе
		Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСверху;
		Элементы.ЗагрузитьНастройкиСтатьи.Видимость = Истина;
		Элементы.ЗагрузитьНастройкиСтатьи.Заголовок = НСтр("ru = 'Загрузить счета из статьи'");
		Если ТипЗнч(НастройкаСчетовУчета) = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов") Тогда
			Заголовок = НСтр("ru = 'Настройка счетов учета в документах по умолчанию'");
		Иначе
			Заголовок = НСтр("ru = 'Настройка счетов учета операции'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыЭлементыМеждународногоУчета()
	
	МассивПлановСчетов = Новый Массив();
	
	
	ПланыСчетовМеждународные = Новый ФиксированныйМассив(МассивПлановСчетов);
	
	УправлениеЭлементамиОтображенияСчетов();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьРеквизитыЭлементыМеждународногоУчета()
	
	
	ПланыСчетовМеждународные = Новый ФиксированныйМассив(Новый Массив());
	НедоступныеНастройкиСчетов = Новый ФиксированныйМассив(Новый Массив());
	
	УправлениеЭлементамиОтображенияСчетов();
	
КонецПроцедуры

&НаСервере
Процедура ВывестиНаФормуДанныеНастройки(ДанныеНастройки, ЗагрузкаИзСтатьи = Ложь)
	
	//++ Локализация
	Если НЕ ЗагрузкаИзСтатьи ИЛИ ДоступнаНастройкаСчетовРеглУчета() Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеНастройки, НастройкаСчетовУчетаКлиентСервер.РеквизитыНастройкиСчетаУчета());
		Если Элементы.СтраницаРеглУчет.Видимость Тогда
			УправлениеЭлементамиФормыРегламентированногоУчета();
		КонецЕсли;
	КонецЕсли;
	//-- Локализация
	
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ЗагрузитьНастройкиСчетовИзСтатьиНаСервере()
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("СтатьяАктивовПассивов", СтатьяАктивовПассивов);
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтатьиАктивовПассивов.Ссылка    КАК Ссылка
	//++ Локализация
	|	,
	|	СтатьиАктивовПассивов.СчетУчета КАК СчетУчета,
	|	СтатьиАктивовПассивов.Субконто1 КАК Субконто1,
	|	СтатьиАктивовПассивов.Субконто2 КАК Субконто2,
	|	СтатьиАктивовПассивов.Субконто3 КАК Субконто3
	//-- Локализация

	|ИЗ
	|	ПланВидовХарактеристик.СтатьиАктивовПассивов КАК СтатьиАктивовПассивов
	|ГДЕ
	|	СтатьиАктивовПассивов.Ссылка = &СтатьяАктивовПассивов
	|";
	
	Результат = Запрос.Выполнить();
	ВыборкаНастройки = Результат.Выбрать();
	ДанныеНастройки = НастройкаСчетовУчетаКлиентСервер.СоставНастройкиСчетовУчета();
	
	Пока ВыборкаНастройки.Следующий() Цикл
		//++ Локализация
		ЗаполнитьЗначенияСвойств(ДанныеНастройки, ВыборкаНастройки, НастройкаСчетовУчетаКлиентСервер.РеквизитыНастройкиСчетаУчета());
		//-- Локализация

	КонецЦикла;
	
	ВывестиНаФормуДанныеНастройки(ДанныеНастройки, Истина);
	
КонецПроцедуры

//++ Локализация

&НаСервере
Процедура УстановитьОбработчикиСобытийРегламентированногоУчета()
	
	Элементы.СчетУчета.УстановитьДействие("ПриИзменении", "Подключаемый_СчетУчетаПриИзменении");
	Элементы.Субконто1.УстановитьДействие("ПриИзменении", "Подключаемый_СубконтоПриИзменении");
	Элементы.Субконто1.УстановитьДействие("НачалоВыбора", "Подключаемый_СубконтоНачалоВыбора");
	Элементы.Субконто2.УстановитьДействие("ПриИзменении", "Подключаемый_СубконтоПриИзменении");
	Элементы.Субконто2.УстановитьДействие("НачалоВыбора", "Подключаемый_СубконтоНачалоВыбора");
	Элементы.Субконто3.УстановитьДействие("ПриИзменении", "Подключаемый_СубконтоПриИзменении");
	Элементы.Субконто3.УстановитьДействие("НачалоВыбора", "Подключаемый_СубконтоНачалоВыбора");
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЭлементамиФормыРегламентированногоУчета()
	
	ПоляФормы = Новый Структура(
		"Субконто1, Субконто2, Субконто3",
		"Субконто1", "Субконто2", "Субконто3");
	ЗаголовкиПолей = Новый Структура(
		"Субконто1, Субконто2, Субконто3",
		"ЗаголовокСубконто1", "ЗаголовокСубконто2", "ЗаголовокСубконто3");
	
	БухгалтерскийУчетКлиентСервер.ПриВыбореСчета(СчетУчета, ЭтаФорма, ПоляФормы, ЗаголовкиПолей);
	
	Если ИсточникиПодбораСубконто.Количество() > 0 Тогда
		СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СчетУчета);
		Для НомерСубконто = 1 По СвойстваСчета.КоличествоСубконто Цикл
			Элементы[ПоляФормы["Субконто" + НомерСубконто]].ПодсказкаВвода = "";
			ТипЗначенияСубконто = СвойстваСчета["ВидСубконто" + НомерСубконто + "ТипЗначения"];
			
			Для Каждого Аналитика Из ИсточникиПодбораСубконто Цикл
				Если ТипЗначенияСубконто.СодержитТип(Аналитика.Значение) Тогда
					Элементы[ПоляФормы["Субконто" + НомерСубконто]].ПодсказкаВвода = НСтр("ru = '<подбирается автоматически>'");
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СчетУчетаПриИзмененииСервер()
	
	ПоляОбъекта = Новый Структура(
		"Субконто1, Субконто2, Субконто3",
		"Субконто1", "Субконто2", "Субконто3");
		
	БухгалтерскийУчетКлиентСервер.ПриИзмененииСчета(СчетУчета, ЭтаФорма, ПоляОбъекта, Ложь);
	
	Если ЗначениеЗаполнено(АналитикаАктивовПассивов) Тогда
		СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СчетУчета);
		Для НомерСубконто = 1 По СвойстваСчета.КоличествоСубконто Цикл
			ТипЗначенияСубконто = СвойстваСчета["ВидСубконто" + НомерСубконто + "ТипЗначения"];
			Если ТипЗначенияСубконто.СодержитТип(ТипЗнч(АналитикаАктивовПассивов)) Тогда
				ЭтаФорма[ПоляОбъекта["Субконто" + НомерСубконто]] = АналитикаАктивовПассивов;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма);
	УправлениеЭлементамиФормыРегламентированногоУчета();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма)
	
	ПараметрыЗаписи = НастройкаСчетовУчетаКлиентСервер.ПараметрыВыбораСубконто(ЭтаФорма.Организация, ЭтаФорма, "Субконто%Индекс%", "СчетУчета");
	НастройкаСчетовУчетаКлиентСервер.ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, ЭтаФорма, "Субконто%Индекс%", "Субконто%Индекс%", ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура СпособыСубконтоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыЗаписи = НастройкаСчетовУчетаКлиентСервер.ПараметрыВыбораСубконто(ЭтаФорма.Организация, ЭтаФорма, "Субконто%Индекс%", "СчетУчета");
	ОбщегоНазначенияБПКлиент.НачалоВыбораЗначенияСубконто(ЭтаФорма, Элемент, СтандартнаяОбработка, ПараметрыЗаписи);

КонецПроцедуры

//-- Локализация


&НаСервере
Функция ПараметрыВыбораСтатейИАналитик() Экспорт
	
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "ЭтотОбъект";
	ПараметрыВыбора.Статья = "СтатьяАктивовПассивов";
	ПараметрыВыбора.ТипСтатьи = "ТипСтатьи";
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Ложь;
	ПараметрыВыбора.АналитикаРасходов = "";
	
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяАктивовПассивов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("АналитикаАктивовПассивов");
	
	Возврат ПараметрыВыбора;
	
КонецФункции


#КонецОбласти

#КонецОбласти
