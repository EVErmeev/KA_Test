#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Ключи реквизитов организаций ЗЕРНО.
// Если требуется получать ключи организации по всем подразделениям, то параметром передавать организацию или массив организаций.
// Если требуется получить ключи по организация + подразделение, то параметром передавать подготовленную таблицу для поиска.
// 
// Параметры:
//  ОрганизацияКонтрагент - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - организация / контрагент, по которым нужно получить реквизиты. 
//                        - Массив из ОпределяемыйТип.ОрганизацияКонтрагентГосИС - организации / контрагенты, по которым нужно получить реквизиты.
//                        - ТаблицаЗначений - см. ИнтеграцияЗЕРНО.НоваяТаблицаОрганизацияКонтрагентПодразделение.
// 
// Возвращаемое значение:
//  Массив из СправочникСсылка.КлючиРеквизитовОрганизацийЗЕРНО - Ключи реквизитов организаций.
Функция КлючиПоОрганизациямКонтрагентам(ОрганизацияКонтрагент) Экспорт
	
	Если ТипЗнч(ОрганизацияКонтрагент) = Тип("ТаблицаЗначений") Тогда
		
		ТаблицаИсточникиРеквизитов = ОрганизацияКонтрагент;
		ТаблицаИсточникиРеквизитов.Индексы.Добавить("ОрганизацияКонтрагент, Подразделение");
		
	Иначе
	
		Если ТипЗнч(ОрганизацияКонтрагент) = Тип("Массив") Тогда
			КоллекцияОрганизаций = ОрганизацияКонтрагент;
		ИначеЕсли ЗначениеЗаполнено(ОрганизацияКонтрагент) Тогда
			КоллекцияОрганизаций = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ОрганизацияКонтрагент);
		КонецЕсли;
		
		ТаблицаИсточникиРеквизитов = ИнтеграцияЗЕРНО.НоваяТаблицаОрганизацияКонтрагентПодразделение();
		
		Если ИнтеграцияИС.ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс()  Тогда
			ИнтеграцияЗЕРНОПереопределяемый.ПриОпределенииОбособленныхПодразделенийОрганизации(КоллекцияОрганизаций, ТаблицаИсточникиРеквизитов);
		КонецЕсли;
		
		ТаблицаИсточникиРеквизитов.Индексы.Добавить("ОрганизацияКонтрагент, Подразделение");
		
		Отбор = Новый Структура("ОрганизацияКонтрагент, Подразделение");
		Отбор.Подразделение = ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("Подразделение");
		
		Для Каждого ЭлементКоллекции Из КоллекцияОрганизаций Цикл
			
			Отбор.ОрганизацияКонтрагент = ЭлементКоллекции;
			Если ТаблицаИсточникиРеквизитов.НайтиСтроки(Отбор).Количество() = 0 Тогда
				
				ТаблицаИсточникиРеквизитов.Добавить().ОрганизацияКонтрагент = ЭлементКоллекции;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ИнтеграцияЗЕРНОВызовСервера.РеквизитыОрганизацийКонтрагентов(ТаблицаИсточникиРеквизитов, Ложь);
	
	Запрос = Новый Запрос;
	Запрос.Текст  = "ВЫБРАТЬ
	|	ТаблицаОтбора.ИНН            КАК ИНН,
	|	ТаблицаОтбора.КПП            КАК КПП,
	|	ТаблицаОтбора.ОГРН           КАК ОГРН,
	|	ТаблицаОтбора.ТипОрганизации КАК ТипОрганизации,
	|	ТаблицаОтбора.Наименование   КАК Наименование,
	|
	|	ТаблицаОтбора.ОрганизацияКонтрагент КАК ОрганизацияКонтрагент,
	|	ТаблицаОтбора.Подразделение         КАК Подразделение
	|
	|ПОМЕСТИТЬ ТаблицаОтбора
	|ИЗ
	|	&ТаблицаОтбора КАК ТаблицаОтбора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	КлючиРеквизитовОрганизацийЗЕРНО.Ссылка
	|ИЗ
	|	Справочник.КлючиРеквизитовОрганизацийЗЕРНО КАК КлючиРеквизитовОрганизацийЗЕРНО
	|ГДЕ
	|	(КлючиРеквизитовОрганизацийЗЕРНО.ОрганизацияКонтрагент,
	|	КлючиРеквизитовОрганизацийЗЕРНО.Подразделение) В 
	|		(ВЫБРАТЬ
	|			ТаблицаОтбора.ОрганизацияКонтрагент,
	|			ТаблицаОтбора.Подразделение
	|		ИЗ
	|			ТаблицаОтбора КАК ТаблицаОтбора)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	КлючиРеквизитовОрганизацийЗЕРНО.Ссылка
	|ИЗ
	|	Справочник.КлючиРеквизитовОрганизацийЗЕРНО КАК КлючиРеквизитовОрганизацийЗЕРНО
	|ГДЕ
	|	(КлючиРеквизитовОрганизацийЗЕРНО.ИНН,
	|	 КлючиРеквизитовОрганизацийЗЕРНО.КПП) В
	|		(ВЫБРАТЬ
	|			ТаблицаОтбора.ИНН,
	|			ТаблицаОтбора.КПП
	|		ИЗ
	|			ТаблицаОтбора КАК ТаблицаОтбора
	|		ГДЕ
	|			ТаблицаОтбора.ТипОрганизации В(ЗНАЧЕНИЕ(Перечисление.ТипыОрганизацийЗЕРНО.ЮридическоеЛицо),
	|			                               ЗНАЧЕНИЕ(Перечисление.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизация)))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	КлючиРеквизитовОрганизацийЗЕРНО.Ссылка
	|ИЗ
	|	Справочник.КлючиРеквизитовОрганизацийЗЕРНО КАК КлючиРеквизитовОрганизацийЗЕРНО
	|ГДЕ
	|	(КлючиРеквизитовОрганизацийЗЕРНО.ИНН,
	|	 КлючиРеквизитовОрганизацийЗЕРНО.ОГРН) В
	|		(ВЫБРАТЬ
	|			ТаблицаОтбора.ИНН,
	|			ТаблицаОтбора.ОГРН
	|		ИЗ
	|			ТаблицаОтбора КАК ТаблицаОтбора
	|		ГДЕ
	|			ТаблицаОтбора.ТипОрганизации = ЗНАЧЕНИЕ(Перечисление.ТипыОрганизацийЗЕРНО.ИндивидульныйПредприниматель))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	КлючиРеквизитовОрганизацийЗЕРНО.Ссылка
	|ИЗ
	|	Справочник.КлючиРеквизитовОрганизацийЗЕРНО КАК КлючиРеквизитовОрганизацийЗЕРНО
	|ГДЕ
	|	(КлючиРеквизитовОрганизацийЗЕРНО.Наименование) В
	|		(ВЫБРАТЬ
	|			ТаблицаОтбора.Наименование
	|		ИЗ
	|			ТаблицаОтбора КАК ТаблицаОтбора
	|		ГДЕ
	|			ТаблицаОтбора.ТипОрганизации = ЗНАЧЕНИЕ(Перечисление.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизацияБезРегистрацииВРФ))
	|";
	
	Запрос.УстановитьПараметр("ТаблицаОтбора", ТаблицаИсточникиРеквизитов);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Новый Массив;
	Иначе
		Возврат Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	КонецЕсли;
	
КонецФункции

Функция ОрганизацииКонтрагентыПоКлючам(КлючиРеквизитовОрганизаций) Экспорт
	
	ВозвращаемоеЗначение = Новый Соответствие();
	СсылкиНаКлючи        = Новый Массив;
	
	ТаблицаДанных = НоваяТаблицаРеквизитовКлючейРеквизитовОрганизаций();
	
	ТаблицаДанных.Индексы.Добавить("КлючРеквизитов");
	
	Если ТипЗнч(КлючиРеквизитовОрганизаций) = Тип("Массив") Тогда
		СсылкиНаКлючи = КлючиРеквизитовОрганизаций;
	Иначе
		СсылкиНаКлючи = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(КлючиРеквизитовОрганизаций);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КлючиРеквизитовОрганизацийЗЕРНО.Ссылка                КАК КлючРеквизитов,
		|	КлючиРеквизитовОрганизацийЗЕРНО.ОрганизацияКонтрагент КАК ОрганизацияКонтрагент,
		|	КлючиРеквизитовОрганизацийЗЕРНО.Подразделение         КАК Подразделение,
		|	КлючиРеквизитовОрганизацийЗЕРНО.ТипОрганизации        КАК ТипОрганизации,
		|	КлючиРеквизитовОрганизацийЗЕРНО.ИНН                   КАК ИНН,
		|	КлючиРеквизитовОрганизацийЗЕРНО.КПП                   КАК КПП,
		|	КлючиРеквизитовОрганизацийЗЕРНО.ОГРН                  КАК ОГРН,
		|	КлючиРеквизитовОрганизацийЗЕРНО.Наименование          КАК Наименование
		|ИЗ
		|	Справочник.КлючиРеквизитовОрганизацийЗЕРНО КАК КлючиРеквизитовОрганизацийЗЕРНО
		|ГДЕ
		|	КлючиРеквизитовОрганизацийЗЕРНО.Ссылка В (&Ссылки)";
	
	Запрос.УстановитьПараметр("Ссылки", СсылкиНаКлючи);
	
	РезультатЗапроса       = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ТипЗначенияПустойОрганизации = ТипЗнч(ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("Организация"));
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ЗначениеПоКлючу = Новый Структура("Организация, Подразделение, Контрагент");
		ВозвращаемоеЗначение.Вставить(ВыборкаДетальныеЗаписи.КлючРеквизитов, ЗначениеПоКлючу);
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ОрганизацияКонтрагент) Тогда
			
			Если ТипЗнч(ВыборкаДетальныеЗаписи.ОрганизацияКонтрагент) = ТипЗначенияПустойОрганизации Тогда
				ЗначениеПоКлючу.Организация   = ВыборкаДетальныеЗаписи.ОрганизацияКонтрагент;
				ЗначениеПоКлючу.Подразделение = ВыборкаДетальныеЗаписи.Подразделение;
			Иначе
				ЗначениеПоКлючу.Контрагент = ВыборкаДетальныеЗаписи.ОрганизацияКонтрагент;
			КонецЕсли;
		
		Иначе
			НоваяСтрока = ТаблицаДанных.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТаблицаДанных.Количество() Тогда
		ИнтеграцияЗЕРНОПереопределяемый.ПриОпределенииКонтрагентовОрганизацийПоРеквизитам(ТаблицаДанных);
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение[СтрокаТаблицы.КлючРеквизитов], СтрокаТаблицы);
	КонецЦикла;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Записывает в справочник "Ключи реквизитов организаций ЗЕРНО" соответствие прикладных реквизитов
//   * Не изменяет существующие сопоставления (поле ОрганизацияКонтрагент)
//
// Параметры:
//   Ключ                  - СправочникСсылка.КлючиРеквизитовОрганизацийЗЕРНО - данные классификатора ЗЕРНО
//   ОрганизацияКонтрагент - ОпределяемыйТип.ОрганизацияКонтрагентГосИС       - прикладной справочник
//
Процедура СопоставитьСПрикладнымиРеквизитами(Ключ, ОрганизацияКонтрагент) Экспорт
	
	Если Не ЗначениеЗаполнено(Ключ)
		Или Не ЗначениеЗаполнено(ОрганизацияКонтрагент)
		Или ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ключ, "ОрганизацияКонтрагент")) Тогда
		Возврат;
	КонецЕсли;
	
	КлючОбъект = Ключ.ПолучитьОбъект();
	КлючОбъект.ОрганизацияКонтрагент = ОрганизацияКонтрагент;
	
	УстановитьПривилегированныйРежим(Истина);
	КлючОбъект.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Таблица реквизитов ключей реквизитов организаций.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица реквизитов ключей реквизитов организаций:
// * КлючРеквизитов - СправочникСсылка.КлючиРеквизитовОрганизацийЗЕРНО - Ссылка на ключ реквизитов
// * ИНН            - Строка                                           - ИНН
// * КПП            - Строка                                           - КПП
// * ОГРН           - Строка                                           - ОГРН
// * Наименование   - Строка                                           - Наименование
// * Фамилия        - Строка                                           - Фамилия
// * Имя            - Строка                                           - Имя
// * Отчество       - Строка                                           - Отчество
// * ТипОрганизации - ПеречислениеСсылка.ТипыОрганизацийЗЕРНО          -
// * Организация    - ОпределяемыйТип.Организация                      - Организация
// * Контрагент     - ОпределяемыйТип.КонтрагентГосИС                  - Контрагент
Функция НоваяТаблицаРеквизитовКлючейРеквизитовОрганизаций() Экспорт
	
	ТаблицаДанных = Новый ТаблицаЗначений();
	ТаблицаДанных.Колонки.Добавить("КлючРеквизитов", Новый ОписаниеТипов("СправочникСсылка.КлючиРеквизитовОрганизацийЗЕРНО"));
	ТаблицаДанных.Колонки.Добавить("ИНН",            ОбщегоНазначения.ОписаниеТипаСтрока(50));
	ТаблицаДанных.Колонки.Добавить("КПП",            ОбщегоНазначения.ОписаниеТипаСтрока(50));
	ТаблицаДанных.Колонки.Добавить("ОГРН",           ОбщегоНазначения.ОписаниеТипаСтрока(50));
	ТаблицаДанных.Колонки.Добавить("Наименование",   ОбщегоНазначения.ОписаниеТипаСтрока(150));
	ТаблицаДанных.Колонки.Добавить("Фамилия",        ОбщегоНазначения.ОписаниеТипаСтрока(150));
	ТаблицаДанных.Колонки.Добавить("Имя",            ОбщегоНазначения.ОписаниеТипаСтрока(150));
	ТаблицаДанных.Колонки.Добавить("Отчество",       ОбщегоНазначения.ОписаниеТипаСтрока(150));
	ТаблицаДанных.Колонки.Добавить("ТипОрганизации", Новый ОписаниеТипов("ПеречислениеСсылка.ТипыОрганизацийЗЕРНО"));
	ТаблицаДанных.Колонки.Добавить("Организация",    Метаданные.ОпределяемыеТипы.Организация.Тип);
	ТаблицаДанных.Колонки.Добавить("Контрагент",     Метаданные.ОпределяемыеТипы.КонтрагентГосИС.Тип);
	
	ТаблицаДанных.Колонки.Добавить("ОрганизацияКонтрагент", Метаданные.ОпределяемыеТипы.ОрганизацияКонтрагентГосИС.Тип);
	ТаблицаДанных.Колонки.Добавить("Подразделение",         Метаданные.ОпределяемыеТипы.Подразделение.Тип);
	
	Возврат ТаблицаДанных;
	
КонецФункции

#Область ПоискСсылок

Функция КлючОрганизации(ДанныеОрганизации, ПараметрыОбмена, Сопоставление = Неопределено) Экспорт
	
	Если ДанныеОрганизации = Неопределено Тогда
		Возврат ПустаяСсылка();
	КонецЕсли;
	
	ИмяТаблицы = Метаданные.Справочники.КлючиРеквизитовОрганизацийЗЕРНО.ПолноеИмя();
	
	ДанныеПоСвойству = ДанныеОрганизацииПоЗаполенномуСвойству(ДанныеОрганизации, ПараметрыОбмена, Сопоставление);
	Если Не ЗначениеЗаполнено(ДанныеПоСвойству.Идентификатор) Тогда
		Возврат ПустаяСсылка();
	КонецЕсли;
	
	СправочникСсылка = ИнтеграцияЗЕРНОСлужебный.СсылкаПоИдентификатору(
		ПараметрыОбмена, ИмяТаблицы, ДанныеПоСвойству.Идентификатор);
	
	Если Не ЗначениеЗаполнено(СправочникСсылка) Тогда
		
		Блокировка = Новый БлокировкаДанных();
		ЭлементБлокировки = Блокировка.Добавить(ИмяТаблицы);
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка.Заблокировать();
			
			СправочникСсылка = ИнтеграцияЗЕРНОСлужебный.СсылкаПоИдентификатору(ПараметрыОбмена, ИмяТаблицы, ДанныеПоСвойству.Идентификатор);
			
			Если Не ЗначениеЗаполнено(СправочникСсылка) Тогда
				СправочникСсылка = ЗагрузитьКлючОрганизации(ДанныеПоСвойству, ПараметрыОбмена,, Ложь);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = СтрШаблон(
				НСтр("ru = 'Ошибка при создании справочника %1 с идентификатором %2:
				           |%3'"),
				Метаданные.Справочники.КлючиАдресовЗЕРНО.Синоним,
				ДанныеПоСвойству.Идентификатор,
				ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ТекстОшибкиПодробно = СтрШаблон(
				НСтр("ru = 'Ошибка при создании справочника %1 с идентификатором %2:
				           |%3'"),
				Метаданные.Справочники.КлючиРеквизитовОрганизацийЗЕРНО.Синоним,
				ДанныеПоСвойству.Идентификатор,
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ИнтеграцияИСВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(
				ТекстОшибкиПодробно,
				НСтр("ru = 'Работа с ключами организаций'", ОбщегоНазначения.КодОсновногоЯзыка()));
			
			ВызватьИсключение ТекстОшибки;
			
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат СправочникСсылка;
	
КонецФункции

Функция ЗагрузитьКлючОрганизации(ДанныеПоСвойству, ПараметрыОбмена, СуществующийОбъект = Неопределено, ТребуетсяПоиск = Истина) Экспорт
	
	ЗаписьНового       = Ложь;
	МетаданныеЭлемента = Метаданные.Справочники.КлючиРеквизитовОрганизацийЗЕРНО;
	Идентификатор      = ДанныеПоСвойству.Идентификатор;
	
	Если СуществующийОбъект = Неопределено Тогда
		
		СуществующийЭлемент = Неопределено;
		Если ТребуетсяПоиск Тогда
			СуществующийЭлемент = ИнтеграцияЗЕРНОСлужебный.СсылкаПоИдентификатору(
				ПараметрыОбмена,
				МетаданныеЭлемента.ПолноеИмя(),
				Идентификатор);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СуществующийЭлемент) Тогда
			СуществующийОбъект = СоздатьЭлемент();
			СуществующийОбъект.Идентификатор  = Идентификатор;
			СуществующийОбъект.ТипОрганизации = ДанныеПоСвойству.ТипОрганизации;
			ЗаписьНового = Истина;
		Иначе
			СуществующийОбъект = СуществующийЭлемент.ПолучитьОбъект();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗаписьНового Тогда
		СуществующийОбъект.ОрганизацияКонтрагент = ДанныеПоСвойству.Сопоставление;
	Иначе
		СуществующийОбъект.Заблокировать();
	КонецЕсли;
	
	ЭлементДанных = ДанныеПоСвойству.Данные;
	
	Если СуществующийОбъект.ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ЮридическоеЛицо Тогда
		СуществующийОбъект.Наименование = ЭлементДанных.Name;
		СуществующийОбъект.ИНН          = ЭлементДанных.INN;
		СуществующийОбъект.КПП          = ЭлементДанных.KPP;
		СуществующийОбъект.ОГРН         = ЭлементДанных.OGRN;
	ИначеЕсли СуществующийОбъект.ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИндивидульныйПредприниматель Тогда
		СуществующийОбъект.ИНН      = ЭлементДанных.INN;
		СуществующийОбъект.ОГРН     = ЭлементДанных.OGRN;
		СуществующийОбъект.Фамилия  = ЭлементДанных.FamilyName;
		СуществующийОбъект.Имя      = ЭлементДанных.FirstName;
		СуществующийОбъект.Отчество = ЭлементДанных.Patronymic;
		ДанныеНазвания = Новый Массив();
		ДанныеНазвания.Добавить(СуществующийОбъект.Фамилия);
		ДанныеНазвания.Добавить(СуществующийОбъект.Имя);
		Если ЗначениеЗаполнено(СуществующийОбъект.Отчество) Тогда
			ДанныеНазвания.Добавить(СуществующийОбъект.Отчество);
		КонецЕсли;
		СуществующийОбъект.Наименование = СтрСоединить(ДанныеНазвания, " ");
	ИначеЕсли СуществующийОбъект.ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизация Тогда
		СуществующийОбъект.Наименование = ЭлементДанных.Name;
		СуществующийОбъект.ИНН          = ЭлементДанных.INN;
		СуществующийОбъект.КПП          = ЭлементДанных.KPP;
	ИначеЕсли СуществующийОбъект.ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизацияБезРегистрацииВРФ Тогда
		СуществующийОбъект.Наименование = ЭлементДанных.Name;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СуществующийОбъект.Наименование) Тогда
		СуществующийОбъект.Наименование = НСтр("ru = '<Не указано>'");
	КонецЕсли;
	
	СуществующийОбъект.Записать();
	
	ИнтеграцияЗЕРНОСлужебный.ОбновитьСсылку(ПараметрыОбмена, МетаданныеЭлемента.ПолноеИмя(), Идентификатор, СуществующийОбъект.Ссылка);
	
	Возврат СуществующийОбъект.Ссылка;
	
КонецФункции

Функция ДанныеОрганизацииПоЗаполенномуСвойству(ДанныеОрганизации, ПараметрыОбмена, Сопоставление = Неопределено)
	
	ВозвращаемоеЗначение = Новый Структура();
	ВозвращаемоеЗначение.Вставить("ТипОрганизации", Неопределено);
	ВозвращаемоеЗначение.Вставить("Данные",         Неопределено);
	ВозвращаемоеЗначение.Вставить("Идентификатор",  Неопределено);
	ВозвращаемоеЗначение.Вставить("Сопоставление",  Сопоставление);
	
	Для Каждого КлючИЗначение Из ПараметрыОбмена.ПараметрыПреобразования.ТипыОрганизацийПоИменамСвойств Цикл
		ПараметрыТипа = КлючИЗначение.Значение;
		Если ДанныеОрганизации.Свойство(ПараметрыТипа.ИмяПоля, ВозвращаемоеЗначение.Данные)
			И ЗначениеЗаполнено(ВозвращаемоеЗначение.Данные) Тогда
			ВозвращаемоеЗначение.ТипОрганизации = ПараметрыТипа.ТипОрганизации;
			ПоляКлюча                           = ПоляСоставногоКлючаПоТипуОрганизации(ВозвращаемоеЗначение.ТипОрганизации);
			ВозвращаемоеЗначение.Данные         = ДанныеОрганизации[ПараметрыТипа.ИмяПоля];
			ВозвращаемоеЗначение.Идентификатор  = ИнтеграцияЗЕРНОСлужебный.СоставнойКлючОбъекта(
				ВозвращаемоеЗначение.Данные, ПоляКлюча);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция ПоляСоставногоКлючаПоТипуОрганизации(ТипОрганизации) Экспорт
	
	ВозвращаемоеЗначение = Новый Массив();
	
	Если ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ЮридическоеЛицо Тогда
		ВозвращаемоеЗначение.Добавить("INN");
		ВозвращаемоеЗначение.Добавить("KPP");
		ВозвращаемоеЗначение.Добавить("OGRN");
		ВозвращаемоеЗначение.Добавить("Name");
	ИначеЕсли ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИндивидульныйПредприниматель Тогда
		ВозвращаемоеЗначение.Добавить("INN");
		ВозвращаемоеЗначение.Добавить("OGRN");
		ВозвращаемоеЗначение.Добавить("FamilyName");
		ВозвращаемоеЗначение.Добавить("FirstName");
		ВозвращаемоеЗначение.Добавить("Patronymic");
	ИначеЕсли ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизация Тогда
		ВозвращаемоеЗначение.Добавить("INN");
		ВозвращаемоеЗначение.Добавить("KPP");
		ВозвращаемоеЗначение.Добавить("Name");
	ИначеЕсли ТипОрганизации = Перечисления.ТипыОрганизацийЗЕРНО.ИностраннаяОрганизацияБезРегистрацииВРФ Тогда
		ВозвращаемоеЗначение.Добавить("Name");
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
