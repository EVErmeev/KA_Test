
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ИсточникВыбора) = Тип("ФормаКлиентскогоПриложения")
		И (ИсточникВыбора.ИмяФормы = "Справочник.РесурсныеСпецификации.Форма.ФормаВыбораЭлементаПроизводственногоПроцесса") Тогда
			
		Режим = ВыбранноеЗначение.Режим;
		
		Если Режим = "ЭтапВыпуска" Тогда
			ЭтапВыпуска = ВыбранноеЗначение.Этап;
			ЭтапВыпускаПредставление = ВыбранноеЗначение.ЭтапПредставление;
			ДобавитьПромежуточныйВыпускПриВыборе = ВыбранноеЗначение.ДобавитьПромежуточныйВыпускПриВыборе
		Иначе
			ПланироватьНеРанее = ВыбранноеЗначение.Этап;
			ПланироватьНеРанееПредставление = ВыбранноеЗначение.ЭтапПредставление;
		КонецЕсли;
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СпособПолученияМатериалаПриИзменении(Элемент)
	
	Возврат; // пустой обработчик

КонецПроцедуры

&НаКлиенте
Процедура ЭтапВыпускаОчистка(Элемент, СтандартнаяОбработка)
	
	ЭтапВыпуска = Неопределено;
	ЭтапВыпускаПредставление = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапВыпускаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЭтапОткрытие(ЭтапВыпуска);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапВыпускаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("Режим",          "ЭтапВыпуска");
	ПараметрыФормы.Вставить("ТекущаяСсылка",  ЭтапВыпуска);
	ПараметрыФормы.Вставить("Номенклатура",   Номенклатура);
	ПараметрыФормы.Вставить("Характеристика", Характеристика);
	ПараметрыФормы.Вставить("АдресВХранилище", АдресПолуфабрикаты);
	
	ОткрытьФорму("Справочник.РесурсныеСпецификации.Форма.ФормаВыбораЭлементаПроизводственногоПроцесса", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланироватьНеРанееОчистка(Элемент, СтандартнаяОбработка)
	
	ПланироватьНеРанее = Неопределено;
	ПланироватьНеРанееПредставление = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ПланироватьНеРанееОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЭтапОткрытие(ПланироватьНеРанее);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланироватьНеРанееНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("Режим",          "Этап");
	ПараметрыФормы.Вставить("ТекущаяСсылка",  ПланироватьНеРанее);
	ПараметрыФормы.Вставить("АдресВХранилище", АдресПолуфабрикаты);
	
	ОткрытьФорму("Справочник.РесурсныеСпецификации.Форма.ФормаВыбораЭлементаПроизводственногоПроцесса", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСоставПоСпецификацииПриИзменении(Элемент)
	
	Спецификация = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура СпецификацияНабораПриИзменении(Элемент)
	
	
	Возврат; // пустой обработчик
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Возврат; // пустой обработчик

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


&НаКлиенте
Процедура ЭтапОткрытие(ЭтапСсылка)
	
	Если ЕстьВозможностьОткрытияЭтапа(ЭтапВыпуска) Тогда
		ПараметрыФормы = Новый Структура("Ключ,ТолькоПросмотр", ЭтапСсылка, Истина);
		ОткрытьФорму("Справочник.ЭтапыПроизводства.ФормаОбъекта", ПараметрыФормы);
	Иначе
		ПоказатьПредупреждение(, НСтр("ru = 'Открыть элемент можно только после его записи.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЕстьВозможностьОткрытияЭтапа(ЭтапСсылка)
	
	Возврат ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтапСсылка, "Ссылка"));
	
КонецФункции

#КонецОбласти