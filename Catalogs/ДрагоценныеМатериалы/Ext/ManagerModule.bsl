#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Выполняется заполнение реквизитов предопределенных элементов справочника
//
Процедура ЗаполнитьПредопределенныеДрагоценныеМатериалы() Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетДрагоценныхМатериалов") Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		
		ЗаполнитьПредопределенныеЭлементыПоДанымИзКода();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Заполнение предопределенных драгоценных материалов'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
КонецПроцедуры

// Определяет настройки начального заполнения элементов
//
// Параметры:
//  Настройки - Структура - настройки заполнения:
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Истина;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов
//                                 справочника.
//  ТабличныеЧасти - Структура - Ключ - имя табличной части объекта
//                               Значение - Выгрузка в таблицу значений пустой табличной части
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт

	КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
	СоответствиеКодов = Справочники.УпаковкиЕдиницыИзмерения.ЗаполнитьЕдиницыИзмеренияИзКлассификатора("162,163");
	Караты = СоответствиеКодов["162"];
	Граммы = СоответствиеКодов["163"];
	
	#Область Алмазы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Алмазы";
	Элемент.Наименование = НСтр("ru = 'Алмазы'", КодОсновногоЯзыка);
	Элемент.ЕдиницаИзмерения = Караты;
	#КонецОбласти

	#Область Золото
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Золото";
	Элемент.Наименование = НСтр("ru = 'Золото'", КодОсновногоЯзыка);
	Элемент.ЕдиницаИзмерения = Граммы;
	#КонецОбласти

	#Область Иридий
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Иридий";
	Элемент.Наименование = НСтр("ru = 'Иридий'", КодОсновногоЯзыка);
	Элемент.ЕдиницаИзмерения = Граммы;
	#КонецОбласти

	#Область Осмий
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Осмий";
	Элемент.Наименование = НСтр("ru = 'Осмий'", КодОсновногоЯзыка);
	Элемент.ЕдиницаИзмерения = Граммы;
	#КонецОбласти

	#Область Палладий
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Палладий";
	Элемент.Наименование = НСтр("ru = 'Палладий'", КодОсновногоЯзыка);
	Элемент.ЕдиницаИзмерения = Граммы;
	#КонецОбласти

	#Область Платина
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Платина";
	Элемент.Наименование = НСтр("ru = 'Платина'", КодОсновногоЯзыка);
	Элемент.ЕдиницаИзмерения = Граммы;
	#КонецОбласти

	#Область ПлатинаВЛабораторнойПосудеДляХиманализов
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПлатинаВЛабораторнойПосудеДляХиманализов";
	Элемент.Наименование = НСтр("ru = 'Платина в лабораторной посуде для химанализов'", КодОсновногоЯзыка);
	Элемент.ЕдиницаИзмерения = Граммы;
	#КонецОбласти

	#Область ПлатинородиевыеТермопары
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПлатинородиевыеТермопары";
	Элемент.Наименование = НСтр("ru = 'Платинородиевые термопары'", КодОсновногоЯзыка);
	Элемент.ЕдиницаИзмерения = Граммы;
	#КонецОбласти

	#Область Родий
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Родий";
	Элемент.Наименование = НСтр("ru = 'Родий'", КодОсновногоЯзыка);
	Элемент.ЕдиницаИзмерения = Граммы;
	#КонецОбласти

	#Область Рутений
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Рутений";
	Элемент.Наименование = НСтр("ru = 'Рутений'", КодОсновногоЯзыка);
	Элемент.ЕдиницаИзмерения = Граммы;
	#КонецОбласти

	#Область Серебро
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Серебро";
	Элемент.Наименование = НСтр("ru = 'Серебро'", КодОсновногоЯзыка);
	Элемент.ЕдиницаИзмерения = Граммы;
	#КонецОбласти

	#Область СолиСеребраДляХиманализов
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СолиСеребраДляХиманализов";
	Элемент.Наименование = НСтр("ru = 'Соли серебра для химанализов в пересчете на металл'", КодОсновногоЯзыка);
	Элемент.ЕдиницаИзмерения = Граммы;
	#КонецОбласти

	#Область СусальноеЗолото
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СусальноеЗолото";
	Элемент.Наименование = НСтр("ru = 'Сусальное золото'", КодОсновногоЯзыка);
	Элемент.ЕдиницаИзмерения = Граммы;
	#КонецОбласти

КонецПроцедуры

// Вызывается при начальном заполнении создаваемого элемента.
//
// Параметры:
//  Объект                  - СправочникОбъект.ДрагоценныеМатериалы - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения.
//  ДополнительныеПараметры - Структура - Дополнительные параметры.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт
	
	
	
КонецПроцедуры

// Проверяет заполнение табличной части с содержанием драгоценных материалов
//
// Параметры:
// 		Объект - СправочникОбъект.ДрагоценныеМатериалы - Объект проверки
// 		ТабличнаяЧасть - ТабличнаяЧасть из СтрокаТабличнойЧасти - Проверяемая табличная часть объекта:
// 							* ДрагоценныйМатериал - СправочникСсылка.ДрагоценныеМатериалы - 
// 							* Расположение - ПеречислениеСсылка.РасположениеДрагоценныхКамней -
// 		Отказ - Булево - Признак найденной ошибки при проверке заполнения.
//
Процедура ПроверитьЗаполнениеДрагоценныхМатериалов(Объект, ТабличнаяЧасть, Отказ) Экспорт
	
	ШаблонТекстаОшибки = НСтр("ru='Не заполнена колонка ""Классификация для 1-ДМ"" в строке %1 списка ""Драгоценные металлы и камни""'");
	Для н=0 По ТабличнаяЧасть.Количество()-1 Цикл
		Если ТабличнаяЧасть[н].ДрагоценныйМатериал = Справочники.ДрагоценныеМатериалы.Алмазы
			И Не ЗначениеЗаполнено(ТабличнаяЧасть[н].Расположение) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаОшибки, Формат(н+1, "ЧГ=0")),
				Объект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ДрагоценныеМатериалы", н+1, "Расположение"),
				"Объект",
				Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПредопределенныеЭлементыПоДанымИзКода()
	
	МетаданныеОбъекта = Метаданные.Справочники.ДрагоценныеМатериалы;
	ПредопределенныеДанные = Справочники.НастройкиХозяйственныхОпераций.ПредопределенныеДанныеОбъекта(МетаданныеОбъекта);
	Для Каждого ДанныеЭлемента Из ПредопределенныеДанные Цикл
		ЭлементСсылка = Справочники.ДрагоценныеМатериалы[ДанныеЭлемента.ИмяПредопределенныхДанных];
		ЭлементОбъект = ЭлементСсылка.ПолучитьОбъект();
		СписокРеквизитов = "ИмяПредопределенныхДанных,Наименование,ЕдиницаИзмерения";
		ЗаполнитьЗначенияСвойств(ЭлементОбъект, ДанныеЭлемента, СписокРеквизитов);
		ЭлементОбъект.ОбменДанными.Загрузка = Истина;
		ЭлементОбъект.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
