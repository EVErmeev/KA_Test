////////////////////////////////////////////////////////////////////////////////
// Подсистема "Расчет имущественных налогов".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает необходимость уплаты авансов по земельному налогу.
//
// Параметры:
// 	Организации - СправочникСсылка.Организации - Организация, для которой необходимо выполнить проверку.
// 	Период - Дата - Дата закрытия месяца.
//
// Возвращаемое значение:
// 	Булево - Признак необходимости уплаты аванса.
//
Функция УплачиваютсяАвансыПоЗемельномуНалогу(Организации, Период) Экспорт

	УплачиваютсяАвансы = Ложь;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организации", Организации);
	Запрос.УстановитьПараметр("Период", Период);

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.НалоговыйОрган КАК НалоговыйОрган
	|ПОМЕСТИТЬ ВТ_НалоговыеОрганы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПараметрыНачисленияЗемельногоНалога.Организация КАК Организация,
	|		ПараметрыНачисленияЗемельногоНалога.НалоговыйОрган КАК НалоговыйОрган
	|	ИЗ
	|		РегистрСведений.ПараметрыНачисленияЗемельногоНалога.СрезПоследних(
	|				КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, КВАРТАЛ, -1), КВАРТАЛ),
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация В (&Организации)
	|					И ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|					И ВключатьВНалоговуюБазу) КАК ПараметрыНачисленияЗемельногоНалога
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПараметрыНачисленияЗемельногоНалога.Организация,
	|		ПараметрыНачисленияЗемельногоНалога.НалоговыйОрган
	|	ИЗ
	|		РегистрСведений.ПараметрыНачисленияЗемельногоНалога.СрезПоследних(
	|				КОНЕЦПЕРИОДА(&Период, КВАРТАЛ),
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация В (&Организации)
	|					И ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|					И ВключатьВНалоговуюБазу) КАК ПараметрыНачисленияЗемельногоНалога
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПараметрыНачисленияЗемельногоНалога.Организация,
	|		ПараметрыНачисленияЗемельногоНалога.НалоговыйОрган
	|	ИЗ
	|		РегистрСведений.ПараметрыНачисленияЗемельногоНалога КАК ПараметрыНачисленияЗемельногоНалога
	|	ГДЕ
	|		ПараметрыНачисленияЗемельногоНалога.Организация В (&Организации)
	|		И ПараметрыНачисленияЗемельногоНалога.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|		И ПараметрыНачисленияЗемельногоНалога.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ) И КОНЕЦПЕРИОДА(&Период, КВАРТАЛ)
	|		И ПараметрыНачисленияЗемельногоНалога.ВключатьВНалоговуюБазу
	|		И ПараметрыНачисленияЗемельногоНалога.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Организации.Ссылка,
	|		Организации.РегистрацияВНалоговомОргане
	|	ИЗ
	|		Справочник.Организации КАК Организации
	|	ГДЕ
	|		Организации.Ссылка В (&Организации)) КАК ВложенныйЗапрос
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НалоговыйОрган
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.Организация КАК Организация,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.УплачиваютсяАвансы КАК УплачиваютсяАвансы
	|ПОМЕСТИТЬ ВТ_УплачиваютсяАвансыПоОрганизации
	|ИЗ
	|	РегистрСведений.ПорядокУплатыНалоговНаМестах.СрезПоследних(
	|			&Период,
	|			Организация В (&Организации)
	|				И РегистрацияВНалоговомОргане = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|				И Налог = ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог)) КАК ПорядокУплатыНалоговНаМестахСрезПоследних
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.Организация КАК Организация,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.УплачиваютсяАвансы КАК УплачиваютсяАвансы
	|ПОМЕСТИТЬ ВТ_УплачиваютсяАвансыПоИФНС
	|ИЗ
	|	РегистрСведений.ПорядокУплатыНалоговНаМестах.СрезПоследних(
	|			&Период,
	|			Организация В (&Организации)
	|				И РегистрацияВНалоговомОргане <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|				И Налог = ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог)) КАК ПорядокУплатыНалоговНаМестахСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_УплачиваютсяАвансыПоИФНС.УплачиваютсяАвансы ЕСТЬ NULL
	|				ТОГДА ВЫБОР
	|						КОГДА ВТ_УплачиваютсяАвансыПоОрганизации.УплачиваютсяАвансы ЕСТЬ NULL
	|							ТОГДА ЛОЖЬ
	|						ИНАЧЕ ВТ_УплачиваютсяАвансыПоОрганизации.УплачиваютсяАвансы
	|					КОНЕЦ
	|			ИНАЧЕ ВТ_УплачиваютсяАвансыПоИФНС.УплачиваютсяАвансы
	|		КОНЕЦ), ЛОЖЬ) КАК УплачиваютсяАвансы
	|ИЗ
	|	ВТ_НалоговыеОрганы КАК ВТ_НалоговыеОрганы
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВТ_УплачиваютсяАвансыПоОрганизации КАК ВТ_УплачиваютсяАвансыПоОрганизации
	|		ПО
	|			ВТ_НалоговыеОрганы.Организация = ВТ_УплачиваютсяАвансыПоОрганизации.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВТ_УплачиваютсяАвансыПоИФНС КАК ВТ_УплачиваютсяАвансыПоИФНС
	|		ПО
	|			ВТ_НалоговыеОрганы.Организация = ВТ_УплачиваютсяАвансыПоИФНС.Организация
	|			И ВТ_НалоговыеОрганы.НалоговыйОрган = ВТ_УплачиваютсяАвансыПоИФНС.РегистрацияВНалоговомОргане";

	Результат = Запрос.Выполнить();

	Если НЕ Результат.Пустой() Тогда

		Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		Пока Выборка.Следующий() Цикл
			УплачиваютсяАвансы = Выборка.УплачиваютсяАвансы;
		КонецЦикла;

	КонецЕсли;

	Возврат УплачиваютсяАвансы;

КонецФункции

// Возвращает необходимость уплаты авансов по транспортному налогу.
//
// Параметры:
// 	Организации - СправочникСсылка.Организации - Организация, для которой необходимо выполнить расчет.
// 	Период - Дата - Дата закрытия месяца.
//
// Возвращаемое значение:
// 	Булево - Признак необходимости уплаты аванса.
//
Функция УплачиваютсяАвансыПоТранспортномуНалогу(Организации, Период) Экспорт

	УплачиваютсяАвансы = Ложь;

	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("Организации", Организации);
	Запрос.УстановитьПараметр("Период", Период);

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.НалоговыйОрган КАК НалоговыйОрган
	|ПОМЕСТИТЬ ВТ_НалоговыеОрганы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПараметрыНачисленияТранспортногоНалога.Организация КАК Организация,
	|		ПараметрыНачисленияТранспортногоНалога.НалоговыйОрган КАК НалоговыйОрган
	|	ИЗ
	|		РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
	|				КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, КВАРТАЛ, -1), КВАРТАЛ),
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация В (&Организации)
	|					И ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|					И ВключатьВНалоговуюБазу) КАК ПараметрыНачисленияТранспортногоНалога
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПараметрыНачисленияТранспортногоНалога.Организация,
	|		ПараметрыНачисленияТранспортногоНалога.НалоговыйОрган
	|	ИЗ
	|		РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
	|				КОНЕЦПЕРИОДА(&Период, КВАРТАЛ),
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация В (&Организации)
	|					И ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|					И ВключатьВНалоговуюБазу) КАК ПараметрыНачисленияТранспортногоНалога
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПараметрыНачисленияТранспортногоНалога.Организация,
	|		ПараметрыНачисленияТранспортногоНалога.НалоговыйОрган
	|	ИЗ
	|		РегистрСведений.ПараметрыНачисленияТранспортногоНалога КАК ПараметрыНачисленияТранспортногоНалога
	|	ГДЕ
	|		ПараметрыНачисленияТранспортногоНалога.Организация В (&Организации)
	|		И ПараметрыНачисленияТранспортногоНалога.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|		И ПараметрыНачисленияТранспортногоНалога.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ) И КОНЕЦПЕРИОДА(&Период, КВАРТАЛ)
	|		И ПараметрыНачисленияТранспортногоНалога.ВключатьВНалоговуюБазу
	|		И ПараметрыНачисленияТранспортногоНалога.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Организации.Ссылка,
	|		Организации.РегистрацияВНалоговомОргане
	|	ИЗ
	|		Справочник.Организации КАК Организации
	|	ГДЕ
	|		Организации.Ссылка В (&Организации)) КАК ВложенныйЗапрос
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НалоговыйОрган
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.Организация КАК Организация,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.УплачиваютсяАвансы КАК УплачиваютсяАвансы
	|ПОМЕСТИТЬ ВТ_УплачиваютсяАвансыПоОрганизации
	|ИЗ
	|	РегистрСведений.ПорядокУплатыНалоговНаМестах.СрезПоследних(
	|			&Период,
	|			Организация В (&Организации)
	|				И РегистрацияВНалоговомОргане = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|				И Налог = ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог)) КАК ПорядокУплатыНалоговНаМестахСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.Организация КАК Организация,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.УплачиваютсяАвансы КАК УплачиваютсяАвансы
	|ПОМЕСТИТЬ ВТ_УплачиваютсяАвансыПоИФНС
	|ИЗ
	|	РегистрСведений.ПорядокУплатыНалоговНаМестах.СрезПоследних(
	|			&Период,
	|			Организация В (&Организации)
	|				И РегистрацияВНалоговомОргане <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|				И Налог = ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог)) КАК ПорядокУплатыНалоговНаМестахСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_УплачиваютсяАвансыПоИФНС.УплачиваютсяАвансы ЕСТЬ NULL
	|				ТОГДА ВЫБОР
	|						КОГДА ВТ_УплачиваютсяАвансыПоОрганизации.УплачиваютсяАвансы ЕСТЬ NULL
	|							ТОГДА ЛОЖЬ
	|						ИНАЧЕ ВТ_УплачиваютсяАвансыПоОрганизации.УплачиваютсяАвансы
	|					КОНЕЦ
	|			ИНАЧЕ ВТ_УплачиваютсяАвансыПоИФНС.УплачиваютсяАвансы
	|		КОНЕЦ), ЛОЖЬ) КАК УплачиваютсяАвансы
	|ИЗ
	|	ВТ_НалоговыеОрганы КАК ВТ_НалоговыеОрганы
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВТ_УплачиваютсяАвансыПоОрганизации КАК ВТ_УплачиваютсяАвансыПоОрганизации
	|		ПО
	|			ВТ_НалоговыеОрганы.Организация = ВТ_УплачиваютсяАвансыПоОрганизации.Организация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УплачиваютсяАвансыПоИФНС КАК ВТ_УплачиваютсяАвансыПоИФНС
	|		ПО
	|			ВТ_НалоговыеОрганы.Организация = ВТ_УплачиваютсяАвансыПоИФНС.Организация
	|			И ВТ_НалоговыеОрганы.НалоговыйОрган = ВТ_УплачиваютсяАвансыПоИФНС.РегистрацияВНалоговомОргане";

	Результат = Запрос.Выполнить();

	Если НЕ Результат.Пустой() Тогда

		Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		Пока Выборка.Следующий() Цикл
			УплачиваютсяАвансы = Выборка.УплачиваютсяАвансы;
		КонецЦикла;

	КонецЕсли;

	Возврат УплачиваютсяАвансы;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область НалогНаИмущество

// Использовать прежний расчет налога на имущество в переходный период.
//
// Параметры:
//  Организация - СправочникСсылка.Организации
//  ПериодРасчета - Дата - Период расчета
//
// Возвращаемое значение:
//  Булево - Использовать прежний расчет налога на имущество в переходный период
Функция ИспользоватьПрежнийРасчетНалогаНаИмуществоВПереходныйПериод(Организация, ПериодРасчета) Экспорт

	// Т.к. при обновлении программы старые и новые данные разделяются по регистрам, 
	// переходного периода не возникает.
	Возврат Ложь;

КонецФункции

// По 5 и 6 цифрам КПП определяет, является ли организация иностранной
// (пп.1 п.12 Порядка заполнения декларации по налогу на имущество в редакции Приказа ФНС России от 24.08.2022 N ЕД-7-21/766@).
// Это влиет как на расчет налога, так и на заполнение декларации.
//
// Параметры:
//  Организация - СправочникСсылка.Организации - Организация
//  Период - Дата
//
// Возвращаемое значение:
//  Булево - если Истина, то организация считается иностранной с точки зрения отчетности
Функция ЭтоИностраннаяОрганизация(Организация, Период) Экспорт

	КПП = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "КПП");

	ЗначенияДляИностраннойОрганизации = Новый Массив;
	ЗначенияДляИностраннойОрганизации.Добавить("51");
	ЗначенияДляИностраннойОрганизации.Добавить("52");
	ЗначенияДляИностраннойОрганизации.Добавить("55");
	ЗначенияДляИностраннойОрганизации.Добавить("56");
	ЗначенияДляИностраннойОрганизации.Добавить("63");
	ЗначенияДляИностраннойОрганизации.Добавить("64");
	ЗначенияДляИностраннойОрганизации.Добавить("65");
	ЗначенияДляИностраннойОрганизации.Добавить("70");
	ЗначенияДляИностраннойОрганизации.Добавить("74");
	ЗначенияДляИностраннойОрганизации.Добавить("91");
	ЗначенияДляИностраннойОрганизации.Добавить("92");

	Если СтрДлина(КПП) < 6 Тогда
		Возврат Ложь;
	КонецЕсли;

	ЗначениеИзКПП = Сред(КПП, 5, 2);

	Возврат ЗначенияДляИностраннойОрганизации.Найти(ЗначениеИзКПП) <> Неопределено;

КонецФункции

Процедура ПередРасчетомНалогаНаИмущество(ПараметрыРасчета, ДополнительныеПараметры = Неопределено) Экспорт

	СформироватьИсправлениеПараметровНалогаНаИмуществоЗаписи(
		ПараметрыРасчета.Организация,
		ПараметрыРасчета.мДатаНачалаПериодаОтчета,
		КонецМесяца(КонецМесяца(ПараметрыРасчета.мДатаКонцаПериодаОтчета)+1),
		КонецМесяца(ПараметрыРасчета.мДатаКонцаПериодаОтчета),
		ПараметрыРасчета.МенеджерВременныхТаблиц,
		ДополнительныеПараметры);

КонецПроцедуры

Процедура СформироватьТаблицуСтавкиНалогаНаИмуществоПоОтдельнымОССрезПоследних(ПараметрыРасчета, Период, ДополнительныеПараметры, ИмяТаблицы = "") Экспорт

	ДатаДокумента = Неопределено;
	СписокОС = Новый Массив;

	ТекстЗапроса = ВнеоборотныеАктивы.ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений(
					"ПараметрыНачисленияНалогаНаИмущество",
					?(ИмяТаблицы <> "", ИмяТаблицы, "СтавкиНалогаНаИмуществоПоОтдельнымОС_СрезПоследних"));

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда

		ДатаДокумента = ДополнительныеПараметры.ДатаДокумента;
		СписокОС = ДополнительныеПараметры.СписокОС;

	Иначе

		ДатаДокумента = ПараметрыРасчета.ПериодРасчета;

	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("Дата", Период);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("БезОтбораОС", СписокОС.Количество() = 0);

	Запрос.Выполнить();

КонецПроцедуры

Процедура СформироватьТаблицуСтавкиНалогаНаИмуществоПоОтдельнымОСЗаписи(ПараметрыРасчета, НачалоПериода, КонецПериода, ДополнительныеПараметры, ИмяТаблицы = "") Экспорт

	ДатаДокумента = Неопределено;
	СписокОС = Новый Массив;

	ТекстЗапроса = ВнеоборотныеАктивы.ТекстЗапросаЗаписиРегистраСУчетомИсправлений(
					"ПараметрыНачисленияНалогаНаИмущество",
					?(ИмяТаблицы <> "", ИмяТаблицы, "СтавкиНалогаНаИмуществоПоОтдельнымОС_Записи"));

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда

		ДатаДокумента = ДополнительныеПараметры.ДатаДокумента;
		СписокОС = ДополнительныеПараметры.СписокОС;

	Иначе

		ДатаДокумента = ПараметрыРасчета.ПериодРасчета;

	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("БезОтбораОС", СписокОС.Количество() = 0);

	Запрос.Выполнить();

КонецПроцедуры

Процедура СформироватьТаблицуСтавкиНалогаНаИмуществоСрезПоследних(ПараметрыРасчета, Период, ДополнительныеПараметры, ИмяТаблицы = "") Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СтавкиНалогаНаИмущество.Период КАК Период,
	|	СтавкиНалогаНаИмущество.Организация КАК Организация,
	|	СтавкиНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	СтавкиНалогаНаИмущество.НалоговаяСтавкаДвижимоеИмущество КАК НалоговаяСтавкаДвижимоеИмущество,
	|	СтавкиНалогаНаИмущество.СнижениеНалоговойСтавкиДвижимоеИмущество КАК СнижениеНалоговойСтавкиДвижимоеИмущество,
	|	СтавкиНалогаНаИмущество.ОсвобождениеОтНалогообложенияДвижимогоИмущества КАК ОсвобождениеОтНалогообложенияДвижимогоИмущества,
	|	СтавкиНалогаНаИмущество.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2 КАК ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2,
	|	СтавкиНалогаНаИмущество.ОснованиеЛьготы КАК ОснованиеЛьготы,
	|	СтавкиНалогаНаИмущество.НачалоДействияЛьготы КАК НачалоДействияЛьготы,
	|	СтавкиНалогаНаИмущество.ОкончаниеДействияЛьготы КАК ОкончаниеДействияЛьготы,
	|
	|	СтавкиНалогаНаИмущество.ОснованиеЛьготы <> ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)
	|		И &Период >= СтавкиНалогаНаИмущество.НачалоДействияЛьготы
	|		И (СтавкиНалогаНаИмущество.ОкончаниеДействияЛьготы = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ &Период <= КОНЕЦПЕРИОДА(СтавкиНалогаНаИмущество.ОкончаниеДействияЛьготы, ДЕНЬ)) КАК ДействуетЛьгота,
	|
	|	СтавкиНалогаНаИмущество.ОснованиеЛьготы.УстановленаРегиональнымЗаконом КАК РегиональнаяЛьгота,
	|	ЕСТЬNULL(СтавкиНалогаНаИмущество.ОснованиеЛьготы.ВидЛьготы, ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) КАК ВидЛьготы,
	|	ЕСТЬNULL(СтавкиНалогаНаИмущество.ОснованиеЛьготы.КодЛьготы, """") КАК КодЛьготы,
	|	ЕСТЬNULL(СтавкиНалогаНаИмущество.ОснованиеЛьготы.ПроцентУменьшения, 0) КАК ПроцентУменьшения
	|
	|ПОМЕСТИТЬ СтавкиНалогаНаИмущество_СрезПоследних
	|
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, Организация = &Организация) КАК СтавкиНалогаНаИмущество
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";

 	Если НЕ ПустаяСтрока(ИмяТаблицы) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ СтавкиНалогаНаИмущество_СрезПоследних", "ПОМЕСТИТЬ " + ИмяТаблицы);
	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("Период", Период);

	Запрос.Выполнить();

	// Проверка на наличие данных по ставкам налога на имущество.
	Если Запрос.МенеджерВременныхТаблиц.Таблицы["СтавкиНалогаНаИмущество_СрезПоследних"].ПолучитьДанные().Пустой() Тогда
		ТекстОшибки = НСтр("ru ='По организации %1 требуется указать ставку налога на имущество, действующую с %2.'");
		ТекстОшибки = СтрШаблон(ТекстОшибки,
									ПараметрыРасчета.Организация,
									Формат(Период, "ДЛФ=D"));
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;

	// Проверка на наличие данных по ставкам налога на имущество.
	Если Запрос.МенеджерВременныхТаблиц.Таблицы["СтавкиНалогаНаИмущество_СрезПоследних"].ПолучитьДанные().Пустой() Тогда
		ТекстОшибки = НСтр("ru ='По организации %1 требуется указать ставку налога на имущество, действующую с %2.'");
		ТекстОшибки = СтрШаблон(ТекстОшибки,
									ПараметрыРасчета.Организация,
									Формат(Период, "ДЛФ=D"));
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаУчетОсновныхСредств(Период, ПараметрыРасчета, СписокЗапросов) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МестонахождениеОС.Организация КАК Организация,
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение
	|ПОМЕСТИТЬ МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&Период,
	|			Организация В (&Организации)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС)) КАК МестонахождениеОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Регистрации.Организация КАК Организация,
	|	Регистрации.Подразделение КАК СтруктурнаяЕдиница,
	|	ПОДСТРОКА(Регистрации.РегистрацияВНалоговомОргане.Код,1,2) КАК КодРегиона
	|ПОМЕСТИТЬ АктуальныеРегистрацииВНалоговыхОрганах
	|ИЗ
	|	РегистрСведений.РегистрацииВНалоговомОргане КАК Регистрации
	|ГДЕ
	|	(Регистрации.Организация, Регистрации.Подразделение) В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				МестонахождениеОС.Организация КАК Организация,
	|				МестонахождениеОС.Местонахождение КАК Местонахождение
	|			ИЗ
	|				МестонахождениеОС КАК МестонахождениеОС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация,
	|	Организации.Ссылка КАК СтруктурнаяЕдиница,
	|	ПОДСТРОКА(Организации.РегистрацияВНалоговомОргане.Код,1,2) КАК КодРегиона
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка В (&Организации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокОС.Организация КАК Организация,
	|	СписокОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СписокОС.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости,
	|	ЕСТЬNULL(Регистрации.СтруктурнаяЕдиница, СписокОС.Организация) КАК Местонахождение,
	|	СчетаБухгалтерскогоУчета.СчетУчета КАК СчетУчета,
	|	СчетаБухгалтерскогоУчета.СчетОбесценения КАК СчетОбесценения,
	|	СчетаБухгалтерскогоУчета.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ УчетОсновныхСредств_Предварительная
	|ИЗ
	|	СписокОС КАК СписокОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СписокОС.Организация = МестонахождениеОС.Организация
	|			И СписокОС.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ АктуальныеРегистрацииВНалоговыхОрганах КАК Регистрации
	|		ПО Регистрации.Организация = МестонахождениеОС.Организация
	|			И Регистрации.СтруктурнаяЕдиница = МестонахождениеОС.Местонахождение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаБухгалтерскогоУчета КАК СчетаБухгалтерскогоУчета
	|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчета.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетОсновныхСредств.Организация КАК Организация,
	|	УчетОсновныхСредств.ОсновноеСредство КАК ОсновноеСредство,
	|	УчетОсновныхСредств.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости,
	|	ЕСТЬNULL(АктуальныеРегистрации.КодРегиона, 0) КАК КодРегиона,
	|	УчетОсновныхСредств.СчетУчета КАК СчетУчета,
	|	УчетОсновныхСредств.СчетОбесценения КАК СчетОбесценения,
	|	УчетОсновныхСредств.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ УчетОсновныхСредств
	|ИЗ
	|	УчетОсновныхСредств_Предварительная КАК УчетОсновныхСредств
	|		ЛЕВОЕ СОЕДИНЕНИЕ АктуальныеРегистрацииВНалоговыхОрганах КАК АктуальныеРегистрации
	|		ПО УчетОсновныхСредств.Организация = АктуальныеРегистрации.Организация
	|			И УчетОсновныхСредств.Местонахождение = АктуальныеРегистрации.СтруктурнаяЕдиница
	|";

	СписокЗапросов.Добавить(ТекстЗапроса);

КонецПроцедуры

Процедура ДобавитьТекстЗапросаКоэффициентыЕНВД_ПоОС(СписокЗапросов) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СпособыОтраженияРасходов.ОсновноеСредство КАК ОсновноеСредство,
	|	КоэффициентыЕНВД.НеЕНВД КАК НеЕНВД,
	|	КоэффициентыЕНВД.Распределение КАК Распределение
	|ПОМЕСТИТЬ КоэффициентыЕНВД_ПоОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Период,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС)) КАК СпособыОтраженияРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыЕНВД КАК КоэффициентыЕНВД
	|		ПО СпособыОтраженияРасходов.ОсновноеСредство = КоэффициентыЕНВД.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	СписокЗапросов.Добавить(ТекстЗапроса);

КонецПроцедуры

Процедура СоздатьВТКоэффициентыЕНВД(ПараметрыРасчета) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.СтатьяРасходовБУ КАК СтатьяРасходов,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ <> НЕОПРЕДЕЛЕНО КАК СпособОтраженияРасходовЗаданДокументом,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ КАК СпособОтраженияРасходов
	|ПОМЕСТИТЬ СпособыОтраженияРасходовПоАмортизации
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|		&Период,
	|		ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|			И Организация = &Организация) КАК ПорядокУчетаОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СпособОтраженияРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпособыОтраженияРасходовПоАмортизации.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА СпособыОтраженияРасходовПоАмортизации.СпособОтраженияРасходовЗаданДокументом
	|			ТОГДА ЕСТЬNULL(СпособыОтраженияРасходовПоАмортизацииТаблица.СтатьяРасходов, СпособыОтраженияРасходовПоАмортизацииТаблица24.СтатьяРасходов)
	|		ИНАЧЕ СпособыОтраженияРасходовПоАмортизации.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА СпособыОтраженияРасходовПоАмортизации.СпособОтраженияРасходовЗаданДокументом
	|			ТОГДА ЕСТЬNULL(СпособыОтраженияРасходовПоАмортизацииТаблица.Коэффициент, СпособыОтраженияРасходовПоАмортизацииТаблица24.Коэффициент)
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Коэффициент
	|ПОМЕСТИТЬ ВТ_ВыборкаКоэффициентов
	|ИЗ
	|	СпособыОтраженияРасходовПоАмортизации КАК СпособыОтраженияРасходовПоАмортизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС.ОтражениеАмортизационныхРасходов КАК СпособыОтраженияРасходовПоАмортизацииТаблица
	|		ПО СпособыОтраженияРасходовПоАмортизации.СпособОтраженияРасходов = СпособыОтраженияРасходовПоАмортизацииТаблица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС2_4.Амортизация КАК СпособыОтраженияРасходовПоАмортизацииТаблица24
	|		ПО СпособыОтраженияРасходовПоАмортизации.СпособОтраженияРасходов = СпособыОтраженияРасходовПоАмортизацииТаблица24.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпособыОтраженияРасходовПоАмортизации.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ЕСТЬNULL(СпособыОтраженияРасходовПоАмортизацииТаблица.Коэффициент, СпособыОтраженияРасходовПоАмортизацииТаблица24.Коэффициент)) КАК СуммаКоэффициентов
	|ПОМЕСТИТЬ ВТ_ВыборкаСуммыКоэффициентов
	|ИЗ
	|	СпособыОтраженияРасходовПоАмортизации КАК СпособыОтраженияРасходовПоАмортизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС.ОтражениеАмортизационныхРасходов КАК СпособыОтраженияРасходовПоАмортизацииТаблица
	|		ПО СпособыОтраженияРасходовПоАмортизации.СпособОтраженияРасходов = СпособыОтраженияРасходовПоАмортизацииТаблица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС2_4.Амортизация КАК СпособыОтраженияРасходовПоАмортизацииТаблица24
	|		ПО СпособыОтраженияРасходовПоАмортизации.СпособОтраженияРасходов = СпособыОтраженияРасходовПоАмортизацииТаблица24.Ссылка
	|ГДЕ
	|	СпособыОтраженияРасходовПоАмортизации.СпособОтраженияРасходовЗаданДокументом
	|
	|СГРУППИРОВАТЬ ПО
	|	СпособыОтраженияРасходовПоАмортизации.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыборкаКоэффициентов.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ВЫБОР
	|			КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|				ТОГДА ВыборкаКоэффициентов.Коэффициент / ЕСТЬNULL(ВыборкаСуммыКоэффициентов.СуммаКоэффициентов, 1)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА ВыборкаКоэффициентов.Коэффициент / ЕСТЬNULL(ВыборкаСуммыКоэффициентов.СуммаКоэффициентов, 1)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Распределение
	|ПОМЕСТИТЬ КоэффициентыЕНВД
	|ИЗ
	|	ВТ_ВыборкаКоэффициентов КАК ВыборкаКоэффициентов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО ВыборкаКоэффициентов.СтатьяРасходов = СтатьиРасходов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыборкаСуммыКоэффициентов КАК ВыборкаСуммыКоэффициентов
	|		ПО ВыборкаКоэффициентов.ОсновноеСредство = ВыборкаСуммыКоэффициентов.ОсновноеСредство
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыборкаКоэффициентов.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Период", ПараметрыРасчета.ПериодРасчета);
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ИспользуетсяУправлениеВНА_2_4", ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(ПараметрыРасчета.ПериодРасчета));
	Запрос.Выполнить();

КонецПроцедуры

Процедура СоздатьВТДвижимоеИмуществоПринятоеКУчетуПосле2013(ПараметрыРасчета, ДополнительныеПараметры) Экспорт

	ДатаДокумента = Неопределено;
	СписокОС = Новый Массив;

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда

		ДатаДокумента = ДополнительныеПараметры.ДатаДокумента;
		СписокОС = ДополнительныеПараметры.СписокОС;

	Иначе

		ДатаДокумента = ПараметрыРасчета.ПериодРасчета;

	КонецЕсли;

	СписокЗапросов = Новый Массив;

	ТекстЗапроса = ВнеоборотныеАктивы.ТекстЗапросаЗаписиРегистраСУчетомИсправлений(
					"ПервоначальныеСведенияОС", "ВТ_ПервоначальныеСведенияОС");
	СписокЗапросов.Добавить(ТекстЗапроса);

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОС
	|ПОМЕСТИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013
	|ИЗ
	|	ВТ_ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	ПервоначальныеСведенияОС.Период <= &Дата
	|	И ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ >= ДАТАВРЕМЯ(2013, 1, 1)
	|
	|	И ПервоначальныеСведенияОС.Организация В
	|			(ВЫБРАТЬ
	|				Организации.Ссылка КАК Ссылка
	|			ИЗ
	|				Справочник.Организации КАК Организации
	|			ГДЕ
	|				(Организации.Ссылка = &ГоловнаяОрганизация
	|					ИЛИ Организации.ГоловнаяОрганизация = &ГоловнаяОрганизация))
	|
	|	И НЕ ПервоначальныеСведенияОС.ОсновноеСредство.ГруппаОС В (
	|				ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Здания),
	|				ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Сооружения),
	|				ЗНАЧЕНИЕ(Перечисление.ГруппыОС.МноголетниеНасаждения),
	|				ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки),
	|				ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПрочееИмуществоТребующееГосударственнойРегистрации),
	|				ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПервоначальныеСведенияОС.ОсновноеСредство
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ) >= ДАТАВРЕМЯ(2013, 1, 1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОС";
	СписокЗапросов.Добавить(ТекстЗапроса);

	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Дата", КонецГода(ПараметрыРасчета.ПериодРасчета));

	ГоловнаяОрганизация = ПараметрыРасчета.Организация.ГоловнаяОрганизация;
	Если Не ЗначениеЗаполнено(ГоловнаяОрганизация) Тогда
		ГоловнаяОрганизация = ПараметрыРасчета.Организация;
	КонецЕсли;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);

	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("НачалоПериода", '000101010000');
	Запрос.УстановитьПараметр("КонецПериода", КонецГода(ПараметрыРасчета.ПериодРасчета));
	Запрос.УстановитьПараметр("БезОтбораОС", СписокОС.Количество() = 0);

	Запрос.Выполнить();

КонецПроцедуры

Процедура СформироватьТаблицуОССостоящиеНаУчете(ПараметрыРасчета, Период, ДополнительныеПараметры) Экспорт

	ИсходныеВременныеТаблицы = ОбщегоНазначенияБП.СписокВременныхТаблиц(ПараметрыРасчета.МенеджерВременныхТаблиц);

	СписокЗапросов = Новый Массив;

	ТекстЗапроса = ВнеоборотныеАктивы.ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений(
					"ПорядокУчетаОСБУ", "ВТ_ПорядокУчетаОСБУ");

	СписокЗапросов.Добавить(ТекстЗапроса);

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	АрендованныеОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ВТ_АрендованныеОСНаБалансеАрендодателя
	|ИЗ
	|	РегистрСведений.АрендованныеОС.СрезПоследних(
	|			&Период,
	|			&ТекстОтбораОС_БезИмениТаблицы) КАК АрендованныеОС
	|ГДЕ
	|	АрендованныеОС.Состояние В (
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ЗаключенДоговорАренды),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ВАренде))
	|	И АрендованныеОС.Договор.Балансодержатель = ЗНАЧЕНИЕ(Перечисление.БалансодержательПредметовАренды.Арендодатель)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СписокОС.ОсновноеСредство.ГруппаОС КАК ГруппаОС,
	|	МАКСИМУМ(СписокОС.АмортизационнаяГруппа) КАК АмортизационнаяГруппа,
	|	МАКСИМУМ(СписокОС.НедвижимоеИмущество) КАК НедвижимоеИмущество
	|
	|ПОМЕСТИТЬ ВТ_ОССостоящиеНаУчете
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|		ПорядокУчетаОСБУ.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|		ПорядокУчетаОСБУ.НедвижимоеИмущество КАК НедвижимоеИмущество
	|	ИЗ
	|		ВТ_ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|	ГДЕ
	|		ПорядокУчетаОСБУ.Организация = &Организация
	|		И ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		И НЕ ПорядокУчетаОСБУ.ОсновноеСредство В (ВЫБРАТЬ Т.ОсновноеСредство ИЗ ВТ_АрендованныеОСНаБалансеАрендодателя КАК Т)
	|		И &ТекстОтбораОС_СИменемТаблицы
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ИсправлениеПараметров.ОсновноеСредство КАК ОсновноеСредство,
	|		НЕОПРЕДЕЛЕНО КАК АмортизационнаяГруппа,
	|		ИСТИНА КАК НедвижимоеИмущество
	|	ИЗ
	|		РегистрСведений.ИсправлениеПараметровНалогаНаИмущество КАК ИсправлениеПараметров
	|	ГДЕ
	|		ИсправлениеПараметров.ДатаДействия = &ПериодВводаОстатков
	|		И ИсправлениеПараметров.Организация = &Организация
	|		И НЕ ИсправлениеПараметров.ОсновноеСредство В (ВЫБРАТЬ Т.ОсновноеСредство ИЗ ВТ_АрендованныеОСНаБалансеАрендодателя КАК Т)
	|		И ИсправлениеПараметров.Регистратор ССЫЛКА Документ.ВводПервоначальныхСведенийДляРасчетаНалогаНаИмущество
	|
	|	) КАК СписокОС
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокОС.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	СписокЗапросов.Добавить(ТекстЗапроса);

	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());

	Если ПараметрыРасчета.РасчетПоФактическойСтоимости Тогда
		ТекстОтбораОС_СИменемТаблицы = "ПорядокУчетаОСБУ.ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ВТ_РазницаВСтоимостиОС.ОбъектУчета
		|					ИЗ
		|						ВТ_РазницаВСтоимостиОС КАК ВТ_РазницаВСтоимостиОС
		|					ГДЕ
		|						ВТ_РазницаВСтоимостиОС.СтоимостьРегл > 0)";
		ТекстОтбораОС_БезИмениТаблицы = "ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ВТ_РазницаВСтоимостиОС.ОбъектУчета
		|					ИЗ
		|						ВТ_РазницаВСтоимостиОС КАК ВТ_РазницаВСтоимостиОС
		|					ГДЕ
		|						ВТ_РазницаВСтоимостиОС.СтоимостьРегл > 0)";
	Иначе
		ТекстОтбораОС_СИменемТаблицы = "ИСТИНА";
		ТекстОтбораОС_БезИмениТаблицы = "ИСТИНА";
	КонецЕсли;

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстОтбораОС_СИменемТаблицы", ТекстОтбораОС_СИменемТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстОтбораОС_БезИмениТаблицы", ТекстОтбораОС_БезИмениТаблицы);

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда

		ДатаДокумента = ДополнительныеПараметры.ДатаДокумента;
		СписокОС = ДополнительныеПараметры.СписокОС;

	Иначе

		ДатаДокумента = ПараметрыРасчета.ПериодРасчета;
		СписокОС = Новый Массив;

	КонецЕсли;

	ПериодПараметров = ?(Период = НачалоДня(Период), Период - 1, Период);

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("Период", ПериодПараметров);
	Запрос.УстановитьПараметр("Дата", ПериодПараметров);
	Запрос.УстановитьПараметр("ПериодВводаОстатков", Период);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("БезОтбораОС", СписокОС.Количество() = 0);

	Запрос.Выполнить();

	ИсходныеВременныеТаблицы.Добавить("ВТ_ОССостоящиеНаУчете");
	ОбщегоНазначенияБП.УничтожитьВременныеТаблицы(ПараметрыРасчета.МенеджерВременныхТаблиц,, ИсходныеВременныеТаблицы);

КонецПроцедуры

Процедура ДобавитьТекстЗапросаСписокОС(СписокЗапросов) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокУчетаБУ
	|
	|ПОМЕСТИТЬ втПервоначальныеСведенияОС
	|
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&ПериодГраница,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация В (&Организации)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокРазрешенныхОС.ОсновноеСредство
	|					ИЗ
	|						СписокРазрешенныхОС КАК СписокРазрешенныхОС)) КАК ПервоначальныеСведенияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	ПорядокУчетаОСБУ.НедвижимоеИмущество КАК НедвижимоеИмущество
	|
	|ПОМЕСТИТЬ втПорядокУчетаОСБУ
	|
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&ПериодГраница,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация В (&Организации)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокРазрешенныхОС.ОсновноеСредство
	|					ИЗ
	|						СписокРазрешенныхОС КАК СписокРазрешенныхОС)) КАК ПорядокУчетаОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокОС.Организация КАК Организация,
	|	СписокОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(СписокОС.ПорядокПогашенияСтоимости) КАК ПорядокПогашенияСтоимости,
	|	МАКСИМУМ(СписокОС.АмортизационнаяГруппа) КАК АмортизационнаяГруппа,
	|	МАКСИМУМ(СписокОС.НедвижимоеИмущество) КАК НедвижимоеИмущество
	|
	|ПОМЕСТИТЬ СписокОС
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПервоначальныеСведенияОС.Организация КАК Организация,
	|		ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|		ПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокПогашенияСтоимости,
	|		ПорядокУчетаОСБУ.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|		ПорядокУчетаОСБУ.НедвижимоеИмущество КАК НедвижимоеИмущество
	|	ИЗ
	|		втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО ПорядокУчетаОСБУ.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|				И ПорядокУчетаОСБУ.Организация = ПервоначальныеСведенияОС.Организация
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ИсправлениеПараметров.Организация КАК Организация,
	|		ИсправлениеПараметров.ОсновноеСредство КАК ОсновноеСредство,
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации) КАК ПорядокПогашенияСтоимости,
	|		НЕОПРЕДЕЛЕНО КАК АмортизационнаяГруппа,
	|		ИСТИНА КАК НедвижимоеИмущество
	|	ИЗ
	|		РегистрСведений.ИсправлениеПараметровНалогаНаИмущество КАК ИсправлениеПараметров
	|	ГДЕ
	// Исправления хранятся на начало месяца, на конец года берем из 01 января следующего года.
	|		ИсправлениеПараметров.ДатаДействия = ВЫБОР
	|											КОГДА &Период = НАЧАЛОПЕРИОДА(&Период,МЕСЯЦ) ТОГДА 
	|												&Период
	|											ИНАЧЕ
	|												ДОБАВИТЬКДАТЕ(&Период,Секунда,1)
	|											КОНЕЦ
	|		И ИсправлениеПараметров.Организация В (&Организации)
	|		И ИсправлениеПараметров.ОсновноеСредство В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							СписокРазрешенныхОС.ОсновноеСредство
	|						ИЗ
	|							СписокРазрешенныхОС КАК СписокРазрешенныхОС)
	|
	|	) КАК СписокОС
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокОС.Организация,
	|	СписокОС.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство";

	СписокЗапросов.Добавить(ТекстЗапроса);

КонецПроцедуры

Процедура ДобавитьТекстЗапросаСчетаБухгалтерскогоУчета(СписокЗапросов) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СписокОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетУчета,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетОбесценения,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ ВТ_СчетаБухгалтерскогоУчета
	|ИЗ
	|	СписокОС КАК СписокОС
	|ГДЕ
	|	&ИспользуетсяУправлениеВНА_2_4
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство,
	|	ПорядокУчетаОС.СчетУчета,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка),
	|	ПорядокУчетаОС.СчетНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&Период,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС)) КАК ПорядокУчетаОС
	|ГДЕ
	|	НЕ &ИспользуетсяУправлениеВНА_2_4
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПараметрыЦелевогоФинансированияОС.ОсновноеСредство,
	|	ПараметрыЦелевогоФинансированияОС.СчетУчета,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка),
	|	ПараметрыЦелевогоФинансированияОС.СчетАмортизации
	|ИЗ
	|	РегистрСведений.ПараметрыЦелевогоФинансированияОС.СрезПоследних(
	|			&Период,
	|			НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС)) КАК ПараметрыЦелевогоФинансированияОС
	|ГДЕ
	|	НЕ &ИспользуетсяУправлениеВНА_2_4
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	СписокЗапросов.Добавить(ТекстЗапроса);

КонецПроцедуры

Процедура ДобавитьТекстЗапросаСтоимостьИАмортизация(Период, ПараметрыРасчета, СписокЗапросов, ДополнительныеПараметры = Неопределено) Экспорт

	Если ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(ДобавитьМесяц(Период, -1)) Тогда

		Если Месяц(ПараметрыРасчета.мДатаКонцаПериодаОтчета) + 1 = Месяц(Период)
			И НЕ ПараметрыРасчета.РасчетПоФактическойСтоимости Тогда

			// Это расчет в выбранном месяце, в нем еще не выполнен расчет стоимости поступивших или модернизированных ОС

			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ПринятиеКУчетуОС.Организация КАК Организация,
			|	СтоимостьОС.СтоимостьБУ КАК СтоимостьРегл,
			|	СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство
			|
			|ПОМЕСТИТЬ СписокОС_РасчетПоПредварительнойСтоимости
			|
			|ИЗ
			|	Документ.ПринятиеКУчетуОС2_4 КАК ПринятиеКУчетуОС
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС2_4.ОС КАК СтоимостьОС
			|		ПО (СтоимостьОС.Ссылка = ПринятиеКУчетуОС.Ссылка)
			|ГДЕ
			|	ПринятиеКУчетуОС.Организация В (&Организации)
			|	И ПринятиеКУчетуОС.Проведен
			|	И ПринятиеКУчетуОС.ОтражатьВРеглУчете
			|	И ПринятиеКУчетуОС.Дата МЕЖДУ &НачалоПредыдущегоМесяца И &КонецПредыдущегоМесяца
			|	И СтоимостьОС.ОсновноеСредство В
			|			(ВЫБРАТЬ
			|				СписокОС.ОсновноеСредство
			|			ИЗ
			|				СписокОС КАК СписокОС)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	МодернизацияОС2_4.Организация,
			|	СтоимостьОС.СтоимостьБУ,
			|	СтоимостьОС.ОсновноеСредство
			|ИЗ
			|	Документ.МодернизацияОС2_4 КАК МодернизацияОС2_4
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияОС2_4.ОС КАК СтоимостьОС
			|		ПО (СтоимостьОС.Ссылка = МодернизацияОС2_4.Ссылка)
			|ГДЕ
			|	МодернизацияОС2_4.Организация В (&Организации)
			|	И МодернизацияОС2_4.Проведен
			|	И МодернизацияОС2_4.ОтражатьВРеглУчете
			|	И МодернизацияОС2_4.Дата МЕЖДУ &НачалоПредыдущегоМесяца И &КонецПредыдущегоМесяца
			|	И СтоимостьОС.ОсновноеСредство В
			|			(ВЫБРАТЬ
			|				СписокОС.ОсновноеСредство
			|			ИЗ
			|				СписокОС)
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СписокОС.Организация КАК Организация,
			|	СписокОС.ОсновноеСредство КАК ОсновноеСредство,
			|	СУММА(СписокОС.СтоимостьРегл) КАК СтоимостьРегл
			|
			|ПОМЕСТИТЬ ВТ_ПредварительнаяСтоимостьОС
			|
			|ИЗ
			|	(ВЫБРАТЬ
			|		СтоимостьОС.Организация КАК Организация,
			|		СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
			|		СтоимостьОС.СтоимостьРеглОстаток + СтоимостьОС.СтоимостьЦФОстаток КАК СтоимостьРегл
			|	ИЗ
			|		РегистрНакопления.СтоимостьОС.Остатки(
			|				&НачалоПредыдущегоМесяца,
			|				Организация В (&Организации)
			|					И ОсновноеСредство В
			|						(ВЫБРАТЬ
			|							СписокОС.ОсновноеСредство
			|						ИЗ
			|							СписокОС_РасчетПоПредварительнойСтоимости КАК СписокОС)) КАК СтоимостьОС
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		СтоимостьОС.Организация КАК Организация,
			|		СтоимостьОС.ОсновноеСредство,
			|		СтоимостьОС.СтоимостьРегл
			|	ИЗ
			|		СписокОС_РасчетПоПредварительнойСтоимости КАК СтоимостьОС
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			// Уменьшение стоимости (здесь нет разукомплектации и объединения, т.к. их нельзя оформить в одном месяце с принятием к учету или модернизацией)
			|	ВЫБРАТЬ
			|		СтоимостьОС.Организация КАК Организация,
			|		СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
			|		-(СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ) КАК СтоимостьРегл
			|	ИЗ
			|		РегистрНакопления.СтоимостьОС КАК СтоимостьОС
			|	ГДЕ
			|		СтоимостьОС.Период МЕЖДУ &НачалоПредыдущегоМесяца И &КонецПредыдущегоМесяца
			|		И СтоимостьОС.Активность
			|		И СтоимостьОС.Организация В (&Организации)
			|		И СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
			|		И ТИПЗНАЧЕНИЯ(СтоимостьОС.Регистратор) В (ТИП(Документ.СписаниеОС2_4))
			|		И СтоимостьОС.ОсновноеСредство В
			|						(ВЫБРАТЬ
			|							СписокОС.ОсновноеСредство
			|						ИЗ
			|							СписокОС_РасчетПоПредварительнойСтоимости КАК СписокОС)
			|
			|	) КАК СписокОС
			|
			|СГРУППИРОВАТЬ ПО
			|	СписокОС.Организация,
			|	СписокОС.ОсновноеСредство
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(СтоимостьОС.СтоимостьРеглОстаток + СтоимостьОС.СтоимостьЦФОстаток) КАК СтоимостьРегл,
			|	СтоимостьОС.Организация КАК Организация,
			|	СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство
			|
			|ПОМЕСТИТЬ ВТ_СтоимостьОС
			|
			|ИЗ
			|	РегистрНакопления.СтоимостьОС.Остатки(
			|			&ПериодГраница,
			|			Организация В (&Организации)
			|				И ОсновноеСредство В
			|					(ВЫБРАТЬ
			|						СписокОС.ОсновноеСредство
			|					ИЗ
			|						СписокОС КАК СписокОС)) КАК СтоимостьОС
			|
			|СГРУППИРОВАТЬ ПО
			|	СтоимостьОС.Организация,
			|	СтоимостьОС.ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЕСТЬNULL(ПредварительнаяСтоимостьОС.СтоимостьРегл, СтоимостьОС.СтоимостьРегл) КАК СуммаОстатокДт,
			|	СтоимостьОС.Организация КАК Организация,
			|	СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
			|
			|ПОМЕСТИТЬ ВТ_ПервоначальнаяСтоимостьОС
			|
			|ИЗ
			|	ВТ_СтоимостьОС КАК СтоимостьОС
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПредварительнаяСтоимостьОС КАК ПредварительнаяСтоимостьОС
			|		ПО ПредварительнаяСтоимостьОС.Организация = СтоимостьОС.Организация
			|			И ПредварительнаяСтоимостьОС.ОсновноеСредство = СтоимостьОС.ОсновноеСредство
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|		ПО ИсправлениеПараметров.ОсновноеСредство = СтоимостьОС.ОсновноеСредство
			// Исправления хранятся на начало месяца, на конец года берем из 01 января следующего года.
			|			И ИсправлениеПараметров.ДатаДействия = ВЫБОР
			|														КОГДА &Период = НАЧАЛОПЕРИОДА(&Период,МЕСЯЦ) ТОГДА 
			|															&Период
			|														ИНАЧЕ 
			|															ДОБАВИТЬКДАТЕ(&Период,Секунда,1)
			|													КОНЕЦ
			|
			|ГДЕ
			|	ИсправлениеПараметров.ОсновноеСредство ЕСТЬ NULL
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ИсправлениеПараметров.Стоимость КАК СуммаОстатокДт,
			|	ИсправлениеПараметров.Организация КАК Организация,
			|	ИсправлениеПараметров.ОсновноеСредство КАК ОсновноеСредство,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
			|
			|ИЗ
			|	ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|ГДЕ
			|	ИсправлениеПараметров.ДатаДействия = ВЫБОР
			|											КОГДА &Период = НАЧАЛОПЕРИОДА(&Период,МЕСЯЦ) ТОГДА 
			|												&Период
			|											ИНАЧЕ 
			|												ДОБАВИТЬКДАТЕ(&Период,Секунда,1)
			|											КОНЕЦ
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СтоимостьОС.СтоимостьРеглОстаток + СтоимостьОС.СтоимостьЦФОстаток КАК СтоимостьРегл,
			|	СтоимостьОС.Организация КАК Организация,
			|	СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство
			|
			|ПОМЕСТИТЬ ВТ_СтоимостьОСНаНачалоМесяца
			|
			|ИЗ
			|	РегистрНакопления.СтоимостьОС.Остатки(
			|			&НачалоПредыдущегоМесяца,
			|			Организация В (&Организации)
			|				И ОсновноеСредство В
			|					(ВЫБРАТЬ
			|						СписокОС.ОсновноеСредство
			|					ИЗ
			|						СписокОС)) КАК СтоимостьОС
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(АмортизацияОС.СуммаОстатокДт) КАК СуммаОстатокДт,
			|	СУММА(АмортизацияОС.СуммаОстатокКт) КАК СуммаОстатокКт,
			|	АмортизацияОС.Организация КАК Организация,
			|	АмортизацияОС.ОсновноеСредство КАК ОсновноеСредство
			|
			|ПОМЕСТИТЬ ВТ_АмортизацияОС_НаНачалоМесяца
			|
			|ИЗ
			|	(ВЫБРАТЬ
			|		-(АмортизацияОС.АмортизацияРеглОстаток + АмортизацияОС.АмортизацияЦФОстаток) КАК СуммаОстатокДт,
			|		-(АмортизацияОС.АмортизацияРеглОстаток + АмортизацияОС.АмортизацияЦФОстаток) КАК СуммаОстатокКт,
			|		АмортизацияОС.Организация,
			|		АмортизацияОС.ОсновноеСредство КАК ОсновноеСредство
			|	ИЗ
			|		РегистрНакопления.АмортизацияОС.Остатки(
			|				&ПериодГраница,
			|				Организация В (&Организации)
			|					И ОсновноеСредство В
			|						(ВЫБРАТЬ
			|							СписокОС.ОсновноеСредство
			|						ИЗ
			|							СписокОС)) КАК АмортизацияОС
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		ВЫБОР
			|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
			|				ТОГДА -1
			|			ИНАЧЕ 1
			|		КОНЕЦ * (АмортизацияОС.АмортизацияРегл + АмортизацияОС.АмортизацияЦФ),
			|		ВЫБОР
			|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
			|				ТОГДА -1
			|			ИНАЧЕ 1
			|		КОНЕЦ * (АмортизацияОС.АмортизацияРегл + АмортизацияОС.АмортизацияЦФ),
			|		АмортизацияОС.Организация,
			|		АмортизацияОС.ОсновноеСредство
			|	ИЗ
			|		РегистрНакопления.АмортизацияОС КАК АмортизацияОС
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокОС КАК СписокОС
			|		ПО СписокОС.ОсновноеСредство = АмортизацияОС.ОсновноеСредство
			|	ГДЕ
			|		АмортизацияОС.Период МЕЖДУ &НачалоПредыдущегоМесяца И &КонецПредыдущегоМесяца
			|		И АмортизацияОС.ХозяйственнаяОперация В (
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазукомплектацияОСПолная),
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазукомплектацияОСЧастичная),
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыделениеУзловКомпонентовАмортизации))
			|
			|	) КАК АмортизацияОС
			|
			|СГРУППИРОВАТЬ ПО
			|	АмортизацияОС.Организация,
			|	АмортизацияОС.ОсновноеСредство
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РазукомплектацияОС.ОсновноеСредство КАК ОсновноеСредствоИсходное,
			|	РазукомплектацияОС.Организация КАК Организация,
			|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) <> 0
			|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(АмортизацияОС.СуммаОстатокКт, 0) * ТаблицаОС.СтоимостьБУ / ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) КАК ЧИСЛО (31, 2))
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Амортизация
			|
			|ПОМЕСТИТЬ ВтВыделениеАмортизации
			|
			|ИЗ
			|	Документ.РазукомплектацияОС КАК РазукомплектацияОС
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС.ОС КАК ТаблицаОС
			|		ПО ТаблицаОС.Ссылка = РазукомплектацияОС.Ссылка
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокОС КАК СписокОС
			|		ПО СписокОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьОСНаНачалоМесяца КАК СтоимостьОС
			|		ПО СтоимостьОС.Организация = РазукомплектацияОС.Организация
			|			И СтоимостьОС.ОсновноеСредство = РазукомплектацияОС.ОсновноеСредство
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС_НаНачалоМесяца КАК АмортизацияОС
			|		ПО АмортизацияОС.Организация = РазукомплектацияОС.Организация
			|			И АмортизацияОС.ОсновноеСредство = РазукомплектацияОС.ОсновноеСредство
			|
			|ГДЕ
			|	РазукомплектацияОС.Организация В (&Организации)
			|	И РазукомплектацияОС.Проведен
			|	И РазукомплектацияОС.ОтражатьВРеглУчете
			|	И РазукомплектацияОС.Дата МЕЖДУ &НачалоПредыдущегоМесяца И &КонецПредыдущегоМесяца
			|	И ТаблицаОС.СтоимостьБУ <> 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОбесценениеВНАОстатки.Организация КАК Организация,
			|	-ОбесценениеВНАОстатки.ОбесценениеРеглОстаток КАК СуммаОстатокКт,
			|	ОбесценениеВНАОстатки.ВнеоборотныйАктив КАК ОсновноеСредство,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
			|
			|ПОМЕСТИТЬ ВТ_ОбесценениеОС
			|
			|ИЗ
			|	РегистрНакопления.ОбесценениеВНА.Остатки(
			|			&ПериодГраница,
			|			Организация В (&Организации)
			|				И ВнеоборотныйАктив В
			|					(ВЫБРАТЬ
			|						СписокОС.ОсновноеСредство
			|					ИЗ
			|						СписокОС)) КАК ОбесценениеВНАОстатки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(АмортизацияОС.СуммаОстатокДт) КАК СуммаОстатокДт,
			|	СУММА(АмортизацияОС.СуммаОстатокКт) КАК СуммаОстатокКт,
			|	АмортизацияОС.Организация КАК Организация,
			|	АмортизацияОС.ОсновноеСредство КАК ОсновноеСредство,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
			|
			|ПОМЕСТИТЬ ВТ_АмортизацияОС
			|
			|ИЗ
			|	(ВЫБРАТЬ
			|		АмортизацияОС.СуммаОстатокДт КАК СуммаОстатокДт,
			|		АмортизацияОС.СуммаОстатокКт КАК СуммаОстатокКт,
			|		АмортизацияОС.Организация КАК Организация,
			|		АмортизацияОС.ОсновноеСредство КАК ОсновноеСредство
			|	ИЗ
			|		ВТ_АмортизацияОС_НаНачалоМесяца КАК АмортизацияОС
			|
			|			ЛЕВОЕ СОЕДИНЕНИЕ ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|			ПО ИсправлениеПараметров.ОсновноеСредство = АмортизацияОС.ОсновноеСредство
			|				И ИсправлениеПараметров.ДатаДействия = ВЫБОР
			|														КОГДА &Период = НАЧАЛОПЕРИОДА(&Период,МЕСЯЦ) ТОГДА 
			|															&Период
			|														ИНАЧЕ
			|															ДОБАВИТЬКДАТЕ(&Период,Секунда,1)
			|														КОНЕЦ
			|	ГДЕ
			|		ИсправлениеПараметров.ОсновноеСредство ЕСТЬ NULL
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			// Уменьшение амортизации исходного ОС при разукомплектации.
			|	ВЫБРАТЬ
			|		-АмортизацияОС.Амортизация,
			|		-АмортизацияОС.Амортизация,
			|		АмортизацияОС.Организация,
			|		АмортизацияОС.ОсновноеСредствоИсходное
			|	ИЗ
			|		ВтВыделениеАмортизации КАК АмортизацияОС
			|
			|			ЛЕВОЕ СОЕДИНЕНИЕ ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|			ПО ИсправлениеПараметров.ОсновноеСредство = АмортизацияОС.ОсновноеСредство
			|				И ИсправлениеПараметров.ДатаДействия = ВЫБОР
			|														КОГДА &Период = НАЧАЛОПЕРИОДА(&Период,МЕСЯЦ) ТОГДА 
			|															&Период
			|														ИНАЧЕ
			|															ДОБАВИТЬКДАТЕ(&Период,Секунда,1)
			|														КОНЕЦ
			|	ГДЕ
			|		ИсправлениеПараметров.ОсновноеСредство ЕСТЬ NULL
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			// Увеличение амортизации новых ОС при разукомплектации.
			|	ВЫБРАТЬ
			|		АмортизацияОС.Амортизация,
			|		АмортизацияОС.Амортизация,
			|		АмортизацияОС.Организация,
			|		АмортизацияОС.ОсновноеСредство
			|	ИЗ
			|		ВтВыделениеАмортизации КАК АмортизацияОС
			|
			|			ЛЕВОЕ СОЕДИНЕНИЕ ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|			ПО ИсправлениеПараметров.ОсновноеСредство = АмортизацияОС.ОсновноеСредство
			|				И ИсправлениеПараметров.ДатаДействия = ВЫБОР
			|														КОГДА &Период = НАЧАЛОПЕРИОДА(&Период,МЕСЯЦ) ТОГДА 
			|															&Период
			|														ИНАЧЕ
			|															ДОБАВИТЬКДАТЕ(&Период,Секунда,1)
			|														КОНЕЦ
			|	ГДЕ
			|		ИсправлениеПараметров.ОсновноеСредство ЕСТЬ NULL
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		ИсправлениеПараметров.Амортизация,
			|		ИсправлениеПараметров.Амортизация,
			|		ИсправлениеПараметров.Организация,
			|		ИсправлениеПараметров.ОсновноеСредство
			|	ИЗ
			|		ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|	ГДЕ
			|		ИсправлениеПараметров.ДатаДействия = ВЫБОР
			|												КОГДА &Период = НАЧАЛОПЕРИОДА(&Период,МЕСЯЦ) ТОГДА 
			|													&Период
			|												ИНАЧЕ
			|													ДОБАВИТЬКДАТЕ(&Период,Секунда,1)
			|												КОНЕЦ
			|
			|	) КАК АмортизацияОС
			|
			|СГРУППИРОВАТЬ ПО
			|	АмортизацияОС.Организация,
			|	АмортизацияОС.ОсновноеСредство
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство";

		Иначе

			ТекстЗапроса =
			"ВЫБРАТЬ
			|	СтоимостьОС.СтоимостьРеглОстаток + СтоимостьОС.СтоимостьЦФОстаток КАК СуммаОстатокДт,
			|	СтоимостьОС.Организация КАК Организация,
			|	СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
			|
			|ПОМЕСТИТЬ ВТ_ПервоначальнаяСтоимостьОС
			|
			|ИЗ
			|	РегистрНакопления.СтоимостьОС.Остатки(
			|			&ПериодГраница,
			|			Организация В (&Организации)
			|				И ОсновноеСредство В
			|					(ВЫБРАТЬ
			|						СписокОС.ОсновноеСредство
			|					ИЗ
			|						СписокОС)) КАК СтоимостьОС
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|		ПО ИсправлениеПараметров.ОсновноеСредство = СтоимостьОС.ОсновноеСредство
			// Исправления хранятся на начало месяца, на конец года берем из 01 января следующего года.
			|			И ИсправлениеПараметров.ДатаДействия = ВЫБОР
			|													КОГДА &Период = НАЧАЛОПЕРИОДА(&Период,МЕСЯЦ) ТОГДА 
			|														&Период
			|													ИНАЧЕ
			|														ДОБАВИТЬКДАТЕ(&Период,Секунда,1)
			|													КОНЕЦ
			|
			|ГДЕ
			|	ИсправлениеПараметров.ОсновноеСредство ЕСТЬ NULL
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ИсправлениеПараметров.Стоимость КАК СуммаОстатокДт,
			|	ИсправлениеПараметров.Организация КАК Организация,
			|	ИсправлениеПараметров.ОсновноеСредство КАК ОсновноеСредство,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
			|ИЗ
			|	ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|ГДЕ
			|	ИсправлениеПараметров.ДатаДействия = ВЫБОР
			|											КОГДА &Период = НАЧАЛОПЕРИОДА(&Период,МЕСЯЦ) ТОГДА 
			|												&Период
			|											ИНАЧЕ
			|												ДОБАВИТЬКДАТЕ(&Период,Секунда,1)
			|											КОНЕЦ

			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОбесценениеВНАОстатки.Организация КАК Организация,
			|	-ОбесценениеВНАОстатки.ОбесценениеРеглОстаток КАК СуммаОстатокКт,
			|	ОбесценениеВНАОстатки.ВнеоборотныйАктив КАК ОсновноеСредство,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
			|
			|ПОМЕСТИТЬ ВТ_ОбесценениеОС
			|
			|ИЗ
			|	РегистрНакопления.ОбесценениеВНА.Остатки(
			|			&ПериодГраница,
			|			Организация В (&Организации)
			|				И ВнеоборотныйАктив В
			|					(ВЫБРАТЬ
			|						СписокОС.ОсновноеСредство
			|					ИЗ
			|						СписокОС)) КАК ОбесценениеВНАОстатки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	-(АмортизацияОС.АмортизацияРеглОстаток + АмортизацияОС.АмортизацияЦФОстаток) КАК СуммаОстатокДт,
			|	-(АмортизацияОС.АмортизацияРеглОстаток + АмортизацияОС.АмортизацияЦФОстаток) КАК СуммаОстатокКт,
			|	АмортизацияОС.Организация КАК Организация,
			|	АмортизацияОС.ОсновноеСредство КАК ОсновноеСредство,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
			|
			|ПОМЕСТИТЬ ВТ_АмортизацияОС
			|
			|ИЗ
			|	РегистрНакопления.АмортизацияОС.Остатки(
			|			&ПериодГраница,
			|			Организация В (&Организации)
			|				И ОсновноеСредство В
			|					(ВЫБРАТЬ
			|						СписокОС.ОсновноеСредство
			|					ИЗ
			|						СписокОС)) КАК АмортизацияОС
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|		ПО ИсправлениеПараметров.ОсновноеСредство = АмортизацияОС.ОсновноеСредство
			|			И ИсправлениеПараметров.ДатаДействия = ВЫБОР
			|													КОГДА &Период = НАЧАЛОПЕРИОДА(&Период,МЕСЯЦ) ТОГДА 
			|														&Период
			|													ИНАЧЕ
			|														ДОБАВИТЬКДАТЕ(&Период,Секунда,1)
			|													КОНЕЦ
			|
			|ГДЕ
			|	ИсправлениеПараметров.ОсновноеСредство ЕСТЬ NULL
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ИсправлениеПараметров.Амортизация КАК СуммаОстатокДт,
			|	ИсправлениеПараметров.Амортизация КАК СуммаОстатокКт,
			|	ИсправлениеПараметров.Организация КАК Организация,
			|	ИсправлениеПараметров.ОсновноеСредство КАК ОсновноеСредство,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
			|
			|ИЗ
			|	ИсправлениеПараметровНалогаНаИмущество_ЗаписиСУчетомИсправлений КАК ИсправлениеПараметров
			|ГДЕ
			|	ИсправлениеПараметров.ДатаДействия = ВЫБОР
			|											КОГДА &Период = НАЧАЛОПЕРИОДА(&Период,МЕСЯЦ) ТОГДА 
			|												&Период
			|											ИНАЧЕ
			|												ДОБАВИТЬКДАТЕ(&Период,Секунда,1)
			|											КОНЕЦ
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ОсновноеСредство";

		КонецЕсли;

	Иначе

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ПервоначальнаяСтоимостьОС.СуммаОстатокДт,
		|	ПервоначальнаяСтоимостьОС.Организация КАК Организация,
		|	ПервоначальнаяСтоимостьОС.Субконто1 КАК ОсновноеСредство,
		|	ПервоначальнаяСтоимостьОС.Счет
		|
		|ПОМЕСТИТЬ ВТ_ПервоначальнаяСтоимостьОС
		|
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&ПериодГраница,
		|			Счет В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВТ_СчетаБухгалтерскогоУчета.СчетУчета
		|				ИЗ
		|					ВТ_СчетаБухгалтерскогоУчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация В (&Организации)) КАК ПервоначальнаяСтоимостьОС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	0 КАК СуммаОстатокКт,
		|	ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК ОсновноеСредство,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
		|
		|ПОМЕСТИТЬ ВТ_ОбесценениеОС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АмортизацияОС.СуммаОстатокДт КАК СуммаОстатокДт,
		|	АмортизацияОС.СуммаОстатокКт КАК СуммаОстатокКт,
		|	АмортизацияОС.Организация КАК Организация,
		|	АмортизацияОС.Субконто1 КАК ОсновноеСредство,
		|	АмортизацияОС.Счет КАК Счет
		|
		|ПОМЕСТИТЬ ВТ_АмортизацияОС
		|
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&ПериодГраница,
		|			Счет В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВТ_СчетаБухгалтерскогоУчета.СчетНачисленияАмортизации
		|				ИЗ
		|					ВТ_СчетаБухгалтерскогоУчета),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация В (&Организации)) КАК АмортизацияОС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ОсновноеСредство";

	КонецЕсли;

	СписокЗапросов.Добавить(ТекстЗапроса);

КонецПроцедуры

Процедура ДобавитьТекстЗапросаДанныеБухУчетаОС(СписокЗапросов) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СчетаБухгалтерскогоУчета.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) КАК ПервоначальнаяСтоимость,
	|	ЕСТЬNULL(АмортизацияОС.СуммаОстатокДт, 0) КАК АмортизацияДт,
	|	ЕСТЬNULL(АмортизацияОС.СуммаОстатокКт, 0) КАК АмортизацияКт,
	|	ЕСТЬNULL(ОбесценениеОС.СуммаОстатокКт, 0) КАК Обесценение
	|
	|ПОМЕСТИТЬ ДанныеБухУчетаОС
	|
	|ИЗ
	|	ВТ_СчетаБухгалтерскогоУчета КАК СчетаБухгалтерскогоУчета
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальнаяСтоимостьОС КАК ПервоначальнаяСтоимостьОС
	|		ПО СчетаБухгалтерскогоУчета.ОсновноеСредство = ПервоначальнаяСтоимостьОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС КАК АмортизацияОС
	|		ПО СчетаБухгалтерскогоУчета.ОсновноеСредство = АмортизацияОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОбесценениеОС КАК ОбесценениеОС
	|		ПО СчетаБухгалтерскогоУчета.ОсновноеСредство = ОбесценениеОС.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	СписокЗапросов.Добавить(ТекстЗапроса);

КонецПроцедуры

// Возвращает необходимость уплаты авансов по налогу на имущество.
//
// Параметры:
// 	Организации - СправочникСсылка.Организации - Организация, для которой необходимо выполнить проверку.
// 	Период - Дата - Дата закрытия месяца.
//
// Возвращаемое значение:
// 	Булево - Признак необходимости уплаты аванса.
//
Функция УплачиваютсяАвансыПоНалогуНаИмущество(Организации, Период) Экспорт

	УплачиваютсяАвансы = Ложь;

	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("Организации", Организации);
	Запрос.УстановитьПараметр("Период", Период);

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.НалоговыйОрган КАК НалоговыйОрган
	|ПОМЕСТИТЬ ВТ_НалоговыеОрганы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПараметрыНачисленияНалогаНаИмущество.Организация КАК Организация,
	|		ПараметрыНачисленияНалогаНаИмущество.НалоговыйОрган КАК НалоговыйОрган
	|	ИЗ
	|		РегистрСведений.ПараметрыНачисленияНалогаНаИмущество.СрезПоследних(
	|				КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, ГОД, -1), ГОД),
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация В (&Организации)
	|					И ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)) КАК ПараметрыНачисленияНалогаНаИмущество
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПараметрыНачисленияНалогаНаИмущество.Организация,
	|		ПараметрыНачисленияНалогаНаИмущество.НалоговыйОрган
	|	ИЗ
	|		РегистрСведений.ПараметрыНачисленияНалогаНаИмущество.СрезПоследних(
	|				КОНЕЦПЕРИОДА(&Период, КВАРТАЛ),
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация В (&Организации)
	|					И ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)) КАК ПараметрыНачисленияНалогаНаИмущество
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПараметрыНачисленияНалогаНаИмущество.Организация,
	|		ПараметрыНачисленияНалогаНаИмущество.НалоговыйОрган
	|	ИЗ
	|		РегистрСведений.ПараметрыНачисленияНалогаНаИмущество КАК ПараметрыНачисленияНалогаНаИмущество
	|	ГДЕ
	|		ПараметрыНачисленияНалогаНаИмущество.Организация В (&Организации)
	|		И ПараметрыНачисленияНалогаНаИмущество.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|		И ПараметрыНачисленияНалогаНаИмущество.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, ГОД) И КОНЕЦПЕРИОДА(&Период, КВАРТАЛ)
	|		И ПараметрыНачисленияНалогаНаИмущество.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Организации.Ссылка,
	|		Организации.РегистрацияВНалоговомОргане
	|	ИЗ
	|		Справочник.Организации КАК Организации
	|	ГДЕ
	|		Организации.Ссылка В (&Организации)) КАК ВложенныйЗапрос
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НалоговыйОрган
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.Организация КАК Организация,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.УплачиваютсяАвансы КАК УплачиваютсяАвансы
	|ПОМЕСТИТЬ ВТ_УплачиваютсяАвансыПоОрганизации
	|ИЗ
	|	РегистрСведений.ПорядокУплатыНалоговНаМестах.СрезПоследних(
	|			&Период,
	|			Организация В (&Организации)
	|				И РегистрацияВНалоговомОргане = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|				И Налог = ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.НалогНаИмущество)) КАК ПорядокУплатыНалоговНаМестахСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.Организация КАК Организация,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.УплачиваютсяАвансы КАК УплачиваютсяАвансы
	|ПОМЕСТИТЬ ВТ_УплачиваютсяАвансыПоИФНС
	|ИЗ
	|	РегистрСведений.ПорядокУплатыНалоговНаМестах.СрезПоследних(
	|			&Период,
	|			Организация В (&Организации)
	|				И РегистрацияВНалоговомОргане <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|				И Налог = ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.НалогНаИмущество)) КАК ПорядокУплатыНалоговНаМестахСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_УплачиваютсяАвансыПоИФНС.УплачиваютсяАвансы ЕСТЬ NULL
	|				ТОГДА ВЫБОР
	|						КОГДА ВТ_УплачиваютсяАвансыПоОрганизации.УплачиваютсяАвансы ЕСТЬ NULL
	|							ТОГДА ЛОЖЬ
	|						ИНАЧЕ ВТ_УплачиваютсяАвансыПоОрганизации.УплачиваютсяАвансы
	|					КОНЕЦ
	|			ИНАЧЕ ВТ_УплачиваютсяАвансыПоИФНС.УплачиваютсяАвансы
	|		КОНЕЦ), ЛОЖЬ) КАК УплачиваютсяАвансы
	|ИЗ
	|	ВТ_НалоговыеОрганы КАК ВТ_НалоговыеОрганы
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВТ_УплачиваютсяАвансыПоОрганизации КАК ВТ_УплачиваютсяАвансыПоОрганизации
	|		ПО
	|			ВТ_НалоговыеОрганы.Организация = ВТ_УплачиваютсяАвансыПоОрганизации.Организация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВТ_УплачиваютсяАвансыПоИФНС КАК ВТ_УплачиваютсяАвансыПоИФНС
	|		ПО
	|			ВТ_НалоговыеОрганы.Организация = ВТ_УплачиваютсяАвансыПоИФНС.Организация
	|			И ВТ_НалоговыеОрганы.НалоговыйОрган = ВТ_УплачиваютсяАвансыПоИФНС.РегистрацияВНалоговомОргане";

	Результат = Запрос.Выполнить();

	Если НЕ Результат.Пустой() Тогда

		Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		Пока Выборка.Следующий() Цикл
			УплачиваютсяАвансы = Выборка.УплачиваютсяАвансы;
		КонецЦикла;

	КонецЕсли;

	Возврат УплачиваютсяАвансы;

КонецФункции

Процедура СформироватьИсправлениеПараметровНалогаНаИмуществоЗаписи(Организация, НачалоПериода, КонецПериода, ПериодРасчета, МенеджерВременныхТаблиц, ДополнительныеПараметры)

	ДатаДокумента = Неопределено;
	СписокОС = Новый Массив;

	ТекстЗапроса = ВнеоборотныеАктивы.ТекстЗапросаЗаписиРегистраСУчетомИсправлений(
						"ИсправлениеПараметровНалогаНаИмущество",, "ДатаДействия");

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда

		ДатаДокумента = ДополнительныеПараметры.ДатаДокумента;
		СписокОС = ДополнительныеПараметры.СписокОС;

	Иначе

		ДатаДокумента = ПериодРасчета;

	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("БезОтбораОС", СписокОС.Количество() = 0);

	Запрос.Выполнить();

КонецПроцедуры

Процедура ДополнитьПараметрыЗапросаДвижимогоИмущества(Запрос, Период) Экспорт

	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Период));
	Если Не Запрос.Параметры.Свойство("ИспользуетсяУправлениеВНА_2_4") Тогда
		Запрос.УстановитьПараметр("ИспользуетсяУправлениеВНА_2_4",
			ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(КонецГода(Период)));
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ТранспортныйНалог

Функция ПолучитьАвансовыйРасчетПоТранспортномуНалогу(Организация, ПериодРасчета, ДополнительныеПараметры = Неопределено) Экспорт

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда

		РасчетНалога = ПолучитьАвансовыйРасчетПоТранспортномуНалогуСУчетомИсправлений(
							Организация, ПериодРасчета, ДополнительныеПараметры);

	Иначе

		Запрос = Новый Запрос;

		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ПериодРасчета", ПериодРасчета);

		Запрос.Текст =
		"ВЫБРАТЬ
		|	РасчетТранспортногоНалога.ПериодРасчета КАК ПериодРасчета,
		|	РасчетТранспортногоНалога.Организация КАК Организация,
		|	РасчетТранспортногоНалога.ИФНС КАК ИФНС,
		|	РасчетТранспортногоНалога.КодПоОКТМО КАК КодПоОКТМО,
		|	РасчетТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
		|	РасчетТранспортногоНалога.ДатаРегистрационныхДанных КАК ДатаРегистрационныхДанных,
		|	РасчетТранспортногоНалога.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
		|	РасчетТранспортногоНалога.ИдентификационныйНомер КАК ИдентификационныйНомер,
		|	РасчетТранспортногоНалога.Марка КАК Марка,
		|	РасчетТранспортногоНалога.РегистрационныйЗнак КАК РегистрационныйЗнак,
		|	РасчетТранспортногоНалога.НалоговаяБаза КАК НалоговаяБаза,
		|	РасчетТранспортногоНалога.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	РасчетТранспортногоНалога.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
		|	РасчетТранспортногоНалога.НалоговаяСтавка КАК НалоговаяСтавка,
		|	РасчетТранспортногоНалога.СуммаНалога КАК СуммаНалога,
		|	РасчетТранспортногоНалога.КоличествоМесяцевЛьготы КАК КоличествоМесяцевЛьготы,
		|	РасчетТранспортногоНалога.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
		|	РасчетТранспортногоНалога.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
		|	РасчетТранспортногоНалога.ПроцентУменьшения КАК ПроцентУменьшения,
		|	РасчетТранспортногоНалога.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
		|	РасчетТранспортногоНалога.СуммаНалоговойЛьготы КАК СуммаНалоговойЛьготы,
		|	РасчетТранспортногоНалога.СуммаНалогаКУплате КАК СуммаНалогаКУплате,
		|	РасчетТранспортногоНалога.СуммаОсвобожденияОтУплатыНалога КАК СуммаОсвобожденияОтУплатыНалога,
		|	РасчетТранспортногоНалога.ЭкологическийКласс КАК ЭкологическийКласс,
		|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
		|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
		|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
		|	РасчетТранспортногоНалога.ПовышающийКоэффициент КАК ПовышающийКоэффициент,
		|	РасчетТранспортногоНалога.КоличествоЛетПрошедшихСГодаВыпускаТС КАК КоличествоЛетПрошедшихСГодаВыпускаТС,
		|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
		|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
		|	РасчетТранспортногоНалога.ЗарегистрированоВРеестреСистемыПлатон КАК ЗарегистрированоВРеестреСистемыПлатон,
		|	РасчетТранспортногоНалога.СуммаНалоговогоВычета КАК СуммаНалоговогоВычета,
		|	РасчетТранспортногоНалога.ДатаРегистрации КАК ДатаРегистрации,
		|	РасчетТранспортногоНалога.ДатаПрекращенияРегистрации КАК ДатаПрекращенияРегистрации
		|ИЗ
		|	РегистрСведений.РасчетТранспортногоНалога КАК РасчетТранспортногоНалога
		|ГДЕ
		|	РасчетТранспортногоНалога.Активность = ИСТИНА
		|	И РасчетТранспортногоНалога.Организация = &Организация
		|	И РасчетТранспортногоНалога.ПериодРасчета = &ПериодРасчета";

		РасчетНалога = Запрос.Выполнить().Выгрузить();
		Для Каждого СтрокаРасчета Из РасчетНалога Цикл
			СтрокаРасчета.КодПоОКТМО = СокрЛП(СтрокаРасчета.КодПоОКТМО);
		КонецЦикла;

	КонецЕсли;

	Возврат РасчетНалога;

КонецФункции

Функция УчестьРасходыНаПлатон(ПараметрыРасчета, ТаблицаРасчетНалога, ДополнительныеПараметры = Неопределено) Экспорт

	ГодовойРасчет = КонецКвартала(ПараметрыРасчета.ПериодРасчета) = КонецГода(ПараметрыРасчета.ПериодРасчета);

	РасходыПлатон = ПолучитьРасходыНаПлатон(
						ПараметрыРасчета.Организация,
						ПараметрыРасчета.ПериодРасчета,
						ТаблицаРасчетНалога);

	Если ПараметрыРасчета.ПериодРасчета < ВнеоборотныеАктивыЛокализация.ДатаПрекращенияДействияЛьготПлатон() Тогда
		УчестьРасходыНаПлатонВРасчетеТранспортногоНалога(РасходыПлатон, ТаблицаРасчетНалога);
	КонецЕсли;

	СтрокиРасчетаНалога = ТаблицаРасчетНалога.НайтиСтроки(
		Новый Структура("ЗарегистрированоВРеестреСистемыПлатон", Истина));

	Для Каждого СтрокаРасчета Из СтрокиРасчетаНалога Цикл

		Если ГодовойРасчет Тогда
			СтрокаРасчета.СуммаНалогаКУплате = СтрокаРасчета.СуммаНалогаКУплате - СтрокаРасчета.СуммаНалоговогоВычета;
		Иначе
			СтрокаРасчета["СуммаАвансовыхПлатежей" + Формат(ПараметрыРасчета.ПериодРасчета, "ДФ='q''Кв'''")] = 0;
			СтрокаРасчета.СуммаНалогаКУплате = 0;
		КонецЕсли;

	КонецЦикла;

	Возврат РасходыПлатон;

КонецФункции

Процедура СформироватьТаблицуРегистрацияТранспортныхСредствСрезПоследних(ПараметрыРасчета, Период, ДополнительныеПараметры, ИмяТаблицы = "") Экспорт

	ДатаДокумента = Неопределено;
	СписокОС = Новый Массив;

	ДополнительныеПоля = Новый Структура;
	ДополнительныеПоля.Вставить(
		"ЗарегистрированоВРеестреСистемыПлатон",
		"ЕСТЬNULL(ДанныеРегистра.ОсновноеСредство.ЗарегистрированоВРеестреСистемыПлатон, ЛОЖЬ)");

	ТекстЗапроса = ВнеоборотныеАктивы.ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений(
					"ПараметрыНачисленияТранспортногоНалога",
					?(ИмяТаблицы <> "", ИмяТаблицы, "РегистрацияТранспортныхСредств_СрезПоследних"),
					ДополнительныеПоля);

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда

		ДатаДокумента = ДополнительныеПараметры.ДатаДокумента;
		СписокОС = ДополнительныеПараметры.СписокОС;

	Иначе

		ДатаДокумента = ПараметрыРасчета.ПериодРасчета;

	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("Дата", Период);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("БезОтбораОС", СписокОС.Количество() = 0);

	Запрос.Выполнить();

КонецПроцедуры

Процедура СформироватьТаблицуРегистрацияТранспортныхСредствЗаписи(ПараметрыРасчета, Период, ДополнительныеПараметры, ИмяТаблицы = "") Экспорт

	ДатаДокумента = Неопределено;
	СписокОС = Новый Массив;

	ДополнительныеПоля = Новый Структура;
	ДополнительныеПоля.Вставить("ЗарегистрированоВРеестреСистемыПлатон", "ЕСТЬNULL(ДанныеРегистра.ОсновноеСредство.ЗарегистрированоВРеестреСистемыПлатон, ЛОЖЬ)");

	ТекстЗапроса = ВнеоборотныеАктивы.ТекстЗапросаЗаписиРегистраСУчетомИсправлений(
					"ПараметрыНачисленияТранспортногоНалога",
					?(ИмяТаблицы <> "", ИмяТаблицы, "РегистрацияТранспортныхСредств_Записи"),,
					ДополнительныеПоля);

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда

		ДатаДокумента = ДополнительныеПараметры.ДатаДокумента;
		СписокОС = ДополнительныеПараметры.СписокОС;

	Иначе

		ДатаДокумента = ПараметрыРасчета.ПериодРасчета;

	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("НачалоПериода", '000101010000');
	Запрос.УстановитьПараметр("КонецПериода", Период);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("БезОтбораОС", СписокОС.Количество() = 0);

	Запрос.Выполнить();

КонецПроцедуры

Функция КодыВидовИКатегорииТранспортныхСредств() Экспорт

	Макет = Документы.ПараметрыНачисленияТранспортногоНалога.ПолучитьМакет("КодыВидовИКатегорииТС");
	КодыВидовИКатегорииТС = ОбщегоНазначения.ПрочитатьXMLВТаблицу(Макет.ПолучитьТекст()).Данные;

	Возврат КодыВидовИКатегорииТС;

КонецФункции

Функция ПолучитьАвансовыйРасчетПоТранспортномуНалогуСУчетомИсправлений(Организация, ПериодРасчета, ДополнительныеПараметры)

	ТаблицаРасчетНалога = РасчетИмущественныхНалогов.ПолучитьРасчетПоТранспортномуНалогу(Организация, ПериодРасчета, ДополнительныеПараметры);

	Для Каждого СтрокаРасчета Из ТаблицаРасчетНалога.Налог Цикл
		СтрокаРасчета.КодПоОКТМО = СокрЛП(СтрокаРасчета.КодПоОКТМО);
	КонецЦикла;

	Возврат ТаблицаРасчетНалога.Налог;

КонецФункции

Функция ПустаяТаблицаРасходыНаПлатон()

	РасходыНаПлатон = Новый ТаблицаЗначений;

	РасходыНаПлатон.Колонки.Добавить("ОтчетОператора", Новый ОписаниеТипов("ДокументСсылка.ОтчетОператораСистемыПлатон"));
	РасходыНаПлатон.Колонки.Добавить("ОсновноеСредство", Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации"));
	РасходыНаПлатон.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
	РасходыНаПлатон.Колонки.Добавить("АналитикаРасходов", Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.Тип);
	РасходыНаПлатон.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	РасходыНаПлатон.Колонки.Добавить("НаправлениеДеятельности", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));
	РасходыНаПлатон.Колонки.Добавить("СуммаНУДт", РаботаСКурсамиВалют.ОписаниеТипаДенежногоПоля());
	РасходыНаПлатон.Колонки.Добавить("СуммаНУКт", РаботаСКурсамиВалют.ОписаниеТипаДенежногоПоля());
	РасходыНаПлатон.Колонки.Добавить("База", РаботаСКурсамиВалют.ОписаниеТипаДенежногоПоля());

	Возврат РасходыНаПлатон;

КонецФункции

Функция ПолучитьРасходыНаПлатон(Организация, ПериодРасчета, ТаблицаРасчетТранспортногоНалога, ДополнительныеПараметры = Неопределено)

	ГодовойРасчет = КонецКвартала(ПериодРасчета) = КонецГода(ПериодРасчета);
	ДатаКонцаПериодаОтчета = КонецКвартала(ПериодРасчета);

	СтруктураПоиска = Новый Структура("УплачиваютсяАвансы", Ложь);
	СписокОСБезАвансов = ТаблицаРасчетТранспортногоНалога.Скопировать(СтруктураПоиска).ВыгрузитьКолонку("ОсновноеСредство");
	УплачиваютсяАвансы = СписокОСБезАвансов.Количество() = 0;

	СписокЗапросов = Новый Массив;

	Если ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(РасчетыСПоставщиками.Период, КВАРТАЛ) КАК Период,
		|
		|	ВЫБОР
		|		КОГДА РасчетыСПоставщиками.РасчетныйДокумент ССЫЛКА Документ.ОтчетОператораСистемыПлатон
		|			ТОГДА РасчетыСПоставщиками.РасчетныйДокумент
		|		ИНАЧЕ РасчетыСПоставщиками.ДокументРегистратор
		|	КОНЕЦ КАК ОтчетОператора,
		|
		|	СУММА(РасчетыСПоставщиками.ДолгРегл) КАК СуммаПлатежа,
		|
		|	СУММА(ВЫБОР
		|			КОГДА РасчетыСПоставщиками.Период МЕЖДУ &НачалоКвартала И &КонецКвартала
		|				ТОГДА РасчетыСПоставщиками.ДолгРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаПлатежаЗаКвартал
		|
		|ПОМЕСТИТЬ ФактическиеПлатежи
		|
		|ИЗ
		|	РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК РасчетыСПоставщиками
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон КАК ОтчетОператораСистемыПлатон
		|		ПО ОтчетОператораСистемыПлатон.Ссылка = РасчетыСПоставщиками.РасчетныйДокумент
		|			ИЛИ ОтчетОператораСистемыПлатон.Ссылка = РасчетыСПоставщиками.ДокументРегистратор
		|
		|ГДЕ
		|	РасчетыСПоставщиками.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|
		|	И (ОтчетОператораСистемыПлатон.Дата < &ДатаПрекращенияДействияЛьготПлатон
		|		ИЛИ &ПериодРасчета < &ДатаПрекращенияДействияЛьготПлатон)
		|
		|	И РасчетыСПоставщиками.АналитикаУчетаПоПартнерам.Организация = &Организация
		|	И РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		|	И РасчетыСПоставщиками.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗачетАвансаПоставщику),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПогашениеЗадолженностиПоставщику))
		|
		|	И РасчетыСПоставщиками.Активность
		|	И (РасчетыСПоставщиками.РасчетныйДокумент ССЫЛКА Документ.ОтчетОператораСистемыПлатон
		|			ИЛИ РасчетыСПоставщиками.ДокументРегистратор ССЫЛКА Документ.ОтчетОператораСистемыПлатон)
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(РасчетыСПоставщиками.Период, КВАРТАЛ),
		|	ВЫБОР
		|		КОГДА РасчетыСПоставщиками.РасчетныйДокумент ССЫЛКА Документ.ОтчетОператораСистемыПлатон
		|			ТОГДА РасчетыСПоставщиками.РасчетныйДокумент
		|		ИНАЧЕ РасчетыСПоставщиками.ДокументРегистратор
		|	КОНЕЦ
		|
		|ИМЕЮЩИЕ
		|	СУММА(РасчетыСПоставщиками.ДолгРегл) > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОтчетОператора";

		СписокЗапросов.Добавить(ТекстЗапроса);

	Иначе

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(РасчетыСПоставщиками.Период, КВАРТАЛ) КАК Период,
		|
		|	ВЫБОР
		|		КОГДА РасчетыСПоставщиками.РасчетныйДокумент ССЫЛКА Документ.ОтчетОператораСистемыПлатон
		|			ТОГДА РасчетыСПоставщиками.РасчетныйДокумент
		|		ИНАЧЕ РасчетыСПоставщиками.Регистратор
		|	КОНЕЦ КАК ОтчетОператора,
		|
		|	СУММА(ВЫБОР
		|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА РасчетыСПоставщиками.ДолгРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ + ВЫБОР
		|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА РасчетыСПоставщиками.ПредоплатаРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаПлатежа,
		|
		|	СУММА(ВЫБОР
		|			КОГДА РасчетыСПоставщиками.Период < &НачалоКвартала
		|					ИЛИ РасчетыСПоставщиками.Период > &КонецКвартала
		|				ТОГДА 0
		|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА РасчетыСПоставщиками.ДолгРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ + ВЫБОР
		|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА РасчетыСПоставщиками.ПредоплатаРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаПлатежаЗаКвартал
		|
		|ПОМЕСТИТЬ ФактическиеПлатежи
		|
		|ИЗ
		|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщиками
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон КАК ОтчетОператораСистемыПлатон
		|		ПО ОтчетОператораСистемыПлатон.Ссылка = РасчетыСПоставщиками.РасчетныйДокумент
		|			ИЛИ ОтчетОператораСистемыПлатон.Ссылка = РасчетыСПоставщиками.Регистратор
		|
		|ГДЕ
		|	РасчетыСПоставщиками.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|
		|	И (ОтчетОператораСистемыПлатон.Дата < &ДатаПрекращенияДействияЛьготПлатон
		|		ИЛИ &ПериодРасчета < &ДатаПрекращенияДействияЛьготПлатон)
		|
		|	И РасчетыСПоставщиками.АналитикаУчетаПоПартнерам.Организация = &Организация
		|
		|	И РасчетыСПоставщиками.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности))
		|
		|	И РасчетыСПоставщиками.Активность
		|	И (РасчетыСПоставщиками.РасчетныйДокумент ССЫЛКА Документ.ОтчетОператораСистемыПлатон
		|			ИЛИ РасчетыСПоставщиками.Регистратор ССЫЛКА Документ.ОтчетОператораСистемыПлатон)
		|
		|СГРУППИРОВАТЬ ПО
		|
		|	НАЧАЛОПЕРИОДА(РасчетыСПоставщиками.Период, КВАРТАЛ),
		|
		|	ВЫБОР
		|		КОГДА РасчетыСПоставщиками.РасчетныйДокумент ССЫЛКА Документ.ОтчетОператораСистемыПлатон
		|			ТОГДА РасчетыСПоставщиками.РасчетныйДокумент
		|		ИНАЧЕ РасчетыСПоставщиками.Регистратор
		|	КОНЕЦ
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР
		|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА РасчетыСПоставщиками.ДолгРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ + ВЫБОР
		|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА РасчетыСПоставщиками.ПредоплатаРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОтчетОператора";

		СписокЗапросов.Добавить(ТекстЗапроса);

	КонецЕсли;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасчетТранспортногоНалога.ПериодРасчета КАК Период,
	|	РасчетТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(РасчетТранспортногоНалога.СуммаПлатыОператоруСистемыПлатон) КАК СуммаПлатежа
	|ИЗ
	|	РегистрСведений.РасчетТранспортногоНалога КАК РасчетТранспортногоНалога
	|ГДЕ
	|	РасчетТранспортногоНалога.ПериодРасчета >= &НачалоПериода
	|	И РасчетТранспортногоНалога.ПериодРасчета < &НачалоКвартала
	|	И РасчетТранспортногоНалога.Организация = &Организация
	|	И РасчетТранспортногоНалога.Активность
	|	И &ГодовойРасчет
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетТранспортногоНалога.ПериодРасчета,
	|	РасчетТранспортногоНалога.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФактическиеПлатежи.Период                 КАК Период,
	|	ФактическиеПлатежи.ОтчетОператора         КАК ОтчетОператора,
	|	ФактическиеПлатежи.СуммаПлатежа           КАК СуммаПлатежа,
	|	ФактическиеПлатежи.СуммаПлатежаЗаКвартал  КАК СуммаПлатежаЗаКвартал
	|ИЗ
	|	ФактическиеПлатежи КАК ФактическиеПлатежи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Операция.Ссылка                           КАК ОтчетОператора,
	|	РасходыНаПлатон.ОсновноеСредство          КАК ОсновноеСредство,
	|	РасходыНаПлатон.Подразделение             КАК Подразделение,
	|	РасходыНаПлатон.СтатьяРасходов            КАК СтатьяРасходов,
	|	РасходыНаПлатон.АналитикаРасходов         КАК АналитикаРасходов,
	|	РасходыНаПлатон.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	0                                         КАК СуммаНУДт,
	|	0                                         КАК СуммаНУКт,
	|	РасходыНаПлатон.Сумма                     КАК База,
	|	ВЫБОР
	|		КОГДА РасходыНаПлатон.ОсновноеСредство В (&СписокОСБезАвансов)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК УплачиваютсяАвансы
	|ИЗ
	|	Документ.ОтчетОператораСистемыПлатон КАК Операция
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
	|		ПО РасходыНаПлатон.Ссылка = Операция.Ссылка
	|
	|ГДЕ
	|	Операция.Проведен
	|	И Операция.Ссылка В
	|			(ВЫБРАТЬ
	|				ФактическиеПлатежи.ОтчетОператора
	|			ИЗ
	|				ФактическиеПлатежи КАК ФактическиеПлатежи)";

	СписокЗапросов.Добавить(ТекстЗапроса);

	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("СледующийМесяц", ДатаКонцаПериодаОтчета + 1);
	Запрос.УстановитьПараметр("ПериодРасчета",  ПериодРасчета);
	Запрос.УстановитьПараметр("ГодовойРасчет",  ГодовойРасчет);
	Запрос.УстановитьПараметр("НачалоКвартала", НачалоКвартала(ПериодРасчета));
	Запрос.УстановитьПараметр("КонецКвартала",  КонецКвартала(ПериодРасчета));
	Запрос.УстановитьПараметр("НачалоПериода",  ?(НЕ УплачиваютсяАвансы И ГодовойРасчет, НачалоГода(ПериодРасчета), НачалоКвартала(ПериодРасчета)));
	Запрос.УстановитьПараметр("КонецПериода",   ?(НЕ УплачиваютсяАвансы И ГодовойРасчет, КонецГода(ПериодРасчета), КонецКвартала(ПериодРасчета)));
	Запрос.УстановитьПараметр("ДатаПрекращенияДействияЛьготПлатон", ВнеоборотныеАктивыЛокализация.ДатаПрекращенияДействияЛьготПлатон());
	Запрос.УстановитьПараметр("СписокОСБезАвансов", СписокОСБезАвансов);

	Результат = Запрос.ВыполнитьПакет();

	ТаблицаРасходыНаПлатон = ПустаяТаблицаРасходыНаПлатон();

	Если Не Результат[Результат.ВГраница()].Пустой() Тогда

		ТаблицаРасходыНаПлатон.Колонки.Добавить("УплачиваютсяАвансы", Новый ОписаниеТипов("Булево"));

		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат[Результат.ВГраница()].Выгрузить(), ТаблицаРасходыНаПлатон);
		ТаблицаРасходыНаПлатон.Индексы.Добавить("ОтчетОператора");
		ТаблицаРасходыНаПлатон.Индексы.Добавить("ОсновноеСредство");

		УчтенныеПлатежи = Результат[Результат.ВГраница() - 2].Выгрузить();
		УчтенныеПлатежи.Индексы.Добавить("ОсновноеСредство");

		// 1. Распределение платежа по ОС.
		ВыборкаПлатежи = Результат[Результат.ВГраница()-1].Выбрать();
		Пока ВыборкаПлатежи.Следующий() Цикл

			СтруктураПоиска = Новый Структура("ОтчетОператора");
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаПлатежи);
			СписокСтрок = ТаблицаРасходыНаПлатон.НайтиСтроки(СтруктураПоиска);
			КоэффициентыОплаты = Новый Массив;
			Для каждого Расход Из СписокСтрок Цикл
				КоэффициентыОплаты.Добавить(Расход.База);
			КонецЦикла;

			РаспределениеПлатежа = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(
										ВыборкаПлатежи.СуммаПлатежа, КоэффициентыОплаты);

			РаспределениеПлатежаЗаКвартал = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(
										ВыборкаПлатежи.СуммаПлатежаЗаКвартал, КоэффициентыОплаты);

			СтрокиКУдалению = Новый Массив;
			Для Сч = 0 По КоэффициентыОплаты.ВГраница() Цикл
				Расход = СписокСтрок[Сч];

				Если Расход.УплачиваютсяАвансы Тогда
					Расход.СуммаНУДт = ?(РаспределениеПлатежаЗаКвартал <> Неопределено, РаспределениеПлатежаЗаКвартал[Сч], 0);
				Иначе
					Расход.СуммаНУДт = РаспределениеПлатежа[Сч];
				КонецЕсли;

				// Нужно уменьшить сумму оплат на суммы, которые были учтены при авансовых платежах по налогу.
				Если ГодовойРасчет Тогда
					СтруктураПоиска = Новый Структура("ОсновноеСредство", Расход.ОсновноеСредство);
					СписокСтрокУчтенныхПлатежей = УчтенныеПлатежи.НайтиСтроки(СтруктураПоиска);
					Для каждого СтрокаУчтенныеПлатежи Из СписокСтрокУчтенныхПлатежей Цикл
						Если НачалоКвартала(СтрокаУчтенныеПлатежи.Период) = ВыборкаПлатежи.Период
							И СтрокаУчтенныеПлатежи.СуммаПлатежа > 0 Тогда
							СуммаПлатежа = Мин(Расход.СуммаНУДт, СтрокаУчтенныеПлатежи.СуммаПлатежа);
							Расход.СуммаНУДт = Расход.СуммаНУДт - СуммаПлатежа;
							СтрокаУчтенныеПлатежи.СуммаПлатежа = СтрокаУчтенныеПлатежи.СуммаПлатежа - СуммаПлатежа;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;

				Расход.СуммаНУКт = Расход.СуммаНУДт;

				Если Расход.СуммаНУДт = 0 Тогда
					СтрокиКУдалению.Добавить(Расход);
				КонецЕсли;
			КонецЦикла;

			Для каждого Расход Из СтрокиКУдалению Цикл
				ТаблицаРасходыНаПлатон.Удалить(Расход);
			КонецЦикла;

		КонецЦикла;

	КонецЕсли;

	Возврат ТаблицаРасходыНаПлатон;

КонецФункции

Процедура УчестьРасходыНаПлатонВРасчетеТранспортногоНалога(РасходыПлатон, ТаблицаРасчетТранспортногоНалога)

	Если РасходыПлатон = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТаблицаРасчетТранспортногоНалога.Колонки.Добавить(
		"СуммаНалогаДоПримененияТекущегоВычета", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));

	СтрокиРасчетаНалога = ТаблицаРасчетТранспортногоНалога.НайтиСтроки(
		Новый Структура("ЗарегистрированоВРеестреСистемыПлатон", Истина));

	Для Каждого СтрокаРасчетаНалога Из СтрокиРасчетаНалога Цикл
		СтрокаРасчетаНалога.СуммаНалогаДоПримененияТекущегоВычета =
			СтрокаРасчетаНалога.СуммаНалогаКУплате - СтрокаРасчетаНалога.СуммаНалоговогоВычета;
	КонецЦикла;

	ПоляПоиска = "ОсновноеСредство, ЗарегистрированоВРеестреСистемыПлатон";
	ТаблицаРасчетТранспортногоНалога.Индексы.Добавить(ПоляПоиска);

	Поиск = Новый Структура(ПоляПоиска);
	Поиск.ЗарегистрированоВРеестреСистемыПлатон = Истина;

	Для Каждого Расход Из РасходыПлатон Цикл

		Поиск.ОсновноеСредство = Расход.ОсновноеСредство;

		СтрокиРасчетаНалога = ТаблицаРасчетТранспортногоНалога.НайтиСтроки(Поиск);

		Для Каждого СтрокаРасчетаНалога Из СтрокиРасчетаНалога Цикл

			Разность = СтрокаРасчетаНалога.СуммаНалогаДоПримененияТекущегоВычета - Расход.СуммаНУДт;
			Если Разность >= 0 Тогда
				СтрокаРасчетаНалога.СуммаНалоговогоВычета = СтрокаРасчетаНалога.СуммаНалоговогоВычета + Расход.СуммаНУДт;
				СтрокаРасчетаНалога.СуммаНалогаДоПримененияТекущегоВычета = Разность;
				Расход.СуммаНУДт = 0;
			Иначе
				СтрокаРасчетаНалога.СуммаНалоговогоВычета =
					СтрокаРасчетаНалога.СуммаНалоговогоВычета + СтрокаРасчетаНалога.СуммаНалогаДоПримененияТекущегоВычета;
				СтрокаРасчетаНалога.СуммаНалогаДоПримененияТекущегоВычета = 0;
				Расход.СуммаНУДт = -Разность;
			КонецЕсли;

		КонецЦикла;

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ЗемельныйНалог

Процедура СформироватьТаблицуРегистрацияЗемельныхУчастковСрезПоследних(ПараметрыРасчета, Период, ДополнительныеПараметры, ИмяТаблицы = "", УсловияЗапроса = "") Экспорт

	ДатаДокумента = Неопределено;
	СписокОС = Новый Массив;

	ТекстЗапроса = ВнеоборотныеАктивы.ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений(
					"ПараметрыНачисленияЗемельногоНалога",
					?(ИмяТаблицы <> "", ИмяТаблицы, "РегистрацияЗемельныхУчастков_СрезПоследних"),,
					УсловияЗапроса);

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда

		ДатаДокумента = ДополнительныеПараметры.ДатаДокумента;
		СписокОС = ДополнительныеПараметры.СписокОС;

	Иначе

		ДатаДокумента = ПараметрыРасчета.ПериодРасчета;

	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("Дата", Период);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("БезОтбораОС", СписокОС.Количество() = 0);

	Запрос.Выполнить();

КонецПроцедуры

Процедура СформироватьТаблицуРегистрацияЗемельныхУчастковЗаписи(ПараметрыРасчета, Период, ДополнительныеПараметры, ИмяТаблицы = "") Экспорт

	ДатаДокумента = Неопределено;
	СписокОС = Новый Массив;

	ТекстЗапроса = ВнеоборотныеАктивы.ТекстЗапросаЗаписиРегистраСУчетомИсправлений(
					"ПараметрыНачисленияЗемельногоНалога",
					?(ИмяТаблицы <> "", ИмяТаблицы, "РегистрацияЗемельныхУчастков_Записи"));

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("УчестьИсправлениеУчетныхДанных") Тогда

		ДатаДокумента = ДополнительныеПараметры.ДатаДокумента;
		СписокОС = ДополнительныеПараметры.СписокОС;

	Иначе

		ДатаДокумента = ПараметрыРасчета.ПериодРасчета;

	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("НачалоПериода", '000101010000');
	Запрос.УстановитьПараметр("КонецПериода", Период);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("БезОтбораОС", СписокОС.Количество() = 0);

	Запрос.Выполнить();

КонецПроцедуры

#КонецОбласти

#Область ЗаданияКЗакрытиюМесяца

// Формирует задание к расчету налога на имущество, на основании измененных данных.
//
// Параметры:
//  Документ - ДокументОбъект - Ссылка на документ.
//  ДанныеТаблиц - Структура - Содержит список таблиц в которых произошли изменения.
//
Процедура СформироватьЗаданиеКРасчетуНалогаНаИмущество(Документ, ДанныеТаблиц) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Возврат;
	КонецЕсли;

	ИспользуемыеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(ДанныеТаблиц.МенеджерВременныхТаблиц);

	ТипОбъекта = ТипЗнч(Документ);

	ЕстьОсновныеСредства =
		ТипОбъекта <> Тип("ДокументОбъект.РегламентнаяОперация")
		И Документ <> Неопределено;

	ПроверитьЧтоОСПринятоКУчету =
		ТипОбъекта = Тип("ДокументОбъект.ВводОстатковВнеоборотныхАктивов")
		ИЛИ ТипОбъекта = Тип("ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4")
		ИЛИ ТипОбъекта = Тип("ДокументОбъект.ПринятиеКУчетуОС")
		ИЛИ ТипОбъекта = Тип("ДокументОбъект.ПараметрыНачисленияТранспортногоНалога");

	ПринятиеКУчетуЗаданоДокументом =
		ТипОбъекта = Тип("ДокументОбъект.ВводОстатковВнеоборотныхАктивов")
		ИЛИ ТипОбъекта = Тип("ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4")
		ИЛИ ТипОбъекта = Тип("ДокументОбъект.ПринятиеКУчетуОС");

	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("ИзменениеПараметровОС");
	СписокТаблиц.Добавить("ИзменениеСпособаОтраженияИмущественныхНалогов_НалогНаИмущество");
	СписокТаблиц.Добавить("РегламентнаяОперацияРасчетНалогаНаИмущество");
	СписокТаблиц.Добавить("ПараметрыНачисленияНалогаНаИмущество");
	СписокТаблиц.Добавить("СпособыОтраженияРасходовПоИмущественнымНалогам");
	СписокТаблиц.Добавить("ПараметрыНачисленияНалогаНаИмущество");
	СписокТаблиц.Добавить("СтавкиНалогаНаИмущество");
	СписокТаблиц.Добавить("ПорядокУплатыНалоговНаМестах");

	// Версия 2.4
	СписокТаблиц.Добавить("СтоимостьОС");
	СписокТаблиц.Добавить("АмортизацияОС");
	СписокТаблиц.Добавить("МестонахождениеОС");
	СписокТаблиц.Добавить("ПервоначальныеСведенияОС");
	СписокТаблиц.Добавить("ПорядокУчетаОС");
	СписокТаблиц.Добавить("ПорядокУчетаОСБУ");

	СписокДопПолей = "ОтражатьВРеглУчете" + ?(ЕстьОсновныеСредства, ",ОсновноеСредство", "");

	СписокПолейТаблиц = Новый Структура;
	ТаблицыВидНалога = Новый Массив;
	ТаблицыВидНалога.Добавить("СпособыОтраженияРасходовПоИмущественнымНалогам");
	СписокПолейТаблиц.Вставить("ВидНалога", ТаблицыВидНалога);

	ТекстОбъединенияДанных = ВнеоборотныеАктивы.СформироватьТекстОбъединенияДанныхДляФормированияЗадания(
									СписокТаблиц, ДанныеТаблиц, СписокДопПолей, СписокПолейТаблиц);

	Если ТекстОбъединенияДанных = "" Тогда
		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ДанныеТаблиц.МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);
		Возврат;
	КонецЕсли;

	СписокЗапросов = Новый Массив;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ВводОстатков22.Дата, МЕСЯЦ, 1)
	|
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ВводОстатков24.Дата, МЕСЯЦ, 1)
	|
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводПервоначальныхСведенийДляРасчетаНалогаНаИмущество)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ВводПервоначальныхСведений.Дата, МЕСЯЦ, 1)
	|
	|				КОГДА ИзмененныеДанные.ИмяТаблицы = ""ПорядокУчетаОСБУ""
	|						И ИзмененныеДанные.Период < &ДатаНачалаУчета24
	|					ТОГДА &ДатаНачалаУчета24
	|
	|				ИНАЧЕ ИзмененныеДанные.Период
	|			КОНЕЦ) КАК Период,
	|	ИзмененныеДанные.Организация       КАК Организация,
	|	ИзмененныеДанные.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	" + ?(ЕстьОсновныеСредства, "ИзмененныеДанные.ОсновноеСредство КАК ОсновноеСредство,", "") + "
	|	ИзмененныеДанные.Документ          КАК Документ
	|ПОМЕСТИТЬ ИзмененныеДанные
	|ИЗ
	|	(" + ТекстОбъединенияДанных + ") КАК ИзмененныеДанные
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ВводОстатков22
	|		ПО ВводОстатков22.Ссылка = ИзмененныеДанные.Документ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ВводОстатков24
	|		ПО ВводОстатков24.Ссылка = ИзмененныеДанные.Документ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводПервоначальныхСведенийДляРасчетаНалогаНаИмущество КАК ВводПервоначальныхСведений
	|		ПО ВводПервоначальныхСведений.Ссылка = ИзмененныеДанные.Документ
	|
	|ГДЕ
	|	ИзмененныеДанные.ОтражатьВРеглУчете
	|	И ИзмененныеДанные.ВидНалога В (
	|		ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.НалогНаИмущество),
	|		НЕОПРЕДЕЛЕНО)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Организация.ГоловнаяОрганизация,
	|	" + ?(ЕстьОсновныеСредства, "ИзмененныеДанные.ОсновноеСредство,", "") + "
	|	ИзмененныеДанные.Документ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|	" + ?(ЕстьОсновныеСредства, ",ОсновноеСредство", "");
	СписокЗапросов.Добавить(ТекстЗапроса);

	Если ЕстьОсновныеСредства Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ИзмененныеДанные.Период КАК Период,
		|	ИзмененныеДанные.Организация КАК Организация,
		|	ИзмененныеДанные.ОсновноеСредство КАК ОсновноеСредство,
		|	МАКСИМУМ(ПорядокУчетаОСБУ.Период) КАК ПериодПоследнее
		|ПОМЕСТИТЬ ПорядокУчетаОСБУ_Период
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
		|		ПО (ПорядокУчетаОСБУ.Организация = ИзмененныеДанные.Организация)
		|			И (ПорядокУчетаОСБУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
		|			И (ПорядокУчетаОСБУ.Период <= ИзмененныеДанные.Период)
		|			И (ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
		|
		|СГРУППИРОВАТЬ ПО
		|	ИзмененныеДанные.Период,
		|	ИзмененныеДанные.Организация,
		|	ИзмененныеДанные.ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПорядокУчетаОСБУ_Период.Период КАК Период,
		|	ПорядокУчетаОСБУ_Период.Организация КАК Организация,
		|	ПорядокУчетаОСБУ_Период.ОсновноеСредство КАК ОсновноеСредство,
		|	ПорядокУчетаОСБУ.НедвижимоеИмущество КАК НедвижимоеИмущество
		|ПОМЕСТИТЬ ПорядокУчетаОСБУ
		|ИЗ
		|	ПорядокУчетаОСБУ_Период КАК ПорядокУчетаОСБУ_Период
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
		|		ПО (ПорядокУчетаОСБУ.Организация = ПорядокУчетаОСБУ_Период.Организация)
		|			И (ПорядокУчетаОСБУ.ОсновноеСредство = ПорядокУчетаОСБУ_Период.ОсновноеСредство)
		|			И (ПорядокУчетаОСБУ.Период = ПорядокУчетаОСБУ_Период.ПериодПоследнее)
		|			И (ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ОсновноеСредство,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПорядокУчетаОСБУ_Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеДанные.ОсновноеСредство КАК ОсновноеСредство
		|ПОМЕСТИТЬ СписокОС
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
		|		ПО (ОбъектыЭксплуатации.Ссылка = ИзмененныеДанные.ОсновноеСредство)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
		|		ПО (ПорядокУчетаОСБУ.Организация = ИзмененныеДанные.Организация)
		|			И (ПорядокУчетаОСБУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
		|			И (ПорядокУчетаОСБУ.Период = ИзмененныеДанные.Период)
		|ГДЕ
		|	(ИзмененныеДанные.Период < ДАТАВРЕМЯ(2019, 1, 1)
		|			ИЛИ НЕ ПорядокУчетаОСБУ.ОсновноеСредство ЕСТЬ NULL
		|				И ПорядокУчетаОСБУ.НедвижимоеИмущество
		|			ИЛИ ПорядокУчетаОСБУ.ОсновноеСредство ЕСТЬ NULL
		|				И ОбъектыЭксплуатации.ГруппаОС В (&ГруппыНедвижимогоИмущества))
		|	И НЕ ОбъектыЭксплуатации.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПорядокУчетаОСБУ";
		СписокЗапросов.Добавить(ТекстЗапроса);

	КонецЕсли;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация КАК Организация,
	|	УчетнаяПолитикаОрганизаций.СистемаНалогообложения КАК СистемаНалогообложения,
	|	ВЫБОР
	|		КОГДА УчетнаяПолитикаОрганизаций.Период > ИзмененныеДанные.Период
	|				И УчетнаяПолитикаОрганизаций.Период > &ДатаНачалаВеденияРеглУчета
	|			ТОГДА УчетнаяПолитикаОрганизаций.Период
	|		КОГДА &ДатаНачалаВеденияРеглУчета > ИзмененныеДанные.Период
	|			ТОГДА &ДатаНачалаВеденияРеглУчета
	|		ИНАЧЕ ИзмененныеДанные.Период
	|	КОНЕЦ КАК Начало
	|ПОМЕСТИТЬ УчетнаяПолитикаОрганизаций
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСистемыНалогообложения КАК УчетнаяПолитикаОрганизаций
	|		ПО (УчетнаяПолитикаОрганизаций.Организация = ИзмененныеДанные.ГоловнаяОрганизация)
	|			И (УчетнаяПолитикаОрганизаций.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Общая)
	|				ИЛИ ИзмененныеДанные.Период >= ДАТАВРЕМЯ(2015, 1, 1))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСистемыНалогообложения КАК СледующаяУчетнаяПолитикаОрганизаций
	|		ПО (СледующаяУчетнаяПолитикаОрганизаций.Организация = УчетнаяПолитикаОрганизаций.Организация)
	|			И (СледующаяУчетнаяПолитикаОрганизаций.Период > УчетнаяПолитикаОрганизаций.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	УчетнаяПолитикаОрганизаций.СистемаНалогообложения,
	|	ВЫБОР
	|		КОГДА УчетнаяПолитикаОрганизаций.Период > ИзмененныеДанные.Период
	|				И УчетнаяПолитикаОрганизаций.Период > &ДатаНачалаВеденияРеглУчета
	|			ТОГДА УчетнаяПолитикаОрганизаций.Период
	|		КОГДА &ДатаНачалаВеденияРеглУчета > ИзмененныеДанные.Период
	|			ТОГДА &ДатаНачалаВеденияРеглУчета
	|		ИНАЧЕ ИзмененныеДанные.Период
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	(МИНИМУМ(ЕСТЬNULL(СледующаяУчетнаяПолитикаОрганизаций.Период, ДАТАВРЕМЯ(1, 1, 1))) > МИНИМУМ(ИзмененныеДанные.Период)
	|			И МИНИМУМ(ЕСТЬNULL(СледующаяУчетнаяПолитикаОрганизаций.Период, ДАТАВРЕМЯ(1, 1, 1))) > &ДатаНачалаВеденияРеглУчета
	|		ИЛИ МИНИМУМ(ЕСТЬNULL(СледующаяУчетнаяПолитикаОрганизаций.Период, ДАТАВРЕМЯ(1, 1, 1))) = ДАТАВРЕМЯ(1, 1, 1))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);

	Если ПроверитьЧтоОСПринятоКУчету Тогда

		Если ПринятиеКУчетуЗаданоДокументом Тогда

			Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаОСБУ") <> Неопределено Тогда

				ТекстЗапроса =
					"ВЫБРАТЬ
					|	УчетнаяПолитикаОрганизаций.Организация КАК Организация,
					|	МИНИМУМ(КОНЕЦПЕРИОДА(ВЫБОР
					|							КОГДА ПорядокУчетаОСБУ.Период > УчетнаяПолитикаОрганизаций.Начало
					|								ТОГДА ПорядокУчетаОСБУ.Период
					|							ИНАЧЕ
					|								УчетнаяПолитикаОрганизаций.Начало
					|						КОНЕЦ, КВАРТАЛ)) КАК Период
					|ПОМЕСТИТЬ ПериодЗадания
					|ИЗ
					|	УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
					|		ПО (ПорядокУчетаОСБУ.Организация = УчетнаяПолитикаОрганизаций.Организация)
					|			И (ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
					|ГДЕ
					|	УчетнаяПолитикаОрганизаций.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Общая)
					|
					|СГРУППИРОВАТЬ ПО
					|	УчетнаяПолитикаОрганизаций.Организация
					|
					|ИНДЕКСИРОВАТЬ ПО
					|	Организация";
				СписокЗапросов.Добавить(ТекстЗапроса);

			Иначе

				ТекстЗапроса =
					"ВЫБРАТЬ
					|	УчетнаяПолитикаОрганизаций.Организация КАК Организация,
					|	МИНИМУМ(КОНЕЦПЕРИОДА(ВЫБОР
					|							КОГДА ПорядокУчетаОСБУ.Период > УчетнаяПолитикаОрганизаций.Начало
					|								ТОГДА ПорядокУчетаОСБУ.Период
					|							ИНАЧЕ
					|								УчетнаяПолитикаОрганизаций.Начало
					|						КОНЕЦ, КВАРТАЛ)) КАК Период
					|ПОМЕСТИТЬ ПериодЗадания
					|ИЗ
					|	УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИзмененныеДанные КАК ИзмененныеДанные
					|		ПО ИзмененныеДанные.Организация = УчетнаяПолитикаОрганизаций.Организация
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
					|		ПО (ПорядокУчетаОСБУ.Организация = УчетнаяПолитикаОрганизаций.Организация)
					|			И (ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
					|			И (ПорядокУчетаОСБУ.Регистратор = ИзмененныеДанные.Документ)
					|			И (ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
					|			И (ПорядокУчетаОСБУ.Активность)
					|ГДЕ
					|	УчетнаяПолитикаОрганизаций.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Общая)
					|
					|СГРУППИРОВАТЬ ПО
					|	УчетнаяПолитикаОрганизаций.Организация
					|
					|ИНДЕКСИРОВАТЬ ПО
					|	Организация";
				СписокЗапросов.Добавить(ТекстЗапроса);

			КонецЕсли;
		Иначе

			ТекстЗапроса =
				"ВЫБРАТЬ
				|	ВложенныйЗапрос.Организация,
				|	МИНИМУМ(НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, МЕСЯЦ)) КАК Период
				|ПОМЕСТИТЬ ПериодЗадания
				|ИЗ
				|	(ВЫБРАТЬ
				|		УчетнаяПолитикаОрганизаций.Организация КАК Организация,
				|		МИНИМУМ(КОНЕЦПЕРИОДА(ВЫБОР
				|								КОГДА ПорядокУчетаОСБУ.Период > УчетнаяПолитикаОрганизаций.Начало
				|									ТОГДА ПорядокУчетаОСБУ.Период
				|								ИНАЧЕ
				|									УчетнаяПолитикаОрганизаций.Начало
				|							КОНЕЦ, КВАРТАЛ)) КАК Период
				|	ИЗ
				|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
				|			ПО (ПорядокУчетаОСБУ.Организация = УчетнаяПолитикаОрганизаций.Организация)
				|				И (ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
				|				И (ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
				|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК СледующееСостояниеОС
				|			ПО (СледующееСостояниеОС.Организация = ПорядокУчетаОСБУ.Организация)
				|				И (СледующееСостояниеОС.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство)
				|				И (СледующееСостояниеОС.Период > ПорядокУчетаОСБУ.Период)
				|				И (СледующееСостояниеОС.СостояниеБУ <> ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
				|				И (СледующееСостояниеОС.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
				|	ГДЕ
				|		УчетнаяПолитикаОрганизаций.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Общая)
				|		" + ?(ЕстьОсновныеСредства, "И ПорядокУчетаОСБУ.ОсновноеСредство В
				|				(ВЫБРАТЬ
				|					СписокОС.ОсновноеСредство
				|				ИЗ
				|					СписокОС КАК СписокОС)", "") + "
				|
				|	СГРУППИРОВАТЬ ПО
				|		УчетнаяПолитикаОрганизаций.Организация
				|
				|	ИМЕЮЩИЕ
				|		(МИНИМУМ(СледующееСостояниеОС.Период) >= МИНИМУМ(УчетнаяПолитикаОрганизаций.Начало)
				|			ИЛИ МИНИМУМ(ЕСТЬNULL(СледующееСостояниеОС.Период, ДАТАВРЕМЯ(1, 1, 1))) = ДАТАВРЕМЯ(1, 1, 1))
				|
				|	ОБЪЕДИНИТЬ ВСЕ
				|
				|	ВЫБРАТЬ
				|		УчетнаяПолитикаОрганизаций.Организация,
				|		МИНИМУМ(КОНЕЦПЕРИОДА(ВЫБОР
				|								КОГДА СтавкиНалога.Период > УчетнаяПолитикаОрганизаций.Начало
				|									ТОГДА СтавкиНалога.Период
				|								ИНАЧЕ
				|									УчетнаяПолитикаОрганизаций.Начало
				|							КОНЕЦ, КВАРТАЛ))
				|	ИЗ
				|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
				|
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияНалогаНаИмущество КАК СтавкиНалога
				|			ПО (СтавкиНалога.Организация = УчетнаяПолитикаОрганизаций.Организация)
				|				И (СтавкиНалога.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость))
				|				И (СтавкиНалога.Период >= УчетнаяПолитикаОрганизаций.Начало)
				|				И (СтавкиНалога.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
				|
				|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияНалогаНаИмущество КАК СледующееСтавкиНалога
				|			ПО (СледующееСтавкиНалога.Организация = СтавкиНалога.Организация)
				|				И (СледующееСтавкиНалога.ОсновноеСредство = СтавкиНалога.ОсновноеСредство)
				|				И (СледующееСтавкиНалога.Период > СтавкиНалога.Период)
				|				И (СледующееСтавкиНалога.НалоговаяБаза <> ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость))
				|				И (СледующееСтавкиНалога.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
				|
				|	" + ?(ЕстьОсновныеСредства, "ГДЕ
				|		СтавкиНалога.ОсновноеСредство В
				|				(ВЫБРАТЬ
				|					СписокОС.ОсновноеСредство
				|				ИЗ
				|					СписокОС КАК СписокОС)", "") + "
				|
				|	СГРУППИРОВАТЬ ПО
				|		УчетнаяПолитикаОрганизаций.Организация
				|
				|	ИМЕЮЩИЕ
				|		(МИНИМУМ(СледующееСтавкиНалога.Период) >= МИНИМУМ(УчетнаяПолитикаОрганизаций.Начало)
				|			ИЛИ МИНИМУМ(ЕСТЬNULL(СледующееСтавкиНалога.Период, ДАТАВРЕМЯ(1, 1, 1))) = ДАТАВРЕМЯ(1, 1, 1))) КАК ВложенныйЗапрос
				|
				|СГРУППИРОВАТЬ ПО
				|	ВложенныйЗапрос.Организация
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	Организация";
			СписокЗапросов.Добавить(ТекстЗапроса);

		КонецЕсли;

	Иначе

		ТекстЗапроса =
			"ВЫБРАТЬ
			|	ВложенныйЗапрос.Организация,
			|	МИНИМУМ(НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, МЕСЯЦ)) КАК Период
			|ПОМЕСТИТЬ ПериодЗадания
			|ИЗ
			|	(ВЫБРАТЬ
			|		УчетнаяПолитикаОрганизаций.Организация КАК Организация,
			|		МИНИМУМ(КОНЕЦПЕРИОДА(УчетнаяПолитикаОрганизаций.Начало, КВАРТАЛ)) КАК Период
			|	ИЗ
			|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
			|	ГДЕ
			|		УчетнаяПолитикаОрганизаций.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Общая)
			|
			|	СГРУППИРОВАТЬ ПО
			|		УчетнаяПолитикаОрганизаций.Организация
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		УчетнаяПолитикаОрганизаций.Организация,
			|		МИНИМУМ(КОНЕЦПЕРИОДА(ВЫБОР
			|								КОГДА СтавкиНалога.Период > УчетнаяПолитикаОрганизаций.Начало
			|									ТОГДА СтавкиНалога.Период
			|								ИНАЧЕ
			|									УчетнаяПолитикаОрганизаций.Начало
			|							КОНЕЦ, КВАРТАЛ))
			|	ИЗ
			|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
			|
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияНалогаНаИмущество КАК СтавкиНалога
			|			ПО (СтавкиНалога.Организация = УчетнаяПолитикаОрганизаций.Организация)
			|				И (СтавкиНалога.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость))
			|				И (СтавкиНалога.Период >= УчетнаяПолитикаОрганизаций.Начало)
			|				И (СтавкиНалога.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
			|
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияНалогаНаИмущество КАК СледующееСтавкиНалога
			|			ПО (СледующееСтавкиНалога.Организация = СтавкиНалога.Организация)
			|				И (СледующееСтавкиНалога.ОсновноеСредство = СтавкиНалога.ОсновноеСредство)
			|				И (СледующееСтавкиНалога.Период > СтавкиНалога.Период)
			|				И (СледующееСтавкиНалога.НалоговаяБаза <> ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость))
			|				И (СледующееСтавкиНалога.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
			|
			|	" + ?(ЕстьОсновныеСредства, "ГДЕ
			|		СтавкиНалога.ОсновноеСредство В
			|				(ВЫБРАТЬ
			|					СписокОС.ОсновноеСредство
			|				ИЗ
			|					СписокОС КАК СписокОС)", "") + "
			|
			|	СГРУППИРОВАТЬ ПО
			|		УчетнаяПолитикаОрганизаций.Организация
			|
			|	ИМЕЮЩИЕ
			|		(МИНИМУМ(СледующееСтавкиНалога.Период) >= МИНИМУМ(УчетнаяПолитикаОрганизаций.Начало)
			|			ИЛИ МИНИМУМ(ЕСТЬNULL(СледующееСтавкиНалога.Период, ДАТАВРЕМЯ(1, 1, 1))) = ДАТАВРЕМЯ(1, 1, 1))) КАК ВложенныйЗапрос
			|
			|СГРУППИРОВАТЬ ПО
			|	ВложенныйЗапрос.Организация
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ВложенныйЗапрос.Организация";
		СписокЗапросов.Добавить(ТекстЗапроса);

	КонецЕсли;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	&Операция КАК Операция,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ПериодЗадания.Период, КВАРТАЛ), МЕСЯЦ)) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодЗадания КАК ПериодЗадания
	|		ПО (ПериодЗадания.Организация = ИзмененныеДанные.Организация)
	|
	|	" + ?(ЕстьОсновныеСредства, "ГДЕ
	|		ИзмененныеДанные.ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					СписокОС.ОсновноеСредство
	|				ИЗ
	|					СписокОС КАК СписокОС)", "") + "
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПериодЗадания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИзмененныеДанные";
	СписокЗапросов.Добавить(ТекстЗапроса);

	Если ЕстьОсновныеСредства Тогда
		СписокЗапросов.Добавить("УНИЧТОЖИТЬ СписокОС");
	КонецЕсли;

	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаНачалаВеденияРеглУчета", Константы.ДатаНачалаВеденияРеглУчета.Получить());
	Запрос.УстановитьПараметр("ДатаНачалаУчета24", ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4());
	Запрос.УстановитьПараметр("Операция", Перечисления.ОперацииЗакрытияМесяца.РасчетНалогаНаИмущество);
	Запрос.УстановитьПараметр("ГруппыНедвижимогоИмущества", ВнеоборотныеАктивыКлиентСерверЛокализация.ГруппыНедвижимогоИмущества());

	УстановитьПривилегированныйРежим(Истина);

	РезультатЗапроса = Запрос.Выполнить();

	РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса.Выбрать());

	УстановитьПривилегированныйРежим(Ложь);

	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ДанныеТаблиц.МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);

КонецПроцедуры

// Формирует задание к расчету транспортного налога, на основании измененных данных.
//
// Параметры:
//  Документ - ДокументОбъект - Ссылка на документ.
//  ДанныеТаблиц - Структура - Содержит список таблиц в которых произошли изменения.
//  ЕстьОсновныеСредства - Булево - Истина, если измененные данные содержат информацию об основных средствах.
//
Процедура СформироватьЗаданиеКРасчетуТранспортногоНалога(Документ, ДанныеТаблиц, ЕстьОсновныеСредства = Неопределено) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Возврат;
	КонецЕсли;

	ИспользуемыеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(ДанныеТаблиц.МенеджерВременныхТаблиц);

	ТипОбъекта = ТипЗнч(Документ);

	ЕстьОсновныеСредства =
		ТипОбъекта <> Тип("ДокументОбъект.РегламентнаяОперация")
			И Документ <> Неопределено
		ИЛИ ЕстьОсновныеСредства <> Неопределено
			И ЕстьОсновныеСредства;

	ПроверитьЧтоОСЗарегистрировано =
		ТипОбъекта <> Тип("ДокументОбъект.СнятиеСРегистрацииТранспортныхСредств")
		И ТипОбъекта <> Тип("ДокументОбъект.ПараметрыНачисленияТранспортногоНалога")
		И ТипОбъекта <> Тип("ДокументОбъект.ВводПервоначальныхСведенийДляРасчетаТранспортногоНалога");

	СформироватьТаблицыИзмененийДляФормированияЗаданийКРасчетуТранспортногоНалога(ДанныеТаблиц);

	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("ИзменениеПараметровОС");
	СписокТаблиц.Добавить("ИзменениеСпособаОтраженияИмущественныхНалогов_ТранспортныйНалог");
	СписокТаблиц.Добавить("ПорядокУплатыНалоговНаМестах");
	СписокТаблиц.Добавить("РегламентнаяОперацияРасчетТранспортногоНалога");
	СписокТаблиц.Добавить("ПараметрыНачисленияТранспортногоНалога");
	СписокТаблиц.Добавить("СпособыОтраженияРасходовПоИмущественнымНалогам");
	СписокТаблиц.Добавить("РасходыНаПлатон");
	СписокТаблиц.Добавить("РасчетыСПоставщиками_ЗаданияКРасчетуТранспортногоНалога");
	СписокТаблиц.Добавить("РасчетыСПоставщикамиПоДокументам_ЗаданияКРасчетуТранспортногоНалога");

	// Версия 2.4
	СписокТаблиц.Добавить("МестонахождениеОС");
	СписокТаблиц.Добавить("ПорядокУчетаОС");

	СписокДопПолей = "ОтражатьВРеглУчете" + ?(ЕстьОсновныеСредства, ",ОсновноеСредство", "");

	СписокПолейТаблиц = Новый Структура;
	ТаблицыВидНалога = Новый Массив;
	ТаблицыВидНалога.Добавить("СпособыОтраженияРасходовПоИмущественнымНалогам");
	СписокПолейТаблиц.Вставить("ВидНалога", ТаблицыВидНалога);

	ТекстОбъединенияДанных = ВнеоборотныеАктивы.СформироватьТекстОбъединенияДанныхДляФормированияЗадания(
									СписокТаблиц, ДанныеТаблиц, СписокДопПолей, СписокПолейТаблиц);

	Если ТекстОбъединенияДанных = "" Тогда
		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ДанныеТаблиц.МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);
		Возврат;
	КонецЕсли;

	// Условия формирования задания:
	// - если с начала квартала были зарегистрированы транспортные средства (дата задания - наименьшая дата регистрации)
	// - или если на начало квартала есть зарегистрированные транспортные средства (дата задания - начало квартала).

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ВводОстатков22.Дата, МЕСЯЦ, 1)
	|
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ВводОстатков24.Дата, МЕСЯЦ, 1)
	|
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводПервоначальныхСведенийДляРасчетаТранспортногоНалога)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ВводПервоначальныхСведений.Дата, МЕСЯЦ, 1)
	|
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ПараметрыНачисленияТранспортногоНалога)
	|					ТОГДА ПараметрыНачисленияТранспортногоНалога.Дата
	|
	|				ИНАЧЕ ИзмененныеДанные.Период
	|			КОНЕЦ)   КАК Период,
	|	ИзмененныеДанные.Организация       КАК Организация,
	|	" + ?(ЕстьОсновныеСредства, "ИзмененныеДанные.ОсновноеСредство КАК ОсновноеСредство,", "") + "
	|	ИзмененныеДанные.Документ          КАК Документ
	|ПОМЕСТИТЬ ИзмененныеДанные
	|ИЗ
	|	(" + ТекстОбъединенияДанных + ") КАК ИзмененныеДанные
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ВводОстатков22
	|		ПО ВводОстатков22.Ссылка = ИзмененныеДанные.Документ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ВводОстатков24
	|		ПО ВводОстатков24.Ссылка = ИзмененныеДанные.Документ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводПервоначальныхСведенийДляРасчетаТранспортногоНалога КАК ВводПервоначальныхСведений
	|		ПО ВводПервоначальныхСведений.Ссылка = ИзмененныеДанные.Документ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПараметрыНачисленияТранспортногоНалога КАК ПараметрыНачисленияТранспортногоНалога
	|		ПО ПараметрыНачисленияТранспортногоНалога.Ссылка = ИзмененныеДанные.Документ
	|
	|ГДЕ
	|	ИзмененныеДанные.ОтражатьВРеглУчете
	|	И ВЫРАЗИТЬ(ИзмененныеДанные.Организация КАК Справочник.Организации).ЮридическоеФизическоеЛицо <> ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
	|	И ИзмененныеДанные.ВидНалога В (
	|		ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог),
	|		НЕОПРЕДЕЛЕНО)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	" + ?(ЕстьОсновныеСредства, "ИзмененныеДанные.ОсновноеСредство,", "") + "
	|	ИзмененныеДанные.Документ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|	" + ?(ЕстьОсновныеСредства, ",ОсновноеСредство", "");

	Если ПроверитьЧтоОСЗарегистрировано Тогда

		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВПакете() +
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ПараметрыНачисленияТранспортногоНалогаПоследние.Организация КАК Организация
			|ПОМЕСТИТЬ ПараметрыНачисленияТранспортногоНалогаНаНачало
			|ИЗ
			|	(ВЫБРАТЬ
			|		ПараметрыНачисленияТранспортногоНалога.Организация КАК Организация,
			|		ПараметрыНачисленияТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
			|		МАКСИМУМ(ПараметрыНачисленияТранспортногоНалога.Период) КАК Период
			|	ИЗ
			|		ИзмененныеДанные КАК ИзмененныеДанные
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияТранспортногоНалога КАК ПараметрыНачисленияТранспортногоНалога
			|			ПО (ПараметрыНачисленияТранспортногоНалога.Организация = ИзмененныеДанные.Организация)
			|				И (ПараметрыНачисленияТранспортногоНалога.Период < НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, КВАРТАЛ))
			|				И (ПараметрыНачисленияТранспортногоНалога.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
			|				" + ?(ЕстьОсновныеСредства, "И ПараметрыНачисленияТранспортногоНалога.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство", "") + "
			|
			|	СГРУППИРОВАТЬ ПО
			|		ПараметрыНачисленияТранспортногоНалога.Организация,
			|		ПараметрыНачисленияТранспортногоНалога.ОсновноеСредство
			|	) КАК ПараметрыНачисленияТранспортногоНалогаПоследние
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияТранспортногоНалога КАК ПараметрыНачисленияТранспортногоНалога
			|		ПО (ПараметрыНачисленияТранспортногоНалога.Организация = ПараметрыНачисленияТранспортногоНалогаПоследние.Организация)
			|			И (ПараметрыНачисленияТранспортногоНалога.ОсновноеСредство = ПараметрыНачисленияТранспортногоНалогаПоследние.ОсновноеСредство)
			|			И (ПараметрыНачисленияТранспортногоНалога.Период = ПараметрыНачисленияТранспортногоНалогаПоследние.Период)
			|			И (ПараметрыНачисленияТранспортногоНалога.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
			|ГДЕ
			|	ПараметрыНачисленияТранспортногоНалога.ВключатьВНалоговуюБазу
			|
			|СГРУППИРОВАТЬ ПО
			|	ПараметрыНачисленияТранспортногоНалогаПоследние.Организация
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПараметрыНачисленияТранспортногоНалога.Организация,
			|	МИНИМУМ(ПараметрыНачисленияТранспортногоНалога.Период) КАК Период
			|ПОМЕСТИТЬ ПериодЗадания
			|ИЗ
			|	(ВЫБРАТЬ
			|		ИзмененныеДанные.Организация КАК Организация,
			|		МИНИМУМ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ)) КАК Период
			|	ИЗ
			|		ИзмененныеДанные КАК ИзмененныеДанные
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПараметрыНачисленияТранспортногоНалогаНаНачало КАК ПараметрыНачисленияТранспортногоНалогаНаНачало
			|			ПО (ПараметрыНачисленияТранспортногоНалогаНаНачало.Организация = ИзмененныеДанные.Организация)
			|
			|	СГРУППИРОВАТЬ ПО
			|		ИзмененныеДанные.Организация
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		ИзмененныеДанные.Организация,
			|		МИНИМУМ(НАЧАЛОПЕРИОДА(ПараметрыНачисленияТранспортногоНалога.Период, МЕСЯЦ))
			|	ИЗ
			|		ИзмененныеДанные КАК ИзмененныеДанные
			|
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияТранспортногоНалога КАК ПараметрыНачисленияТранспортногоНалога
			|			ПО (ПараметрыНачисленияТранспортногоНалога.Организация = ИзмененныеДанные.Организация)
			|				И (ПараметрыНачисленияТранспортногоНалога.Период >= НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, КВАРТАЛ))
			|				И (ПараметрыНачисленияТранспортногоНалога.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
			|				И (ПараметрыНачисленияТранспортногоНалога.ВключатьВНалоговуюБазу)
			|				" + ?(ЕстьОсновныеСредства, "И ПараметрыНачисленияТранспортногоНалога.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство", "") + "
			|
			|	СГРУППИРОВАТЬ ПО
			|		ИзмененныеДанные.Организация) КАК ПараметрыНачисленияТранспортногоНалога
			|
			|СГРУППИРОВАТЬ ПО
			|	ПараметрыНачисленияТранспортногоНалога.Организация
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИзмененныеДанные.Организация,
			|	ИзмененныеДанные.Документ,
			|	&Операция КАК Операция,
			|	МИНИМУМ(НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ПериодЗадания.Период, КВАРТАЛ), МЕСЯЦ)) КАК Месяц
			|ИЗ
			|	ИзмененныеДанные КАК ИзмененныеДанные
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодЗадания КАК ПериодЗадания
			|		ПО (ПериодЗадания.Организация = ИзмененныеДанные.Организация)
			|
			|СГРУППИРОВАТЬ ПО
			|	ИзмененныеДанные.Организация,
			|	ИзмененныеДанные.Документ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ПериодЗадания
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ИзмененныеДанные";
	Иначе

		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВПакете() +
			"ВЫБРАТЬ
			|	ИзмененныеДанные.Организация,
			|	ИзмененныеДанные.Документ,
			|	&Операция КАК Операция,
			|	МИНИМУМ(НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ИзмененныеДанные.Период, КВАРТАЛ), МЕСЯЦ)) КАК Месяц
			|ИЗ
			|	ИзмененныеДанные КАК ИзмененныеДанные
			|
			|СГРУППИРОВАТЬ ПО
			|	ИзмененныеДанные.Организация,
			|	ИзмененныеДанные.Документ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ИзмененныеДанные";

	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаНачалаВеденияРеглУчета", Константы.ДатаНачалаВеденияРеглУчета.Получить());
	Запрос.УстановитьПараметр("Операция", Перечисления.ОперацииЗакрытияМесяца.РасчетТранспортногоНалога);

	УстановитьПривилегированныйРежим(Истина);

	РезультатЗапроса = Запрос.Выполнить();

	РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса.Выбрать());

	УстановитьПривилегированныйРежим(Ложь);

	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ДанныеТаблиц.МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);

КонецПроцедуры

// Формирует задание к расчету земельного налога, на основании измененных данных.
//
// Параметры:
//  Документ - ДокументОбъект - Ссылка на документ.
//  ДанныеТаблиц - Структура - Содержит список таблиц в которых произошли изменения.
//
Процедура СформироватьЗаданиеКРасчетуЗемельногоНалога(Документ, ДанныеТаблиц) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Возврат;
	КонецЕсли;

	ИспользуемыеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(ДанныеТаблиц.МенеджерВременныхТаблиц);

	ТипОбъекта = ТипЗнч(Документ);

	ЕстьОсновныеСредства =
		ТипОбъекта <> Тип("ДокументОбъект.РегламентнаяОперация")
		И Документ<> Неопределено;

	ПроверитьЧтоОСЗарегистрировано =
		ТипОбъекта <> Тип("ДокументОбъект.СнятиеСРегистрацииЗемельныхУчастков")
		И ТипОбъекта <> Тип("ДокументОбъект.ПараметрыНачисленияЗемельногоНалога")
		И ТипОбъекта <> Тип("ДокументОбъект.ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога");

	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("ИзменениеПараметровОС");
	СписокТаблиц.Добавить("ИзменениеСпособаОтраженияИмущественныхНалогов_ЗемельныйНалог");
	СписокТаблиц.Добавить("ПорядокУплатыНалоговНаМестах");
	СписокТаблиц.Добавить("ПараметрыНачисленияЗемельногоНалога");
	СписокТаблиц.Добавить("РегламентнаяОперацияРасчетЗемельногоНалога");
	СписокТаблиц.Добавить("СпособыОтраженияРасходовПоИмущественнымНалогам");
	СписокТаблиц.Добавить("СтавкиНалогаНаИмущество");

	// Версия 2.4
	СписокТаблиц.Добавить("МестонахождениеОС");
	СписокТаблиц.Добавить("ПорядокУчетаОС");

	СписокДопПолей = "ОтражатьВРеглУчете" + ?(ЕстьОсновныеСредства, ",ОсновноеСредство", "");

	СписокПолейТаблиц = Новый Структура;
	ТаблицыВидНалога = Новый Массив;
	ТаблицыВидНалога.Добавить("СпособыОтраженияРасходовПоИмущественнымНалогам");
	СписокПолейТаблиц.Вставить("ВидНалога", ТаблицыВидНалога);

	ТекстОбъединенияДанных = ВнеоборотныеАктивы.СформироватьТекстОбъединенияДанныхДляФормированияЗадания(
									СписокТаблиц, ДанныеТаблиц, СписокДопПолей, СписокПолейТаблиц);

	Если ТекстОбъединенияДанных = "" Тогда
		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ДанныеТаблиц.МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);
		Возврат;
	КонецЕсли;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ВводОстатков22.Дата, МЕСЯЦ, 1)
	|
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ВводОстатков24.Дата, МЕСЯЦ, 1)
	|
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ВводПервоначальныхСведений.Дата, МЕСЯЦ, 1)
	|
	|				ИНАЧЕ ИзмененныеДанные.Период
	|			КОНЕЦ) КАК Период,
	|
	|	ИзмененныеДанные.Организация КАК Организация,
	|
	|	" + ?(ЕстьОсновныеСредства, "ИзмененныеДанные.ОсновноеСредство КАК ОсновноеСредство,", "") + "

	|	ИзмененныеДанные.Документ КАК Документ
	|
	|ПОМЕСТИТЬ ИзмененныеДанные
	|ИЗ
	|	(" + ТекстОбъединенияДанных + ") КАК ИзмененныеДанные
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ВводОстатков22
	|		ПО ВводОстатков22.Ссылка = ИзмененныеДанные.Документ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ВводОстатков24
	|		ПО ВводОстатков24.Ссылка = ИзмененныеДанные.Документ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога КАК ВводПервоначальныхСведений
	|		ПО ВводПервоначальныхСведений.Ссылка = ИзмененныеДанные.Документ
	|
	|ГДЕ
	|	ИзмененныеДанные.ОтражатьВРеглУчете
	|	И ИзмененныеДанные.ВидНалога В (
	|		ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог),
	|		НЕОПРЕДЕЛЕНО)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	" + ?(ЕстьОсновныеСредства, "ИзмененныеДанные.ОсновноеСредство,", "") + "
	|	ИзмененныеДанные.Документ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|	" + ?(ЕстьОсновныеСредства, ",ОсновноеСредство", "");

	Если ПроверитьЧтоОСЗарегистрировано Тогда

		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВПакете() +
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ПараметрыНачисленияЗемельногоНалогаПоследние.Организация КАК Организация
			|ПОМЕСТИТЬ ПараметрыНачисленияЗемельногоНалогаНаНачало
			|ИЗ
			|	(ВЫБРАТЬ
			|		ПараметрыНачисленияЗемельногоНалога.Организация КАК Организация,
			|		ПараметрыНачисленияЗемельногоНалога.ОсновноеСредство КАК ОсновноеСредство,
			|		МАКСИМУМ(ПараметрыНачисленияЗемельногоНалога.Период) КАК Период
			|	ИЗ
			|		ИзмененныеДанные КАК ИзмененныеДанные
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияЗемельногоНалога КАК ПараметрыНачисленияЗемельногоНалога
			|			ПО (ПараметрыНачисленияЗемельногоНалога.Организация = ИзмененныеДанные.Организация)
			|				И (ПараметрыНачисленияЗемельногоНалога.Период < НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, КВАРТАЛ))
			|				И (ПараметрыНачисленияЗемельногоНалога.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
			|				" + ?(ЕстьОсновныеСредства, "И ПараметрыНачисленияЗемельногоНалога.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство", "") + "
			|
			|	СГРУППИРОВАТЬ ПО
			|		ПараметрыНачисленияЗемельногоНалога.Организация,
			|		ПараметрыНачисленияЗемельногоНалога.ОсновноеСредство
			|	) КАК ПараметрыНачисленияЗемельногоНалогаПоследние
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияЗемельногоНалога КАК ПараметрыНачисленияЗемельногоНалога
			|		ПО (ПараметрыНачисленияЗемельногоНалога.Организация = ПараметрыНачисленияЗемельногоНалогаПоследние.Организация)
			|			И (ПараметрыНачисленияЗемельногоНалога.ОсновноеСредство = ПараметрыНачисленияЗемельногоНалогаПоследние.ОсновноеСредство)
			|			И (ПараметрыНачисленияЗемельногоНалога.Период = ПараметрыНачисленияЗемельногоНалогаПоследние.Период)
			|			И (ПараметрыНачисленияЗемельногоНалога.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
			|ГДЕ
			|	ПараметрыНачисленияЗемельногоНалога.ВключатьВНалоговуюБазу
			|
			|СГРУППИРОВАТЬ ПО
			|	ПараметрыНачисленияЗемельногоНалогаПоследние.Организация
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПараметрыНачисленияЗемельногоНалога.Организация,
			|	МИНИМУМ(ПараметрыНачисленияЗемельногоНалога.Период) КАК Период
			|ПОМЕСТИТЬ ПериодЗадания
			|ИЗ
			|	(ВЫБРАТЬ
			|		ИзмененныеДанные.Организация КАК Организация,
			|		МИНИМУМ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ)) КАК Период
			|	ИЗ
			|		ИзмененныеДанные КАК ИзмененныеДанные
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПараметрыНачисленияЗемельногоНалогаНаНачало КАК ПараметрыНачисленияЗемельногоНалогаНаНачало
			|			ПО (ПараметрыНачисленияЗемельногоНалогаНаНачало.Организация = ИзмененныеДанные.Организация)
			|
			|	СГРУППИРОВАТЬ ПО
			|		ИзмененныеДанные.Организация
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		ИзмененныеДанные.Организация,
			|		МИНИМУМ(НАЧАЛОПЕРИОДА(ПараметрыНачисленияЗемельногоНалога.Период, МЕСЯЦ))
			|	ИЗ
			|		ИзмененныеДанные КАК ИзмененныеДанные
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыНачисленияЗемельногоНалога КАК ПараметрыНачисленияЗемельногоНалога
			|			ПО (ПараметрыНачисленияЗемельногоНалога.Организация = ИзмененныеДанные.Организация)
			|				И (ПараметрыНачисленияЗемельногоНалога.Период >= НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, КВАРТАЛ))
			|				И (ПараметрыНачисленияЗемельногоНалога.ВключатьВНалоговуюБазу)
			|				" + ?(ЕстьОсновныеСредства, "И ПараметрыНачисленияЗемельногоНалога.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство", "") + "
			|
			|	СГРУППИРОВАТЬ ПО
			|		ИзмененныеДанные.Организация) КАК ПараметрыНачисленияЗемельногоНалога
			|
			|СГРУППИРОВАТЬ ПО
			|	ПараметрыНачисленияЗемельногоНалога.Организация
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИзмененныеДанные.Организация,
			|	ИзмененныеДанные.Документ,
			|	&Операция КАК Операция,
			|	МИНИМУМ(НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ПериодЗадания.Период, КВАРТАЛ), МЕСЯЦ)) КАК Месяц
			|ИЗ
			|	ИзмененныеДанные КАК ИзмененныеДанные
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодЗадания КАК ПериодЗадания
			|		ПО (ПериодЗадания.Организация = ИзмененныеДанные.Организация)
			|
			|СГРУППИРОВАТЬ ПО
			|	ИзмененныеДанные.Организация,
			|	ИзмененныеДанные.Документ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ПериодЗадания
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ИзмененныеДанные";
	Иначе

		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВПакете() +
			"ВЫБРАТЬ
			|	ИзмененныеДанные.Организация,
			|	ИзмененныеДанные.Документ,
			|	&Операция КАК Операция,
			|	МИНИМУМ(НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ИзмененныеДанные.Период, КВАРТАЛ), МЕСЯЦ)) КАК Месяц
			|ИЗ
			|	ИзмененныеДанные КАК ИзмененныеДанные
			|
			|СГРУППИРОВАТЬ ПО
			|	ИзмененныеДанные.Организация,
			|	ИзмененныеДанные.Документ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ИзмененныеДанные";

	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаНачалаВеденияРеглУчета", Константы.ДатаНачалаВеденияРеглУчета.Получить());
	Запрос.УстановитьПараметр("Операция", Перечисления.ОперацииЗакрытияМесяца.РасчетЗемельногоНалога);

	УстановитьПривилегированныйРежим(Истина);

	РезультатЗапроса = Запрос.Выполнить();

	РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса.Выбрать());

	УстановитьПривилегированныйРежим(Ложь);

	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ДанныеТаблиц.МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);

КонецПроцедуры

Процедура СформироватьТаблицыИзмененийДляФормированияЗаданийКРасчетуТранспортногоНалога(ДанныеТаблиц)

	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПлатежейВПлатон") Тогда
		Возврат;
	КонецЕсли;

	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("РасчетыСПоставщикамиИзменения") <> Неопределено Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(Изменения.Месяц, МЕСЯЦ)                  КАК Период,
		|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
		|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
		|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
		|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
		|	Изменения.Документ                                     КАК Документ
		|ПОМЕСТИТЬ РасчетыСПоставщиками_ЗаданияКРасчетуТранспортногоНалогаИзменение
		|ИЗ
		|	РасчетыСПоставщикамиИзменения КАК Изменения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
		|		ПО (РасходыНаПлатон.Ссылка = Изменения.ОбъектРасчетов)
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(Изменения.ОбъектРасчетов) = ТИП(Документ.ОтчетОператораСистемыПлатон)
		|	И РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(Изменения.Месяц, МЕСЯЦ)                  КАК Период,
		|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
		|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
		|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
		|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
		|	Изменения.Документ                                     КАК Документ
		|ИЗ
		|	РасчетыСПоставщикамиИзменения КАК Изменения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
		|		ПО (РасходыНаПлатон.Ссылка = Изменения.Документ)
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(Изменения.Документ) = ТИП(Документ.ОтчетОператораСистемыПлатон)
		|	И РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон";

		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ДатаПрекращенияДействияЛьготПлатон", ВнеоборотныеАктивыЛокализация.ДатаПрекращенияДействияЛьготПлатон());
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		ДанныеТаблиц.Вставить("РасчетыСПоставщиками_ЗаданияКРасчетуТранспортногоНалогаИзменение", Выборка.Количество > 0);

	КонецЕсли;

	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("РасчетыСПоставщикамиПоДокументамИзменения") <> Неопределено Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Изменения.Период                                       КАК Период,
		|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
		|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
		|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
		|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
		|	Изменения.Регистратор                                  КАК Документ
		|ПОМЕСТИТЬ РасчетыСПоставщикамиПоДокументам_ЗаданияКРасчетуТранспортногоНалогаИзменение
		|ИЗ
		|	РасчетыСПоставщикамиПоДокументамИзменения КАК Изменения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
		|		ПО (РасходыНаПлатон.Ссылка = Изменения.РасчетныйДокумент)
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(Изменения.РасчетныйДокумент) = ТИП(Документ.ОтчетОператораСистемыПлатон)
		|	И РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Изменения.Период                                       КАК Период,
		|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
		|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
		|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
		|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
		|	Изменения.Регистратор                                  КАК Документ
		|ИЗ
		|	РасчетыСПоставщикамиПоДокументамИзменения КАК Изменения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
		|		ПО (РасходыНаПлатон.Ссылка = Изменения.Регистратор)
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(Изменения.Регистратор) = ТИП(Документ.ОтчетОператораСистемыПлатон)
		|	И РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон";

		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ДатаПрекращенияДействияЛьготПлатон", ВнеоборотныеАктивыЛокализация.ДатаПрекращенияДействияЛьготПлатон());
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		ДанныеТаблиц.Вставить("РасчетыСПоставщикамиПоДокументам_ЗаданияКРасчетуТранспортногоНалогаИзменение", Выборка.Количество > 0);

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ПрочиеЭкспортныеПроцедуры

Процедура УточнитьПараметрыРегистрацииОрганизацииВФНС(Параметры, Организация, Период) Экспорт

	ОсновнойНалоговыйОрган = Справочники.РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане(Организация, Период);

	Параметры.Вставить("ОсновнойНалоговыйОрган", ОсновнойНалоговыйОрган);
	Параметры.Вставить("КодПоОКТМО",ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОсновнойНалоговыйОрган, "КодПоОКТМО", Истина));

КонецПроцедуры

Процедура УточнитьПараметрыОсвобожденияОтУплатыНалогов(Параметры, Организация, Период) Экспорт

	Если Не НалоговыйУчет.ДеятельностьОтнесенаКПострадавшимОтКоронавируса(Организация) Тогда
		Возврат;
	КонецЕсли;

	Если Параметры = Неопределено Тогда
		Параметры = Новый Структура;
	КонецЕсли;

	ПериодОсвобожденияОтНалогов = НалоговыйУчет.ПериодОсвобожденияОтНалоговПострадавшимОтКоронавируса();

	Параметры.Вставить("ПрименяетсяОсвобождениеОтУплатыНалогаВНалогомПериоде",
		Год(ПериодОсвобожденияОтНалогов.Начало) = Год(Период));

	Параметры.Вставить("ПрименяетсяОсвобождениеОтУплатыНалогаВТекущемПериоде",
	    ПериодОсвобожденияОтНалогов.Начало <= Период
		И Период <= ПериодОсвобожденияОтНалогов.Конец);

	Параметры.Вставить("ГодовойРасчет", Месяц(Период) = 12);

КонецПроцедуры

Функция ПустаяСправкаРасчет(ИмяРегистраСведений) Экспорт

	СправкаРасчет = РегистрыСведений[ИмяРегистраСведений].СоздатьНаборЗаписей().ВыгрузитьКолонки();

	СправкаРасчет.Колонки.Удалить("Регистратор");
	СправкаРасчет.Колонки.Удалить("Активность");
	СправкаРасчет.Колонки.Удалить("НомерСтроки");

	Если ИмяРегистраСведений = "РасчетТранспортногоНалога" Тогда
		СправкаРасчет.Колонки.Добавить("УплачиваютсяАвансы", Новый ОписаниеТипов("Булево"));
	КонецЕсли;

	Возврат СправкаРасчет;

КонецФункции

Процедура ДополнитьПараметрыРасчетаНалогаНаИмущество(ПараметрыРасчета, Организация, ПериодРасчета, ДополнительныеПараметрыРасчета) Экспорт

	Если ДополнительныеПараметрыРасчета <> Неопределено
	 	И ДополнительныеПараметрыРасчета.Свойство("МенеджерВременныхТаблиц") Тогда

		ПараметрыРасчета.МенеджерВременныхТаблиц = ДополнительныеПараметрыРасчета.МенеджерВременныхТаблиц;
		ПараметрыРасчета.Вставить("РасчетПоФактическойСтоимости", Истина);
	Иначе
		ПараметрыРасчета.Вставить("РасчетПоФактическойСтоимости", Ложь);
	КонецЕсли;

КонецПроцедуры

Процедура УстановитьПараметрыЗапросаПриРасчетеНалогаЗаПериод(Период, Запрос) Экспорт

	Запрос.УстановитьПараметр("ИспользуетсяУправлениеВНА_2_4", ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(ДобавитьМесяц(Период, -1)));
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Период));
	Запрос.УстановитьПараметр("НачалоПредыдущегоМесяца", ДобавитьМесяц(Период, -1));
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяца", Период-1);

КонецПроцедуры

// Процедура формирует временную таблицу в менеджере временных таблиц,
// содержащую сведения о регистрации в налоговых органах, в которые
// уплачивается авансовые платежи организации по указанному виду налога.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер, в котором создать таблицы.
//	Организация - СправочникСсылка.Организации - организация, для которой определяются авансовые платежи.
//	Период - Дата - Дата, по состоянию на которую определяются сведения.
//	Налог - Строка - Может содержать одно из значений: "ЗемельныйНалог", "ТранспортныйНалог", "НалогНаИмущество".
//
Процедура СоздатьНалоговыеОрганыСУстановленнойУплатойАвансов(МенеджерВременныхТаблиц, Организация, Период, Налог) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество;

	Если Налог = "ЗемельныйНалог" Тогда
		ВидНалога = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог;
	ИначеЕсли Налог = "ТранспортныйНалог" Тогда
		ВидНалога = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог;
	КонецЕсли;

	ГоловнаяОрганизация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ГоловнаяОрганизация");

	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Период",      Период);
	Запрос.УстановитьПараметр("Налог",       ВидНалога);

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегистрацииВНалоговомОргане.Ссылка КАК НалоговыйОрган
	|ПОМЕСТИТЬ ВТ_ВсеРегистрацииВНалоговомОргане
	|ИЗ
	|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|ГДЕ
	|	РегистрацииВНалоговомОргане.Владелец = &ГоловнаяОрганизация
	|	И НЕ РегистрацииВНалоговомОргане.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокУплатыНалоговНаМестахСрезПоследних.РегистрацияВНалоговомОргане КАК НалоговыйОрган
	|ПОМЕСТИТЬ ВТ_ПорядокУплатыНалоговНаМестах
	|ИЗ
	|	РегистрСведений.ПорядокУплатыНалоговНаМестах.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И Налог = &Налог
	|				И УплачиваютсяАвансы) КАК ПорядокУплатыНалоговНаМестахСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА ВТ_ПорядокУплатыНалоговНаМестах.НалоговыйОрган = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|			ТОГДА ВТ_ВсеРегистрацииВНалоговомОргане.НалоговыйОрган
	|		ИНАЧЕ ВТ_ПорядокУплатыНалоговНаМестах.НалоговыйОрган
	|	КОНЕЦ КАК НалоговыйОрган
	|ПОМЕСТИТЬ ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов
	|ИЗ
	|	ВТ_ПорядокУплатыНалоговНаМестах КАК ВТ_ПорядокУплатыНалоговНаМестах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВсеРегистрацииВНалоговомОргане КАК ВТ_ВсеРегистрацииВНалоговомОргане
	|		ПО (ВТ_ПорядокУплатыНалоговНаМестах.НалоговыйОрган = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НалоговыйОрган";

	Запрос.Выполнить();

КонецПроцедуры

Функция ПодготовитьТаблицыРасчетНалога(ТаблицаРеквизиты, Отказ, ДополнительныеПараметры = Неопределено) Экспорт

	СтруктураТаблиц = Новый Структура();
	СтруктураТаблиц.Вставить("ТаблицаСправкиРасчета");
	СтруктураТаблиц.Вставить("ТаблицаСправкиРасчетаПоКадастровойСтоимости");
	СтруктураТаблиц.Вставить("ТаблицаСправкиРасчетаПоСреднегодовойСтоимости");


	СтруктураТаблиц.Вставить("ТаблицаРасходыПоНалогу");
	СтруктураТаблиц.Вставить("ТаблицаРасходыНаПлатон");

	Параметры = ПодготовитьПараметрыРасчетНалога(ТаблицаРеквизиты);
	Если Параметры.Реквизиты.Количество() = 0 Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];
	ТаблицыРасчетНалога = ТаблицыРасчетНалога(Реквизиты, ДополнительныеПараметры);

	СправкаРасчетДляРасходов = РасчетИмущественныхНалогов.ПустаяСправкаРасчет(Реквизиты.ИмяРегистраРасчетНалогов);

	Если Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество
			И Реквизиты.Период >= РасчетИмущественныхНалогов.НачалоПримененияНовогоРасчетаНалогаНаИмущество() Тогда
		// Налог на имущество с 2023г.
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицыРасчетНалога.СправкаРасчетПоКадастровойСтоимости, СправкаРасчетДляРасходов);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицыРасчетНалога.СправкаРасчетПоСреднегодовойСтоимости, СправкаРасчетДляРасходов);

		СтруктураТаблиц.Вставить("ТаблицаСправкиРасчетаПоКадастровойСтоимости", ТаблицыРасчетНалога.СправкаРасчетПоКадастровойСтоимости);
		СтруктураТаблиц.Вставить("ТаблицаСправкиРасчетаПоСреднегодовойСтоимости", ТаблицыРасчетНалога.СправкаРасчетПоСреднегодовойСтоимости);
	Иначе
		// Налог на имущество до 2023г и прочие налоги.
		СправкаРасчетДляРасходов = ТаблицыРасчетНалога.СправкаРасчет;
		СтруктураТаблиц.Вставить("ТаблицаСправкиРасчета", ТаблицыРасчетНалога.СправкаРасчет);
	КонецЕсли;

	Результат = РасходыПоНалогу(
					Реквизиты,
					СправкаРасчетДляРасходов,
					ТаблицыРасчетНалога.РасходыНаПлатон,
					ДополнительныеПараметры,
					Отказ);

	ПроверитьСправкуРасчет(СправкаРасчетДляРасходов, ДополнительныеПараметры.СписокОшибок);


	СтруктураТаблиц.Вставить("ТаблицаРасходыПоНалогу", Результат.ПрочиеРасходы);
	СтруктураТаблиц.Вставить("ТаблицаПрочиеАктивыПассивы", Результат.ПрочиеАктивыПассивы);
	СтруктураТаблиц.Вставить("ТаблицаДвиженияПоПрочимАктивамПассивам", Результат.ДвиженияПоПрочимАктивамПассивам);
	СтруктураТаблиц.Вставить("ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы", Результат.ДвиженияДоходыРасходыПрочиеАктивыПассивы);
	СтруктураТаблиц.Вставить("ТаблицаРасходыНаПлатон", ТаблицыРасчетНалога.РасходыНаПлатон);

	Возврат СтруктураТаблиц;
КонецФункции

Процедура СформироватьДвиженияРасчетНалога(ТаблицыНачислениеНалога, ТаблицаРеквизитов, Движения, Отказ, ДополнительныеПараметры) Экспорт

	Параметры = ПодготовитьПараметрыДвиженийРасчетНалога(ТаблицаРеквизитов);
	Если Параметры.Реквизиты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	РасчетИмущественныхНалоговПереопределяемый.ДополнитьПараметрыДвиженийСправкаРасчет(Параметры,
																						Реквизиты,
																						ТаблицыНачислениеНалога.ТаблицаСправкиРасчета);

	// Данные для справки-расчета для налога на имущество до 2023г. и прочих имущественных налогов.
	Если ТаблицыНачислениеНалога.Свойство("ТаблицаСправкиРасчета")
			И ТаблицыНачислениеНалога.ТаблицаСправкиРасчета <> Неопределено Тогда

		ЗакрытиеМесяца.ЗаписьВоВспомогательныеРегистрыСведений(
			Движения,
			ТаблицыНачислениеНалога.ТаблицаСправкиРасчета,
			Параметры.Реквизиты,
			Реквизиты.ИмяРегистраРасчетНалогов);

	КонецЕсли;

	// Данные для справки-расчета по налогу на имущество с 2023г.
	Если ТаблицыНачислениеНалога.Свойство("ТаблицаСправкиРасчетаПоКадастровойСтоимости")
			И ТаблицыНачислениеНалога.ТаблицаСправкиРасчетаПоКадастровойСтоимости <> Неопределено Тогда

		ЗакрытиеМесяца.ЗаписьВоВспомогательныеРегистрыСведений(
			Движения,
			ТаблицыНачислениеНалога.ТаблицаСправкиРасчетаПоКадастровойСтоимости,
			Параметры.Реквизиты,
			Реквизиты.ИмяРегистраРасчетНалогов + "ПоКадастровойСтоимости");

	КонецЕсли;

	Если ТаблицыНачислениеНалога.Свойство("ТаблицаСправкиРасчетаПоСреднегодовойСтоимости")
			И ТаблицыНачислениеНалога.ТаблицаСправкиРасчетаПоСреднегодовойСтоимости <> Неопределено  Тогда

		ЗакрытиеМесяца.ЗаписьВоВспомогательныеРегистрыСведений(
			Движения,
			ТаблицыНачислениеНалога.ТаблицаСправкиРасчетаПоСреднегодовойСтоимости,
			Параметры.Реквизиты,
			Реквизиты.ИмяРегистраРасчетНалогов + "ПоСреднегодовойСтоимости");

	КонецЕсли;

	Если ТаблицыНачислениеНалога.ТаблицаРасходыПоНалогу.Количество() <> 0 Тогда
		Движения.ПрочиеРасходы.Записывать = Истина;
		Движения.ПрочиеРасходы.Загрузить(ТаблицыНачислениеНалога.ТаблицаРасходыПоНалогу);
	КонецЕсли;

	Если ТаблицыНачислениеНалога.ТаблицаПрочиеАктивыПассивы.Количество() <> 0 Тогда
		Движения.ПрочиеАктивыПассивы.Записывать = Истина;
		Движения.ПрочиеАктивыПассивы.Загрузить(ТаблицыНачислениеНалога.ТаблицаПрочиеАктивыПассивы);
	КонецЕсли;

	Если ТаблицыНачислениеНалога.ТаблицаДвиженияПоПрочимАктивамПассивам.Количество() <> 0 Тогда
		Движения.ДвиженияПоПрочимАктивамПассивам.Записывать = Истина;
		Движения.ДвиженияПоПрочимАктивамПассивам.Загрузить(ТаблицыНачислениеНалога.ТаблицаДвиженияПоПрочимАктивамПассивам);
	КонецЕсли;

	Если ТаблицыНачислениеНалога.ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы.Количество() <> 0 Тогда
		Движения.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Записывать = Истина;
		Движения.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Загрузить(ТаблицыНачислениеНалога.ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы);
	КонецЕсли;

КонецПроцедуры

Процедура ДополнитьПараметрыДвиженийСправкаРасчет(Реквизиты, СписокОбязательныхКолонок) Экспорт

	Если Реквизиты.Свойство("ВидНалога") Тогда
		Если Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
			СписокОбязательныхКолонок = СписокОбязательныхКолонок
			+ ",СуммаПлатыОператоруСистемыПлатон";
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Функция ОрганизацииУплачивающиеАвансы(Организация, Период, Налог, ОднаОрганизация = Истина) Экспорт
	Возврат Неопределено;
КонецФункции

#КонецОбласти

#Область Прочее

Функция ПодготовитьПараметрыДвиженийРасчетНалога(ТаблицаРеквизитов)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"						// <Дата>
	+ "Организация,"				// <СправочникСсылка.Организации>
	+ "Регистратор,"				// <ДокументСсылка.*>
	+ "ВидНалога,"					// <ПеречислениеСсылка.ВидыИмущественныхНалогов>
	+ "ИмяРегистраРасчетНалогов"	// <Строка, 0>
	;

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизитов, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ПодготовитьПараметрыРасчетНалога(ТаблицаРеквизиты) Экспорт

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"						// <Дата>
	+ "Организация,"				// <СправочникСсылка.Организации>
	+ "Регистратор,"				// <ДокументСсылка.*>
	+ "ВидНалога,"					// <Перечисление.ВидыИмущественныхНалогов>
	+ "Содержание,"					// <Строка, 150>
	+ "ИмяРегистраРасчетНалогов"	// <Строка, 0>
	;

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ТаблицыРасчетНалога(Реквизиты, ДополнительныеПараметры)

	СправкаРасчет = РасчетИмущественныхНалогов.ПустаяСправкаРасчет(Реквизиты.ИмяРегистраРасчетНалогов);
	РасходыНаПлатон = ПустаяТаблицаРасходыНаПлатон();

	Если Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда

		РасчетПоНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоНалогуНаИмущество(
							Реквизиты.Организация, Реквизиты.Период, ДополнительныеПараметры);

	ИначеЕсли Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда

		РасчетыПоНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоТранспортномуНалогу(
							Реквизиты.Организация, Реквизиты.Период, ДополнительныеПараметры);

		РасчетПоНалогу = РасчетыПоНалогу.Налог;

		Если РасчетыПоНалогу.Платон <> Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РасчетыПоНалогу.Платон, РасходыНаПлатон);
		КонецЕсли;

		ПроверитьРасчетТранспортногоНалога(РасчетыПоНалогу, ДополнительныеПараметры.СписокОшибок);

	ИначеЕсли Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда

		РасчетПоНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоЗемельномуНалогу(
							Реквизиты.Организация, Реквизиты.Период, ДополнительныеПараметры);

	КонецЕсли;

	ТаблицыРасчетНалога = Новый Структура;

	Если Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда
		// РасчетПоНалогу - структура из 2х таблиц с 2023.
		Если ТипЗнч(РасчетПоНалогу) = Тип("Структура") Тогда
			Если РасчетПоНалогу.Свойство("РасчетНалогаНаИмущество") Тогда
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РасчетПоНалогу.РасчетНалогаНаИмущество, СправкаРасчет);
				ТаблицыРасчетНалога.Вставить("СправкаРасчет", СправкаРасчет);
			Иначе
				ТаблицыРасчетНалога.Вставить("СправкаРасчетПоКадастровойСтоимости",   РасчетПоНалогу.РасчетНалогаНаИмуществоПоКадастровойСтоимости);
				ТаблицыРасчетНалога.Вставить("СправкаРасчетПоСреднегодовойСтоимости", РасчетПоНалогу.РасчетНалогаНаИмуществоПоСреднегодовойСтоимости);
			КонецЕсли;
		КонецЕсли;

	Иначе
		// РасчетПоНалогу - структура из 1 таблицы.
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РасчетПоНалогу, СправкаРасчет);
		ТаблицыРасчетНалога.Вставить("СправкаРасчет", СправкаРасчет);
	КонецЕсли;



	ТаблицыРасчетНалога.Вставить("РасходыНаПлатон", РасходыНаПлатон);

	Возврат ТаблицыРасчетНалога;

КонецФункции

Процедура ПроверитьСправкуРасчет(СправкаРасчет, СписокОшибок)

	ДанныеСтроки = СправкаРасчет.Найти("", "КодПоОКТМО");
	Если ДанныеСтроки <> Неопределено Тогда

		ТекстСообщения = НСтр("ru = 'Не указан код по ОКТМО при регистрации в налоговом органе ""%1""'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, Строка(ДанныеСтроки.ИФНС));
		
		Если СправкаРасчет.Колонки.Найти("ПериодРасчета") <> Неопределено Тогда
			ТекстРекомендации = НСтр("ru = 'Проверьте наличие регистрации в ИФНС по организации ""%1"" на дату %2.'");
			ТекстРекомендации = СтрШаблон(ТекстРекомендации,
											ДанныеСтроки.Организация,
											Формат(ДанныеСтроки.ПериодРасчета, "ДЛФ=D"));
											
			ИтоговоеСообщение = Новый Массив;
			ИтоговоеСообщение.Добавить(ТекстСообщения);
			ИтоговоеСообщение.Добавить(ТекстРекомендации);
			
			ТекстСообщения = СтрСоединить(ИтоговоеСообщение, Символы.ПС);
		КонецЕсли;
		
		ВнеоборотныеАктивыСлужебный.ДобавитьОписаниеОшибки(
			ТекстСообщения,
			ДанныеСтроки.ИФНС,
			ДанныеСтроки.Организация,
			СписокОшибок);
			
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьРасчетТранспортногоНалога(РасчетыПоНалогу, СписокОшибок)

	СтрокиБезСтавки = РасчетыПоНалогу.Налог.НайтиСтроки(Новый Структура("ОтсутствуетСтавка", Истина));
	Для каждого ДанныеСтроки Из СтрокиБезСтавки Цикл

		ТекстСообщения = НСтр("ru = 'Не удалось определить ставку налога для транспортного средства ""%1""'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, Строка(ДанныеСтроки.ОсновноеСредство));

		ВнеоборотныеАктивыСлужебный.ДобавитьОписаниеОшибки(
			ТекстСообщения,
			ДанныеСтроки.ОсновноеСредство,
			ДанныеСтроки.Организация,
			СписокОшибок);

	КонецЦикла;

КонецПроцедуры

Функция РасходыПоНалогу(Реквизиты, СправкаРасчет, РасходыНаПлатон, ДополнительныеПараметры, Отказ)

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.ИФНС КАК РегистрацияВНалоговомОргане,
	|
	|	&СуммаНалогаКУплате КАК СуммаРегл,
	|
	|	&СуммаНалогаКУплате * &КоэффициентПересчетаВУпр КАК СуммаБезНДС,
	|
	|	&СуммаНалогаКУплате * &КоэффициентПересчетаВУпр КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА (&СуммаНалогаКУплате) * &КоэффициентПересчетаВУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр
	|
	|ПОМЕСТИТЬ СправкаРасчет
	|ИЗ
	|	&СправкаРасчет КАК СправкаРасчет
	|ГДЕ
	|	&СуммаНалогаКУплате <> 0
	|	И &ФормироватьПроводкиПоНалогу
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ
	|	РасходыНаПлатон.ОсновноеСредство КАК ОсновноеСредство,
	|	РасходыНаПлатон.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	РасходыНаПлатон.Подразделение КАК Подразделение,
	|	РасходыНаПлатон.СтатьяРасходов КАК СтатьяРасходов,
	|	РасходыНаПлатон.АналитикаРасходов КАК АналитикаРасходов,
	|
	|	РасходыНаПлатон.СуммаНУДт КАК СуммаНУ,
	|	РасходыНаПлатон.СуммаНУКт - РасходыНаПлатон.СуммаНУДт КАК ПостояннаяРазница,
	|	-РасходыНаПлатон.СуммаНУКт КАК ВременнаяРазница
	|
	|ПОМЕСТИТЬ РасходыНаПлатон
	|ИЗ
	|	&РасходыНаПлатон КАК РасходыНаПлатон
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ ПорядокУчетаОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|		&Период,
	|		ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|			И ОсновноеСредство В (
	|				ВЫБРАТЬ
	|					СправкаРасчет.ОсновноеСредство
	|				ИЗ
	|					СправкаРасчет КАК СправкаРасчет)) КАК ПорядокУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ
	|	СпособыОтраженияРасходов.ОсновноеСредство КАК ОсновноеСредство,
	|	СпособыОтраженияРасходов.СтатьяРасходов КАК СтатьяРасходов,
	|	СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом КАК СпособОтраженияРасходовЗаданДокументом,
	|	СпособыОтраженияРасходов.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	СпособыОтраженияРасходов.АналитикаРасходов КАК АналитикаРасходов
	|ПОМЕСТИТЬ СпособыОтраженияРасходов
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоИмущественнымНалогам.СрезПоследних(
	|		&Период,
	|		ОсновноеСредство В (
	|			ВЫБРАТЬ
	|				СправкаРасчет.ОсновноеСредство
	|			ИЗ
	|				СправкаРасчет КАК СправкаРасчет)
	|		И Организация = &Организация
	|		И ВидНалога = &ВидНалога) КАК СпособыОтраженияРасходов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	СпособОтраженияРасходов
	|;
	|
	|ВЫБРАТЬ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение КАК Подразделение
	|ПОМЕСТИТЬ МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|		&Период,
	|		ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|			И Организация = &Организация
	|			И ОсновноеСредство В (
	|				ВЫБРАТЬ
	|					СправкаРасчет.ОсновноеСредство
	|				ИЗ
	|					СправкаРасчет КАК СправкаРасчет)) КАК МестонахождениеОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.СуммаРегл КАК СуммаРегл,
	|	СправкаРасчет.Сумма КАК Сумма,
	|	СправкаРасчет.СуммаБезНДС КАК СуммаБезНДС,
	|	СправкаРасчет.СуммаУпр КАК СуммаУпр,
	|	ВЫБОР КОГДА НЕ ЕСТЬNULL(СпособыОтраженияРасходов.СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) ТОГДА
	|		СправкаРасчет.СуммаРегл
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	МестонахождениеОС.Подразделение КАК Подразделение,
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СтатьяРасходов, НЕОПРЕДЕЛЕНО) КАК СтатьяРасходов,
	|	ЕСТЬNULL(СпособыОтраженияРасходов.АналитикаРасходов, НЕОПРЕДЕЛЕНО) КАК АналитикаРасходов,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО СправкаРасчет.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|ГДЕ
	|	НЕ ЕСТЬNULL(СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	РасходыНаПлатон.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	РасходыНаПлатон.ОсновноеСредство КАК ОсновноеСредство,
	|	НЕОПРЕДЕЛЕНО КАК РегистрацияВНалоговомОргане,
	|	0 КАК СуммаРегл,
	|	0 КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаУпр,
	|	ВЫБОР КОГДА НЕ ВЫРАЗИТЬ(РасходыНаПлатон.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ПринятиеКНалоговомуУчету ТОГДА
	|		РасходыНаПлатон.ПостояннаяРазница + РасходыНаПлатон.СуммаНУ
	|	ИНАЧЕ
	|		РасходыНаПлатон.ПостояннаяРазница
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	РасходыНаПлатон.ВременнаяРазница КАК ВременнаяРазница,
	|	РасходыНаПлатон.Подразделение КАК Подразделение,
	|	РасходыНаПлатон.СтатьяРасходов КАК СтатьяРасходов,
	|	РасходыНаПлатон.АналитикаРасходов КАК АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРБП),
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РаспределениеРБП)
	|ИЗ
	|	РасходыНаПлатон КАК РасходыНаПлатон
	|;
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	МестонахождениеОС.Подразделение КАК Местонахождение,
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.Сумма КАК Сумма,
	|	СправкаРасчет.СуммаРегл КАК СуммаРегл,
	|	СправкаРасчет.СуммаБезНДС КАК СуммаБезНДС,
	|	СправкаРасчет.СуммаУпр КАК СуммаУпр,
	|
	|	ДокументСпособ.ОтражениеАмортизационныхРасходов.(
	|		Ссылка КАК Ссылка,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходовНалог КАК СтатьяРасходов,
	|		АналитикаРасходовНалог КАК АналитикаРасходов,
	|		ЕСТЬNULL(СтатьяРасходовНалог.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринятиеКНалоговомуУчету,
	|		Коэффициент КАК Коэффициент
	|	) КАК ТаблицаРаспределения,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО СправкаРасчет.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС КАК ДокументСпособ
	|		ПО СпособыОтраженияРасходов.СпособОтраженияРасходов = ДокументСпособ.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|ГДЕ
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ)
	|	И НЕ ДокументСпособ.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	МестонахождениеОС.Подразделение КАК Местонахождение,
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.Сумма КАК Сумма,
	|	СправкаРасчет.СуммаРегл КАК СуммаРегл,
	|	СправкаРасчет.СуммаБезНДС КАК СуммаБезНДС,
	|	СправкаРасчет.СуммаУпр КАК СуммаУпр,
	|
	|	ДокументСпособ.ОтражениеРасходов.(
	|		Ссылка КАК Ссылка,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов КАК СтатьяРасходов,
	|		АналитикаРасходов КАК АналитикаРасходов,
	|		ЕСТЬNULL(СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринятиеКНалоговомуУчету,
	|		Коэффициент КАК Коэффициент
	|	) КАК ТаблицаРаспределения,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО СправкаРасчет.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПараметрыНачисленияЗемельногоНалога КАК ДокументСпособ
	|		ПО СпособыОтраженияРасходов.СпособОтраженияРасходов = ДокументСпособ.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|ГДЕ
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ)
	|	И НЕ ДокументСпособ.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	МестонахождениеОС.Подразделение КАК Местонахождение,
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.Сумма КАК Сумма,
	|	СправкаРасчет.СуммаРегл КАК СуммаРегл,
	|	СправкаРасчет.СуммаБезНДС КАК СуммаБезНДС,
	|	СправкаРасчет.СуммаУпр КАК СуммаУпр,
	|
	|	ДокументСпособ.ОтражениеРасходов.(
	|		Ссылка КАК Ссылка,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов КАК СтатьяРасходов,
	|		АналитикаРасходов КАК АналитикаРасходов,
	|		ЕСТЬNULL(СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринятиеКНалоговомуУчету,
	|		Коэффициент КАК Коэффициент
	|	) КАК ТаблицаРаспределения,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО СправкаРасчет.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПараметрыНачисленияТранспортногоНалога КАК ДокументСпособ
	|		ПО СпособыОтраженияРасходов.СпособОтраженияРасходов = ДокументСпособ.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|ГДЕ
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ)
	|	И НЕ ДокументСпособ.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	МестонахождениеОС.Подразделение КАК Местонахождение,
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.Сумма КАК Сумма,
	|	СправкаРасчет.СуммаРегл КАК СуммаРегл,
	|	СправкаРасчет.СуммаБезНДС КАК СуммаБезНДС,
	|	СправкаРасчет.СуммаУпр КАК СуммаУпр,
	|
	|	ДокументСпособ.ОтражениеРасходов.(
	|		Ссылка КАК Ссылка,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов КАК СтатьяРасходов,
	|		АналитикаРасходов КАК АналитикаРасходов,
	|		ЕСТЬNULL(СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринятиеКНалоговомуУчету,
	|		Коэффициент КАК Коэффициент
	|	) КАК ТаблицаРаспределения,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО СправкаРасчет.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПараметрыНачисленияНалогаНаИмущество КАК ДокументСпособ
	|		ПО СпособыОтраженияРасходов.СпособОтраженияРасходов = ДокументСпособ.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|ГДЕ
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ)
	|	И НЕ ДокументСпособ.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	МестонахождениеОС.Подразделение КАК Местонахождение,
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.Сумма КАК Сумма,
	|	СправкаРасчет.СуммаРегл КАК СуммаРегл,
	|	СправкаРасчет.СуммаБезНДС КАК СуммаБезНДС,
	|	СправкаРасчет.СуммаУпр КАК СуммаУпр,
	|
	|	ДокументСпособ.ОтражениеРасходов.(
	|		Ссылка КАК Ссылка,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов КАК СтатьяРасходов,
	|		АналитикаРасходов КАК АналитикаРасходов,
	|		ЕСТЬNULL(СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринятиеКНалоговомуУчету,
	|		Коэффициент КАК Коэффициент
	|	) КАК ТаблицаРаспределения,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО СправкаРасчет.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеСпособаОтраженияИмущественныхНалогов КАК ДокументСпособ
	|		ПО СпособыОтраженияРасходов.СпособОтраженияРасходов = ДокументСпособ.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|ГДЕ
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ)
	|	И НЕ ДокументСпособ.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	МестонахождениеОС.Подразделение КАК Местонахождение,
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.Сумма КАК Сумма,
	|	СправкаРасчет.СуммаРегл КАК СуммаРегл,
	|	СправкаРасчет.СуммаБезНДС КАК СуммаБезНДС,
	|	СправкаРасчет.СуммаУпр КАК СуммаУпр,
	|
	|	ДокументСпособ.ОтражениеРасходов.(
	|		Ссылка КАК Ссылка,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов КАК СтатьяРасходов,
	|		АналитикаРасходов КАК АналитикаРасходов,
	|		ЕСТЬNULL(СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринятиеКНалоговомуУчету,
	|		Коэффициент КАК Коэффициент
	|	) КАК ТаблицаРаспределения,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО СправкаРасчет.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога КАК ДокументСпособ
	|		ПО СпособыОтраженияРасходов.СпособОтраженияРасходов = ДокументСпособ.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|ГДЕ
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ)
	|	И НЕ ДокументСпособ.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	МестонахождениеОС.Подразделение КАК Местонахождение,
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.Сумма КАК Сумма,
	|	СправкаРасчет.СуммаРегл КАК СуммаРегл,
	|	СправкаРасчет.СуммаБезНДС КАК СуммаБезНДС,
	|	СправкаРасчет.СуммаУпр КАК СуммаУпр,
	|
	|	ДокументСпособ.ОтражениеРасходов.(
	|		Ссылка КАК Ссылка,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов КАК СтатьяРасходов,
	|		АналитикаРасходов КАК АналитикаРасходов,
	|		ЕСТЬNULL(СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринятиеКНалоговомуУчету,
	|		Коэффициент КАК Коэффициент
	|	) КАК ТаблицаРаспределения,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО СправкаРасчет.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводПервоначальныхСведенийДляРасчетаНалогаНаИмущество КАК ДокументСпособ
	|		ПО СпособыОтраженияРасходов.СпособОтраженияРасходов = ДокументСпособ.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|ГДЕ
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ)
	|	И НЕ ДокументСпособ.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	МестонахождениеОС.Подразделение КАК Местонахождение,
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.Сумма КАК Сумма,
	|	СправкаРасчет.СуммаРегл КАК СуммаРегл,
	|	СправкаРасчет.СуммаБезНДС КАК СуммаБезНДС,
	|	СправкаРасчет.СуммаУпр КАК СуммаУпр,
	|
	|	ДокументСпособ.ОтражениеРасходов.(
	|		Ссылка КАК Ссылка,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов КАК СтатьяРасходов,
	|		АналитикаРасходов КАК АналитикаРасходов,
	|		ЕСТЬNULL(СтатьяРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) КАК ПринятиеКНалоговомуУчету,
	|		Коэффициент КАК Коэффициент
	|	) КАК ТаблицаРаспределения,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО СправкаРасчет.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводПервоначальныхСведенийДляРасчетаТранспортногоНалога КАК ДокументСпособ
	|		ПО СпособыОтраженияРасходов.СпособОтраженияРасходов = ДокументСпособ.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|ГДЕ
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ)
	|	И НЕ ДокументСпособ.Ссылка ЕСТЬ NULL
	|
	|";

	УчестьОсвобождениеОтУплатыНалога(ТекстЗапроса, ДополнительныеПараметры);

	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегл = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Реквизиты.Организация);

	КоэффициентПересчетаВУпр = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
												ВалютаРегл, ВалютаУпр, Реквизиты.Период);

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СправкаРасчет",   СправкаРасчет);
	Запрос.УстановитьПараметр("РасходыНаПлатон", РасходыНаПлатон);
	Запрос.УстановитьПараметр("Период",          Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",     Реквизиты.Организация);
	Запрос.УстановитьПараметр("ВидНалога",       Реквизиты.ВидНалога);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВУпр", КоэффициентПересчетаВУпр);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.НачислениеИмущественныхНалогов);
	Запрос.УстановитьПараметр("НастройкаХозяйственнойОперации", Справочники.НастройкиХозяйственныхОпераций.НачислениеИмущественныхНалогов);
	Запрос.УстановитьПараметр("ДатаПрекращенияДействияЛьготПлатон", ВнеоборотныеАктивыЛокализация.ДатаПрекращенияДействияЛьготПлатон());

	Запрос.УстановитьПараметр("УправленческийУчетОрганизаций",
		РасчетСебестоимостиПовтИсп.УправленческийУчетОрганизаций(НачалоМесяца(Реквизиты.Период)));

	ФормироватьПроводкиПоНалогу =
		ДополнительныеПараметры = Неопределено
		ИЛИ Не ДополнительныеПараметры.Свойство("ПрименяетсяОсвобождениеОтУплатыНалогаВТекущемПериоде")
		ИЛИ Не ДополнительныеПараметры.ПрименяетсяОсвобождениеОтУплатыНалогаВТекущемПериоде;

	Запрос.УстановитьПараметр("ФормироватьПроводкиПоНалогу", ФормироватьПроводкиПоНалогу);

	Результат = Запрос.ВыполнитьПакет();

	ВыборкаРасходыБезРаспределения = Результат[Результат.ВГраница()-1].Выбрать();
	ВыборкаРасходыСРаспределением = Результат[Результат.ВГраница()].Выбрать();

	ТаблицаРасходовПоНалогу = ТаблицаРасходовПоНалогу(
		Реквизиты.ВидНалога,
		ВыборкаРасходыБезРаспределения,
		ВыборкаРасходыСРаспределением,
		Отказ,
		ДополнительныеПараметры.СписокОшибок);

	Возврат ТаблицаРасходовПоНалогу;

КонецФункции

Функция ТаблицаРасходовПоНалогу(ВидНалога, ВыборкаРасходыБезРаспределения, ВыборкаРасходыСРаспределением, Отказ, СписокОшибок = Неопределено) Экспорт

	ПрочиеРасходы = РегистрыНакопления.ПрочиеРасходы.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ПрочиеАктивыПассивы = РегистрыНакопления.ПрочиеАктивыПассивы.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ДвиженияПоПрочимАктивамПассивам = РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ДвиженияДоходыРасходыПрочиеАктивыПассивы = РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.СоздатьНаборЗаписей().ВыгрузитьКолонки();

	СтатьяАктивовПассивов = ПланыВидовХарактеристик.СтатьиАктивовПассивов.Налоги;
	АналитикаАктивовПассивов = Неопределено;
	Если ВидНалога = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
		АналитикаАктивовПассивов = Перечисления.ТипыНалогов.ЗемельныйНалог;
	ИначеЕсли ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда
		АналитикаАктивовПассивов = Перечисления.ТипыНалогов.НалогНаИмущество;
	ИначеЕсли ВидНалога = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
		АналитикаАктивовПассивов = Перечисления.ТипыНалогов.ТранспортныйНалог;
	КонецЕсли;

	Пока ВыборкаРасходыБезРаспределения.Следующий() Цикл

		Если Не ЗначениеЗаполнено(ВыборкаРасходыБезРаспределения.СтатьяРасходов) Тогда

			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru = 'Для основного средства ""%1"" не установлен способ отражения расходов по налогам.'"),
								ВыборкаРасходыБезРаспределения.ОсновноеСредство);

			ОбщегоНазначения.СообщитьПользователю(
				ТекстСообщения,
				ВыборкаРасходыБезРаспределения.ОсновноеСредство,,,
				Отказ);

			ВнеоборотныеАктивыСлужебный.ДобавитьОписаниеОшибки(
				ТекстСообщения,
				ВыборкаРасходыБезРаспределения.ОсновноеСредство,
				ВыборкаРасходыБезРаспределения.Организация,
				СписокОшибок);

		КонецЕсли;

		УникальныйИдентификатор = Строка(Новый УникальныйИдентификатор());

		Запись = ПрочиеРасходы.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасходыБезРаспределения);
		Запись.ИдентификаторФинЗаписи = УникальныйИдентификатор;

		Если ВыборкаРасходыБезРаспределения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РаспределениеРБП Тогда
			Запись = ПрочиеРасходы.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасходыБезРаспределения);
			Запись.ВидДвижения = ВидДвиженияНакопления.Расход;
			Запись.СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.РасходыНаПлатон;
			Запись.АналитикаРасходов = Неопределено;
			Запись.ПостояннаяРазница = 0;
			Запись.ИдентификаторФинЗаписи = УникальныйИдентификатор;
		КонецЕсли;

		Запись = ПрочиеАктивыПассивы.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасходыБезРаспределения);
		Запись.Статья = СтатьяАктивовПассивов;
		Запись.Аналитика = АналитикаАктивовПассивов;

		Запись = ДвиженияПоПрочимАктивамПассивам.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасходыБезРаспределения);
		Запись.Статья = СтатьяАктивовПассивов;
		Запись.Аналитика = АналитикаАктивовПассивов;
		Запись.СуммаУпр  = ВыборкаРасходыБезРаспределения.Сумма;
		Запись.СуммаСНДС = Запись.СуммаБезНДС;
		Запись.ИдентификаторФинЗаписи = УникальныйИдентификатор;

		Запись = ДвиженияДоходыРасходыПрочиеАктивыПассивы.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасходыБезРаспределения, "Период, ХозяйственнаяОперация, Организация, Сумма, СуммаРегл, СуммаУпр");

		Запись.Статья = СтатьяАктивовПассивов;
		Запись.АналитикаАктивовПассивов = АналитикаАктивовПассивов;
		Запись.Подразделение = ВыборкаРасходыБезРаспределения.Подразделение;
		Запись.НаправлениеДеятельности = ВыборкаРасходыБезРаспределения.НаправлениеДеятельности;

		Запись.КорСтатья = ВыборкаРасходыБезРаспределения.СтатьяРасходов;
		Запись.КорАналитикаРасходов = ВыборкаРасходыБезРаспределения.АналитикаРасходов;
		Запись.КорПодразделение = ВыборкаРасходыБезРаспределения.Подразделение;
		Запись.КорНаправлениеДеятельности = ВыборкаРасходыБезРаспределения.НаправлениеДеятельности;

	КонецЦикла;

	Если ВыборкаРасходыСРаспределением <> Неопределено Тогда

		Пока ВыборкаРасходыСРаспределением.Следующий() Цикл

			ТаблицаРаспределения = ВыборкаРасходыСРаспределением.ТаблицаРаспределения.Выгрузить();

			Если ТаблицаРаспределения.Количество() = 0 Тогда

				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru = 'Для основного средства ""%1"" не установлен способ отражения расходов по налогам.'"),
									ВыборкаРасходыСРаспределением.ОсновноеСредство);

				ОбщегоНазначения.СообщитьПользователю(
					ТекстСообщения,
					ВыборкаРасходыСРаспределением.ОсновноеСредство,,,
					Отказ);

				ВнеоборотныеАктивыСлужебный.ДобавитьОписаниеОшибки(
					ТекстСообщения,
					ВыборкаРасходыСРаспределением.ОсновноеСредство,
					ВыборкаРасходыСРаспределением.Организация,
					СписокОшибок);

			КонецЕсли;

			Коэффициенты = ТаблицаРаспределения.ВыгрузитьКолонку("Коэффициент");
			Суммы = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(ВыборкаРасходыСРаспределением.Сумма, Коэффициенты);
			СуммыРегл = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(ВыборкаРасходыСРаспределением.СуммаРегл, Коэффициенты);
			СуммыБезНДС = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(ВыборкаРасходыСРаспределением.СуммаБезНДС, Коэффициенты);
			СуммыУпр = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(ВыборкаРасходыСРаспределением.СуммаУпр, Коэффициенты);

			Если Суммы = Неопределено И СуммыРегл = Неопределено И СуммыБезНДС = Неопределено Тогда
				Продолжить;
			КонецЕсли;

			Для Индекс = 0 По ТаблицаРаспределения.Количество()-1 Цикл

				ПравилоОтражения = ТаблицаРаспределения[Индекс];

				Если Не ЗначениеЗаполнено(ПравилоОтражения.Подразделение)
					И Не ЗначениеЗаполнено(ВыборкаРасходыСРаспределением.Местонахождение) Тогда

					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										НСтр("ru = 'Для основного средства ""%1"" не удалось определить подразделение, на которое будут отнесены расходы.
                                              |Необходимо либо явно указать подразделение, на которое будут отнесены расходы.
                                              |Либо проверить, что основное средство принято к учету.
                                              |Способ отражения расходов задан в документе %2.'"),
										ВыборкаРасходыСРаспределением.ОсновноеСредство,
										ПравилоОтражения.Ссылка);

					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстСообщения,
						ПравилоОтражения.Ссылка,,,
						Отказ);

					ВнеоборотныеАктивыСлужебный.ДобавитьОписаниеОшибки(
						ТекстСообщения,
						ПравилоОтражения.Ссылка,
						ВыборкаРасходыСРаспределением.Организация,
						СписокОшибок);

				КонецЕсли;

				УникальныйИдентификатор = Строка(Новый УникальныйИдентификатор());

				// ПрочиеРасходы
				Запись = ПрочиеРасходы.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасходыСРаспределением, "Период, Организация, РегистрацияВНалоговомОргане, ХозяйственнаяОперация, НастройкаХозяйственнойОперации");
				ЗаполнитьЗначенияСвойств(Запись, ПравилоОтражения, "СтатьяРасходов, АналитикаРасходов");

				Запись.Подразделение =
					?(ЗначениеЗаполнено(ПравилоОтражения.Подразделение),
							ПравилоОтражения.Подразделение,
							ВыборкаРасходыСРаспределением.Местонахождение);

				Запись.НаправлениеДеятельности =
					?(ЗначениеЗаполнено(ПравилоОтражения.НаправлениеДеятельности),
							ПравилоОтражения.НаправлениеДеятельности,
							ВыборкаРасходыСРаспределением.НаправлениеДеятельности);

				Запись.Сумма = ?(Суммы = Неопределено, 0, Суммы[Индекс]);
				Запись.СуммаРегл = ?(СуммыРегл = Неопределено, 0, СуммыРегл[Индекс]);
				Запись.СуммаБезНДС = ?(СуммыБезНДС = Неопределено, 0, СуммыБезНДС[Индекс]);
				Запись.СуммаУпр = ?(СуммыУпр = Неопределено, 0, СуммыУпр[Индекс]);
				Если НЕ ПравилоОтражения.ПринятиеКНалоговомуУчету Тогда
					Запись.ПостояннаяРазница = Запись.СуммаРегл;
				КонецЕсли;
				Запись.ИдентификаторФинЗаписи = УникальныйИдентификатор;

				// ДвиженияДоходыРасходыПрочиеАктивыПассивы
				Запись = ДвиженияДоходыРасходыПрочиеАктивыПассивы.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасходыСРаспределением, "Период, ХозяйственнаяОперация, Организация");

				Запись.Статья = СтатьяАктивовПассивов;
				Запись.АналитикаАктивовПассивов = АналитикаАктивовПассивов;

				Запись.Подразделение =
					?(ЗначениеЗаполнено(ПравилоОтражения.Подразделение),
							ПравилоОтражения.Подразделение,
							ВыборкаРасходыСРаспределением.Местонахождение);

				Запись.НаправлениеДеятельности =
					?(ЗначениеЗаполнено(ПравилоОтражения.НаправлениеДеятельности),
							ПравилоОтражения.НаправлениеДеятельности,
							ВыборкаРасходыСРаспределением.НаправлениеДеятельности);

				Запись.КорСтатья = ПравилоОтражения.СтатьяРасходов;
				Запись.КорАналитикаРасходов = ПравилоОтражения.АналитикаРасходов;

				Запись.КорПодразделение =
					?(ЗначениеЗаполнено(ПравилоОтражения.Подразделение),
							ПравилоОтражения.Подразделение,
							ВыборкаРасходыСРаспределением.Местонахождение);

				Запись.КорНаправлениеДеятельности =
					?(ЗначениеЗаполнено(ПравилоОтражения.НаправлениеДеятельности),
							ПравилоОтражения.НаправлениеДеятельности,
							ВыборкаРасходыСРаспределением.НаправлениеДеятельности);

				Запись.Сумма = ?(Суммы = Неопределено, 0, Суммы[Индекс]);
				Запись.СуммаРегл = ?(СуммыРегл = Неопределено, 0, СуммыРегл[Индекс]);
				Запись.СуммаУпр = ?(СуммыУпр = Неопределено, 0, СуммыУпр[Индекс]);

				// ПрочиеАктивыПассивы
				Запись = ПрочиеАктивыПассивы.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасходыСРаспределением);
				Запись.Статья = СтатьяАктивовПассивов;
				Запись.Аналитика = АналитикаАктивовПассивов;

				Запись.Подразделение =
					?(ЗначениеЗаполнено(ПравилоОтражения.Подразделение),
							ПравилоОтражения.Подразделение,
							ВыборкаРасходыСРаспределением.Местонахождение);

				Запись.НаправлениеДеятельности =
					?(ЗначениеЗаполнено(ПравилоОтражения.НаправлениеДеятельности),
							ПравилоОтражения.НаправлениеДеятельности,
							ВыборкаРасходыСРаспределением.НаправлениеДеятельности);

				Запись.Сумма = ?(Суммы = Неопределено, 0, Суммы[Индекс]);

				// ДвиженияПоПрочимАктивамПассивам
				Запись = ДвиженияПоПрочимАктивамПассивам.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасходыСРаспределением);
				Запись.Статья = СтатьяАктивовПассивов;
				Запись.Аналитика = АналитикаАктивовПассивов;

				Запись.Подразделение =
					?(ЗначениеЗаполнено(ПравилоОтражения.Подразделение),
							ПравилоОтражения.Подразделение,
							ВыборкаРасходыСРаспределением.Местонахождение);

				Запись.НаправлениеДеятельности =
					?(ЗначениеЗаполнено(ПравилоОтражения.НаправлениеДеятельности),
							ПравилоОтражения.НаправлениеДеятельности,
							ВыборкаРасходыСРаспределением.НаправлениеДеятельности);

				Запись.СуммаРегл   = ?(СуммыРегл = Неопределено, 0, СуммыРегл[Индекс]);
				Запись.СуммаБезНДС = ?(СуммыБезНДС = Неопределено, 0, СуммыБезНДС[Индекс]);
				Запись.СуммаСНДС   = ?(СуммыБезНДС = Неопределено, 0, СуммыБезНДС[Индекс]);
				Запись.СуммаУпр    = ?(СуммыУпр = Неопределено, 0, СуммыУпр[Индекс]);

				Если НЕ ПравилоОтражения.ПринятиеКНалоговомуУчету Тогда
					Запись.ПостояннаяРазница = Запись.СуммаРегл;
				КонецЕсли;

				Запись.ИдентификаторФинЗаписи = УникальныйИдентификатор;

			КонецЦикла;

		КонецЦикла;

	КонецЕсли;

	ПрочиеАктивыПассивы.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");
	КолонкиГруппировки = "ВидДвижения, Период, Организация, Подразделение, НаправлениеДеятельности, Статья, Аналитика";
	КолонкиСуммирования = "Сумма";
	ПрочиеАктивыПассивы.Свернуть(КолонкиГруппировки, КолонкиСуммирования);

	ДвиженияПоПрочимАктивамПассивам.ЗаполнитьЗначения(Истина, "Активность");
	ДвиженияПоПрочимАктивамПассивам.ЗаполнитьЗначения(Перечисления.ВидыДвиженийПрочихАктивовПассивов.Кредит, "ДебетКредит");

	КолонкиГруппировки = "Период, ХозяйственнаяОперация, Организация,
		|Подразделение, Статья, АналитикаРасходов, АналитикаДоходов, АналитикаАктивовПассивов, НаправлениеДеятельности,
		|КорПодразделение, КорСтатья, КорАналитикаРасходов, КорАналитикаДоходов, КорАналитикаАктивовПассивов, КорНаправлениеДеятельности";
	КолонкиСуммирования = "Сумма, СуммаРегл, СуммаУпр";
	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Свернуть(КолонкиГруппировки, КолонкиСуммирования);

	Результат = Новый Структура;
	Результат.Вставить("ПрочиеРасходы", ПрочиеРасходы(ПрочиеРасходы));
	Результат.Вставить("ПрочиеАктивыПассивы", ПрочиеАктивыПассивы);
	Результат.Вставить("ДвиженияПоПрочимАктивамПассивам", ДвиженияПоПрочимАктивамПассивам);
	Результат.Вставить("ДвиженияДоходыРасходыПрочиеАктивыПассивы", ДвиженияДоходыРасходыПрочиеАктивыПассивы);

	Возврат Результат;

КонецФункции

Функция ПрочиеРасходы(ТаблицаПрочиеРасходы)

	Если ТаблицаПрочиеРасходы.Количество() = 0 Тогда
		Возврат ТаблицаПрочиеРасходы;
	КонецЕсли;

	ДополнительныеПоля = "РегистрацияВНалоговомОргане";

	ТекстыЗапроса = Новый Массив;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасчетРасходов.Период                        КАК Период,
	|	РасчетРасходов.ВидДвижения                   КАК ВидДвижения,
	|	РасчетРасходов.Организация                   КАК Организация,
	|	РасчетРасходов.Подразделение                 КАК Подразделение,
	|	РасчетРасходов.СтатьяРасходов                КАК СтатьяРасходов,
	|	РасчетРасходов.АналитикаРасходов             КАК АналитикаРасходов,
	|	РасчетРасходов.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	РасчетРасходов.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|
	|	РасчетРасходов.Сумма                         КАК Сумма,
	|	РасчетРасходов.СуммаБезНДС                   КАК СуммаБезНДС,
	|	РасчетРасходов.СуммаУпр                      КАК СуммаУпр,
	|	РасчетРасходов.СуммаРегл                     КАК СуммаРегл,
	|	РасчетРасходов.ПостояннаяРазница             КАК ПостояннаяРазница,
	|	РасчетРасходов.ВременнаяРазница              КАК ВременнаяРазница,
	|
	|	РасчетРасходов.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
	|	РасчетРасходов.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|
	|	РасчетРасходов.РегистрацияВНалоговомОргане   КАК РегистрацияВНалоговомОргане
	|
	|ПОМЕСТИТЬ втТаблицаПрочиеРасходы
	|ИЗ
	|	&ТаблицаПрочиеРасходы КАК РасчетРасходов";
	ТекстыЗапроса.Добавить(ТекстЗапроса);

	#Область ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы
	ЗапросыРегистра = Новый Массив;
	ЗапросыРегистра.Добавить(РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы(ДополнительныеПоля));

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасчетРасходов.Период                        КАК Период,
	|	РасчетРасходов.ВидДвижения                   КАК ВидДвижения,
	|	РасчетРасходов.Организация                   КАК Организация,
	|	РасчетРасходов.Подразделение                 КАК Подразделение,
	|	РасчетРасходов.СтатьяРасходов                КАК СтатьяРасходов,
	|	РасчетРасходов.АналитикаРасходов             КАК АналитикаРасходов,
	|	РасчетРасходов.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	РасчетРасходов.Сумма                         КАК СуммаСНДС,
	|	РасчетРасходов.СуммаБезНДС                   КАК СуммаБезНДС,
	|	РасчетРасходов.СуммаУпр                      КАК СуммаБезНДСУпр,
	|
	|	РасчетРасходов.СуммаРегл                     КАК СуммаСНДСРегл,
	|	РасчетРасходов.СуммаРегл                     КАК СуммаБезНДСРегл,
	|	РасчетРасходов.ПостояннаяРазница             КАК ПостояннаяРазница,
	|	РасчетРасходов.ВременнаяРазница              КАК ВременнаяРазница,
	|	РасчетРасходов.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаНоменклатуры,
	|
	|	РасчетРасходов.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
	|	РасчетРасходов.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|
	|	РасчетРасходов.РегистрацияВНалоговомОргане   КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	втТаблицаПрочиеРасходы КАК РасчетРасходов
	|";

	ЗапросыРегистра.Добавить(ТекстЗапроса);

	ТекстЗапроса = СтрСоединить(ЗапросыРегистра, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ТекстЗапросаТаблицаВтПрочиеРасходы
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы(ДополнительныеПоля);
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ТекстЗапросаТаблицаПрочиеРасходы
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы(ДополнительныеПоля);
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти

	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаПрочиеРасходы", ТаблицаПрочиеРасходы);

	Реквизиты = Новый Структура("Период,Организация", ТаблицаПрочиеРасходы[0].Период, ТаблицаПрочиеРасходы[0].Организация);
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);

	Результат = Запрос.Выполнить();

	Возврат Результат.Выгрузить();

КонецФункции

Процедура УчестьОсвобождениеОтУплатыНалога(ТекстЗапроса, ДополнительныеПараметры)

	// В 2020 году некоторые организации освобождены от уплаты имущественных налогов (за 2-й квартал).
	// В этом случае рассчитать налог нужно в обычном порядке(требуется при заполнении декларации и/или справки-расчета налога),
	// а уплачивать не нужно (проводки в части начисления налога за период освобождения не формируются).
	// Законопроект 959325-7

	// Для "освобожденных" организаций авансовый платеж за период освобождения (2-й квартал) рассчитывается в обычном порядке
	// (для тех ИФНС, где платятся авансы), но проводки не формируются.
	// Налог по результатам 2020 года для "освобожденных" организаций рассчитывается следующим образом.
	// Если организация уплачивает ежеквартальные авансы в каких-то регионах (ИФНС),
	// то в расчете и проводках ничего не меняется: налог, начисленный по результатам года,
	// уменьшается в том числе и на авансовый платеж за период освобождения, как будто организация его заплатила.
	// Для тех регионов (ИФНС), где не уплачиваются авансы, исчисленный за год налог нужно уменьшить на сумму налога за период освобождения (2-й квартал),
	// рассчитанную аналогично авансу за такой период для тех, кто платит авансы.

	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("ГодовойРасчет")
		И ДополнительныеПараметры.ГодовойРасчет
		И ДополнительныеПараметры.Свойство("ПрименяетсяОсвобождениеОтУплатыНалогаВНалогомПериоде")
		И ДополнительныеПараметры.ПрименяетсяОсвобождениеОтУплатыНалогаВНалогомПериоде Тогда

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаНалогаКУплате", "(СправкаРасчет.СуммаНалогаКУплате - СправкаРасчет.СуммаОсвобожденияОтУплатыНалога)");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаНалогаКУплате", "СправкаРасчет.СуммаНалогаКУплате");
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти
