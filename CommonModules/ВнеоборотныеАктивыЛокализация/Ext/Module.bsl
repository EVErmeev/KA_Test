////////////////////////////////////////////////////////////////////////////////
// Процедуры подсистемы "Внеоборотные активы", предназначенные для локализации.
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Функция ЕстьУчетВнеоборотныхАктивов2_2() Экспорт

	Результат = Ложь;
	
	//++ Локализация
	
	СписокДокументов22 = Новый Массив;
	СписокДокументов22.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.АмортизацияНМА"));
	СписокДокументов22.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.АмортизацияОС"));
	СписокДокументов22.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ВводОстатковВнеоборотныхАктивов"));
	СписокДокументов22.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ВозвратОСИзАренды"));
	СписокДокументов22.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ИзменениеПараметровНМА"));
	СписокДокументов22.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ИзменениеПараметровОС"));
	СписокДокументов22.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ИзменениеСостоянияОС"));
	СписокДокументов22.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.МодернизацияОС"));
	СписокДокументов22.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПередачаОСВАренду"));
	СписокДокументов22.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПеремещениеОС"));
	СписокДокументов22.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПереоценкаНМА"));
	СписокДокументов22.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПереоценкаОС"));
	СписокДокументов22.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПодготовкаКПередачеНМА"));
	СписокДокументов22.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПодготовкаКПередачеОС"));
	СписокДокументов22.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПринятиеКУчетуНМА"));
	СписокДокументов22.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПринятиеКУчетуОС"));
	СписокДокументов22.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СписаниеНМА"));
	СписокДокументов22.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СписаниеОС"));
	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РеестрДокументов.Ссылка
	|ИЗ
	|	РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|ГДЕ
	|	РеестрДокументов.ТипСсылки В (&СписокДокументов22)
	|	И РеестрДокументов.Проведен";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокДокументов22", СписокДокументов22);
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Результат = НЕ Результат.Пустой();
	
	//-- Локализация
	
	Возврат Результат;

КонецФункции

// Возвращает дату начала учета внеоборотных активов версии 2.4.
// 
// Возвращаемое значение:
//  Дата - Дата начала учета.
//
Функция ДатаНачалаУчетаВнеоборотныхАктивов2_4() Экспорт

	ДатаНачалаУчета = '000101010000';
	
	//++ Локализация
	ДатаНачалаУчета = Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить();
	//-- Локализация
	
	Возврат ДатаНачалаУчета;
	
КонецФункции
 
Процедура УчетнаяПолитикаОрганизацийПередЗаписью(НаборЗаписей) Экспорт

	//++ Локализация
	
	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА() Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей.ДополнительныеСвойства.Вставить("МенеджерВременныхТаблиц_ЛизингИзменение", Новый МенеджерВременныхТаблиц);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаПриЗаписи.Период           КАК Период,
	|	ТаблицаПриЗаписи.Организация      КАК Организация,
	|	ТаблицаПриЗаписи.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи КАК ВключатьВСоставНалоговыхРасходовАрендныеПлатежи
	|ПОМЕСТИТЬ УчетнаяПолитикаОрганизаций_ЛизингИзменение_ПередЗаписью
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыль КАК ТаблицаПриЗаписи
	|ГДЕ
	|	ТаблицаПриЗаписи.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи
	|	//ОтборОрганизация//
	|	//ОтборПериод//
	|";
	
	Если НаборЗаписей.Отбор.Организация.Использование Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
							"//ОтборОрганизация//", 
							"И ТаблицаПриЗаписи.Организация = ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).ГоловнаяОрганизация");
	КонецЕсли;
	
	Если НаборЗаписей.Отбор.Период.Использование Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
							"//ОтборПериод//", 
							"И ТаблицаПриЗаписи.Период = &Период");
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = НаборЗаписей.ДополнительныеСвойства.МенеджерВременныхТаблиц_ЛизингИзменение;
	Запрос.УстановитьПараметр("Организация", НаборЗаписей.Отбор.Организация.Значение);
	Запрос.УстановитьПараметр("Период", НаборЗаписей.Отбор.Период.Значение);
	Запрос.Выполнить();
	
	//-- Локализация
	
КонецПроцедуры

Процедура УчетнаяПолитикаОрганизацийПриЗаписи(НаборЗаписей) Экспорт

	//++ Локализация
	
	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА() Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства = НаборЗаписей.ДополнительныеСвойства;
	Отбор = НаборЗаписей.Отбор;
	
	СтруктураВременныеТаблицы = Новый Структура("МенеджерВременныхТаблиц", ДополнительныеСвойства.МенеджерВременныхТаблиц_ЛизингИзменение);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаПередЗаписью.Период        КАК Период,
	|	ТаблицаПередЗаписью.Организация   КАК Организация,
	|	НЕОПРЕДЕЛЕНО                      КАК Документ
	|ПОМЕСТИТЬ УчетнаяПолитикаОрганизаций_ЛизингИзменение
	|ИЗ
	|	УчетнаяПолитикаОрганизаций_ЛизингИзменение_ПередЗаписью КАК ТаблицаПередЗаписью
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаНалогаНаПрибыль КАК ТаблицаПриЗаписи
	|		ПО ТаблицаПриЗаписи.Период = ТаблицаПередЗаписью.Период
	|			И ТаблицаПриЗаписи.Организация = ТаблицаПередЗаписью.Организация
	|ГДЕ
	|	ЕСТЬNULL(ТаблицаПередЗаписью.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи, ЛОЖЬ)
	|	И НЕ ЕСТЬNULL(ТаблицаПриЗаписи.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаПриЗаписи.Период           КАК Период,
	|	ТаблицаПриЗаписи.Организация      КАК Организация,
	|	НЕОПРЕДЕЛЕНО                      КАК Документ
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыль КАК ТаблицаПриЗаписи
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций_ЛизингИзменение_ПередЗаписью КАК ТаблицаПередЗаписью
	|		ПО ТаблицаПриЗаписи.Период = ТаблицаПередЗаписью.Период
	|			И ТаблицаПриЗаписи.Организация = ТаблицаПередЗаписью.Организация
	|ГДЕ
	|	ЕСТЬNULL(ТаблицаПриЗаписи.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи, ЛОЖЬ)
	|	И НЕ ЕСТЬNULL(ТаблицаПередЗаписью.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи, ЛОЖЬ)
	|	//ОтборОрганизация//
	|	//ОтборПериод//
	|";
	
	Если Отбор.Организация.Использование Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
							"//ОтборОрганизация//", 
							"И ТаблицаПриЗаписи.Организация = ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).ГоловнаяОрганизация");
	КонецЕсли;
	
	Если Отбор.Период.Использование Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
							"//ОтборПериод//", 
							"И ТаблицаПриЗаписи.Период = &Период");
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Отбор.Организация.Значение);
	Запрос.УстановитьПараметр("Период", Отбор.Период.Значение);
	Выборка = Запрос.ВыполнитьПакет()[0].Выбрать();
	Выборка.Следующий();
	
	СтруктураВременныеТаблицы.Вставить("УчетнаяПолитикаОрганизаций_ЛизингИзменение", Выборка.Количество > 0);
	
	//-- Локализация
	
КонецПроцедуры

//++ Локализация

#Область ПереходНаУчетВнеоборотныхАктивовВерсии24

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - (См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца)
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап_ПереходНаУчетВнеоборотныхАктивовВерсии24(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.ПереходНаУчетВнеоборотныхАктивовВерсии24,,,,
		Перечисления.ОперацииЗакрытияМесяца.НачисленияПоКредитамДепозитамИВыданнымЗаймам);
	НоваяСтрока.ВыполняетсяВручную = Истина;
	НоваяСтрока.ОтображатьВыполненныеУспешно = Истина;
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"ВнеоборотныеАктивыЛокализация.Использование_ПереходНаУчетВнеоборотныхАктивовВерсии24");
КонецПроцедуры

Процедура Использование_ПереходНаУчетВнеоборотныхАктивовВерсии24(ПараметрыОбработчика) Экспорт
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, 1);
	
	ПериодРегистрации = ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации;
	
	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(ПериодРегистрации) Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеОтключено(
			ПараметрыОбработчика,
			НСтр("ru='Учет внеоборотных версии 2.4 не используется.'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
		Возврат;
	ИначеЕсли НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеОтключено(
			ПараметрыОбработчика,
			НСтр("ru='Учет внеоборотных версии 2.2 не используется, переход не требуется.'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
		Возврат;
		
	КонецЕсли;
	
	ПереносДанныхЗавершен = Обработки.ПомощникПереходаНаУчетВнеоборотныхАктивовВерсии24.ПереносДанныхЗавершен();
	ЕстьУчетВнеоборотныхАктивов2_4 = ВнеоборотныеАктивыСлужебный.ЕстьУчетВнеоборотныхАктивов2_4();
	
	СведенияОПроблемах = Обработки.ПомощникПереходаНаУчетВнеоборотныхАктивовВерсии24.СведенияЗарегистрированныхПроблемах(
							ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
							
	ЭтоПолноправныйПользователь = Пользователи.ЭтоПолноправныйПользователь();
	
	Если ПереносДанныхЗавершен = Неопределено
		И ЕстьУчетВнеоборотныхАктивов2_4
		И НЕ Обработки.ПомощникПереходаНаУчетВнеоборотныхАктивовВерсии24.ДанныеПроверены() Тогда
		
		ЗакрытиеМесяцаСервер.ДобавитьПоясняющуюИнформациюКЭтапу(
			ПараметрыОбработчика,
			НСтр("ru = 'Переход выполнен без использования помощника'", ОбщегоНазначения.КодОсновногоЯзыка()),,, 
			Перечисления.ВажностьПроблемыУчета.Информация);
		
		// Есть документы, но нет сведений о работе помощника.
		ТекстСостояния = НСтр("ru='Необходимо выполнить проверку'", ОбщегоНазначения.КодОсновногоЯзыка());
		
		Если ЭтоПолноправныйПользователь Тогда
			ТекстПодробнее = НСтр("ru = 'Проверить'");
			ДействиеПодробнее = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
				Метаданные.Обработки.ПомощникПереходаНаУчетВнеоборотныхАктивовВерсии24.Формы.Форма.ПолноеИмя());
				
			ДействиеПодробнее.ПараметрыФормы.Вставить("РежимПереносаДанных", "Проверить");
			ДействиеПодробнее.ПараметрыФормы.Вставить("МассивОрганизаций", ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
		Иначе
			ТекстПодробнее = "";
			ДействиеПодробнее = Неопределено;
		КонецЕсли;
			
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
			ПараметрыОбработчика,
			ТекстСостояния,
			ТекстПодробнее,		
			ДействиеПодробнее);
			
	ИначеЕсли ПереносДанныхЗавершен = Неопределено
		И НЕ ЕстьУчетВнеоборотныхАктивов2_4 Тогда
			
		// Нет документов и нет сведений о работе помощника.
		ТекстСостояния = НСтр("ru='Переход не завершен, необходимо воспользоваться помощником перехода'", ОбщегоНазначения.КодОсновногоЯзыка());
		
		Если ЭтоПолноправныйПользователь Тогда
			ТекстПодробнее = НСтр("ru = 'Открыть'");
			ДействиеПодробнее = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
				Метаданные.Обработки.ПомощникПереходаНаУчетВнеоборотныхАктивовВерсии24.Формы.Форма.ПолноеИмя());
		Иначе
			ТекстПодробнее = "";
			ДействиеПодробнее = Неопределено;
		КонецЕсли;
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
			ПараметрыОбработчика,
			ТекстСостояния,
			ТекстПодробнее,		
			ДействиеПодробнее);
		
	ИначеЕсли ПереносДанныхЗавершен = Ложь Тогда
		
		// Помощник использовался, но перенос данных не завершен.
		ТекстСостояния = НСтр("ru='Переход не завершен, необходимо воспользоваться помощником перехода'", ОбщегоНазначения.КодОсновногоЯзыка());
			
		Если ЭтоПолноправныйПользователь Тогда
			ТекстПодробнее = НСтр("ru = 'Открыть'");
			ДействиеПодробнее = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
				Метаданные.Обработки.ПомощникПереходаНаУчетВнеоборотныхАктивовВерсии24.Формы.Форма.ПолноеИмя());
		Иначе
			ТекстПодробнее = "";
			ДействиеПодробнее = Неопределено;
		КонецЕсли;
			
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
			ПараметрыОбработчика,
			ТекстСостояния,
			ТекстПодробнее,		
			ДействиеПодробнее);
		
	ИначеЕсли СведенияОПроблемах.КоличествоПроблем = 0
		И СведенияОПроблемах.КоличествоПредупреждений = 0
		И СведенияОПроблемах.КоличествоРешенныхПроблем = 0 Тогда
		
		// Перенос данных успешно завершен
		
		Если ПериодРегистрации = ДатаНачалаУчетаВнеоборотныхАктивов2_4() Тогда
			
			ПараметрыОбработчика.ДанныеЭтапа.Состояние = Перечисления.СостоянияОперацийЗакрытияМесяца.ВыполненоУспешно;
			
			ДействиеПодробнее = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
				Метаданные.Обработки.ПомощникПереходаНаУчетВнеоборотныхАктивовВерсии24.Формы.Форма.ПолноеИмя());
				
			ДействиеПодробнее.ПараметрыФормы.Вставить("РежимПереносаДанных", "Проверить");
			ДействиеПодробнее.ПараметрыФормы.Вставить("МассивОрганизаций", ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
				
			ЗакрытиеМесяцаСервер.ДобавитьПоясняющуюИнформациюКЭтапу(
				ПараметрыОбработчика,
				НСтр("ru = 'Переход успешно завершен, если исходные данные были изменены, то рекомендуется выполнить проверку'", ОбщегоНазначения.КодОсновногоЯзыка()),
				НСтр("ru = 'Проверить'", ОбщегоНазначения.КодОсновногоЯзыка()), 
				ДействиеПодробнее, 
				Перечисления.ВажностьПроблемыУчета.ПолезныйСовет);
			
		Иначе		
			
			ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(ПараметрыОбработчика);
			
		КонецЕсли;
		
	ИначеЕсли СведенияОПроблемах.КоличествоПроблем <> 0 Тогда
		
		// Перенос данных завершен, имеются проблемы
		
		ДействиеПодробнее = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
			Метаданные.Обработки.ПомощникПереходаНаУчетВнеоборотныхАктивовВерсии24.Формы.РезультатыПерехода.ПолноеИмя());
			
		ДействиеПодробнее.ПараметрыФормы.Вставить("ОтборВажность", Перечисления.ВажностьПроблемыУчета.Ошибка);
		ДействиеПодробнее.ПараметрыФормы.Вставить("МассивОрганизаций", ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
			
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
			ПараметрыОбработчика,
			НСтр("ru='Переход не завершен, имеются ошибки'", ОбщегоНазначения.КодОсновногоЯзыка()),
			НСтр("ru = 'Подробнее'", ОбщегоНазначения.КодОсновногоЯзыка()),		
			ДействиеПодробнее);
			
		//
		ДействиеПодробнее = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
			Метаданные.Обработки.ПомощникПереходаНаУчетВнеоборотныхАктивовВерсии24.Формы.Форма.ПолноеИмя());
		ДействиеПодробнее.ПараметрыФормы.Вставить("РежимПереносаДанных", "Исправить");
		ДействиеПодробнее.ПараметрыФормы.Вставить("МассивОрганизаций", ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
		
		ЗакрытиеМесяцаСервер.ДобавитьПоясняющуюИнформациюКЭтапу(
			ПараметрыОбработчика,
			НСтр("ru = 'Можно воспользоваться помощником для исправления ошибок'", ОбщегоНазначения.КодОсновногоЯзыка()),
			НСтр("ru = 'Исправить'", ОбщегоНазначения.КодОсновногоЯзыка()), 
			ДействиеПодробнее, 
			Перечисления.ВажностьПроблемыУчета.Информация);
			
		//	
		ДействиеПодробнее = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
			Метаданные.Обработки.ПомощникПереходаНаУчетВнеоборотныхАктивовВерсии24.Формы.Форма.ПолноеИмя());
			
		ДействиеПодробнее.ПараметрыФормы.Вставить("РежимПереносаДанных", "Проверить");
		ДействиеПодробнее.ПараметрыФормы.Вставить("МассивОрганизаций", ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
			
		ЗакрытиеМесяцаСервер.ДобавитьПоясняющуюИнформациюКЭтапу(
			ПараметрыОбработчика,
			НСтр("ru = 'Можно воспользоваться помощником для проверки данных'", ОбщегоНазначения.КодОсновногоЯзыка()),
			НСтр("ru = 'Проверить'", ОбщегоНазначения.КодОсновногоЯзыка()), 
			ДействиеПодробнее, 
			Перечисления.ВажностьПроблемыУчета.Информация);
		
	ИначеЕсли СведенияОПроблемах.КоличествоПредупреждений <> 0 Тогда
		
		// Перенос данных завершен, имеются предупреждения
		
		ПараметрыОбработчика.ДанныеЭтапа.Состояние = Перечисления.СостоянияОперацийЗакрытияМесяца.ВыполненоУспешно;
		
		ДействиеПодробнее = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
			Метаданные.Обработки.ПомощникПереходаНаУчетВнеоборотныхАктивовВерсии24.Формы.РезультатыПерехода.ПолноеИмя());
			
		ДействиеПодробнее.ПараметрыФормы.Вставить("ОтборВажность", Перечисления.ВажностьПроблемыУчета.Предупреждение);
		ДействиеПодробнее.ПараметрыФормы.Вставить("МассивОрганизаций", ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
			
		ЗакрытиеМесяцаСервер.ДобавитьПоясняющуюИнформациюКЭтапу(
			ПараметрыОбработчика,
			НСтр("ru='Переход завершен, имеются предупреждения'", ОбщегоНазначения.КодОсновногоЯзыка()),
			НСтр("ru = 'Подробнее'", ОбщегоНазначения.КодОсновногоЯзыка()),		
			ДействиеПодробнее, 
			Перечисления.ВажностьПроблемыУчета.Предупреждение);
			
		//	
		ДействиеПодробнее = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
			Метаданные.Обработки.ПомощникПереходаНаУчетВнеоборотныхАктивовВерсии24.Формы.Форма.ПолноеИмя());
			
		ДействиеПодробнее.ПараметрыФормы.Вставить("РежимПереносаДанных", "Проверить");
		ДействиеПодробнее.ПараметрыФормы.Вставить("МассивОрганизаций", ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
			
		ЗакрытиеМесяцаСервер.ДобавитьПоясняющуюИнформациюКЭтапу(
			ПараметрыОбработчика,
			НСтр("ru = 'Можно воспользоваться помощником для проверки данных'", ОбщегоНазначения.КодОсновногоЯзыка()),
			НСтр("ru = 'Проверить'", ОбщегоНазначения.КодОсновногоЯзыка()), 
			ДействиеПодробнее, 
			Перечисления.ВажностьПроблемыУчета.Информация);
			
	ИначеЕсли СведенияОПроблемах.КоличествоРешенныхПроблем <> 0 Тогда
		
		// Перенос данных завершен, проблемы решены
		
		ПараметрыОбработчика.ДанныеЭтапа.Состояние = Перечисления.СостоянияОперацийЗакрытияМесяца.ВыполненоУспешно;
		
		ДействиеПодробнее = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
			Метаданные.Обработки.ПомощникПереходаНаУчетВнеоборотныхАктивовВерсии24.Формы.РезультатыПерехода.ПолноеИмя());
			
		ДействиеПодробнее.ПараметрыФормы.Вставить("ОтборВажность", Перечисления.ВажностьПроблемыУчета.Информация);
		ДействиеПодробнее.ПараметрыФормы.Вставить("МассивОрганизаций", ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
			
		ЗакрытиеМесяцаСервер.ДобавитьПоясняющуюИнформациюКЭтапу(
			ПараметрыОбработчика,
			НСтр("ru='Переход завершен, ошибки устранены'", ОбщегоНазначения.КодОсновногоЯзыка()),
			НСтр("ru = 'Подробнее'", ОбщегоНазначения.КодОсновногоЯзыка()),		
			ДействиеПодробнее, 
			Перечисления.ВажностьПроблемыУчета.Информация);
		
		//	
		ДействиеПодробнее = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
			Метаданные.Обработки.ПомощникПереходаНаУчетВнеоборотныхАктивовВерсии24.Формы.Форма.ПолноеИмя());
			
		ДействиеПодробнее.ПараметрыФормы.Вставить("РежимПереносаДанных", "Проверить");
		ДействиеПодробнее.ПараметрыФормы.Вставить("МассивОрганизаций", ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
			
		ЗакрытиеМесяцаСервер.ДобавитьПоясняющуюИнформациюКЭтапу(
			ПараметрыОбработчика,
			НСтр("ru = 'Можно воспользоваться помощником для проверки данных'", ОбщегоНазначения.КодОсновногоЯзыка()),
			НСтр("ru = 'Проверить'", ОбщегоНазначения.КодОсновногоЯзыка()), 
			ДействиеПодробнее, 
			Перечисления.ВажностьПроблемыУчета.Информация);
			
	Иначе		
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(ПараметрыОбработчика);
		
	КонецЕсли;
			
КонецПроцедуры

#КонецОбласти

#Область РаспределениеНДС

// Увеличивает стоимость внеоборотных активов после распределения НДС.
//
// Параметры:
//  ТаблицаВнеоборотныхАктивов	 - ТаблицаЗначений	 - Содержит внеоборотные активы на которые был распределен НДС.
//  ПрочиеРасходы				 - ТаблицаЗначений	 - Расходы, полученные в результате распределения НДС.
//  РезультатРаспределения		 - ТаблицаЗначений	 - Результат распределения НДС.
//  Реквизиты					 - Структура		 - Содержит реквизиты документа Распределение НДС.
//  ТаблицыДляДвижений			 - Структура		 - (возвращаемое значение) Содержит таблицы для записи движений.
//
Процедура ВключитьВСтоимостьВнеоборотныхАктивовРезультатРаспределенияНДС(ТаблицаВнеоборотныхАктивов, ПрочиеРасходы, РезультатРаспределения, Реквизиты, ТаблицыДляДвижений) Экспорт
	
	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Реквизиты.Период) 
		И ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") Тогда
		
		ВключитьВСтоимостьВНАРезультатРаспределенияНДС_2_2(
			ТаблицаВнеоборотныхАктивов,
			РезультатРаспределения,
			ТаблицыДляДвижений,
			Реквизиты);
			
	КонецЕсли;
	
КонецПроцедуры

// Формирует временную таблицу принятых к учету внеоборотных активов (ВтВнеоборотныеАктивы) при использования учета
// внеоборотных активов 2.2.
//
// Параметры:
//  НачалоПериода			 - Дата						 - Начало периода.
//  КонецПериода			 - Дата						 - Конец периода.
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц	 - Хранит сформированную таблицу ВтВнеоборотныеАктивы.
//
Процедура СформироватьТаблицуПринятыхКУчетуВнеоборотныхАктивовДляРаспределенияНДС_2_2(НачалоПериода, КонецПериода, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОстатков.Организация,
	|	ТаблицаОстатков.АналитикаРасходов КАК Объект
	|ПОМЕСТИТЬ ОтборОбъектов
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|ГДЕ
	|  ТаблицаОстатков.ВариантРаспределенияРасходовСтатьи = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаОстатков.Организация,
	|	ТаблицаОстатков.АналитикаАктивовПассивов КАК Объект
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|ГДЕ
	|  ТИПЗНАЧЕНИЯ(ТаблицаОстатков.АналитикаАктивовПассивов) В (
	|		ТИП(Справочник.ОбъектыЭксплуатации),
	|		ТИП(Справочник.НематериальныеАктивы))
	|;
	|
	|//////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОС.Организация      КАК Организация,
	|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОС.Регистратор      КАК Регистратор
	|ПОМЕСТИТЬ ВтРегистраторыПринятияКУчетуОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Граница,
	|			(Организация, ОсновноеСредство, СостояниеБУ) В 
	|				(ВЫБРАТЬ
	|					ОтборОбъектов.Организация,
	|					ОтборОбъектов.Объект,
	|					ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЗ
	|					ОтборОбъектов КАК ОтборОбъектов)) КАК СостоянияОС
	|ГДЕ
	|	СостоянияОС.Период >= НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ)
	|	И (Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|		ИЛИ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СостоянияОС.Организация,
	|	СобытияОС.ОсновноеСредство,
	|	СостоянияОС.Регистратор
	|ИЗ
	|	РегистрСведений.СобытияОСОрганизаций.СрезПоследних(
	|			&Граница,
	|			(Организация, ОсновноеСредство) В 
	|				(ВЫБРАТЬ
	|					ОтборОбъектов.Организация,
	|					ОтборОбъектов.Объект
	|				ИЗ
	|					ОтборОбъектов КАК ОтборОбъектов)
	|				И Событие.ВидСобытияОС В (ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Модернизация), 
	|										  ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Достройка), 
	|										  ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Дооборудование))) КАК СобытияОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|				&Граница,
	|			(Организация, ОсновноеСредство, СостояниеБУ) В 
	|				(ВЫБРАТЬ
	|					ОтборОбъектов.Организация,
	|					ОтборОбъектов.Объект,
	|					ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЗ
	|					ОтборОбъектов КАК ОтборОбъектов)
	|					И (Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|						ИЛИ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов)) КАК СостоянияОС
	|		ПО СобытияОС.ОсновноеСредство = СостоянияОС.ОсновноеСредство
	|ГДЕ
	|	СобытияОС.Период >= НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО 
	|	Регистратор
	|;
	|
	|/////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВводОстатковОС.ДатаПринятияКУчету КАК ДатаПринятияКУчету,
	|	""ОС"" КАК ВнеоборотныйАктив,
	|	ОСПринятыеКУчету.Организация КАК Организация,
	|	ОСПринятыеКУчету.ОсновноеСредство КАК Объект,
	|	ВводОстатковОС.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ВводОстатковОС.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РаспределятьНДС,
	|	ЛОЖЬ КАК ВключаетсяВРасходыНУПриПринятииКУчету,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеРасходовНУ,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовНУ,
	|	ЛОЖЬ КАК ЭтоПринимаемаяСтатьяРасходовНУ,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходовНУ
	|ПОМЕСТИТЬ ВтВнеоборотныеАктивы
	|ИЗ
	|	ВтРегистраторыПринятияКУчетуОС КАК ОСПринятыеКУчету
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатковВнеоборотныхАктивов.ОС КАК ВводОстатковОС
	|	ПО
	|		ОСПринятыеКУчету.Регистратор = ВводОстатковОС.Ссылка
	|		И ОСПринятыеКУчету.ОсновноеСредство = ВводОстатковОС.ОсновноеСредство
	|ГДЕ
	|	ВводОстатковОС.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПринятиеКУчетуОС.Дата КАК ДатаПринятияКУчету,
	|	""ОС"" КАК ВнеоборотныйАктив,
	|	ОСПринятыеКУчету.Организация КАК Организация,
	|	ОСПринятыеКУчету.ОсновноеСредство КАК Объект,
	|	ПринятиеКУчетуОС.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ПринятиеКУчетуОС.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РаспределятьНДС,
	|	ВЫБОР
	|		КОГДА ПринятиеКУчетуОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету)
	|				И КОНЕЦПЕРИОДА(ПринятиеКУчетуОС.Дата, МЕСЯЦ) = &КонецПериода
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ 
	|	КОНЕЦ КАК ВключаетсяВРасходыНУПриПринятииКУчету,
	|	ПринятиеКУчетуОС.Местонахождение КАК ПодразделениеРасходовНУ,
	|	ПринятиеКУчетуОС.СтатьяРасходов КАК СтатьяРасходовНУ,
	|	ПринятиеКУчетуОС.СтатьяРасходов.ПринятиеКНалоговомуУчету КАК ЭтоПринимаемаяСтатьяРасходовНУ,
	|	ПринятиеКУчетуОС.АналитикаРасходов КАК АналитикаРасходовНУ
	|ИЗ
	|	ВтРегистраторыПринятияКУчетуОС КАК ОСПринятыеКУчету
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПринятиеКУчетуОС КАК ПринятиеКУчетуОС
	|	ПО
	|		ОСПринятыеКУчету.Регистратор = ПринятиеКУчетуОС.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).Дата КАК ДатаПринятияКУчету,
	|	""НМА"" КАК ВнеоборотныйАктив,
	|	НМАПринятыеКУчету.Организация КАК Организация,
	|	НМАПринятыеКУчету.НематериальныйАктив КАК АналитикаРасходов,
	|	ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РаспределятьНДС,
	|	ВЫБОР 
	|		КОГДА ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).ПорядокСписанияНИОКРНаРасходыНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокСписанияНИОКРНУ.ПриПринятииКУчету)
	|				И ВЫРАЗИТЬ(НМАПринятыеКУчету.НематериальныйАктив КАК Справочник.НематериальныеАктивы).ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ ВключаетсяВРасходыНУПриПринятииКУчету,
	|	ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).Подразделение КАК ПодразделениеРасходовНУ,
	|   ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).СтатьяРасходов КАК СтатьяРасходовНУ,
	|   ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).СтатьяРасходов.ПринятиеКНалоговомуУчету КАК ЭтоПринимаемаяСтатьяРасходовНУ,
	|	ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).АналитикаРасходов КАК АналитикаРасходовНУ
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|			&Граница,
	|			(Организация, НематериальныйАктив, СостояниеБУ) В 
	|				(ВЫБРАТЬ
	|					ОтборОбъектов.Организация,
	|					ОтборОбъектов.Объект,
	|					ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|				ИЗ
	|					ОтборОбъектов КАК ОтборОбъектов)) КАК НМАПринятыеКУчету
	|ГДЕ
	|	Регистратор ССЫЛКА Документ.ПринятиеКУчетуНМА
	|;
	|
	|//////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОтборОбъектов
	|;
	|//////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтРегистраторыПринятияКУчетуОС";
	
	Запрос.УстановитьПараметр("Граница",      Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирует временную таблицу принятых к учету внеоборотных активов (ВтВнеоборотныеАктивы) при использования учета
// внеоборотных активов 2.4.
//
// Параметры:
//  НачалоПериода			 - Дата						 - Начало периода.
//  КонецПериода			 - Дата						 - Конец периода.
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц	 - Хранит сформированную таблицу ВтВнеоборотныеАктивы.
//
Процедура СформироватьТаблицуПринятыхКУчетуВнеоборотныхАктивовДляРаспределенияНДС_2_4(НачалоПериода, КонецПериода, МенеджерВременныхТаблиц) Экспорт

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаОстатков.Организация,
	|	ТаблицаОстатков.АналитикаРасходов КАК Объект
	|ПОМЕСТИТЬ ОтборОбъектов
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|ГДЕ
	|	ТаблицаОстатков.ВариантРаспределенияРасходовСтатьи = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|;
	|
	|//////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(СтоимостьОС.Период, МЕСЯЦ)       КАК ДатаПринятияКУчету,
	|	""ОС""                                        КАК ВнеоборотныйАктив,
	|	СтоимостьОС.Организация                       КАК Организация,
	|	СтоимостьОС.АналитикаКапитализацииРасходов    КАК Объект,
	|	СтоимостьОС.НалогообложениеНДС                КАК НалогообложениеНДС,
	|	(СтоимостьОС.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)) КАК РаспределятьНДС,
	// В режиме 2.4 не используются, но нужны для совместимости
	|	ЛОЖЬ                   КАК ВключаетсяВРасходыНУПриПринятииКУчету,
	|	НЕОПРЕДЕЛЕНО           КАК ПодразделениеРасходовНУ,
	|	НЕОПРЕДЕЛЕНО           КАК СтатьяРасходовНУ,
	|	NULL                   КАК ЭтоПринимаемаяСтатьяРасходовНУ,
	|	НЕОПРЕДЕЛЕНО           КАК АналитикаРасходовНУ
	|ПОМЕСТИТЬ ВтВнеоборотныеАктивы
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|ГДЕ
	|	СтоимостьОС.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СтоимостьОС.Активность
	|	И СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	И СтоимостьОС.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуПредметовАренды),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС))
	|
	|	И СтоимостьОС.ОтражатьВРеглУчете
	|
	|	И (СтоимостьОС.Организация, СтоимостьОС.АналитикаКапитализацииРасходов) В
	|			(ВЫБРАТЬ
	|				ОтборОбъектов.Организация,
	|				ОтборОбъектов.Объект
	|			ИЗ
	|				ОтборОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(СтоимостьНМА.Период, МЕСЯЦ)       КАК ДатаПринятияКУчету,
	|	""НМА""                                        КАК ВнеоборотныйАктив,
	|	СтоимостьНМА.Организация                       КАК Организация,
	|	СтоимостьНМА.НематериальныйАктив               КАК Объект,
	|	СтоимостьНМА.НалогообложениеНДС                КАК НалогообложениеНДС,
	|	(СтоимостьНМА.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)) КАК РаспределятьНДС,
	// В режиме 2.4 не используются, но нужны для совместимости
	|	ЛОЖЬ                   КАК ВключаетсяВРасходыНУПриПринятииКУчету,
	|	НЕОПРЕДЕЛЕНО           КАК ПодразделениеРасходовНУ,
	|	НЕОПРЕДЕЛЕНО           КАК СтатьяРасходовНУ,
	|	NULL                   КАК ЭтоПринимаемаяСтатьяРасходовНУ,
	|	НЕОПРЕДЕЛЕНО           КАК АналитикаРасходовНУ
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|ГДЕ
	|	СтоимостьНМА.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СтоимостьНМА.Активность
	|	И СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	И СтоимостьНМА.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМА),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УлучшениеНМА))
	|
	|	И СтоимостьНМА.ОтражатьВРеглУчете
	|
	|	И (СтоимостьНМА.Организация, СтоимостьНМА.НематериальныйАктив) В
	|			(ВЫБРАТЬ
	|				ОтборОбъектов.Организация,
	|				ОтборОбъектов.Объект
	|			ИЗ
	|				ОтборОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ВнеоборотныйАктив
	|;
	|
	|//////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОтборОбъектов
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(КонецПериода));
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(КонецПериода, ВидГраницы.Включая));
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#Область ПризнаниеВНУАрендныхПлатежей

// Признает услуги по аренде в расходах налогового учета.
// 
// Параметры:
// 	СтруктураШапки - Структура - 
// 	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц -
// 	Движения - КоллекцияДвижений - 
// 	Отказ - Булево - 
Процедура ПризнаниеВНУАрендныхПлатежей(СтруктураШапки, МенеджерВременныхТаблиц, Движения, Отказ) Экспорт
	
	ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитикПовтИсп.ДействующиеПараметрыНалоговУчетныхПолитик(
		"НастройкиУчетаНалогаНаПрибыль",
		СтруктураШапки.Организация,
		СтруктураШапки.Дата);
	
	Если МенеджерВременныхТаблиц = Неопределено Тогда
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КонецЕсли; 
	
	Если ПараметрыУчетнойПолитики = Неопределено
		ИЛИ НЕ ПараметрыУчетнойПолитики.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи Тогда
		Возврат;
	КонецЕсли;
	
	КлючеваяОперация = "Лизинг.ПризнаниеВНУАрендныхПлатежей";
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(КлючеваяОперация);
	КоличествоОбработанныхДанных = 0;
	
	ПараметрыПроведения = ПодготовитьПараметрыПризнаниеВНУАрендныхПлатежей(СтруктураШапки);
	
	ТаблицаЗатратПоАмортизации = УправлениеВнеоборотнымиАктивамиПереопределяемый.ПустаяТаблицаАмортизации();
	
	ПараметрыРасходыПоАренднымПлатежамНУ = ПодготовитьТаблицыРасходовПоАренднымПлатежамНУ(
											ПараметрыПроведения.ТаблицаОС, 
											ПараметрыПроведения.АрендныеПлатежи, 
											ТаблицаЗатратПоАмортизации, 
											КоличествоОбработанныхДанных,
											Отказ);
	
	Если НЕ Отказ Тогда
	
		// Формирование данных для проведения по регистрам опер учета на основании рассчитанных расходов по арендным платежам.
		ТекстыЗапроса = Новый СписокЗначений;
		ТекстЗапросаВтРасходыПоАренднымПлатежам(ТекстыЗапроса);
		ТекстЗапросаВтКорректировкаАмортизации(ТекстыЗапроса);
		ТекстЗапросаПризнаниеВНУАрендныхПлатежейПрочиеРасходы(ТекстыЗапроса);
		ТекстЗапросаПризнаниеВНУАрендныхПлатежейПартииПрочихРасходов(ТекстыЗапроса);
		ТекстЗапросаПризнаниеВНУАрендныхПлатежейСтоимостьОС(ТекстыЗапроса);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("РасходыПоАренднымПлатежам", ПараметрыРасходыПоАренднымПлатежамНУ.ТаблицаРасходыПоАренднымПлатежамНУ);
		Запрос.УстановитьПараметр("КорректировкаАмортизации", ПараметрыРасходыПоАренднымПлатежамНУ.ТаблицаКорректировкаАмортизации);
		Запрос.УстановитьПараметр("Период", СтруктураШапки.Дата);
		Запрос.УстановитьПараметр("Организация", СтруктураШапки.Организация);
		Запрос.УстановитьПараметр("Ссылка", СтруктураШапки.Ссылка);
		Запрос.УстановитьПараметр("ИспользуетсяУправлениеВНА_2_4", ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(СтруктураШапки.Дата));
		
		ТаблицыДляДвижений = ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(
			Запрос,
			ТекстыЗапроса,
			Неопределено);
		
		// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
		
		// По регистру ПрочиеРасходы
		ДоходыИРасходыСервер.ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ);
		
		// По регистру ПартииПрочихРасходов
		ПартионныйУчетСервер.ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ);
		
		// По регистру СтоимостьОС
		ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "СтоимостьОС");
		
		// По регистрам РасчетРасходовПоАренде
		СформироватьДвиженияРасчетРасходовПоАренде(
			ПараметрыРасходыПоАренднымПлатежамНУ.ТаблицаРасходыПоАренднымПлатежамНУ, 
			ПараметрыРасходыПоАренднымПлатежамНУ.ТаблицаРеквизиты,
			Движения, 
			Отказ);
		
	КонецЕсли;
		
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоОбработанныхДанных);
		
КонецПроцедуры

// Определяет период, в котором требуется выполнение операции "Признание в НУ арендных платежей"
// 
// Параметры:
// 	Организация - СправочникСсылка.Организации - 
// 	НачалоПериода - Дата -
// Возвращаемое значение:
// 	Дата - 
Функция СледующийПериодПризнанияВНУАрендныхПлатежей(Организация, НачалоПериода) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДоговорыАренды.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ДоговорыАренды
	|ИЗ
	|	Справочник.ДоговорыАренды КАК ДоговорыАренды
	|ГДЕ
	|	(ДоговорыАренды.ДатаОкончанияДействия >= &НачалоМесяца
	|		ИЛИ ДоговорыАренды.ДатаОкончанияДействия = ДАТАВРЕМЯ(1, 1, 1))
	|	И ДоговорыАренды.Балансодержатель = ЗНАЧЕНИЕ(Перечисление.БалансодержательПредметовАренды.Арендатор)
	|	И ДоговорыАренды.Организация = &Организация
	|	И ДоговорыАренды.УчитыватьПредметыАрендыВРеглУчете
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(УсловияДоговоровАренды.Период), НЕОПРЕДЕЛЕНО) КАК Период
	|ИЗ 
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		&НачалоМесяца КАК Период
	|	ИЗ
	|		РегистрСведений.УсловияДоговоровАренды.СрезПоследних(
	|				&КонецПредыдущегоМесяца, 
	|				Договор В
	|					(ВЫБРАТЬ
	|						ВТ_ДоговорыАренды.Ссылка
	|					ИЗ
	|						ВТ_ДоговорыАренды КАК ВТ_ДоговорыАренды)) КАК УсловияДоговоровАренды
	|	ГДЕ
	|		УсловияДоговоровАренды.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияДоговоровКонтрагентов.Действует)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		МИНИМУМ(УсловияДоговоровАренды.Период) КАК Период
	|	ИЗ
	|		РегистрСведений.УсловияДоговоровАренды КАК УсловияДоговоровАренды
	|	ГДЕ
	|		УсловияДоговоровАренды.Период > &КонецПредыдущегоМесяца
	|		И УсловияДоговоровАренды.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияДоговоровКонтрагентов.Действует)
	|		И УсловияДоговоровАренды.Активность
	|		И УсловияДоговоровАренды.Договор В
	|					(ВЫБРАТЬ
	|						ВТ_ДоговорыАренды.Ссылка
	|					ИЗ
	|						ВТ_ДоговорыАренды КАК ВТ_ДоговорыАренды)) КАК УсловияДоговоровАренды";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяца", НачалоМесяца(НачалоПериода)-1);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Период;
	КонецЕсли; 

	Возврат Неопределено;
	
КонецФункции

// Возвращает текст запроса с временной таблицей ВтРасходыПоАренднымПлатежам
//
// Возвращаемое значение:
// 		Строка - Текст запроса для получения пустой временной таблицы "ВтРасходыПоАренднымПлатежам".
//
Функция ТекстЗапросаПустаяВременнаяТаблицаРасходыПоАренднымПлатежам() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыАренды.ПустаяСсылка) КАК ДоговорКонтрагента,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеЗатрат,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	0 КАК СуммаПлатежаНУ,
	|	0 КАК КорректировкаАмортизацииНУ,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиЗатрат,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий
	|ПОМЕСТИТЬ ВтРасходыПоАренднымПлатежам
	|ГДЕ
	|	ЛОЖЬ";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса с временной таблицей ВтКорректировкаАмортизации
//
// Возвращаемое значение:
// 		Строка - Текст запроса для получения пустой временной таблицы "ВтРасходыПоАренднымПлатежам".
//
Функция ТекстЗапросаПустаяВременнаяТаблицаКорректировкаАмортизации() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыАренды.ПустаяСсылка) КАК ДоговорКонтрагента,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеЗатрат,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	0 КАК КорректировкаАмортизацииНУ,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиЗатрат,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий
	|ПОМЕСТИТЬ ВтКорректировкаАмортизации
	|ГДЕ
	|	ЛОЖЬ";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Прочее

// Определяет максимальный размер амортизационной премии.
//
// Параметры:
//  АмортизационнаяГруппа	 - ПеречислениеСсылка.АмортизационныеГруппы	 - Амортизационные группа ОС.
// 
// Возвращаемое значение:
//  Число - процент амортизационной премии.
//
Функция ПроцентКапитальныхВложенийВключаемыхВРасходыНУ(АмортизационнаяГруппа) Экспорт

	Если НЕ ЗначениеЗаполнено(АмортизационнаяГруппа) Тогда
		Возврат 0;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ТретьяГруппа
		ИЛИ АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ЧетвертаяГруппа
		ИЛИ АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ПятаяГруппа
		ИЛИ АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ШестаяГруппа
		ИЛИ АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.СедьмаяГруппа Тогда
		
		Возврат 30;
	Иначе
		Возврат 10;
	КонецЕсли;

КонецФункции

// Формирует временную таблицу, которая содержит сведения об основных средствах, указанных в документах.
//  Может использоваться при печати.
//
// Параметры:
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц	 - Менеджер временных таблиц.
//  СписокДокументов		 - Массив					 - Список документов.
//
Процедура ПолучитьСведенияОбОсновныхСредствахВДокументах(МенеджерВременныхТаблиц, СписокДокументов) Экспорт

	ИспользуемыеВременныеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);
	
	ОбъектыДляКоторыхСведенияНеАктуальны = ВнеоборотныеАктивы.ОтложенноеФормированиеДвиженийПриФормированииПроводок(СписокДокументов);
	ДанныеДляПредварительногоРасчетаСтоимости = ВнеоборотныеАктивы.ДанныеДляПредварительногоРасчетаСтоимостиВнеоборотныхАктивов(СписокДокументов);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
		ОбъектыДляКоторыхСведенияНеАктуальны, 
		ДанныеДляПредварительногоРасчетаСтоимости.ОбъектыДляКоторыхСведенияНеАктуальны,
		Истина);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивСсылок", СписокДокументов);
	Запрос.УстановитьПараметр("ОбъектыДляКоторыхСведенияНеАктуальны", ОбъектыДляКоторыхСведенияНеАктуальны);
	
	// Вычисление периода, за который нужно получить данные (для оптимизации).
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(Т.Дата), ДАТАВРЕМЯ(1, 1, 1)) КАК НачалоПериода,
	|	ЕСТЬNULL(МАКСИМУМ(Т.Дата), ДАТАВРЕМЯ(1, 1, 1)) КАК КонецПериода
	|ИЗ
	|	втОбъектыДокументов КАК Т";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	НачалоПериода = '000101010000';
	КонецПериода = '000101010000';
	Если Выборка.Следующий() Тогда
		Если ЗначениеЗаполнено(Выборка.НачалоПериода) Тогда
			НачалоПериода = НачалоМесяца(Выборка.НачалоПериода);
			КонецПериода = КонецМесяца(Выборка.КонецПериода);
		КонецЕсли; 
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	ДатаНачалаУчета24 = ДатаНачалаУчетаВнеоборотныхАктивов2_4();
	
	ПолучитьДанные22 = ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2")
						И НачалоПериода < ДатаНачалаУчета24;
		
	Запрос.УстановитьПараметр("ДатаНачалаУчета24", ДатаНачалаУчета24);
	Запрос.УстановитьПараметр("ПолучитьДанные22", ПолучитьДанные22);
	
	СписокЗапросов = Новый Массив;
	
	Если ПолучитьДанные22 Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ПериодыПараметров.Ссылка КАК Ссылка,
		|	ПериодыПараметров.ОсновноеСредство КАК ОсновноеСредство,
		|	МАКСИМУМ(ТаблицаПоследнийПериод.Период) КАК ПериодСрезаПоследних
		|ПОМЕСТИТЬ ПорядокУчетаОС_СрезПоследних
		|ИЗ
		|	втОбъектыДокументов КАК ПериодыПараметров
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС КАК ТаблицаПоследнийПериод
		|		ПО (ТаблицаПоследнийПериод.ОсновноеСредство = ПериодыПараметров.ОсновноеСредство)
		|			И (ТаблицаПоследнийПериод.Период <= ПериодыПараметров.Дата)
		|			И (ТаблицаПоследнийПериод.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
		|
		|СГРУППИРОВАТЬ ПО
		|	ПериодыПараметров.Ссылка,
		|	ПериодыПараметров.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство,
		|	ПериодСрезаПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСрезПоследних.Ссылка КАК Ссылка,
		|	ТаблицаСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаРегистраНаДату.СчетУчета КАК СчетУчета,
		|	ТаблицаРегистраНаДату.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
		|ПОМЕСТИТЬ ПорядокУчетаОС
		|ИЗ
		|	ПорядокУчетаОС_СрезПоследних КАК ТаблицаСрезПоследних
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС КАК ТаблицаРегистраНаДату
		|		ПО (ТаблицаРегистраНаДату.ОсновноеСредство = ТаблицаСрезПоследних.ОсновноеСредство)
		|			И (ТаблицаРегистраНаДату.Период = ТаблицаСрезПоследних.ПериодСрезаПоследних)
		|			И (ТаблицаРегистраНаДату.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство,
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПорядокУчетаОС_СрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыПараметров.Ссылка КАК Ссылка,
		|	ПериодыПараметров.ОсновноеСредство КАК ОсновноеСредство,
		|	МАКСИМУМ(ТаблицаПоследнийПериод.Период) КАК ПериодСрезаПоследних
		|ПОМЕСТИТЬ ПараметрыЦелевогоФинансированияОС_СрезПоследних
		|ИЗ
		|	втОбъектыДокументов КАК ПериодыПараметров
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК ТаблицаПоследнийПериод
		|		ПО (ТаблицаПоследнийПериод.ОсновноеСредство = ПериодыПараметров.ОсновноеСредство)
		|			И (ТаблицаПоследнийПериод.Период <= ПериодыПараметров.Дата)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПериодыПараметров.Ссылка,
		|	ПериодыПараметров.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство,
		|	ПериодСрезаПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСрезПоследних.Ссылка КАК Ссылка,
		|	ТаблицаСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаРегистраНаДату.СчетУчета КАК СчетУчета,
		|	ТаблицаРегистраНаДату.СчетАмортизации КАК СчетНачисленияАмортизации
		|ПОМЕСТИТЬ ПараметрыЦелевогоФинансированияОС
		|ИЗ
		|	ПараметрыЦелевогоФинансированияОС_СрезПоследних КАК ТаблицаСрезПоследних
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК ТаблицаРегистраНаДату
		|		ПО (ТаблицаРегистраНаДату.ОсновноеСредство = ТаблицаСрезПоследних.ОсновноеСредство)
		|			И (ТаблицаРегистраНаДату.Период = ТаблицаСрезПоследних.ПериодСрезаПоследних)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство,
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПараметрыЦелевогоФинансированияОС_СрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокСчетов.СчетУчета КАК Счет
		|ПОМЕСТИТЬ СписокСчетов
		|ИЗ
		|	ПорядокУчетаОС КАК СписокСчетов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокСчетов.СчетНачисленияАмортизации
		|ИЗ
		|	ПорядокУчетаОС КАК СписокСчетов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокСчетов.СчетУчета
		|ИЗ
		|	ПараметрыЦелевогоФинансированияОС КАК СписокСчетов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокСчетов.СчетНачисленияАмортизации
		|ИЗ
		|	ПараметрыЦелевогоФинансированияОС КАК СписокСчетов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СписокСчетов.СчетУчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Период КАК Период,
		|	ХозрасчетныйОстаткиИОбороты.Регистратор КАК Регистратор,
		|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК ОсновноеСредство,
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт
		|ПОМЕСТИТЬ втХозрасчетный
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&ДатаНачалаУчета24,
		|			Регистратор,
		|			,
		|			Счет В
		|				(ВЫБРАТЬ
		|					СписокСчетов.Счет
		|				ИЗ
		|					СписокСчетов),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			(Субконто1) В
		|				(ВЫБРАТЬ
		|					Т.ОсновноеСредство
		|				ИЗ
		|					втОбъектыДокументов КАК Т)) КАК ХозрасчетныйОстаткиИОбороты
		|ГДЕ
		|	НЕ ХозрасчетныйОстаткиИОбороты.Регистратор = НЕОПРЕДЕЛЕНО";
		
		СписокЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаСтоимость.Период КАК Период,
	|	ТаблицаСтоимость.Регистратор КАК Регистратор,
	|	ТаблицаСтоимость.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаСтоимость.СтоимостьРеглПриход + ТаблицаСтоимость.СтоимостьЦФПриход КАК СтоимостьПриход,
	|	ТаблицаСтоимость.СтоимостьРеглРасход + ТаблицаСтоимость.СтоимостьЦФРасход КАК СтоимостьРасход,
	|	ТаблицаСтоимость.СтоимостьРеглКонечныйОстаток + ТаблицаСтоимость.СтоимостьЦФКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|	ТаблицаСтоимость.ЗалоговаяСтоимостьПриход КАК ЗалоговаяСтоимостьПриход,
	|	ТаблицаСтоимость.ЗалоговаяСтоимостьРасход КАК ЗалоговаяСтоимостьРасход
	|ПОМЕСТИТЬ втСтоимостиЗаписи
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			,
	|			ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					Т.ОсновноеСредство
	|				ИЗ
	|					втОбъектыДокументов КАК Т)) КАК ТаблицаСтоимость
	|ГДЕ
	|	(ТаблицаСтоимость.СтоимостьРеглКонечныйОстаток + ТаблицаСтоимость.СтоимостьЦФКонечныйОстаток) <> 0
	|		ИЛИ (ТаблицаСтоимость.СтоимостьРеглОборот + ТаблицаСтоимость.СтоимостьЦФОборот) <> 0
	|		ИЛИ ТаблицаСтоимость.ЗалоговаяСтоимостьПриход <> 0
	|		ИЛИ ТаблицаСтоимость.ЗалоговаяСтоимостьРасход <> 0
	|
	|//втСтоимостиЗаписи22//
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАмортизация.Период КАК Период,
	|	ТаблицаАмортизация.Регистратор КАК Регистратор,
	|	ТаблицаАмортизация.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаАмортизация.АмортизацияРеглРасход + ТаблицаАмортизация.АмортизацияЦФРасход КАК АмортизацияПриход,
	|	ТаблицаАмортизация.АмортизацияРеглПриход + ТаблицаАмортизация.АмортизацияЦФПриход КАК АмортизацияРасход,
	|	-(ТаблицаАмортизация.АмортизацияРеглКонечныйОстаток + ТаблицаАмортизация.АмортизацияЦФКонечныйОстаток) КАК АмортизацияКонечныйОстаток
	|ПОМЕСТИТЬ втАмортизацияЗаписи
	|ИЗ
	|	РегистрНакопления.АмортизацияОС.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			,
	|			ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					Т.ОсновноеСредство
	|				ИЗ
	|					втОбъектыДокументов КАК Т)) КАК ТаблицаАмортизация
	|
	|//втАмортизацияЗаписи22//
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период";
	
	Если ПолучитьДанные22 Тогда
		
		ТекстЗапроса22 =
		"		
		|ОБЪЕДИНИТЬ ВСЕ
		|		
		|ВЫБРАТЬ
		|	ТаблицаСтоимость.Период КАК Период,
		|	ТаблицаСтоимость.Регистратор КАК Регистратор,
		|	ТаблицаСтоимость.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(ТаблицаСтоимость.СуммаОборотДт) КАК СтоимостьПриход,
		|	СУММА(ТаблицаСтоимость.СуммаОборотКт) КАК СтоимостьРасход,
		|	СУММА(ТаблицаСтоимость.СуммаКонечныйОстатокДт) КАК СтоимостьКонечныйОстаток,
		|	0 КАК ЗалоговаяСтоимостьПриход,
		|	0 КАК ЗалоговаяСтоимостьРасход
		|ИЗ
		|	втХозрасчетный КАК ТаблицаСтоимость
		|ГДЕ
		|	ТаблицаСтоимость.Счет В
		|			(ВЫБРАТЬ
		|				СписокСчетов.СчетУчета
		|			ИЗ
		|				ПорядокУчетаОС КАК СписокСчетов
		|		
		|			ОБЪЕДИНИТЬ ВСЕ
		|		
		|			ВЫБРАТЬ
		|				СписокСчетов.СчетУчета
		|			ИЗ
		|				ПараметрыЦелевогоФинансированияОС КАК СписокСчетов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаСтоимость.Период,
		|	ТаблицаСтоимость.Регистратор,
		|	ТаблицаСтоимость.ОсновноеСредство";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//втСтоимостиЗаписи22//", ТекстЗапроса22);
		
		ТекстЗапроса22 =
		"		
		|ОБЪЕДИНИТЬ ВСЕ
		|		
		|ВЫБРАТЬ
		|	ТаблицаАмортизация.Период КАК Период,
		|	ТаблицаАмортизация.Регистратор КАК Регистратор,
		|	ТаблицаАмортизация.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(ТаблицаАмортизация.СуммаОборотКт) КАК АмортизацияПриход,
		|	СУММА(ТаблицаАмортизация.СуммаОборотДт) КАК АмортизацияРасход,
		|	СУММА(ТаблицаАмортизация.СуммаКонечныйОстатокКт) КАК АмортизацияКонечныйОстаток
		|ИЗ
		|	втХозрасчетный КАК ТаблицаАмортизация
		|ГДЕ
		|	ТаблицаАмортизация.Счет В
		|			(ВЫБРАТЬ
		|				СписокСчетов.СчетНачисленияАмортизации
		|			ИЗ
		|				ПорядокУчетаОС КАК СписокСчетов
		|		
		|			ОБЪЕДИНИТЬ ВСЕ
		|		
		|			ВЫБРАТЬ
		|				СписокСчетов.СчетНачисленияАмортизации
		|			ИЗ
		|				ПараметрыЦелевогоФинансированияОС КАК СписокСчетов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаАмортизация.Период,
		|	ТаблицаАмортизация.Регистратор,
		|	ТаблицаАмортизация.ОсновноеСредство";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//втАмортизацияЗаписи22//", ТекстЗапроса22);
		
	КонецЕсли; 
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(втСтоимостиЗаписи.Период) КАК Период,
	|	втОбъектыДокументов.Дата КАК Дата,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втСтоимостиПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК втСтоимостиЗаписи
	|		ПО втОбъектыДокументов.ОсновноеСредство = втСтоимостиЗаписи.ОсновноеСредство
	|			И втОбъектыДокументов.Дата >= втСтоимостиЗаписи.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Дата,
	|	втОбъектыДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// Сумма НДС, включенная в стоимость в конце месяце.
	// Она должна учитываться с момента принятия к учету или модернизации.
	|ВЫБРАТЬ
	|	МИНИМУМ(ЕСТЬNULL(ПринятиеКУчетуИлиМодернизация.Период, НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ))) КАК Период,
	|	НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ) КАК НачалоМесяца,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(РаспределениеНДС.СтоимостьПриход, 0) - ЕСТЬNULL(РаспределениеНДС.СтоимостьРасход, 0) КАК СтоимостьОборот
	|ПОМЕСТИТЬ втСтоимостиРаспределениеНДС
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК РаспределениеНДС
	|		ПО втОбъектыДокументов.ОсновноеСредство = РаспределениеНДС.ОсновноеСредство
	|			И втОбъектыДокументов.Дата < РаспределениеНДС.Период
	|			И НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(РаспределениеНДС.Период, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(РаспределениеНДС.Регистратор) = ТИП(Документ.РаспределениеНДС)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК ПринятиеКУчетуИлиМодернизация
	|		ПО РаспределениеНДС.ОсновноеСредство = ПринятиеКУчетуИлиМодернизация.ОсновноеСредство
	|			И НАЧАЛОПЕРИОДА(РаспределениеНДС.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПринятиеКУчетуИлиМодернизация.Период, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(ПринятиеКУчетуИлиМодернизация.Регистратор) В (
	|				ТИП(Документ.ПринятиеКУчетуОС),
	|				ТИП(Документ.ПринятиеКУчетуОС2_4),
	|				ТИП(Документ.ПринятиеКУчетуУзловКомпонентовАмортизации),
	|				ТИП(Документ.МодернизацияОС),
	|				ТИП(Документ.МодернизацияОС2_4))
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ),
	|	втОбъектыДокументов.ОсновноеСредство,
	|	ЕСТЬNULL(РаспределениеНДС.СтоимостьПриход, 0) - ЕСТЬNULL(РаспределениеНДС.СтоимостьРасход, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСтоимостиПериод.Ссылка КАК Ссылка,
	|	втСтоимостиПериод.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	ВЫБОР 
	|		КОГДА НЕ втСтоимостиЗаписиДокумента.Регистратор ЕСТЬ NULL
	|			ТОГДА ЕСТЬNULL(втСтоимостиЗаписиДокумента.СтоимостьКонечныйОстаток, 0) + ЕСТЬNULL(РаспределениеНДС.СтоимостьОборот, 0)
	|		ИНАЧЕ ЕСТЬNULL(втСтоимостиЗаписи.СтоимостьКонечныйОстаток, 0) + ЕСТЬNULL(РаспределениеНДС.СтоимостьОборот, 0)
	|	КОНЕЦ КАК Стоимость,
	|
	// Содержит изменение стоимости документом, например, изменение суммы затрат на модернизацию.
	|	СУММА(ЕСТЬNULL(втСтоимостиЗаписиДокумента.СтоимостьПриход, 0))
	|		+ ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(втСтоимостиПериод.Ссылка) В (
	|						ТИП(Документ.ПринятиеКУчетуОС),
	|						ТИП(Документ.ПринятиеКУчетуОС2_4),
	|						ТИП(Документ.ПринятиеКУчетуУзловКомпонентовАмортизации),
	|						ТИП(Документ.МодернизацияОС),
	|						ТИП(Документ.МодернизацияОС2_4))
	|					ТОГДА СУММА(ЕСТЬNULL(РаспределениеНДС.СтоимостьОборот, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СтоимостьПриход,
	|
	|	СУММА(ЕСТЬNULL(втСтоимостиЗаписиДокумента.СтоимостьРасход, 0)) КАК СтоимостьРасход,
	|	СУММА(ЕСТЬNULL(втСтоимостиЗаписиДокумента.ЗалоговаяСтоимостьПриход, 0)) КАК ЗалоговаяСтоимостьПриход,
	|	СУММА(ЕСТЬNULL(втСтоимостиЗаписиДокумента.ЗалоговаяСтоимостьРасход, 0)) КАК ЗалоговаяСтоимостьРасход
	|
	|ПОМЕСТИТЬ втСтоимости
	|
	|ИЗ
	|	втСтоимостиПериод КАК втСтоимостиПериод
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК втСтоимостиЗаписи
	|		ПО втСтоимостиПериод.ОсновноеСредство = втСтоимостиЗаписи.ОсновноеСредство
	|			И втСтоимостиПериод.Период = втСтоимостиЗаписи.Период
	|			И втСтоимостиПериод.Ссылка <> втСтоимостиЗаписи.Регистратор
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК втСтоимостиЗаписиДокумента
	|		ПО втСтоимостиПериод.ОсновноеСредство = втСтоимостиЗаписиДокумента.ОсновноеСредство
	|			И втСтоимостиПериод.Ссылка = втСтоимостиЗаписиДокумента.Регистратор
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостиРаспределениеНДС КАК РаспределениеНДС
	|		ПО втСтоимостиПериод.ОсновноеСредство = РаспределениеНДС.ОсновноеСредство
	|			И втСтоимостиПериод.Период >= РаспределениеНДС.Период
	|			И втСтоимостиПериод.Период <> КОНЕЦПЕРИОДА(втСтоимостиПериод.Период, МЕСЯЦ)
	|			И НАЧАЛОПЕРИОДА(втСтоимостиПериод.Дата, МЕСЯЦ) = РаспределениеНДС.НачалоМесяца
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиПериод.Ссылка,
	|	втСтоимостиПериод.ОсновноеСредство,
	|	ВЫБОР 
	|		КОГДА НЕ втСтоимостиЗаписиДокумента.Регистратор ЕСТЬ NULL
	|			ТОГДА ЕСТЬNULL(втСтоимостиЗаписиДокумента.СтоимостьКонечныйОстаток, 0) + ЕСТЬNULL(РаспределениеНДС.СтоимостьОборот, 0)
	|		ИНАЧЕ ЕСТЬNULL(втСтоимостиЗаписи.СтоимостьКонечныйОстаток, 0) + ЕСТЬNULL(РаспределениеНДС.СтоимостьОборот, 0)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(втАмортизацияЗаписи.Период) КАК Период,
	|	втОбъектыДокументов.Дата КАК Дата,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|
	|ПОМЕСТИТЬ втАмортизацияПериод
	|
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАмортизацияЗаписи КАК втАмортизацияЗаписи
	|		ПО втОбъектыДокументов.ОсновноеСредство = втАмортизацияЗаписи.ОсновноеСредство
	|			И КОНЕЦПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ) >= втАмортизацияЗаписи.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.Дата,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// Сумма НДС, включенная в стоимость в конце месяце,
	// Она должна учитываться с момента принятия к учету или модернизации.
	|ВЫБРАТЬ
	|	МИНИМУМ(ЕСТЬNULL(ПринятиеКУчетуИлиМодернизация.Период, НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ))) КАК Период,
	|	НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ) КАК НачалоМесяца,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(РаспределениеНДС.АмортизацияПриход, 0) - ЕСТЬNULL(РаспределениеНДС.АмортизацияРасход, 0) КАК АмортизацияОборот
	|
	|ПОМЕСТИТЬ втАмортизацияРаспределениеНДС
	|
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАмортизацияЗаписи КАК РаспределениеНДС
	|		ПО втОбъектыДокументов.ОсновноеСредство = РаспределениеНДС.ОсновноеСредство
	|			И втОбъектыДокументов.Дата < РаспределениеНДС.Период
	|			И НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(РаспределениеНДС.Период, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(РаспределениеНДС.Регистратор) = ТИП(Документ.РаспределениеНДС)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК ПринятиеКУчетуИлиМодернизация
	|		ПО РаспределениеНДС.ОсновноеСредство = ПринятиеКУчетуИлиМодернизация.ОсновноеСредство
	|			И НАЧАЛОПЕРИОДА(РаспределениеНДС.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПринятиеКУчетуИлиМодернизация.Период, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(ПринятиеКУчетуИлиМодернизация.Регистратор) В (
	|				ТИП(Документ.ПринятиеКУчетуОС),
	|				ТИП(Документ.ПринятиеКУчетуОС2_4),
	|				ТИП(Документ.ПринятиеКУчетуУзловКомпонентовАмортизации),
	|				ТИП(Документ.МодернизацияОС),
	|				ТИП(Документ.МодернизацияОС2_4))
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ),
	|	втОбъектыДокументов.ОсновноеСредство,
	|	ЕСТЬNULL(РаспределениеНДС.АмортизацияПриход, 0) - ЕСТЬNULL(РаспределениеНДС.АмортизацияРасход, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втАмортизацияПериод.Ссылка КАК Ссылка,
	|	втАмортизацияПериод.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	ВЫБОР 
	|		КОГДА НЕ втАмортизацияЗаписиДокумента.Регистратор ЕСТЬ NULL
	|			ТОГДА ЕСТЬNULL(втАмортизацияЗаписиДокумента.АмортизацияКонечныйОстаток, 0) + ЕСТЬNULL(РаспределениеНДС.АмортизацияОборот, 0)
	|		ИНАЧЕ ЕСТЬNULL(втАмортизацияЗаписи.АмортизацияКонечныйОстаток, 0) + ЕСТЬNULL(РаспределениеНДС.АмортизацияОборот, 0)
	|	КОНЕЦ + ЕСТЬNULL(НачисленнаяАмортизация.АмортизацияПриход, 0) КАК Амортизация,
	
	// Содержит изменение амортизации документом.
	|	СУММА(ЕСТЬNULL(втАмортизацияЗаписиДокумента.АмортизацияПриход, 0)) КАК АмортизацияПриход,
	|
	|	СУММА(ЕСТЬNULL(втАмортизацияЗаписиДокумента.АмортизацияРасход, 0)) 
	|		+ ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(втАмортизацияПериод.Ссылка) В (
	|						ТИП(Документ.ПринятиеКУчетуОС),
	|						ТИП(Документ.ПринятиеКУчетуОС2_4),
	|						ТИП(Документ.ПринятиеКУчетуУзловКомпонентовАмортизации),
	|						ТИП(Документ.МодернизацияОС),
	|						ТИП(Документ.МодернизацияОС2_4))
	|					ТОГДА СУММА(ЕСТЬNULL(РаспределениеНДС.АмортизацияОборот, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК АмортизацияРасход
	|
	|ПОМЕСТИТЬ втАмортизация
	|
	|ИЗ
	|	втАмортизацияПериод КАК втАмортизацияПериод
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияЗаписи КАК втАмортизацияЗаписи
	|		ПО втАмортизацияПериод.ОсновноеСредство = втАмортизацияЗаписи.ОсновноеСредство
	|			И втАмортизацияПериод.Период = втАмортизацияЗаписи.Период
	|			И втАмортизацияПериод.Ссылка <> втАмортизацияЗаписи.Регистратор
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияЗаписи КАК втАмортизацияЗаписиДокумента
	|		ПО втАмортизацияПериод.ОсновноеСредство = втАмортизацияЗаписиДокумента.ОсновноеСредство
	|			И втАмортизацияПериод.Ссылка = втАмортизацияЗаписиДокумента.Регистратор
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияЗаписи КАК НачисленнаяАмортизация
	|		ПО НачисленнаяАмортизация.ОсновноеСредство = втАмортизацияЗаписи.ОсновноеСредство
	|			И НАЧАЛОПЕРИОДА(НачисленнаяАмортизация.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(втАмортизацияЗаписи.Период, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(НачисленнаяАмортизация.Регистратор) = ТИП(Документ.АмортизацияОС2_4)
	|			И НачисленнаяАмортизация.Период > втАмортизацияЗаписи.Период
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияРаспределениеНДС КАК РаспределениеНДС
	|		ПО втАмортизацияПериод.ОсновноеСредство = РаспределениеНДС.ОсновноеСредство
	|			И втАмортизацияПериод.Период >= РаспределениеНДС.Период
	|			И втАмортизацияПериод.Период <> КОНЕЦПЕРИОДА(втАмортизацияПериод.Период, МЕСЯЦ)
	|			И НАЧАЛОПЕРИОДА(втАмортизацияПериод.Дата, МЕСЯЦ) = РаспределениеНДС.НачалоМесяца
	|
	|СГРУППИРОВАТЬ ПО
	|	втАмортизацияПериод.Ссылка,
	|	втАмортизацияПериод.ОсновноеСредство,
	|	ВЫБОР 
	|		КОГДА НЕ втАмортизацияЗаписиДокумента.Регистратор ЕСТЬ NULL
	|			ТОГДА ЕСТЬNULL(втАмортизацияЗаписиДокумента.АмортизацияКонечныйОстаток, 0) + ЕСТЬNULL(РаспределениеНДС.АмортизацияОборот, 0)
	|		ИНАЧЕ ЕСТЬNULL(втАмортизацияЗаписи.АмортизацияКонечныйОстаток, 0) + ЕСТЬNULL(РаспределениеНДС.АмортизацияОборот, 0)
	|	КОНЕЦ + ЕСТЬNULL(НачисленнаяАмортизация.АмортизацияПриход, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ПервоначальныеСведенияОС
	|ВЫБРАТЬ
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ПервоначальныеСведения.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|
	|ПОМЕСТИТЬ втПервоначальныеСведенияПериод
	|
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведения
	|		ПО втОбъектыДокументов.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
	|			И ПервоначальныеСведения.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|			И (втОбъектыДокументов.Дата >= ПервоначальныеСведения.Период
	|				ИЛИ ТИПЗНАЧЕНИЯ(ПервоначальныеСведения.Регистратор) = ТИП(Документ.РаспределениеНДС)
	|					И НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПервоначальныеСведения.Период, МЕСЯЦ))
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПервоначальныеСведенияПериод.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ПервоначальныеСведения.Регистратор) КАК Регистратор,
	|	втПервоначальныеСведенияПериод.Ссылка КАК Ссылка
	|
	|ПОМЕСТИТЬ втПервоначальныеСведенияРегистратор
	|
	|ИЗ
	|	втПервоначальныеСведенияПериод КАК втПервоначальныеСведенияПериод
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведения
	|		ПО втПервоначальныеСведенияПериод.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
	|			И втПервоначальныеСведенияПериод.Период = ПервоначальныеСведения.Период
	|			И ПервоначальныеСведения.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|СГРУППИРОВАТЬ ПО
	|	втПервоначальныеСведенияПериод.ОсновноеСредство,
	|	втПервоначальныеСведенияПериод.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПервоначальныеСведенияРегистратор.Ссылка КАК Ссылка,
	|	ПервоначальныеСведения.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведения.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПервоначальныеСведения.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведения.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
	|	ПервоначальныеСведения.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ПервоначальныеСведения.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатацию,
	|	ПервоначальныеСведения.ДатаВводаВЭксплуатациюБУ КАК ДатаПринятияКУчету,
	|	ПервоначальныеСведения.Контрагент КАК Контрагент,
	|	ПервоначальныеСведения.ОсновноеСредство.ГруппаОС КАК ГруппаОС,
	|	ПервоначальныеСведения.ОсновноеСредство.КодПоОКОФ КАК КодПоОКОФ,
	|	ПервоначальныеСведения.ОсновноеСредство.ШифрПоЕНАОФ КАК ШифрПоЕНАОФ
	|
	|ПОМЕСТИТЬ втПервоначальныеСведения
	|
	|ИЗ
	|	втПервоначальныеСведенияРегистратор КАК втПервоначальныеСведенияРегистратор
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведения
	|		ПО втПервоначальныеСведенияРегистратор.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
	|			И втПервоначальныеСведенияРегистратор.Регистратор = ПервоначальныеСведения.Регистратор
	|			И ПервоначальныеСведения.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС2_4 КАК ПеремещениеОС2_4
	|		ПО ПеремещениеОС2_4.Ссылка = ПервоначальныеСведения.Регистратор
	|ГДЕ
	|	ПеремещениеОС2_4.Ссылка ЕСТЬ NULL
	|		ИЛИ ПеремещениеОС2_4.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
	|		ИЛИ ПеремещениеОС2_4.ОрганизацияПолучатель = ПервоначальныеСведения.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// МестонахождениеОС
	|ВЫБРАТЬ
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(МестонахождениеОС.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|
	|ПОМЕСТИТЬ втМестонахождениеПериод
	|
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС КАК МестонахождениеОС
	|		ПО втОбъектыДокументов.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|			И втОбъектыДокументов.Дата >= МестонахождениеОС.Период
	|			И МестонахождениеОС.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втМестонахождениеПериод.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(МестонахождениеОС.Регистратор) КАК Регистратор,
	|	втМестонахождениеПериод.Ссылка КАК Ссылка
	|
	|ПОМЕСТИТЬ втМестонахождениеРегистратор
	|
	|ИЗ
	|	втМестонахождениеПериод КАК втМестонахождениеПериод
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС КАК МестонахождениеОС
	|		ПО втМестонахождениеПериод.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|			И втМестонахождениеПериод.Период = МестонахождениеОС.Период
	|			И МестонахождениеОС.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|СГРУППИРОВАТЬ ПО
	|	втМестонахождениеПериод.ОсновноеСредство,
	|	втМестонахождениеПериод.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втМестонахождениеРегистратор.Ссылка КАК Ссылка,
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.МОЛ КАК МОЛ,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение
	|
	|ПОМЕСТИТЬ втМестонахождение
	|
	|ИЗ
	|	втМестонахождениеРегистратор КАК втМестонахождениеРегистратор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС КАК МестонахождениеОС
	|		ПО втМестонахождениеРегистратор.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|			И втМестонахождениеРегистратор.Регистратор = МестонахождениеОС.Регистратор
	|			И МестонахождениеОС.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ПараметрыАмортизацииОСБУ
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Организация КАК Организация,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ПараметрыАмортизацииОСБУ.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|
	|ПОМЕСТИТЬ втПараметрыАмортизацииПериод
	|
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ
	|		ПО втОбъектыДокументов.Организация = ПараметрыАмортизацииОСБУ.Организация
	|			И втОбъектыДокументов.ОсновноеСредство = ПараметрыАмортизацииОСБУ.ОсновноеСредство
	|			И втОбъектыДокументов.Дата >= ПараметрыАмортизацииОСБУ.Период
	|			И ПараметрыАмортизацииОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПараметрыАмортизацииПериод.Организация КАК Организация,
	|	втПараметрыАмортизацииПериод.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ПараметрыАмортизацииОСБУ.Регистратор) КАК Регистратор,
	|	втПараметрыАмортизацииПериод.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПараметрыАмортизацииРегистратор
	|ИЗ
	|	втПараметрыАмортизацииПериод КАК втПараметрыАмортизацииПериод
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ
	|		ПО втПараметрыАмортизацииПериод.Организация = ПараметрыАмортизацииОСБУ.Организация
	|			И втПараметрыАмортизацииПериод.ОсновноеСредство = ПараметрыАмортизацииОСБУ.ОсновноеСредство
	|			И втПараметрыАмортизацииПериод.Период = ПараметрыАмортизацииОСБУ.Период
	|			И ПараметрыАмортизацииОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|СГРУППИРОВАТЬ ПО
	|	втПараметрыАмортизацииПериод.Организация,
	|	втПараметрыАмортизацииПериод.ОсновноеСредство,
	|	втПараметрыАмортизацииПериод.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПараметрыАмортизацииРегистратор.Ссылка КАК Ссылка,
	|	ПараметрыАмортизации.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизации.СрокПолезногоИспользованияБУ КАК СрокПолезногоИспользования,
	|	ПараметрыАмортизации.КоэффициентАмортизацииБУ КАК КоэффициентАмортизации
	|ПОМЕСТИТЬ втПараметрыАмортизации
	|ИЗ
	|	втПараметрыАмортизацииРегистратор КАК втПараметрыАмортизацииРегистратор
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизации
	|		ПО втПараметрыАмортизацииРегистратор.Организация = ПараметрыАмортизации.Организация
	|			И втПараметрыАмортизацииРегистратор.ОсновноеСредство = ПараметрыАмортизации.ОсновноеСредство
	|			И втПараметрыАмортизацииРегистратор.Регистратор = ПараметрыАмортизации.Регистратор
	|			И ПараметрыАмортизации.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ПорядокУчетаОС
	|ВЫБРАТЬ
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ПорядокУчетаОС.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПорядокУчетаОСПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО втОбъектыДокументов.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|			И втОбъектыДокументов.Дата >= ПорядокУчетаОС.Период
	|			И ПорядокУчетаОС.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПорядокУчетаОСПериод.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ПорядокУчетаОС.Регистратор) КАК Регистратор,
	|	втПорядокУчетаОСПериод.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПорядокУчетаОСРегистратор
	|ИЗ
	|	втПорядокУчетаОСПериод КАК втПорядокУчетаОСПериод
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО втПорядокУчетаОСПериод.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|			И втПорядокУчетаОСПериод.Период = ПорядокУчетаОС.Период
	|			И ПорядокУчетаОС.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|СГРУППИРОВАТЬ ПО
	|	втПорядокУчетаОСПериод.ОсновноеСредство,
	|	втПорядокУчетаОСПериод.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПорядокУчетаОСРегистратор.Ссылка КАК Ссылка,
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОС.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета
	|ПОМЕСТИТЬ втПорядокУчетаОС
	|ИЗ
	|	втПорядокУчетаОСРегистратор КАК втПорядокУчетаОСРегистратор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО втПорядокУчетаОСРегистратор.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|			И втПорядокУчетаОСРегистратор.Регистратор = ПорядокУчетаОС.Регистратор
	|			И ПорядокУчетаОС.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ПорядокУчетаОСБУ
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Организация КАК Организация,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ПорядокУчетаОСБУ.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПорядокУчетаОСБУПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО втОбъектыДокументов.Организация = ПорядокУчетаОСБУ.Организация
	|			И втОбъектыДокументов.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|			И втОбъектыДокументов.Дата >= ПорядокУчетаОСБУ.Период
	|			И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПорядокУчетаОСБУПериод.Организация КАК Организация,
	|	втПорядокУчетаОСБУПериод.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ПорядокУчетаОСБУ.Регистратор) КАК Регистратор,
	|	втПорядокУчетаОСБУПериод.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПорядокУчетаОСБУРегистратор
	|ИЗ
	|	втПорядокУчетаОСБУПериод КАК втПорядокУчетаОСБУПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО втПорядокУчетаОСБУПериод.Организация = ПорядокУчетаОСБУ.Организация
	|			И втПорядокУчетаОСБУПериод.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|			И втПорядокУчетаОСБУПериод.Период = ПорядокУчетаОСБУ.Период
	|			И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|СГРУППИРОВАТЬ ПО
	|	втПорядокУчетаОСБУПериод.Организация,
	|	втПорядокУчетаОСБУПериод.ОсновноеСредство,
	|	втПорядокУчетаОСБУПериод.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПорядокУчетаОСБУРегистратор.Ссылка КАК Ссылка,
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа КАК АмортизационнаяГруппа
	|ПОМЕСТИТЬ втПорядокУчетаОСБУ
	|ИЗ
	|	втПорядокУчетаОСБУРегистратор КАК втПорядокУчетаОСБУРегистратор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО втПорядокУчетаОСБУРегистратор.Организация = ПорядокУчетаОСБУ.Организация
	|			И втПорядокУчетаОСБУРегистратор.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|			И втПорядокУчетаОСБУРегистратор.Регистратор = ПорядокУчетаОСБУ.Регистратор
	|			И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Ссылка КАК Ссылка,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(втПервоначальныеСведения.ИнвентарныйНомер, """") КАК ИнвентарныйНомер,
	|	ЕСТЬNULL(втПервоначальныеСведения.ПервоначальнаяСтоимостьБУ, 0) КАК ПервоначальнаяСтоимостьБУ,
	|	ЕСТЬNULL(втПервоначальныеСведения.МетодНачисленияАмортизацииБУ, """") КАК СпособНачисленияАмортизации,
	|	ЕСТЬNULL(втПервоначальныеСведения.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО) КАК ПорядокУчетаБУ,
	|	ЕСТЬNULL(втПервоначальныеСведения.ДатаПринятияКУчету, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПринятияКУчету,
	|	ЕСТЬNULL(втПервоначальныеСведения.ДокументВводаВЭксплуатацию, НЕОПРЕДЕЛЕНО) КАК ДокументВводаВЭксплуатацию,
	|	ЕСТЬNULL(втПервоначальныеСведения.ГруппаОС, ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка)) КАК ГруппаОС,
	|	ЕСТЬNULL(втПервоначальныеСведения.КодПоОКОФ, ЗНАЧЕНИЕ(Справочник.ОбщероссийскийКлассификаторОсновныхФондов.ПустаяСсылка)) КАК КодПоОКОФ,
	|	ЕСТЬNULL(втПервоначальныеСведения.ШифрПоЕНАОФ, ЗНАЧЕНИЕ(Справочник.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов.ПустаяСсылка)) КАК ШифрПоЕНАОФ,
	|	ЕСТЬNULL(втПорядокУчетаОСБУ.АмортизационнаяГруппа, ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПустаяСсылка)) КАК АмортизационнаяГруппа,
	|	ЕСТЬNULL(втПервоначальныеСведения.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Контрагент,
	|	ЕСТЬNULL(втМестонахождение.МОЛ, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК МОЛ,
	|	ЕСТЬNULL(втМестонахождение.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Местонахождение,
	|	ЕСТЬNULL(ПорядокОтраженияСтоимости.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчета,
	|	ЕСТЬNULL(ПорядокОтраженияАмортизации.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетАмортизации,
	|	ЕСТЬNULL(втПараметрыАмортизации.СрокПолезногоИспользования, 0) КАК СрокПолезногоИспользования,
	|	ЕСТЬNULL(втПараметрыАмортизации.КоэффициентАмортизации, 0) КАК КоэффициентАмортизации,
	|	ЕСТЬNULL(втСтоимости.Стоимость, 0) КАК НакопленнаяСтоимость,
	|	ЕСТЬNULL(втСтоимости.СтоимостьПриход, 0) - ЕСТЬNULL(втСтоимости.СтоимостьРасход, 0) КАК СтоимостьОборот,
	|	ЕСТЬNULL(втСтоимости.СтоимостьПриход, 0) КАК СтоимостьПриход,
	|	ЕСТЬNULL(втСтоимости.СтоимостьРасход, 0) КАК СтоимостьРасход,
	|	ЕСТЬNULL(втСтоимости.ЗалоговаяСтоимостьПриход, 0) КАК ЗалоговаяСтоимостьПриход,
	|	ЕСТЬNULL(втСтоимости.ЗалоговаяСтоимостьРасход, 0) КАК ЗалоговаяСтоимостьРасход,
	|	ЕСТЬNULL(втАмортизация.Амортизация, 0) КАК НакопленнаяАмортизация,
	|	ЕСТЬNULL(втАмортизация.АмортизацияПриход, 0) - ЕСТЬNULL(втАмортизация.АмортизацияРасход, 0) КАК АмортизацияОборот,
	|	ЕСТЬNULL(втАмортизация.АмортизацияПриход, 0) КАК АмортизацияПриход,
	|	ЕСТЬNULL(втАмортизация.АмортизацияРасход, 0) КАК АмортизацияРасход,
	|	ЕСТЬNULL(втСтоимости.Стоимость, 0) - ЕСТЬNULL(втАмортизация.Амортизация, 0) КАК ОстаточнаяСтоимость,
	|	НЕ втОбъектыДокументов.ОсновноеСредство В (&ОбъектыДляКоторыхСведенияНеАктуальны) КАК СведенияАктуальны
	|ПОМЕСТИТЬ втСведенияОбъектовДокументов
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|		ПО втОбъектыДокументов.Ссылка = втПервоначальныеСведения.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПервоначальныеСведения.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождение КАК втМестонахождение
	|		ПО втОбъектыДокументов.Ссылка = втМестонахождение.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втМестонахождение.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыАмортизации КАК втПараметрыАмортизации
	|		ПО втОбъектыДокументов.Ссылка = втПараметрыАмортизации.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПараметрыАмортизации.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК втПорядокУчетаОС
	|		ПО втОбъектыДокументов.Ссылка = втПорядокУчетаОС.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПорядокУчетаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОСБУ КАК втПорядокУчетаОСБУ
	|		ПО втОбъектыДокументов.Ссылка = втПорядокУчетаОСБУ.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПорядокУчетаОСБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимости КАК втСтоимости
	|		ПО втОбъектыДокументов.Ссылка = втСтоимости.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втСтоимости.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизация КАК втАмортизация
	|		ПО втОбъектыДокументов.Ссылка = втАмортизация.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втАмортизация.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияСтоимости
	|		ПО втПорядокУчетаОС.ГруппаФинансовогоУчета = ПорядокОтраженияСтоимости.АналитикаУчета
	|			И ПорядокОтраженияСтоимости.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И ПорядокОтраженияСтоимости.МестоУчета = НЕОПРЕДЕЛЕНО
	|			И ПорядокОтраженияСтоимости.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияАмортизации
	|		ПО втПорядокУчетаОС.ГруппаФинансовогоУчета = ПорядокОтраженияСтоимости.АналитикаУчета
	|			И ПорядокОтраженияСтоимости.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И ПорядокОтраженияСтоимости.МестоУчета = НЕОПРЕДЕЛЕНО
	|			И ПорядокОтраженияСтоимости.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСведенияОбъектовДокументов.Ссылка КАК Ссылка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СпособНачисленияАмортизации) КАК КоличествоРазличныхСпособНачисленияАмортизации,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.ГруппаОС) КАК КоличествоРазличныхГруппаОС,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.КодПоОКОФ) КАК КоличествоРазличныхКодПоОКОФ,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.ШифрПоЕНАОФ) КАК КоличествоРазличныхШифрПоЕНАОФ,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.АмортизационнаяГруппа) КАК КоличествоРазличныхАмортизационнаяГруппа,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.МОЛ) КАК КоличествоРазличныхМОЛ,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.Местонахождение) КАК КоличествоРазличныхМестонахождение,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СчетУчета) КАК КоличествоРазличныхСчетУчета,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СчетАмортизации) КАК КоличествоРазличныхСчетАмортизации,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СрокПолезногоИспользования) КАК КоличествоРазличныхСрокПолезногоИспользования,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.КоэффициентАмортизации) КАК КоличествоРазличныхКоэффициентАмортизации,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.НакопленнаяСтоимость) КАК КоличествоРазличныхНакопленнаяСтоимость,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.НакопленнаяАмортизация) КАК КоличествоРазличныхНакопленнаяАмортизация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.ОстаточнаяСтоимость) КАК КоличествоРазличныхОстаточнаяСтоимость,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СпособНачисленияАмортизации) КАК СпособНачисленияАмортизации,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.ГруппаОС) КАК ГруппаОС,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.КодПоОКОФ) КАК КодПоОКОФ,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.ШифрПоЕНАОФ) КАК ШифрПоЕНАОФ,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.АмортизационнаяГруппа) КАК АмортизационнаяГруппа,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.МОЛ) КАК МОЛ,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.Местонахождение) КАК Местонахождение,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СчетУчета) КАК СчетУчета,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СчетАмортизации) КАК СчетАмортизации,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СрокПолезногоИспользования) КАК СрокПолезногоИспользования,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.КоэффициентАмортизации) КАК КоэффициентАмортизации,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.НакопленнаяСтоимость) КАК НакопленнаяСтоимость,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.НакопленнаяАмортизация) КАК НакопленнаяАмортизация,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.ОстаточнаяСтоимость) КАК ОстаточнаяСтоимость,
	|	МИНИМУМ(втСведенияОбъектовДокументов.СведенияАктуальны) КАК СведенияАктуальны
	|ПОМЕСТИТЬ втОбщиеСведенияОбъектовДокументов
	|ИЗ
	|	втСведенияОбъектовДокументов КАК втСведенияОбъектовДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	втСведенияОбъектовДокументов.Ссылка";
	
	СписокЗапросов.Добавить(ТекстЗапроса);

	Запрос.Текст = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос.Выполнить();
	
	ИспользуемыеВременныеТаблицы.Добавить("втСведенияОбъектовДокументов");
	ИспользуемыеВременныеТаблицы.Добавить("втОбщиеСведенияОбъектовДокументов");
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеВременныеТаблицы);
	
КонецПроцедуры

// Определяет необходимость указания статьи расходов для отражения расходов по имущественным налогам.
//
// Параметры:
//  Организация				 - СправочникСсылка.Организации			 - Организация документа.
//  Дата					 - Дата									 - Дата документа.
//  СписокОС				 - Массив								 - Список ОС документа.
//  ГруппаОС				 - ПеречислениеСсылка.ГруппыОС			 - Группа основных средств.
//  АмортизационнаяГруппа	 - ПеречислениеСсылка.АмортизационныеГруппы	 - Амортизационная группа основных средств.
//  НедвижимоеИмущество		 - Булево, Неопределено						 - Признак того, что ОС являются недвижимым имуществом.
// 
// Возвращаемое значение:
//  Булево - Истина, если требуется заполнить статью.
//
Функция ТребуетсяНастройкаОтраженияРасходовПоНалогам(Организация, Дата, СписокОС, ГруппаОС, АмортизационнаяГруппа, НедвижимоеИмущество = Неопределено) Экспорт

	Если НЕ ЗначениеЗаполнено(СписокОС) И НедвижимоеИмущество = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Дата >= '201501010000'
		И Дата < '201901010000'
		И (АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ПерваяГруппа
			ИЛИ АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ВтораяГруппа) Тогда
		
		Возврат Ложь;
	КонецЕсли;
	
	Если ГруппаОС = Перечисления.ГруппыОС.ЗемельныеУчастки Тогда
		
		Возврат Ложь; // Земельные участки.
		
	ИначеЕсли НедвижимоеИмущество = Истина
		ИЛИ НедвижимоеИмущество = Неопределено
			И ЕстьНедвижимоеИмущество(Организация, Дата, СписокОС, ГруппаОС) Тогда
		
		Возврат Истина; // Недвижимое имущество.
		
	Иначе
		
		// Движимое имущество.
		Если Дата >= '201901010000' Тогда
			
			Возврат Ложь;
			
		ИначеЕсли Дата < '201301010000' Тогда
			
			Возврат Истина;
			
		ИначеЕсли НЕ ЗначениеЗаполнено(Организация)
			ИЛИ НЕ ЗначениеЗаполнено(ГруппаОС)
			ИЛИ Дата < '201801010000' Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СтавкиНалогаНаИмущество.ОсвобождениеОтНалогообложенияДвижимогоИмущества КАК ОсвобождениеОтНалогообложенияДвижимогоИмущества
		|ИЗ
		|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Дата, Организация = &Организация) КАК СтавкиНалогаНаИмущество
		|ГДЕ
		|	СтавкиНалогаНаИмущество.ОсвобождениеОтНалогообложенияДвижимогоИмущества";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Дата", Дата);
		Запрос.УстановитьПараметр("Организация", Организация);
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить();
		УстановитьПривилегированныйРежим(Ложь);
		
		Возврат Результат.Пустой();

	КонецЕсли;
	
КонецФункции

// Определяет как в документе заполняются суммы НУ при формировании проводок.
// 
// Параметры:
// 	ТипСсылки - Тип - 
// Возвращаемое значение:
// 	Булево - Истина, если документ сам заполняется суммы НУ при формировании проводок.
Функция СуммыНалоговогоУчетаЗаполнены(ТипСсылки) Экспорт
	
	СуммыНалоговогоУчетаЗаполнены = 
		
		// 2.2
		ТипСсылки = Тип("ДокументСсылка.АмортизацияНМА")
		Или ТипСсылки = Тип("ДокументСсылка.АмортизацияОС")
		Или ТипСсылки = Тип("ДокументСсылка.ПодготовкаКПередачеНМА")
		Или ТипСсылки = Тип("ДокументСсылка.ПереоценкаНМА")
		Или ТипСсылки = Тип("ДокументСсылка.ПринятиеКУчетуНМА")
		Или ТипСсылки = Тип("ДокументСсылка.СписаниеНМА")
		Или ТипСсылки = Тип("ДокументСсылка.ВозвратОСИзАренды")
		Или ТипСсылки = Тип("ДокументСсылка.ВыбытиеАрендованныхОС")
		Или ТипСсылки = Тип("ДокументСсылка.ИзменениеПараметровОС")
		Или ТипСсылки = Тип("ДокументСсылка.МодернизацияОС")
		Или ТипСсылки = Тип("ДокументСсылка.ПеремещениеОС")
		Или ТипСсылки = Тип("ДокументСсылка.ПереоценкаОС")
		Или ТипСсылки = Тип("ДокументСсылка.ПодготовкаКПередачеОС")
		Или ТипСсылки = Тип("ДокументСсылка.ПоступлениеАрендованныхОС")
		Или ТипСсылки = Тип("ДокументСсылка.ПринятиеКУчетуОС")
		Или ТипСсылки = Тип("ДокументСсылка.СписаниеОС")
		
		// 2.4
		Или ТипСсылки = Тип("ДокументСсылка.АмортизацияНМА2_4")
		Или ТипСсылки = Тип("ДокументСсылка.АмортизацияОС2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ВводОстатковВнеоборотныхАктивов2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ВозвратОСИзАренды2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ИзменениеПараметровНМА2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ИзменениеПараметровОС2_4")
		Или ТипСсылки = Тип("ДокументСсылка.КорректировкаСтоимостиИАмортизацииНМА")
		Или ТипСсылки = Тип("ДокументСсылка.КорректировкаСтоимостиИАмортизацииОС")
		Или ТипСсылки = Тип("ДокументСсылка.МодернизацияОС2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ОбъединениеОС")
		Или ТипСсылки = Тип("ДокументСсылка.ПередачаОСВАренду2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ПеремещениеНМА2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ПеремещениеОС2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ПереоценкаНМА2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ПереоценкаОС2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ПодготовкаКПередачеНМА2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ПодготовкаКПередачеОС2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ПринятиеКУчетуНМА2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ПринятиеКУчетуОС2_4")
		Или ТипСсылки = Тип("ДокументСсылка.РазукомплектацияОС")
		Или ТипСсылки = Тип("ДокументСсылка.СписаниеНМА2_4")
		Или ТипСсылки = Тип("ДокументСсылка.СписаниеОС2_4")
		Или ТипСсылки = Тип("ДокументСсылка.УлучшениеНМА");
		
	Возврат СуммыНалоговогоУчетаЗаполнены;
	
КонецФункции

// Возвращает текст комментария, который используется при вводе остатков для перехода на 2.4 и обнуления регистра Прочие расходы.
// 
// Возвращаемое значение:
// 	Строка - 
Функция КомментарийОбнулениеРегистраПрочиеРасходы() Экспорт
	
	Возврат НСтр("ru = 'Документ создан помощником перехода на учет внеоборотных активов версии 2.4.
              |Используется для корректировки остатка регистра ""Прочие расходы"" на момент перехода.
              |До завершения перехода изменять комментарий не допускается.'");
              	
КонецФункции

// Определяет порядок начисления амортизации в бух. учете. для нескольких организаций.
// Всегда возвращает "СДатыПринятияКУчету", если такой порядок хотя бы у одной организации.
// 
// Параметры:
//  СписокОрганизаций - Массив из СправочникСсылка.Организации - Список организаций
//  Период - Дата - Период.
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.ПорядокНачисленияАмортизации - Порядок начисления амортизации в бух. учете.
Функция ПорядокНачисленияАмортизацииОСБУ(СписокОрганизаций, Период) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Организации.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка В (&СписокОрганизаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 Приоритет,
	|	ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету) КАК ПорядокНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаБухУчета.СрезПоследних(
	|		&Период, 
	|		Организация В
	|			(ВЫБРАТЬ
	|				Организации.ГоловнаяОрганизация
	|			ИЗ
	|				Организации КАК Организации)) КАК УчетнаяПолитикаБухУчета
	|ГДЕ
	|	УчетнаяПолитикаБухУчета.ПорядокНачисленияАмортизацииОС = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	2 Приоритет,
	|	ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца) КАК ПорядокНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаБухУчета.СрезПоследних(
	|		&Период, 
	|		Организация В
	|			(ВЫБРАТЬ
	|				Организации.ГоловнаяОрганизация
	|			ИЗ
	|				Организации КАК Организации)) КАК УчетнаяПолитикаБухУчета
	|ГДЕ
	|	УчетнаяПолитикаБухУчета.ПорядокНачисленияАмортизацииОС = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	Запрос.УстановитьПараметр("Период", Период);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ПорядокНачисленияАмортизации;
	Иначе
		Возврат Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

//-- Локализация

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

//++ Локализация

#Область ОбработчикиЭтаповЗакрытияМесяца

#Область РасчетНалогаНаИмущество

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - (См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца)
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап_РасчетНалогаНаИмущество(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.РасчетНалогаНаИмущество,,,,
		Перечисления.ОперацииЗакрытияМесяца.ПогашениеСтоимостиТМЦВЭксплуатации);
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ПереходНаУчетВнеоборотныхАктивовВерсии24);
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Рассчитать'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"ВнеоборотныеАктивыЛокализация.Использование_РасчетНалогаНаИмущество");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"ВнеоборотныеАктивыЛокализация.Выполнить_РасчетНалогаНаИмущество");
	НоваяСтрока.ДействиеПодробнее = ЗакрытиеМесяцаЛокализация.ОписаниеДействия_ОткрытьСписокДокументовРегламентнаяОперация();
	НоваяСтрока.ТипыРегламентныхОпераций.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаИмущество);
КонецПроцедуры

// Обработчики этапа.

Процедура Использование_РасчетНалогаНаИмущество(ПараметрыОбработчика) Экспорт
	
	ЗакрытиеМесяцаСервер.ПроверитьИспользованиеРегламентированногоУчета(ПараметрыОбработчика);
	
	Если ЗакрытиеМесяцаСервер.РасчетЭтапаНеТребуется(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций.Количество());
	
	УплачиваютсяАвансы = РасчетИмущественныхНалоговУП.УплачиваютсяАвансыПоНалогуНаИмущество(
		ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций,
		ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации);
		
	МесяцРасчета = Месяц(ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации);
	НеобходимРасчетНалога = (МесяцРасчета = 12) ИЛИ (МесяцРасчета % 3 = 0 И УплачиваютсяАвансы);
	
	Если НЕ НеобходимРасчетНалога Тогда
		
		Если МесяцРасчета % 3 = 0 Тогда
			
			ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
				ПараметрыОбработчика,
				НСтр("ru = 'Авансы по налогу на имущество не уплачиваются.'", ОбщегоНазначения.КодОсновногоЯзыка()));
					
		Иначе
			
			ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
				ПараметрыОбработчика,
				НСтр("ru = 'Налог на имущество рассчитывается в последнем месяце квартала.'", ОбщегоНазначения.КодОсновногоЯзыка()));
			
		КонецЕсли;
		
		Возврат;		
		
	КонецЕсли;
	
	Если ЗакрытиеМесяцаСервер.ПроверитьНаличиеЗаданийКЗакрытиюМесяца(ПараметрыОбработчика,Истина) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.ПроверитьНаличиеДокументаРегламентнаяОперация(ПараметрыОбработчика);
	
КонецПроцедуры

Процедура Выполнить_РасчетНалогаНаИмущество(ПараметрыОбработчика) Экспорт
	
	Если ВнеоборотныеАктивы.НеЗавершенПереходНаУчетВнеоборотныхАктивовВерсии24(ПараметрыОбработчика) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаЛокализация.РасчетРегламентныхОперацийНачинаяСПервогоЗадания(ПараметрыОбработчика, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область РасчетТранспортногоНалога

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - (См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца)
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап_РасчетТранспортногоНалога(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.РасчетТранспортногоНалога,,,,
		Перечисления.ОперацииЗакрытияМесяца.РасчетНалогаНаИмущество);
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ПереходНаУчетВнеоборотныхАктивовВерсии24);
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Рассчитать'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"ВнеоборотныеАктивыЛокализация.Использование_РасчетТранспортногоНалога");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"ВнеоборотныеАктивыЛокализация.Выполнить_РасчетТранспортногоНалога");
	НоваяСтрока.ДействиеПодробнее = ЗакрытиеМесяцаЛокализация.ОписаниеДействия_ОткрытьСписокДокументовРегламентнаяОперация();
	НоваяСтрока.ТипыРегламентныхОпераций.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетТранспортногоНалога);
КонецПроцедуры

// Обработчики этапа.

Процедура Использование_РасчетТранспортногоНалога(ПараметрыОбработчика) Экспорт
	
	ЗакрытиеМесяцаСервер.ПроверитьИспользованиеРегламентированногоУчета(ПараметрыОбработчика);
	
	Если ЗакрытиеМесяцаСервер.РасчетЭтапаНеТребуется(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций.Количество());
	
	УплачиваютсяАвансы = РасчетИмущественныхНалоговУП.УплачиваютсяАвансыПоТранспортномуНалогу(
		ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций,
		ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации);
	
	МесяцРасчета = Месяц(ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации);
	НеобходимРасчетНалога = (МесяцРасчета = 12) ИЛИ (МесяцРасчета % 3 = 0 И УплачиваютсяАвансы);
	
	Если НЕ НеобходимРасчетНалога Тогда
		
		Если МесяцРасчета % 3 = 0 Тогда
			
			ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
				ПараметрыОбработчика,
				НСтр("ru = 'Авансы по транспортному налогу не уплачиваются.'", ОбщегоНазначения.КодОсновногоЯзыка()));
					
		Иначе
			
			ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
				ПараметрыОбработчика,
				НСтр("ru = 'Транспортный налог рассчитывается в последнем месяце квартала.'", ОбщегоНазначения.КодОсновногоЯзыка()));
			
		КонецЕсли;
		
		Возврат;		
		
	КонецЕсли;
	
	Если ЗакрытиеМесяцаСервер.ПроверитьНаличиеЗаданийКЗакрытиюМесяца(ПараметрыОбработчика, Истина) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.ПроверитьНаличиеДокументаРегламентнаяОперация(ПараметрыОбработчика);
	
КонецПроцедуры

Процедура Выполнить_РасчетТранспортногоНалога(ПараметрыОбработчика) Экспорт
	
	Если ВнеоборотныеАктивы.НеЗавершенПереходНаУчетВнеоборотныхАктивовВерсии24(ПараметрыОбработчика) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаЛокализация.РасчетРегламентныхОперацийНачинаяСПервогоЗадания(ПараметрыОбработчика, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область РасчетЗемельногоНалога

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - (См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца)
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап_РасчетЗемельногоНалога(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.РасчетЗемельногоНалога,,,,
		Перечисления.ОперацииЗакрытияМесяца.РасчетТранспортногоНалога);
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ПереходНаУчетВнеоборотныхАктивовВерсии24);
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Рассчитать'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"ВнеоборотныеАктивыЛокализация.Использование_РасчетЗемельногоНалога");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"ВнеоборотныеАктивыЛокализация.Выполнить_РасчетЗемельногоНалога");
	НоваяСтрока.ДействиеПодробнее = ЗакрытиеМесяцаЛокализация.ОписаниеДействия_ОткрытьСписокДокументовРегламентнаяОперация();
	НоваяСтрока.ТипыРегламентныхОпераций.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетЗемельногоНалога);
КонецПроцедуры

// Обработчики этапа.

Процедура Использование_РасчетЗемельногоНалога(ПараметрыОбработчика) Экспорт
	
	ЗакрытиеМесяцаСервер.ПроверитьИспользованиеРегламентированногоУчета(ПараметрыОбработчика);
	
	Если ЗакрытиеМесяцаСервер.РасчетЭтапаНеТребуется(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций.Количество());
	
	УплачиваютсяАвансы = РасчетИмущественныхНалоговУП.УплачиваютсяАвансыПоЗемельномуНалогу(
		ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций,
		ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации);
	
	МесяцРасчета = Месяц(ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации);
	НеобходимРасчетНалога = (МесяцРасчета = 12) ИЛИ (МесяцРасчета % 3 = 0 И УплачиваютсяАвансы);
	
	Если НЕ НеобходимРасчетНалога Тогда
		
		Если МесяцРасчета % 3 = 0 Тогда
			
			ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
				ПараметрыОбработчика,
				НСтр("ru = 'Авансы по земельному налогу не уплачиваются.'", ОбщегоНазначения.КодОсновногоЯзыка()));
					
		Иначе
			
			ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
				ПараметрыОбработчика,
				НСтр("ru = 'Земельный налог рассчитывается в последнем месяце квартала.'", ОбщегоНазначения.КодОсновногоЯзыка()));
			
		КонецЕсли;
		
		Возврат;		
		
	КонецЕсли;
	
	Если ЗакрытиеМесяцаСервер.ПроверитьНаличиеЗаданийКЗакрытиюМесяца(ПараметрыОбработчика,Истина) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.ПроверитьНаличиеДокументаРегламентнаяОперация(ПараметрыОбработчика);
	
КонецПроцедуры

Процедура Выполнить_РасчетЗемельногоНалога(ПараметрыОбработчика) Экспорт
	
	Если ВнеоборотныеАктивы.НеЗавершенПереходНаУчетВнеоборотныхАктивовВерсии24(ПараметрыОбработчика) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаЛокализация.РасчетРегламентныхОперацийНачинаяСПервогоЗадания(ПараметрыОбработчика, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ПризнаниеВНалоговомУчетеАрендныхПлатежей

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - (См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца)
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап_ПризнаниеВНалоговомУчетеАрендныхПлатежей(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.ПризнаниеВНалоговомУчетеАрендныхПлатежей,,,,
		Перечисления.ОперацииЗакрытияМесяца.НачислениеАмортизацииНМА);
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ПереходНаУчетВнеоборотныхАктивовВерсии24);
	НоваяСтрока.ТекстВыполнить = НСтр("ru='Признать'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"ВнеоборотныеАктивыЛокализация.Использование_ПризнаниеВНалоговомУчетеАрендныхПлатежей");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"ВнеоборотныеАктивыЛокализация.Выполнить_ПризнаниеВНалоговомУчетеАрендныхПлатежей");
	НоваяСтрока.ДействиеПодробнее = ЗакрытиеМесяцаЛокализация.ОписаниеДействия_ОткрытьСписокДокументовРегламентнаяОперация();
	НоваяСтрока.ТипыРегламентныхОпераций.Добавить(Перечисления.ТипыРегламентныхОпераций.ПризнаниеВНУАрендныхПлатежей);
	
КонецПроцедуры

// Обработчики этапа.

Процедура Использование_ПризнаниеВНалоговомУчетеАрендныхПлатежей(ПараметрыОбработчика) Экспорт
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, 1);
	
	ЗакрытиеМесяцаСервер.ПроверитьИспользованиеРегламентированногоУчета(ПараметрыОбработчика);
	
	Если ЗакрытиеМесяцаСервер.РасчетЭтапаНеТребуется(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ЗакрытиеМесяцаСервер.ИнициализироватьЗапрос(Запрос, ПараметрыОбработчика);
	НастройкиНалоговУчетныхПолитик.ДополнитьМенеджерВременныхТаблицГоловнымиОрганизациями(
		Запрос.МенеджерВременныхТаблиц,
		Запрос.Параметры.МассивОрганизаций);
		
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГоловныеОрганизации.ОбособленноеПодразделение КАК Ссылка
	|ПОМЕСТИТЬ ВТОрганизации
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыль.СрезПоследних(&НачалоПериода,
	|		Организация В
	|			(ВЫБРАТЬ
	|				ГоловныеОрганизации.Организация
	|			ИЗ
	|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)
	|		И ВключатьВСоставНалоговыхРасходовАрендныеПлатежи) КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтГоловныеОрганизации КАК ГоловныеОрганизации
	|		ПО Т.Организация = ГоловныеОрганизации.Организация";
	
	Запрос.Выполнить();
	
	Если ЗакрытиеМесяцаСервер.РазмерВременнойТаблицы(Запрос, "ВТОрганизации", ПараметрыОбработчика) = 0 Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
			ПараметрыОбработчика,
			НСтр("ru = 'Нет организаций, для которых в учетной политике выбрано включение в состав налоговых расходов лизинговых платежей'", ОбщегоНазначения.КодОсновногоЯзыка()));
		Возврат;
		
	КонецЕсли;
	
	Если ЗакрытиеМесяцаСервер.ПроверитьНаличиеЗаданийКЗакрытиюМесяца(ПараметрыОбработчика, Истина, "ВТОрганизации") Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.ПроверитьНаличиеДокументаРегламентнаяОперация(ПараметрыОбработчика,, "ВТОрганизации");
	
КонецПроцедуры

Процедура Выполнить_ПризнаниеВНалоговомУчетеАрендныхПлатежей(ПараметрыОбработчика) Экспорт
	
	Если ВнеоборотныеАктивы.НеЗавершенПереходНаУчетВнеоборотныхАктивовВерсии24(ПараметрыОбработчика) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаЛокализация.РасчетРегламентныхОперацийНачинаяСПервогоЗадания(ПараметрыОбработчика, Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

//-- Локализация

#Область РасчетАмортизации

Процедура ДополнитьПараметрамиУчетаВнеоборотныхАктивов(Знач ПараметрыРасчета) Экспорт

	//++ Локализация
	
	ПараметрыРасчета.Вставить("ДатаНачалаУчета", ДатаНачалаУчетаВнеоборотныхАктивов2_4());
	
	ИспользоватьРеглУчет = Константы.ИспользоватьРеглУчет.Получить()
							И Константы.ДатаНачалаВеденияРеглУчета.Получить() <= ПараметрыРасчета.Период;
							
	ПараметрыРасчета.Вставить("ИспользоватьРеглУчет", ИспользоватьРеглУчет);
	
	//-- Локализация
	
КонецПроцедуры

Процедура СоздатьДокументыАмортизацииОС(НачалоРасчета, ПараметрыРасчета, Отказ) Экспорт

	//++ Локализация
	Документы.АмортизацияОС.СоздатьДокументыАмортизацииОС(НачалоРасчета, ПараметрыРасчета.МассивОрганизаций, Отказ);
	//-- Локализация
	
КонецПроцедуры
 
Процедура СоздатьДокументыАмортизацииНМА(НачалоРасчета, ПараметрыРасчета, Отказ) Экспорт
	
	//++ Локализация
	Документы.АмортизацияНМА.СоздатьДокументыАмортизацииНМА(НачалоРасчета, ПараметрыРасчета.МассивОрганизаций, Отказ);
	//-- Локализация
	
КонецПроцедуры

//++ Локализация

Функция ТекстПоляНормаАмортизации(ПолеАмортизационнаяГруппа) Экспорт

	ТекстПоля =
	"ВЫБОР СписокОС.АмортизационнаяГруппа
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПерваяГруппа)    ТОГДА 14.3
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ВтораяГруппа)    ТОГДА 8.8
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ТретьяГруппа)    ТОГДА 5.6
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ЧетвертаяГруппа) ТОГДА 3.8
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПятаяГруппа)     ТОГДА 2.7
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ШестаяГруппа)    ТОГДА 1.8
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.СедьмаяГруппа)   ТОГДА 1.3
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ВосьмаяГруппа)   ТОГДА 1.0
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДевятаяГруппа)   ТОГДА 0.8
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДесятаяГруппа)   ТОГДА 0.7
	|	КОНЕЦ";
	
	ТекстПоля = СтрЗаменить(ТекстПоля, "СписокОС.АмортизационнаяГруппа", ПолеАмортизационнаяГруппа);
	
	Возврат ТекстПоля;
	
КонецФункции

Функция МинимальнаяСуммаВР() Экспорт
	Возврат 0.5;
КонецФункции

//-- Локализация

#КонецОбласти

#Область СформироватьЗаписиРегистровЗаданий

Процедура СформироватьЗаписиРегистровЗаданий(Документ, ДанныеТаблиц) Экспорт

	//++ Локализация
	
	РасчетИмущественныхНалоговУП.СформироватьЗаданиеКРасчетуНалогаНаИмущество(Документ, ДанныеТаблиц);
	РасчетИмущественныхНалоговУП.СформироватьЗаданиеКРасчетуТранспортногоНалога(Документ, ДанныеТаблиц);
	РасчетИмущественныхНалоговУП.СформироватьЗаданиеКРасчетуЗемельногоНалога(Документ, ДанныеТаблиц);
	
	СформироватьЗаданиеПризнаниеВНУАрендныхПлатежей(Документ, ДанныеТаблиц);
	
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
// 	СписокТаблиц - Массив -
Процедура ДополнитьСписокТаблицДляФормированияЗаданийКРасчетуАмортизацииОС(СписокТаблиц) Экспорт

	//++ Локализация
	СписокТаблиц.Добавить("ПорядокУчетаОСБУ");
	СписокТаблиц.Добавить("ПараметрыАмортизацииОСБУ");
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
// 	СписокТаблиц - Массив -
Процедура ДополнитьСписокТаблицДляФормированияЗаданийКРасчетуАмортизацииНМА(СписокТаблиц) Экспорт

	//++ Локализация
	СписокТаблиц.Добавить("ПорядокУчетаНМАБУ");
	СписокТаблиц.Добавить("ПараметрыАмортизацииНМАБУ");
	//-- Локализация
	
КонецПроцедуры

Функция ТекстЗапросаДляФормированияЗаданийКРасчетуАмортизацииОС(ДанныеТаблиц, ТекстОбъединенияДанных) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	#Область ИзмененныеДанные
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.ИмяТаблицы                      КАК ИмяТаблицы,
	|	ИзмененныеДанные.Организация                     КАК Организация,
	|	ВЫРАЗИТЬ(ИзмененныеДанные.Организация КАК Справочник.Организации).ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ИзмененныеДанные.ОсновноеСредство                КАК ОсновноеСредство,
	|	ИзмененныеДанные.Документ                        КАК Документ,
	|	МАКСИМУМ(ИзмененныеДанные.ОтражатьВРеглУчете)    КАК ОтражатьВРеглУчете,
	|	МАКСИМУМ(ИзмененныеДанные.ОтражатьВУпрУчете)     КАК ОтражатьВУпрУчете,
	|	МИНИМУМ(ИзмененныеДанные.Период)                 КАК Период
	|
	|ПОМЕСТИТЬ ВсеИзмененныеДанные
	|
	|ИЗ
	|	ТекстОбъединенияДанных_Переопределямый КАК ИзмененныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.ИмяТаблицы,
	|	ИзмененныеДанные.Организация,
	|	ВЫРАЗИТЬ(ИзмененныеДанные.Организация КАК Справочник.Организации).ГоловнаяОрганизация,
	|	ИзмененныеДанные.ОсновноеСредство,
	|	ИзмененныеДанные.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеИзмененныеДанные.Организация                   КАК Организация,
	|	ВсеИзмененныеДанные.ОсновноеСредство              КАК ОсновноеСредство,
	|	ВсеИзмененныеДанные.Документ                      КАК Документ,
	|	МАКСИМУМ(ВсеИзмененныеДанные.ОтражатьВРеглУчете)  КАК ОтражатьВРеглУчете,
	|	МАКСИМУМ(ВсеИзмененныеДанные.ОтражатьВУпрУчете)   КАК ОтражатьВУпрУчете,
	|
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ТИПЗНАЧЕНИЯ(ВсеИзмененныеДанные.Документ) В (
	|							ТИП(Документ.ВводОстатковВнеоборотныхАктивов),
	|							ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4),
	|							ТИП(Документ.РаспределениеНДС))
	|						ИЛИ &ДвиженияЗаписываютсяПриРасчетеСтоимостиВНА
	|						ИЛИ &ДвиженияЗаписываютсяПриОтложенномФормированииДвижений
	|
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВсеИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1)
	| 
	|				ИНАЧЕ НАЧАЛОПЕРИОДА(ВсеИзмененныеДанные.Период, МЕСЯЦ) 
	|
	|			КОНЕЦ) КАК ПериодБУ,
	|
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ТИПЗНАЧЕНИЯ(ВсеИзмененныеДанные.Документ) В (
	|							ТИП(Документ.ВводОстатковВнеоборотныхАктивов),
	|							ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4),
	|							ТИП(Документ.РаспределениеНДС))
	|						ИЛИ &ДвиженияЗаписываютсяПриРасчетеСтоимостиВНА
	|						ИЛИ &ДвиженияЗаписываютсяПриОтложенномФормированииДвижений
	|
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВсеИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1) 
	|
	|				КОГДА ТИПЗНАЧЕНИЯ(ВсеИзмененныеДанные.Документ) В (
	|							ТИП(Документ.ИзменениеПараметровОС2_4))
	|						И ВсеИзмененныеДанные.Период < &ДатаНачалаУчета24
	|
	|					ТОГДА &ДатаНачалаУчета24 
	|
	|				ИНАЧЕ НАЧАЛОПЕРИОДА(ВсеИзмененныеДанные.Период, МЕСЯЦ) 
	|
	|			КОНЕЦ) КАК ПериодУУ
	|
	|ПОМЕСТИТЬ ИзмененныеДанные
	|ИЗ
	|	ВсеИзмененныеДанные КАК ВсеИзмененныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеИзмененныеДанные.Организация,
	|	ВсеИзмененныеДанные.ОсновноеСредство,
	|	ВсеИзмененныеДанные.Документ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТекстОбъединенияДанных_Переопределямый", "(" + ТекстОбъединенияДанных + ")");
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаОСБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.Организация       КАК Организация,
	|	ПорядокУчетаОСБУ.ОсновноеСредство  КАК ОсновноеСредство,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ПорядокУчетаОСБУ.Период, МЕСЯЦ)) КАК Период
	|ПОМЕСТИТЬ ПериодЗаданийБУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.Организация       КАК Организация,
	|		ПорядокУчетаОСБУ.ОсновноеСредство  КАК ОсновноеСредство,
	|		ВЫБОР
	|			КОГДА ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|					И НАЧАЛОПЕРИОДА(ПорядокУчетаОСБУПоследние.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПорядокУчетаОСБУ.Период, МЕСЯЦ)
	|				ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаОСБУПоследние.Период, МЕСЯЦ, 1)
	|			ИНАЧЕ ПорядокУчетаОСБУПоследние.Период
	|		КОНЕЦ КАК Период
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ИзмененныеДанные.Организация        КАК Организация,
	|			ИзмененныеДанные.ОсновноеСредство   КАК ОсновноеСредство,
	|			МИНИМУМ(ИзмененныеДанные.ПериодБУ)  КАК Период,
	|			МАКСИМУМ(ПорядокУчетаОСБУ.Период)   КАК ПериодСведений
	|		ИЗ
	|			ИзмененныеДанные КАК ИзмененныеДанные
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|				ПО (ПорядокУчетаОСБУ.Организация = ИзмененныеДанные.Организация)
	|					И (ПорядокУчетаОСБУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|					И (ПорядокУчетаОСБУ.Период <= ИзмененныеДанные.ПериодБУ)
	|					И (ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.СписаниеОС2_4)
	|							И ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.ПрекращениеДоговораАренды)
	|						ИЛИ ИзмененныеДанные.Документ <> ПорядокУчетаОСБУ.Регистратор)
	|		ГДЕ
	|			ИзмененныеДанные.ОтражатьВРеглУчете
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИзмененныеДанные.Организация,
	|			ИзмененныеДанные.ОсновноеСредство
	|		) КАК ПорядокУчетаОСБУПоследние
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО (ПорядокУчетаОСБУ.Организация = ПорядокУчетаОСБУПоследние.Организация)
	|				И (ПорядокУчетаОСБУ.ОсновноеСредство = ПорядокУчетаОСБУПоследние.ОсновноеСредство)
	|				И (ПорядокУчетаОСБУ.Период = ПорядокУчетаОСБУПоследние.ПериодСведений)
	|	ГДЕ
	|		(ПорядокУчетаОСБУ.НачислятьАмортизациюБУ
	|				ИЛИ ПорядокУчетаОСБУ.НачислятьАмортизациюНУ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.ОсновноеСредство,
	|		МИНИМУМ(ДОБАВИТЬКДАТЕ(ПорядокУчетаОСБУ.Период, МЕСЯЦ, 1))
	|	ИЗ
	|		ИзмененныеДанные КАК ИзмененныеДанные
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО (ПорядокУчетаОСБУ.Организация = ИзмененныеДанные.Организация)
	|				И (ПорядокУчетаОСБУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|				И (ПорядокУчетаОСБУ.Период > ИзмененныеДанные.ПериодБУ)
	|	ГДЕ
	|		ИзмененныеДанные.ОтражатьВРеглУчете
	|		И (ПорядокУчетаОСБУ.НачислятьАмортизациюБУ
	|				ИЛИ ПорядокУчетаОСБУ.НачислятьАмортизациюНУ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.ОсновноеСредство
	|
	|	//ТекстПорядокУчетаОСБУ//
	|
	|	) КАК ПорядокУчетаОСБУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСБУ.Организация,
	|	ПорядокУчетаОСБУ.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаОСБУ_НачислятьАмортизацию") <> Неопределено Тогда
		
		ТекстПорядокУчетаОСБУ = "
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеДанные.Организация         КАК Организация,
		|	ИзмененныеДанные.ОсновноеСредство    КАК ОсновноеСредство,
		|	ИзмененныеДанные.ПериодБУ            КАК Период
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ_НачислятьАмортизацию КАК ПорядокУчетаОСБУ
		|		ПО (ПорядокУчетаОСБУ.Организация = ИзмененныеДанные.Организация)
		|			И (ПорядокУчетаОСБУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстПорядокУчетаОСБУ//", ТекстПорядокУчетаОСБУ);
		
	КонецЕсли;
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаОСУУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчетаОСУУ.Организация       КАК Организация,
	|	ПорядокУчетаОСУУ.ОсновноеСредство  КАК ОсновноеСредство,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ПорядокУчетаОСУУ.Период, МЕСЯЦ)) КАК Период
	|ПОМЕСТИТЬ ПериодЗаданийУУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаОСУУ.Организация       КАК Организация,
	|		ПорядокУчетаОСУУ.ОсновноеСредство  КАК ОсновноеСредство,
	|		ВЫБОР
	|			КОГДА ПорядокУчетаОСУУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|					И НАЧАЛОПЕРИОДА(ПорядокУчетаОСУУПоследние.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПорядокУчетаОСУУ.Период, МЕСЯЦ)
	|				ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаОСУУПоследние.Период, МЕСЯЦ, 1)
	|			ИНАЧЕ ПорядокУчетаОСУУПоследние.Период
	|		КОНЕЦ КАК Период
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ИзмененныеДанные.Организация        КАК Организация,
	|			ИзмененныеДанные.ОсновноеСредство   КАК ОсновноеСредство,
	|			МИНИМУМ(ИзмененныеДанные.ПериодУУ)  КАК Период,
	|			МАКСИМУМ(ПорядокУчетаОСУУ.Период)   КАК ПериодСведений
	|		ИЗ
	|			ИзмененныеДанные КАК ИзмененныеДанные
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчетаОСУУ
	|				ПО (ПорядокУчетаОСУУ.Организация = ИзмененныеДанные.Организация)
	|					И (ПорядокУчетаОСУУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|					И (ПорядокУчетаОСУУ.Период <= ИзмененныеДанные.ПериодУУ)
	|					И (ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.СписаниеОС2_4)
	|							И ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.ПрекращениеДоговораАренды)
	|						ИЛИ ИзмененныеДанные.Документ <> ПорядокУчетаОСУУ.Регистратор)
	|		ГДЕ
	|			ИзмененныеДанные.ОтражатьВУпрУчете
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИзмененныеДанные.Организация,
	|			ИзмененныеДанные.ОсновноеСредство
	|
	|		) КАК ПорядокУчетаОСУУПоследние
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчетаОСУУ
	|			ПО (ПорядокУчетаОСУУ.Организация = ПорядокУчетаОСУУПоследние.Организация)
	|				И (ПорядокУчетаОСУУ.ОсновноеСредство = ПорядокУчетаОСУУПоследние.ОсновноеСредство)
	|				И (ПорядокУчетаОСУУ.Период = ПорядокУчетаОСУУПоследние.ПериодСведений)
	|	ГДЕ
	|		ПорядокУчетаОСУУ.НачислятьАмортизациюУУ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.ОсновноеСредство,
	|		МИНИМУМ(ВЫБОР 
	|					КОГДА ПорядокУчетаОСУУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|						ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаОСУУ.Период, МЕСЯЦ, 1)
	|					ИНАЧЕ ПорядокУчетаОСУУ.Период
	|				КОНЕЦ)
	|	ИЗ
	|		ИзмененныеДанные КАК ИзмененныеДанные
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчетаОСУУ
	|			ПО (ПорядокУчетаОСУУ.Организация = ИзмененныеДанные.Организация)
	|				И (ПорядокУчетаОСУУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|				И (ПорядокУчетаОСУУ.Период > ИзмененныеДанные.ПериодУУ)
	|
	|	ГДЕ
	|		ИзмененныеДанные.ОтражатьВУпрУчете
	|		И ПорядокУчетаОСУУ.НачислятьАмортизациюУУ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.ОсновноеСредство
	|
	|	//ТекстПорядокУчетаОСУУ//
	|
	|) КАК ПорядокУчетаОСУУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСУУ.Организация,
	|	ПорядокУчетаОСУУ.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаОСУУ_НачислятьАмортизацию") <> Неопределено Тогда
		
		ТекстПорядокУчетаОСУУ = "
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеДанные.Организация       КАК Организация,
		|	ИзмененныеДанные.ОсновноеСредство  КАК ОсновноеСредство,
		|	ИзмененныеДанные.ПериодУУ          КАК Период
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСУУ_НачислятьАмортизацию КАК ПорядокУчетаОСУУ
		|		ПО (ПорядокУчетаОСУУ.Организация = ИзмененныеДанные.Организация)
		|			И (ПорядокУчетаОСУУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстПорядокУчетаОСУУ//", ТекстПорядокУчетаОСУУ);
		
	КонецЕсли;
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ФормированиеЗаданий
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ЕСТЬNULL(ПакетыАмортизацииОС.НомерПакета, 0) КАК НомерПакета,
	|
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ПериодЗаданийБУ.Период <= ПериодЗаданийУУ.Период
	|						ИЛИ ПериодЗаданийУУ.Период ЕСТЬ NULL
	|					ТОГДА ПериодЗаданийБУ.Период
	|				ИНАЧЕ ПериодЗаданийУУ.Период
	|			КОНЕЦ) КАК Месяц
	|
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодЗаданийБУ КАК ПериодЗаданийБУ
	|		ПО (ПериодЗаданийБУ.Организация = ИзмененныеДанные.Организация)
	|			И (ПериодЗаданийБУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодЗаданийУУ КАК ПериодЗаданийУУ
	|		ПО (ПериодЗаданийУУ.Организация = ИзмененныеДанные.Организация)
	|			И (ПериодЗаданийУУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизацииОС
	|		ПО (ПакетыАмортизацииОС.Организация = ИзмененныеДанные.Организация)
	|			И (ПакетыАмортизацииОС.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|
	|ГДЕ
	|	НЕ ПериодЗаданийБУ.Организация ЕСТЬ NULL
	|		ИЛИ НЕ ПериодЗаданийУУ.Организация ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ЕСТЬNULL(ПакетыАмортизацииОС.НомерПакета, 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаОСБУ_НачислятьАмортизацию") <> Неопределено Тогда
		ТекстЗапроса = "УНИЧТОЖИТЬ ПорядокУчетаОСБУ_НачислятьАмортизацию";
		СписокЗапросов.Добавить(ТекстЗапроса);
	КонецЕсли;
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаОСУУ_НачислятьАмортизацию") <> Неопределено Тогда
		ТекстЗапроса = "УНИЧТОЖИТЬ ПорядокУчетаОСУУ_НачислятьАмортизацию";
		СписокЗапросов.Добавить(ТекстЗапроса);
	КонецЕсли;
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	//-- Локализация
	
	Возврат ТекстЗапроса;

КонецФункции
 
Функция ТекстЗапросаДляФормированияЗаданийКРасчетуАмортизацииНМА(ДанныеТаблиц, ТекстОбъединенияДанных) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	#Область ИзмененныеДанные
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.ИмяТаблицы                      КАК ИмяТаблицы,
	|	ИзмененныеДанные.Организация                     КАК Организация,
	|	ВЫРАЗИТЬ(ИзмененныеДанные.Организация КАК Справочник.Организации).ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ИзмененныеДанные.НематериальныйАктив             КАК НематериальныйАктив,
	|	ИзмененныеДанные.Документ                        КАК Документ,
	|	МАКСИМУМ(ИзмененныеДанные.ОтражатьВРеглУчете)    КАК ОтражатьВРеглУчете,
	|	МАКСИМУМ(ИзмененныеДанные.ОтражатьВУпрУчете)     КАК ОтражатьВУпрУчете,
	|	МИНИМУМ(ИзмененныеДанные.Период)                 КАК Период
	|
	|ПОМЕСТИТЬ ВсеИзмененныеДанные
	|ИЗ
	|	ТекстОбъединенияДанных_Переопределямый КАК ИзмененныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.ИмяТаблицы,
	|	ИзмененныеДанные.Организация,
	|	ВЫРАЗИТЬ(ИзмененныеДанные.Организация КАК Справочник.Организации).ГоловнаяОрганизация,
	|	ИзмененныеДанные.НематериальныйАктив,
	|	ИзмененныеДанные.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетнаяПолитикаФинансовогоУчетаПоследнее.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	УчетнаяПолитикаФинансовогоУчетаПоследнее.Период КАК Период,
	|	УчетнаяПолитикаФинансовогоУчета.ПорядокНачисленияАмортизацииНМА КАК ПорядокНачисленияАмортизации
	|ПОМЕСТИТЬ УчетнаяПолитикаФинансовогоУчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВсеИзмененныеДанные.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|		ВсеИзмененныеДанные.Период КАК Период,
	|		МАКСИМУМ(УчетнаяПолитикаФинансовогоУчетаПоследнее.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВсеИзмененныеДанные КАК ВсеИзмененныеДанные
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК УчетнаяПолитикаФинансовогоУчетаПоследнее
	|			ПО УчетнаяПолитикаФинансовогоУчетаПоследнее.Организация = ВсеИзмененныеДанные.ГоловнаяОрганизация
	|				И УчетнаяПолитикаФинансовогоУчетаПоследнее.Период <= ВсеИзмененныеДанные.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		ВсеИзмененныеДанные.ГоловнаяОрганизация,
	|		ВсеИзмененныеДанные.Период
	|	
	|	) КАК УчетнаяПолитикаФинансовогоУчетаПоследнее
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК УчетнаяПолитикаФинансовогоУчета
	|		ПО УчетнаяПолитикаФинансовогоУчета.Организация = УчетнаяПолитикаФинансовогоУчетаПоследнее.ГоловнаяОрганизация
	|			И УчетнаяПолитикаФинансовогоУчета.Период = УчетнаяПолитикаФинансовогоУчетаПоследнее.ПериодРегистра
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеИзмененныеДанные.Организация                   КАК Организация,
	|	ВсеИзмененныеДанные.НематериальныйАктив           КАК НематериальныйАктив,
	|	ВсеИзмененныеДанные.Документ                      КАК Документ,
	|	МАКСИМУМ(ВсеИзмененныеДанные.ОтражатьВРеглУчете)  КАК ОтражатьВРеглУчете,
	|	МАКСИМУМ(ВсеИзмененныеДанные.ОтражатьВУпрУчете)   КАК ОтражатьВУпрУчете,
	|	МАКСИМУМ(ЕСТЬNULL(УчетнаяПолитикаФинансовогоУчета.ПорядокНачисленияАмортизации, ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету))) КАК ПорядокНачисленияАмортизацииУУ,
	|
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА &ДвиженияЗаписываютсяПриРасчетеСтоимостиВНА
	|						ИЛИ &ДвиженияЗаписываютсяПриОтложенномФормированииДвижений
	|
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВсеИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1)
	|
	|				КОГДА ВсеИзмененныеДанные.ИмяТаблицы = ""ВыработкаНМА""
	
	|					ТОГДА НАЧАЛОПЕРИОДА(ВсеИзмененныеДанные.Период, МЕСЯЦ)
	|
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВсеИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1)
	| 
	|			КОНЕЦ) КАК ПериодБУ,
	|
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ТИПЗНАЧЕНИЯ(ВсеИзмененныеДанные.Документ) В (
	|							ТИП(Документ.ВводОстатковВнеоборотныхАктивов),
	|							ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4),
	|							ТИП(Документ.РаспределениеНДС))
	|						ИЛИ &ДвиженияЗаписываютсяПриРасчетеСтоимостиВНА
	|						ИЛИ &ДвиженияЗаписываютсяПриОтложенномФормированииДвижений
	|
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВсеИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1)
	| 
	|				КОГДА ТИПЗНАЧЕНИЯ(ВсеИзмененныеДанные.Документ) В (
	|							ТИП(Документ.ИзменениеПараметровНМА2_4))
	|						И ВсеИзмененныеДанные.Период < &ДатаНачалаУчета24
	|
	|					ТОГДА &ДатаНачалаУчета24
	| 
	|				КОГДА ВсеИзмененныеДанные.ИмяТаблицы = ""ВыработкаНМА""
	|						ИЛИ ЕСТЬNULL(УчетнаяПолитикаФинансовогоУчета.ПорядокНачисленияАмортизации, ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)) = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|
	|					ТОГДА НАЧАЛОПЕРИОДА(ВсеИзмененныеДанные.Период, МЕСЯЦ)
	|
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВсеИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1)
	| 
	|			КОНЕЦ) КАК ПериодУУ
	|
	|ПОМЕСТИТЬ ИзмененныеДанные
	|
	|ИЗ
	|	ВсеИзмененныеДанные КАК ВсеИзмененныеДанные
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаФинансовогоУчета КАК УчетнаяПолитикаФинансовогоУчета
	|		ПО УчетнаяПолитикаФинансовогоУчета.ГоловнаяОрганизация = ВсеИзмененныеДанные.ГоловнаяОрганизация
	|			И УчетнаяПолитикаФинансовогоУчета.Период = ВсеИзмененныеДанные.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеИзмененныеДанные.Организация,
	|	ВсеИзмененныеДанные.НематериальныйАктив,
	|	ВсеИзмененныеДанные.Документ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НематериальныйАктив";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТекстОбъединенияДанных_Переопределямый", "(" + ТекстОбъединенияДанных + ")");
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаНМАБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчетаНМАБУ.Организация          КАК Организация,
	|	ПорядокУчетаНМАБУ.НематериальныйАктив  КАК НематериальныйАктив,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ПорядокУчетаНМАБУ.Период, МЕСЯЦ)) КАК Период
	|
	|ПОМЕСТИТЬ ПериодЗаданийБУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаНМАБУ.Организация          КАК Организация,
	|		ПорядокУчетаНМАБУ.НематериальныйАктив  КАК НематериальныйАктив,
	|		ВЫБОР
	|			КОГДА ПорядокУчетаНМАБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|					И НАЧАЛОПЕРИОДА(ПорядокУчетаНМАБУПоследние.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПорядокУчетаНМАБУ.Период, МЕСЯЦ)
	|				ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаНМАБУПоследние.Период, МЕСЯЦ, 1)
	|			ИНАЧЕ ПорядокУчетаНМАБУПоследние.Период
	|		КОНЕЦ КАК Период
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ИзмененныеДанные.Организация           КАК Организация,
	|			ИзмененныеДанные.НематериальныйАктив   КАК НематериальныйАктив,
	|			МИНИМУМ(ИзмененныеДанные.ПериодБУ)     КАК Период,
	|			МАКСИМУМ(ПорядокУчетаНМАБУ.Период)     КАК ПериодСведений
	|		ИЗ
	|			ИзмененныеДанные КАК ИзмененныеДанные
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|				ПО (ПорядокУчетаНМАБУ.Организация = ИзмененныеДанные.Организация)
	|					И (ПорядокУчетаНМАБУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|					И (ПорядокУчетаНМАБУ.Период <= ИзмененныеДанные.ПериодБУ)
	|					И (ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.СписаниеНМА2_4)
	|						ИЛИ ИзмененныеДанные.Документ <> ПорядокУчетаНМАБУ.Регистратор)
	|		ГДЕ
	|			ИзмененныеДанные.ОтражатьВРеглУчете
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИзмененныеДанные.Организация,
	|			ИзмененныеДанные.НематериальныйАктив
	|
	|		) КАК ПорядокУчетаНМАБУПоследние
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|			ПО (ПорядокУчетаНМАБУ.Организация = ПорядокУчетаНМАБУПоследние.Организация)
	|				И (ПорядокУчетаНМАБУ.НематериальныйАктив = ПорядокУчетаНМАБУПоследние.НематериальныйАктив)
	|				И (ПорядокУчетаНМАБУ.Период = ПорядокУчетаНМАБУПоследние.ПериодСведений)
	|	ГДЕ
	|		(ПорядокУчетаНМАБУ.НачислятьАмортизациюБУ
	|				ИЛИ ПорядокУчетаНМАБУ.НачислятьАмортизациюНУ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.НематериальныйАктив,
	|		МИНИМУМ(ДОБАВИТЬКДАТЕ(ПорядокУчетаНМАБУ.Период, МЕСЯЦ, 1))
	|	ИЗ
	|		ИзмененныеДанные КАК ИзмененныеДанные
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|			ПО (ПорядокУчетаНМАБУ.Организация = ИзмененныеДанные.Организация)
	|				И (ПорядокУчетаНМАБУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|				И (ПорядокУчетаНМАБУ.Период > ИзмененныеДанные.ПериодБУ)
	|	ГДЕ
	|		ИзмененныеДанные.ОтражатьВРеглУчете
	|		И (ПорядокУчетаНМАБУ.НачислятьАмортизациюБУ
	|				ИЛИ ПорядокУчетаНМАБУ.НачислятьАмортизациюНУ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.НематериальныйАктив
	|
	|	//ТекстПорядокУчетаНМАБУ//
	|
	|	) КАК ПорядокУчетаНМАБУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаНМАБУ.Организация,
	|	ПорядокУчетаНМАБУ.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаНМАБУ_НачислятьАмортизацию") <> Неопределено Тогда
		
		ТекстПорядокУчетаНМАБУ = "
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеДанные.Организация            КАК Организация,
		|	ИзмененныеДанные.НематериальныйАктив    КАК НематериальныйАктив,
		|	ИзмененныеДанные.ПериодБУ               КАК Период
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаНМАБУ_НачислятьАмортизацию КАК ПорядокУчетаНМАБУ
		|		ПО (ПорядокУчетаНМАБУ.Организация = ИзмененныеДанные.Организация)
		|			И (ПорядокУчетаНМАБУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
		|";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстПорядокУчетаНМАБУ//", ТекстПорядокУчетаНМАБУ);
		
	КонецЕсли;
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаНМАУУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчетаНМАУУ.Организация          КАК Организация,
	|	ПорядокУчетаНМАУУ.НематериальныйАктив  КАК НематериальныйАктив,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ПорядокУчетаНМАУУ.Период, МЕСЯЦ)) КАК Период
	|ПОМЕСТИТЬ ПериодЗаданийУУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаНМАУУ.Организация          КАК Организация,
	|		ПорядокУчетаНМАУУ.НематериальныйАктив  КАК НематериальныйАктив,
	|		ВЫБОР
	|			КОГДА ПорядокУчетаНМАУУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|					И НАЧАЛОПЕРИОДА(ПорядокУчетаНМАУУПоследние.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПорядокУчетаНМАУУ.Период, МЕСЯЦ)
	|				ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаНМАУУПоследние.Период, МЕСЯЦ, 1)
	|			ИНАЧЕ ПорядокУчетаНМАУУПоследние.Период
	|		КОНЕЦ КАК Период
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ИзмененныеДанные.Организация           КАК Организация,
	|			ИзмененныеДанные.НематериальныйАктив   КАК НематериальныйАктив,
	|			МИНИМУМ(ИзмененныеДанные.ПериодУУ)     КАК Период,
	|			МАКСИМУМ(ПорядокУчетаНМАУУ.Период)     КАК ПериодСведений
	|		ИЗ
	|			ИзмененныеДанные КАК ИзмененныеДанные
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчетаНМАУУ
	|				ПО (ПорядокУчетаНМАУУ.Организация = ИзмененныеДанные.Организация)
	|					И (ПорядокУчетаНМАУУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|					И (ПорядокУчетаНМАУУ.Период <= ИзмененныеДанные.ПериодУУ)
	|					И (ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.СписаниеНМА2_4)
	|						ИЛИ ИзмененныеДанные.Документ <> ПорядокУчетаНМАУУ.Регистратор)
	|		ГДЕ
	|			ИзмененныеДанные.ОтражатьВУпрУчете
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИзмененныеДанные.Организация,
	|			ИзмененныеДанные.НематериальныйАктив
	|		) КАК ПорядокУчетаНМАУУПоследние
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчетаНМАУУ
	|			ПО (ПорядокУчетаНМАУУ.Организация = ПорядокУчетаНМАУУПоследние.Организация)
	|				И (ПорядокУчетаНМАУУ.НематериальныйАктив = ПорядокУчетаНМАУУПоследние.НематериальныйАктив)
	|				И (ПорядокУчетаНМАУУ.Период = ПорядокУчетаНМАУУПоследние.ПериодСведений)
	|	ГДЕ
	|		ПорядокУчетаНМАУУ.НачислятьАмортизациюУУ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.НематериальныйАктив,
	|		МИНИМУМ(ВЫБОР 
	|					КОГДА ИзмененныеДанные.ПорядокНачисленияАмортизацииУУ = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца) 
	|							ИЛИ ПорядокУчетаНМАУУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|						ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаНМАУУ.Период, МЕСЯЦ, 1)
	|					ИНАЧЕ ПорядокУчетаНМАУУ.Период
	|				КОНЕЦ)
	|	ИЗ
	|		ИзмененныеДанные КАК ИзмененныеДанные
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчетаНМАУУ
	|			ПО (ПорядокУчетаНМАУУ.Организация = ИзмененныеДанные.Организация)
	|				И (ПорядокУчетаНМАУУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|				И (ПорядокУчетаНМАУУ.Период > ИзмененныеДанные.ПериодУУ)
	|
	|	ГДЕ
	|		ИзмененныеДанные.ОтражатьВУпрУчете
	|		И ПорядокУчетаНМАУУ.НачислятьАмортизациюУУ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.НематериальныйАктив
	|
	|	//ТекстПорядокУчетаНМАУУ//
	|
	|) КАК ПорядокУчетаНМАУУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаНМАУУ.Организация,
	|	ПорядокУчетаНМАУУ.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаНМАУУ_НачислятьАмортизацию") <> Неопределено Тогда
		
		ТекстПорядокУчетаНМАУУ = "
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеДанные.Организация          КАК Организация,
		|	ИзмененныеДанные.НематериальныйАктив  КАК НематериальныйАктив,
		|	ИзмененныеДанные.ПериодУУ             КАК Период
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаНМАУУ_НачислятьАмортизацию КАК ПорядокУчетаНМАУУ
		|		ПО (ПорядокУчетаНМАУУ.Организация = ИзмененныеДанные.Организация)
		|			И (ПорядокУчетаНМАУУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстПорядокУчетаНМАУУ//", ТекстПорядокУчетаНМАУУ);
		
	КонецЕсли;
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ФормированиеЗаданий
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ЕСТЬNULL(ПакетыАмортизацииНМА.НомерПакета, 0) КАК НомерПакета,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ПериодЗаданийБУ.Период <= ПериодЗаданийУУ.Период
	|						ИЛИ ПериодЗаданийУУ.Период ЕСТЬ NULL
	|					ТОГДА ПериодЗаданийБУ.Период
	|				ИНАЧЕ ПериодЗаданийУУ.Период
	|			КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодЗаданийБУ КАК ПериодЗаданийБУ
	|		ПО (ПериодЗаданийБУ.Организация = ИзмененныеДанные.Организация)
	|			И (ПериодЗаданийБУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодЗаданийУУ КАК ПериодЗаданийУУ
	|		ПО (ПериодЗаданийУУ.Организация = ИзмененныеДанные.Организация)
	|			И (ПериодЗаданийУУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизацииНМА
	|		ПО (ПакетыАмортизацииНМА.Организация = ИзмененныеДанные.Организация)
	|			И (ПакетыАмортизацииНМА.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|
	|ГДЕ
	|	НЕ ПериодЗаданийБУ.Организация ЕСТЬ NULL
	|		ИЛИ НЕ ПериодЗаданийУУ.Организация ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ЕСТЬNULL(ПакетыАмортизацииНМА.НомерПакета, 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаНМАБУ_НачислятьАмортизацию") <> Неопределено Тогда
		ТекстЗапроса = "УНИЧТОЖИТЬ ПорядокУчетаНМАБУ_НачислятьАмортизацию";
		СписокЗапросов.Добавить(ТекстЗапроса);
	КонецЕсли;
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаНМАУУ_НачислятьАмортизацию") <> Неопределено Тогда
		ТекстЗапроса = "УНИЧТОЖИТЬ ПорядокУчетаНМАУУ_НачислятьАмортизацию";
		СписокЗапросов.Добавить(ТекстЗапроса);
	КонецЕсли;
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции
 
#КонецОбласти

#Область РасчетСтоимостиВнеоборотныхАктивов

Процедура ПриВыполненииОперацииЗакрытияМесяцаРасчетСтоимостиВнеоборотныхАктивов(НачалоРасчета, ВременныеТаблицы, ПараметрыОбработчика, Отказ) Экспорт

	//++ Локализация
	
	ОпределитьРазницуВСтоимостиОСПослеРасчетаСтоимости(НачалоРасчета, ВременныеТаблицы);
				
	ДоначислитьНалогНаИмущество(НачалоРасчета, ВременныеТаблицы, Отказ);
	
	//-- Локализация
	
КонецПроцедуры

Функция ЗаписьДвиженийРасчетаСтоимостиВыполняетсяВМодулеЛокализации(ИмяРегистра) Экспорт

	//++ Локализация
	
	Если ИмяРегистра = ВРег("ОтражениеДокументовВРеглУчете")
		ИЛИ ИмяРегистра = ВРег("ОтражениеДокументовВМеждународномУчете") Тогда
		Возврат Истина;
	КонецЕсли;
	
	//-- Локализация
	
	Возврат Ложь;
	
КонецФункции
 
Процедура ЗаписатьДвиженияРасчетаСтоимости(ТаблицыДляДвижений, ВыборкаДокумент, ПараметрыОбработчика) Экспорт
	
	//++ Локализация
	
	Если ПараметрыОбработчика = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаОтражениеДокументовВРеглУчете = Неопределено;
	ТаблицаОтражениеДокументовВМеждународномУчете = Неопределено;
	
	Для Каждого Таблица Из ТаблицыДляДвижений Цикл
		
		ИмяРегистра = Таблица.Ключ;
		Если ВРег(Лев(ИмяРегистра,7))= "ТАБЛИЦА" Тогда
			ИмяРегистра = Прав(ИмяРегистра, СтрДлина(ИмяРегистра)-7);
		КонецЕсли;
		
		ИмяРегистра = ВРег(ИмяРегистра);
		
		Если ИмяРегистра = ВРег("ОтражениеДокументовВРеглУчете") Тогда
			ТаблицаОтражениеДокументовВРеглУчете = Таблица.Значение;
			Продолжить;
		ИначеЕсли ИмяРегистра = ВРег("ОтражениеДокументовВМеждународномУчете") Тогда
			ТаблицаОтражениеДокументовВМеждународномУчете = Таблица.Значение;
			Продолжить;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТаблицаОтражениеДокументовВРеглУчете = Неопределено Тогда
		ТаблицаОтражениеДокументовВРеглУчете = 
			ВнеоборотныеАктивыСлужебный.ТаблицаОтражениеДокументов(
					ВыборкаДокумент.Регистратор, 
					ВыборкаДокумент.Организация, 
					ВыборкаДокумент.Период);
	КонецЕсли; 
	
	РеглУчетПроведениеСервер.ВернутьДокументыКОтражению(ТаблицаОтражениеДокументовВРеглУчете);
	

	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТаблицыДвиженийРасчетаСтоимости(ВыборкаДокумент, ТаблицыДляДвижений) Экспорт

	//++ Локализация
	
	ИмяТаблицы = "Таблица" + "ОтражениеДокументовВРеглУчете";
	
	Если НЕ ТаблицыДляДвижений.Свойство(ИмяТаблицы) Тогда
		
		ТаблицаОтражениеДокументовВРеглУчете = ВнеоборотныеАктивыСлужебный.ТаблицаОтражениеДокументов(
													ВыборкаДокумент.Регистратор, 
													ВыборкаДокумент.Организация, 
													ВыборкаДокумент.Период);
		
		ТаблицыДляДвижений.Вставить(ИмяТаблицы, ТаблицаОтражениеДокументовВРеглУчете);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекущиеРасходыПриФормированииТаблицДвиженийРасчетаСтоимости(ВыборкаДокумент, Результат, ТекущиеРасходы) Экспорт

	//++ Локализация
	РассчитатьСтоимостьПриЦелевомФинансировании(ВыборкаДокумент, Результат.ДанныеДокумента, ТекущиеРасходы);
	КорректировкаСтоимостиАрендованногоИмущества(ВыборкаДокумент, Результат.ДанныеДокумента, ТекущиеРасходы);
	//-- Локализация
	
КонецПроцедуры

Функция ТекстЗапросаВыборкиДанныхДляРасчетаСтоимости() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеКРасчету.Организация                               КАК Организация,
	|	ДанныеКРасчету.НаправлениеДеятельности                   КАК НаправлениеДеятельности,
	|	ДанныеКРасчету.ВидОбъектовУчета                          КАК ВидОбъектовУчета,
	|	ДанныеКРасчету.Регистратор                               КАК Регистратор,
	|	ДанныеКРасчету.Период                                    КАК Период,
	|	ДанныеКРасчету.ХозяйственнаяОперация                     КАК ХозяйственнаяОперация,
	|	ДанныеКРасчету.ФактическаяСтоимость                      КАК ФактическаяСтоимость,
	|	ДанныеКРасчету.ВариантПримененияЦелевогоФинансирования   КАК ВариантПримененияЦелевогоФинансирования,
	|	ДанныеКРасчету.ВидАналитикиКапитализацииРасходов         КАК ВидАналитикиКапитализацииРасходов,
	|	ДанныеКРасчету.ОтражатьВРеглУчете                        КАК ОтражатьВРеглУчете,
	|	ДанныеКРасчету.ОтражатьВУпрУчете                         КАК ОтражатьВУпрУчете,
	|	ДанныеКРасчету.ОтражатьВБУ                               КАК ОтражатьВБУ,
	|	ДанныеКРасчету.ОтражатьВНУ                               КАК ОтражатьВНУ,
	|	ЕСТЬNULL(НастройкиУчетаНалогаНаПрибыль.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи, ЛОЖЬ) КАК ВключатьВСоставНалоговыхРасходовАрендныеПлатежи
	|ИЗ
	|	ДанныеКРасчету КАК ДанныеКРасчету
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО ДанныеКРасчету.Организация = Организации.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаНалогаНаПрибыль.СрезПоследних(
	|				&НачалоМесяца,
	|				Организация В
	|					(ВЫБРАТЬ
	|						КэшГраниц.Организация.ГоловнаяОрганизация
	|					ИЗ
	|						КэшГраниц)) КАК НастройкиУчетаНалогаНаПрибыль
	|		ПО (НастройкиУчетаНалогаНаПрибыль.Организация = Организации.ГоловнаяОрганизация)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ПослеРасчетаСтоимостиВнеоборотныхАктивов(Запрос, МенеджерВременныхТаблиц, ТаблицыУпрБаланса) Экспорт

	//++ Локализация
	
	//-- Локализация
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаДанныеДокумента(СписокЗапросов) Экспорт
	
	ТекстЗапросаПереопределен = Ложь;
	
	//++ Локализация
	
	ТекстЗапросаПереопределен = Истина;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втАктивы
	|ИЗ
	|	Документ.МодернизацияОС2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	СписокЗапросов.Добавить(ТекстЗапроса, "втАктивы");

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ТаблицаОС.Ссылка.Дата, МЕСЯЦ) КАК Месяц,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.Ссылка.ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	ТаблицаОС.Ссылка.ОтражатьВУпрУчете КАК ОтражатьВУпрУчете
	|ПОМЕСТИТЬ втОбъектыДокумента
	|ИЗ
	|	Документ.ПринятиеКУчетуОС2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Регистратор
	|	И ТаблицаОС.Ссылка.ВидАналитикиКапитализацииРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыАналитикиКапитализацииРасходов.ОсновныеСредства)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ТаблицаОС.Ссылка.Дата, МЕСЯЦ),
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.Ссылка.ОтражатьВРеглУчете,
	|	ТаблицаОС.Ссылка.ОтражатьВУпрУчете
	|ИЗ
	|	Документ.ПринятиеКУчетуУзловКомпонентовАмортизации.КомпонентыАмортизации КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Регистратор
	|	И ТаблицаОС.ОсновноеСредство.ТипОС <> ЗНАЧЕНИЕ(Перечисление.ТипыОС.Узел)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	СписокЗапросов.Добавить(ТекстЗапроса, "втОбъектыДокумента");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Дата КАК Дата
	|ПОМЕСТИТЬ втРегистраторы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОсновныеСредства.НомерСтроки КАК НомерСтроки,
	|		Операция.Ссылка КАК Ссылка,
	|		Операция.Дата КАК Дата
	|	ИЗ
	|		Документ.ПринятиеКУчетуОС2_4 КАК Операция
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС2_4.ОС КАК ОсновныеСредства
	|			ПО ОсновныеСредства.Ссылка = Операция.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыДокумента КАК втОбъектыДокумента
	|			ПО ОсновныеСредства.ОсновноеСредство = втОбъектыДокумента.ОсновноеСредство
	|				И (Операция.ОтражатьВРеглУчете = втОбъектыДокумента.ОтражатьВРеглУчете И втОбъектыДокумента.ОтражатьВРеглУчете
	|					ИЛИ Операция.ОтражатьВУпрУчете = втОбъектыДокумента.ОтражатьВУпрУчете И втОбъектыДокумента.ОтражатьВУпрУчете)
	|	ГДЕ
	|		Операция.Проведен
	|		И Операция.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|		И Операция.ВидАналитикиКапитализацииРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыАналитикиКапитализацииРасходов.ОсновныеСредства)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Компоненты.НомерСтроки,
	|		Операция.Ссылка,
	|		Операция.Дата
	|	ИЗ
	|		Документ.ПринятиеКУчетуУзловКомпонентовАмортизации КАК Операция
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуУзловКомпонентовАмортизации.КомпонентыАмортизации КАК Компоненты
	|			ПО Компоненты.Ссылка = Операция.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыДокумента КАК втОбъектыДокумента
	|			ПО Компоненты.ОсновноеСредство = втОбъектыДокумента.ОсновноеСредство
	|				И (Операция.ОтражатьВРеглУчете = втОбъектыДокумента.ОтражатьВРеглУчете И втОбъектыДокумента.ОтражатьВРеглУчете
	|					ИЛИ Операция.ОтражатьВУпрУчете = втОбъектыДокумента.ОтражатьВУпрУчете И втОбъектыДокумента.ОтражатьВУпрУчете)
	|	ГДЕ
	|		Операция.Проведен
	|		И Операция.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|
	|	) КАК ВложенныйЗапрос
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Регистратор,
	|	&Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|";
	СписокЗапросов.Добавить(ТекстЗапроса, "втРегистраторы");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	втРегистраторы.Ссылка КАК Ссылка,
	|	втРегистраторы.Дата КАК Дата
	|ПОМЕСТИТЬ втПоследнийДокумент
	|ИЗ
	|	втРегистраторы КАК втРегистраторы
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(втРегистраторы.Ссылка) <> ТИП(Документ.ПринятиеКУчетуУзловКомпонентовАмортизации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	втРегистраторы.Ссылка,
	|	втРегистраторы.Дата
	|ИЗ
	|	втРегистраторы КАК втРегистраторы
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(втРегистраторы.Ссылка) = ТИП(Документ.ПринятиеКУчетуУзловКомпонентовАмортизации)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	СписокЗапросов.Добавить(ТекстЗапроса, "втПоследнийДокумент");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	втРегистраторы.Ссылка КАК Ссылка
	|ИЗ
	|	втРегистраторы КАК втРегистраторы";
	СписокЗапросов.Добавить(ТекстЗапроса, "ДокументыКомпонентов");

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаОС.Ссылка КАК Ссылка,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОбъектУчета,
	|	ТаблицаОС.Ссылка.Организация.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаОС.СтоимостьУУ КАК СтоимостьУУ,
	|	ТаблицаОС.СтоимостьБУ КАК СтоимостьБУ,
	|	ТаблицаОС.СтоимостьНУ КАК СтоимостьНУ,
	|	ТаблицаОС.СуммаЦелевыхСредств КАК СуммаЦелевыхСредств,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	&ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете КАК ОтражатьВУпрУчете,
	|	ТаблицаОС.Ссылка.ОтражатьВБУ КАК ОтражатьВБУ,
	|	ТаблицаОС.Ссылка.ОтражатьВНУ КАК ОтражатьВНУ,
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторСтроки
	|	
	|ИЗ
	|	Документ.ПринятиеКУчетуОС2_4.ОС КАК ТаблицаОС
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО ПервоначальныеСведенияОС.Регистратор = ТаблицаОС.Ссылка
	|			И ПервоначальныеСведенияОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|			И ПервоначальныеСведенияОС.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|ГДЕ
	|	ТаблицаОС.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ втРегистраторы КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОС.Ссылка КАК Ссылка,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР КОГДА ТаблицаОС.КомпонентАмортизации.ТипОС = ЗНАЧЕНИЕ(Перечисление.ТипыОС.Узел) ТОГДА
	|		ТаблицаОС.КомпонентАмортизации
	|	ИНАЧЕ
	|		ТаблицаОС.ОсновноеСредство
	|	КОНЕЦ КАК ОбъектУчета,
	|	ТаблицаОС.Ссылка.Организация.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаОС.СтоимостьУУ,
	|	ТаблицаОС.СтоимостьБУ,
	|	0,
	|	0,
	|	0,
	|	&ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете КАК ОтражатьВУпрУчете,
	|	ТаблицаОС.Ссылка.ОтражатьВРеглУчете КАК ОтражатьВБУ,
	|	ЛОЖЬ КАК ОтражатьВНУ,
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторСтроки
	|	
	|ИЗ
	|	Документ.ПринятиеКУчетуУзловКомпонентовАмортизации.КомпонентыАмортизации КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО ТаблицаОС.Ссылка = ПервоначальныеСведенияОС.Регистратор
	|			И ТаблицаОС.КомпонентАмортизации = ПервоначальныеСведенияОС.ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ втРегистраторы КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОС.Ссылка КАК Ссылка,
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.Ссылка.Организация.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаОС.СтоимостьУУ,
	|	ТаблицаОС.СтоимостьБУ,
	|	0,
	|	ТаблицаОС.СуммаЦелевыхСредств,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ,
	|	&ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете КАК ОтражатьВУпрУчете,
	|	ЕСТЬNULL(ПорядокУчетаОСБУ.СостояниеБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК ОтражатьВБУ,
	|	ЕСТЬNULL(ПорядокУчетаОСБУ.СостояниеНУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК ОтражатьВНУ,
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.МодернизацияОС2_4.ОС КАК ТаблицаОС
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО ТаблицаОС.Ссылка = ПервоначальныеСведенияОС.Регистратор
	|			И ТаблицаОС.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Период, 
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация = &Организация
	|				И ОсновноеСредство В (ВЫБРАТЬ втАктивы.ОсновноеСредство ИЗ втАктивы КАК втАктивы)) КАК ПорядокУчетаОСБУ
	|		ПО ПорядокУчетаОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|			И ПорядокУчетаОСБУ.Организация = &Организация
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаНМА.Ссылка КАК Ссылка,
	|	1,
	|	ТаблицаНМА.НематериальныйАктив,
	|	ТаблицаНМА.Организация.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаНМА.ПервоначальнаяСтоимостьУУ,
	|	ТаблицаНМА.ПервоначальнаяСтоимостьБУ,
	|	0,
	|	ТаблицаНМА.СуммаЦелевыхСредств,
	|	0,
	|	&ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете КАК ОтражатьВУпрУчете,
	|	ТаблицаНМА.Ссылка.ОтражатьВБУ КАК ОтражатьВБУ,
	|	ТаблицаНМА.Ссылка.ОтражатьВНУ КАК ОтражатьВНУ,
	|	ТаблицаНМА.ИдентификаторДокумента КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ПринятиеКУчетуНМА2_4 КАК ТаблицаНМА
	|
	|ГДЕ
	|	ТаблицаНМА.Ссылка = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаНМА.Ссылка КАК Ссылка,
	|	1,
	|	ТаблицаНМА.НематериальныйАктив,
	|	ТаблицаНМА.Ссылка.Организация.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаНМА.СтоимостьУУ,
	|	ТаблицаНМА.СтоимостьБУ,
	|	0,
	|	0,
	|	0,
	|	&ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете КАК ОтражатьВУпрУчете,
	|	&ОтражатьВРеглУчете КАК ОтражатьВБУ,
	|	ЛОЖЬ КАК ОтражатьВНУ,
	|	ТаблицаНМА.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.УлучшениеНМА.НМА КАК ТаблицаНМА
	|
	|ГДЕ
	|	ТаблицаНМА.Ссылка = &Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки ВОЗР";
	СписокЗапросов.Добавить(ТекстЗапроса, "ДанныеДокумента");
	
	//-- Локализация
	
	Возврат ТекстЗапросаПереопределен;
	
КонецФункции

#КонецОбласти

#Область ОтложенноеФормированиеДвижений

Процедура ВернутьДокументыКОтражению(Ссылка, Организация, Дата, ТаблицыДляДвижений) Экспорт
	
	//++ Локализация
	
	Если Ссылка.Метаданные().Движения.Содержит(Метаданные.РегистрыСведений.ОтражениеДокументовВРеглУчете) Тогда
	
		ИмяТаблицы = "Таблица" + "ОтражениеДокументовВРеглУчете";
		
		Если ТаблицыДляДвижений.Свойство(ИмяТаблицы) Тогда
			ТаблицаОтражениеДокументовВУчете = ТаблицыДляДвижений[ИмяТаблицы];
		ИначеЕсли ТаблицыДляДвижений.Свойство("ОтражениеДокументовВРеглУчете") Тогда
			ТаблицаОтражениеДокументовВУчете = ТаблицыДляДвижений.ОтражениеДокументовВРеглУчете;
		Иначе
			ТаблицаОтражениеДокументовВУчете = ВнеоборотныеАктивыСлужебный.ТаблицаОтражениеДокументов(Ссылка, Организация, Дата);
		КонецЕсли;
		
		РеглУчетПроведениеСервер.ВернутьДокументыКОтражению(ТаблицаОтражениеДокументовВУчете);
	
	КонецЕсли;
	
	//-- Локализация

КонецПроцедуры

Процедура ПроверитьОтложенноеФормированиеДвижений(ПараметрыВыполнения, Отказ) Экспорт

	//++ Локализация
	
	ИспользуемыеВТ = ОбщегоНазначенияУТ.СписокВременныхТаблиц(ПараметрыВыполнения.МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыВыполнения.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ПараметрыВыполнения.Месяц));
	
	#Область ТребуетсяПродажаПоСхеме22
	
	Если Константы.ИспользоватьВнеоборотныеАктивы2_2.Получить() Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ДанныеКРасчету.Ссылка КАК Ссылка,
		|	ДанныеКРасчету.ОбъектУчета КАК ОбъектУчета,
		|	ДанныеКРасчету.Организация КАК Организация,
		|	ДанныеКРасчету.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ДанныеКРасчету.Дата КАК Дата
		|ПОМЕСТИТЬ втСписокОбъектовДляПроверки
		|ИЗ
		|	ДанныеКРасчету
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Ссылка) = ТИП(Документ.РеализацияУслугПрочихАктивов)
		|	И ДанныеКРасчету.ХозяйственнаяОперация В (
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов), 
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектУчета,
		|	Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПервоначальныеСведенияОС.Организация КАК Организация,
		|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОбъектУчета,
		|	ПервоначальныеСведенияОС.ДокументСнятияСУчетаБУ КАК ДокументСнятияСУчета
		|ПОМЕСТИТЬ ДокументыСнятияСУчета
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
		|			&КонецМесяца,
		|			ОсновноеСредство В
		|				(ВЫБРАТЬ
		|					втСписокОбъектовДляПроверки.ОбъектУчета
		|				ИЗ
		|					втСписокОбъектовДляПроверки)) КАК ПервоначальныеСведенияОС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПервоначальныеСведенияНМА.Организация,
		|	ПервоначальныеСведенияНМА.НематериальныйАктив,
		|	ПервоначальныеСведенияНМА.ДокументСписания
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
		|			&КонецМесяца,
		|			(НематериальныйАктив, Организация) В
		|				(ВЫБРАТЬ
		|					втСписокОбъектовДляПроверки.ОбъектУчета,
		|					втСписокОбъектовДляПроверки.Организация
		|				ИЗ
		|					втСписокОбъектовДляПроверки)) КАК ПервоначальныеСведенияНМА
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектУчета,
		|	Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	втСписокОбъектовДляПроверки.Ссылка КАК Ссылка,
		|	втСписокОбъектовДляПроверки.Организация КАК Организация,
		|	ТаблицаДокумента.Номер КАК НомерДокумента,
		|	ТаблицаДокумента.Дата КАК ДатаДокумента,
		|	втСписокОбъектовДляПроверки.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	втСписокОбъектовДляПроверки.Дата КАК Дата
		|ИЗ
		|	втСписокОбъектовДляПроверки КАК втСписокОбъектовДляПроверки
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов КАК ТаблицаДокумента
		|		ПО (ТаблицаДокумента.Ссылка = втСписокОбъектовДляПроверки.Ссылка)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыСнятияСУчета КАК ДокументыСнятияСУчета
		|		ПО (ДокументыСнятияСУчета.ОбъектУчета = втСписокОбъектовДляПроверки.ОбъектУчета)
		|			И (ДокументыСнятияСУчета.Организация = втСписокОбъектовДляПроверки.Организация)
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(ДокументыСнятияСУчета.ДокументСнятияСУчета) В (
		|					ТИП(Документ.ПодготовкаКПередачеНМА),
		|					ТИП(Документ.ПодготовкаКПередачеОС))
		|
		|	И ДокументыСнятияСУчета.ДокументСнятияСУчета <> ЗНАЧЕНИЕ(Документ.ПодготовкаКПередачеНМА.ПустаяСсылка)
		|	И ДокументыСнятияСУчета.ДокументСнятияСУчета <> ЗНАЧЕНИЕ(Документ.ПодготовкаКПередачеОС.ПустаяСсылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.МенеджерВременныхТаблиц = ПараметрыВыполнения.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ПараметрыВыполнения.Месяц));
		Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ПараметрыВыполнения.Месяц));
	
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав Тогда
				ОписаниеПроблемы = НСтр("ru = 'В документе Реализация услуг и прочих активов №%1 от %2 необходимо использовать операцию ""Реализация с отложенным переходом прав"", для основных средств, подготовленных к передаче, до перехода на версию учета 2.4.
                                         |Для этого необходимо оформить реализацию на основании документа ""Подготовка к передаче ОС"".'");
			Иначе
				ОписаниеПроблемы = НСтр("ru = 'В документе Реализация услуг и прочих активов №%1 от %2 необходимо использовать операцию ""Реализация"", для внеоборотных активов, подготовленных к передаче, до перехода на версию учета 2.4.'");
			КонецЕсли; 
			
			ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
										Выборка.НомерДокумента, 
										Формат(Выборка.ДатаДокумента, "ДЛФ=D"));
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				ПараметрыВыполнения.ЭтапРасчета, 
				ПараметрыВыполнения.Месяц,
				Выборка.Организация,
				ОписаниеПроблемы,,
				Выборка.Ссылка, 
				Отказ);
					
		КонецЦикла; 
		
		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ПараметрыВыполнения.МенеджерВременныхТаблиц,, ИспользуемыеВТ);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПустоеНазначениеПриЦелевомФинансировании
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеКРасчету.Ссылка КАК Ссылка,
	|	ДанныеКРасчету.Организация КАК Организация,
	|	ТаблицаДокумента.Ссылка.Номер КАК НомерДокумента,
	|	ТаблицаДокумента.Ссылка.Дата КАК ДатаДокумента,
	|	ТаблицаДокумента.ОсновноеСредство КАК ВнеоборотныйАктив,
	|	ЕСТЬNULL(ТаблицаДокумента.НомерСтроки, 0) КАК НомерСтроки
	|ИЗ
	|	ДанныеКРасчету КАК ДанныеКРасчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС2_4.ОС КАК ТаблицаДокумента
	|		ПО (ТаблицаДокумента.Ссылка = ДанныеКРасчету.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьВНА
	|		ПО (СтоимостьВНА.Ссылка = ТаблицаДокумента.Ссылка)
	|			И (СтоимостьВНА.ОбъектУчета = ТаблицаДокумента.ОсновноеСредство)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Ссылка) = ТИП(Документ.ИзменениеПараметровОС2_4)
	|	И ТаблицаДокумента.Ссылка.НаправлениеДеятельностиФлаг
	|	И ТаблицаДокумента.Ссылка.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	И ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеКРасчету.Ссылка КАК Ссылка,
	|	ДанныеКРасчету.Организация КАК Организация,
	|	ТаблицаДокумента.Ссылка.Номер КАК НомерДокумента,
	|	ТаблицаДокумента.Ссылка.Дата КАК ДатаДокумента,
	|	ТаблицаДокумента.НематериальныйАктив КАК ВнеоборотныйАктив,
	|	ЕСТЬNULL(ТаблицаДокумента.НомерСтроки, 0) КАК НомерСтроки
	|ИЗ
	|	ДанныеКРасчету КАК ДанныеКРасчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровНМА2_4.НМА КАК ТаблицаДокумента
	|		ПО (ТаблицаДокумента.Ссылка = ДанныеКРасчету.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьВНА
	|		ПО (СтоимостьВНА.Ссылка = ТаблицаДокумента.Ссылка)
	|			И (СтоимостьВНА.ОбъектУчета = ТаблицаДокумента.НематериальныйАктив)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Ссылка) = ТИП(Документ.ИзменениеПараметровНМА2_4)
	|	И ТаблицаДокумента.Ссылка.НаправлениеДеятельностиФлаг
	|	И ТаблицаДокумента.Ссылка.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	И ЕСТЬNULL(СтоимостьВНА.СтоимостьЦФ, 0) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ТипЗнч(Выборка.ВнеоборотныйАктив) = Тип("СправочникСсылка.ОбъектыЭксплуатации") Тогда
			ОписаниеПроблемы = НСтр("ru = 'В документе Изменение параметров ОС №%1 от %2 для внеоборотного актива ""%3"" необходимо указать направление деятельности, т.к. используется целевое финансирование.'");
		Иначе
			ОписаниеПроблемы = НСтр("ru = 'В документе Изменение параметров НМА №%1 от %2 для внеоборотного актива ""%3"" необходимо указать направление деятельности, т.к. используется целевое финансирование.'");
		КонецЕсли; 
		
		ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
									Выборка.НомерДокумента, 
									Формат(Выборка.ДатаДокумента, "ДЛФ=D"), 
									Выборка.ВнеоборотныйАктив);
		
		ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
			ПараметрыВыполнения.ЭтапРасчета, 
			ПараметрыВыполнения.Месяц,
			Выборка.Организация,
			ОписаниеПроблемы,,
			Выборка.Ссылка, 
			Отказ);
				
	КонецЦикла; 
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ПараметрыВыполнения.МенеджерВременныхТаблиц,, ИспользуемыеВТ);
	
	#КонецОбласти
	
	#Область РеализацияДоПодготовкиКПередаче
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаРасходы.ВнеоборотныйАктив
	|ПОМЕСТИТЬ ТаблицаВНА
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов.Расходы КАК ТаблицаРасходы
	|ГДЕ
	|	ТаблицаРасходы.Ссылка В (
	|		ВЫБРАТЬ
	|			ДанныеКРасчету.Ссылка
	|		ИЗ
	|			ДанныеКРасчету КАК ДанныеКРасчету
	|		ГДЕ
	|			ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Ссылка) = ТИП(Документ.РеализацияУслугПрочихАктивов))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВнеоборотныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведения.Организация КАК Организация,
	|	ПервоначальныеСведения.ОсновноеСредство КАК ВнеоборотныйАктив,
	|
	|	ЕСТЬNULL(ПодготовкаКПередачеБУ.Дата, ДАТАВРЕМЯ(1,1,1)) КАК ДатаСписанияБУ,
	|	ЕСТЬNULL(ПодготовкаКПередачеНУ.Дата, ДАТАВРЕМЯ(1,1,1)) КАК ДатаСписанияНУ,
	|
	|	ПервоначальныеСведения.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведения.ДатаВводаВЭксплуатациюНУ КАК ДатаВводаВЭксплуатациюНУ
	|
	|ПОМЕСТИТЬ ПервоначальныеСведения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|		&КонецМесяца,
	|		ОсновноеСредство В (
	|			ВЫБРАТЬ
	|				ТаблицаВНА.ВнеоборотныйАктив
	|			ИЗ
	|				ТаблицаВНА КАК ТаблицаВНА)) КАК ПервоначальныеСведения
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПодготовкаКПередачеОС2_4 КАК ПодготовкаКПередачеБУ
	|		ПО (ПодготовкаКПередачеБУ.Ссылка = ПервоначальныеСведения.ДокументСнятияСУчетаБУ)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПодготовкаКПередачеОС2_4 КАК ПодготовкаКПередачеНУ
	|		ПО (ПодготовкаКПередачеНУ.Ссылка = ПервоначальныеСведения.ДокументСнятияСУчетаНУ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПервоначальныеСведения.Организация КАК Организация,
	|	ПервоначальныеСведения.НематериальныйАктив КАК ВнеоборотныйАктив,
	|
	|	ЕСТЬNULL(ПодготовкаКПередаче.Дата, ДАТАВРЕМЯ(1,1,1)) КАК ДатаСписанияБУ,
	|	ЕСТЬNULL(ПодготовкаКПередаче.Дата, ДАТАВРЕМЯ(1,1,1)) КАК ДатаСписанияНУ,
	|
	|	ПервоначальныеСведения.ДатаПринятияКУчетуБУ КАК ДатаВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведения.ДатаПринятияКУчетуБУ КАК ДатаВводаВЭксплуатациюНУ
	|
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|		&КонецМесяца,
	|		НематериальныйАктив В (
	|			ВЫБРАТЬ
	|				ТаблицаВНА.ВнеоборотныйАктив
	|			ИЗ
	|				ТаблицаВНА КАК ТаблицаВНА)) КАК ПервоначальныеСведения
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПодготовкаКПередачеНМА2_4 КАК ПодготовкаКПередаче
	|		ПО (ПодготовкаКПередаче.Ссылка = ПервоначальныеСведения.ДокументСписания)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ВнеоборотныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеКРасчету.Ссылка КАК Ссылка,
	|	ДанныеКРасчету.Организация КАК Организация,
	|	ТаблицаДокумента.Номер КАК НомерДокумента,
	|	ТаблицаДокумента.Дата КАК ДатаДокумента,
	|	ДанныеКРасчету.Дата КАК Дата,
	|	ТаблицаРасходы.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
	|	ЕСТЬNULL(ТаблицаРасходы.НомерСтроки, 0) КАК НомерСтроки,
	|	
	|	ЕСТЬNULL(ПервоначальныеСведения.ДатаВводаВЭксплуатациюБУ, ДАТАВРЕМЯ(1,1,1)) <> ДАТАВРЕМЯ(1,1,1)
	|			И (ЕСТЬNULL(ПервоначальныеСведения.ДатаСписанияБУ, ДАТАВРЕМЯ(1,1,1)) = ДАТАВРЕМЯ(1,1,1)
	|				ИЛИ ЕСТЬNULL(ПервоначальныеСведения.ДатаСписанияБУ, ДАТАВРЕМЯ(1,1,1)) > ТаблицаДокумента.Дата) КАК ОшибкаБУ,
	|
	|	ЕСТЬNULL(ПервоначальныеСведения.ДатаВводаВЭксплуатациюНУ, ДАТАВРЕМЯ(1,1,1)) <> ДАТАВРЕМЯ(1,1,1)
	|			И (ЕСТЬNULL(ПервоначальныеСведения.ДатаСписанияНУ, ДАТАВРЕМЯ(1,1,1)) = ДАТАВРЕМЯ(1,1,1)
	|				ИЛИ ЕСТЬNULL(ПервоначальныеСведения.ДатаСписанияНУ, ДАТАВРЕМЯ(1,1,1)) > ТаблицаДокумента.Дата) КАК ОшибкаНУ
	|
	|ИЗ
	|	ДанныеКРасчету КАК ДанныеКРасчету
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов КАК ТаблицаДокумента
	|		ПО (ТаблицаДокумента.Ссылка = ДанныеКРасчету.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Расходы КАК ТаблицаРасходы
	|		ПО (ТаблицаРасходы.Ссылка = ДанныеКРасчету.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведения КАК ПервоначальныеСведения
	|		ПО (ПервоначальныеСведения.ВнеоборотныйАктив = ТаблицаРасходы.ВнеоборотныйАктив)
	|			И (ПервоначальныеСведения.Организация = ТаблицаДокумента.Организация)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Ссылка) = ТИП(Документ.РеализацияУслугПрочихАктивов)
	|
	|	И (ЕСТЬNULL(ПервоначальныеСведения.ДатаВводаВЭксплуатациюБУ, ДАТАВРЕМЯ(1,1,1)) <> ДАТАВРЕМЯ(1,1,1)
	|			И (ЕСТЬNULL(ПервоначальныеСведения.ДатаСписанияБУ, ДАТАВРЕМЯ(1,1,1)) = ДАТАВРЕМЯ(1,1,1)
	|				ИЛИ ЕСТЬNULL(ПервоначальныеСведения.ДатаСписанияБУ, ДАТАВРЕМЯ(1,1,1)) > ТаблицаДокумента.Дата)
	|
	|		ИЛИ ЕСТЬNULL(ПервоначальныеСведения.ДатаВводаВЭксплуатациюНУ, ДАТАВРЕМЯ(1,1,1)) <> ДАТАВРЕМЯ(1,1,1)
	|			И (ЕСТЬNULL(ПервоначальныеСведения.ДатаСписанияНУ, ДАТАВРЕМЯ(1,1,1)) = ДАТАВРЕМЯ(1,1,1)
	|				ИЛИ ЕСТЬNULL(ПервоначальныеСведения.ДатаСписанияНУ, ДАТАВРЕМЯ(1,1,1)) > ТаблицаДокумента.Дата))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ТипЗнч(Выборка.ВнеоборотныйАктив) = Тип("СправочникСсылка.ОбъектыЭксплуатации") Тогда
			
			Если Выборка.ОшибкаБУ Тогда
				
				ОписаниеПроблемы = НСтр("ru = 'Реализация услуг и прочих активов №%1 от %2 для внеоборотного актива %3 оформлена раньше чем подготовка к передаче в бух. учете.'");
			
				ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
											Выборка.НомерДокумента, 
											Формат(Выборка.ДатаДокумента, "ДЛФ=D"), 
											Выборка.ВнеоборотныйАктив);
				
				ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
					ПараметрыВыполнения.ЭтапРасчета, 
					ПараметрыВыполнения.Месяц,
					Выборка.Организация,
					ОписаниеПроблемы,,
					Выборка.Ссылка, 
					Отказ);
					
			КонецЕсли;
					
			Если Выборка.ОшибкаНУ Тогда
				
				ОписаниеПроблемы = НСтр("ru = 'Реализация услуг и прочих активов №%1 от %2 для внеоборотного актива %3 оформлена раньше чем подготовка к передаче в нал. учете.'");
			
				ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
											Выборка.НомерДокумента, 
											Формат(Выборка.ДатаДокумента, "ДЛФ=D"), 
											Выборка.ВнеоборотныйАктив);
				
				ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
					ПараметрыВыполнения.ЭтапРасчета, 
					ПараметрыВыполнения.Месяц,
					Выборка.Организация,
					ОписаниеПроблемы,,
					Выборка.Ссылка, 
					Отказ);
					
			КонецЕсли;
			
		Иначе
			
			ОписаниеПроблемы = НСтр("ru = 'Реализация услуг и прочих активов №%1 от %2 для внеоборотного актива %3 оформлена раньше чем подготовка к передаче.'");
		
			ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
										Выборка.НомерДокумента, 
										Формат(Выборка.ДатаДокумента, "ДЛФ=D"), 
										Выборка.ВнеоборотныйАктив);
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				ПараметрыВыполнения.ЭтапРасчета, 
				ПараметрыВыполнения.Месяц,
				Выборка.Организация,
				ОписаниеПроблемы,,
				Выборка.Ссылка, 
				Отказ);
				
		КонецЕсли;

	КонецЦикла; 
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Функция ТекстЗапросаНачислениеИзноса() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОбъектУчета
	|ПОМЕСТИТЬ НачислениеИзноса
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И (Организация, ОсновноеСредство) В
	|					(ВЫБРАТЬ
	|						КэшГраниц.Организация,
	|						КэшГраниц.ОбъектУчета
	|					ИЗ
	|						ВТ_КэшГраниц КАК КэшГраниц)) КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ДополнитьИдентификаторыДокументовПоКоторымФормируютсяОтложенныеДвижения(СписокОбъектов) Экспорт
	
	//++ Локализация
	
	СписокТипов = Новый Массив;
	СписокТипов.Добавить(Тип("ДокументСсылка.ПараметрыНачисленияЗемельногоНалога"));
	СписокТипов.Добавить(Тип("ДокументСсылка.ПараметрыНачисленияНалогаНаИмущество"));
	СписокТипов.Добавить(Тип("ДокументСсылка.ПараметрыНачисленияТранспортногоНалога"));
	СписокТипов.Добавить(Тип("ДокументСсылка.СнятиеСРегистрацииЗемельныхУчастков"));
	СписокТипов.Добавить(Тип("ДокументСсылка.СнятиеСРегистрацииТранспортныхСредств"));
	
	Для каждого ТипОбъекта Из СписокТипов Цикл
		СписокОбъектов.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипОбъекта));
	КонецЦикла; 

	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьСписокТаблицПоКоторымФормируютсяЗаданияКФормированиюДвижений(СписокТаблиц) Экспорт

	//++ Локализация
	СписокТаблиц.Добавить("ПараметрыНачисленияЗемельногоНалога");
	СписокТаблиц.Добавить("ПараметрыНачисленияНалогаНаИмущество");
	СписокТаблиц.Добавить("ПараметрыНачисленияТранспортногоНалога");
	//-- Локализация
	
КонецПроцедуры

Функция ТекстЗапросаУчетнаяПолитикаДляОтложенногоФормированияДвижений() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	УчетнаяПолитика.Организация КАК Организация,
	|	УчетнаяПолитика.ПорядокНачисленияАмортизацииОС КАК ПорядокНачисленияАмортизацииОС,
	|	УчетнаяПолитика.ПорядокНачисленияАмортизацииНМА КАК ПорядокНачисленияАмортизацииНМА
	|
	|ПОМЕСТИТЬ УчетнаяПолитикаБУ
	|
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаБухУчета.СрезПоследних(
	|		&НачалоМесяца,
	|		Организация В (ВЫБРАТЬ ДанныеКРасчету.ГоловнаяОрганизация ИЗ ДанныеКРасчету КАК ДанныеКРасчету)) КАК УчетнаяПолитика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";

	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ЖурналДокументовОС

// 
// Параметры:
//  ХозяйственныеОперацииИДокументы - ТаблицаЗначений из СтрокаТаблицыЗначений -
//  КлючНазначенияИспользования - Строка -
Процедура ДополнитьХозяйственныеОперацииИДокументыОС(ХозяйственныеОперацииИДокументы, КлючНазначенияИспользования) Экспорт

	//++ Локализация
	
	ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
	
	#Область ПринятиеКУчетуОС2_4
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ПринятиеКУчетуОС2_4.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
	Строка.ДобавитьКнопкуСоздать        = Истина;
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'принятие к учету ОС'");
	#КонецОбласти
	
	#Область ПеремещениеОС2_4
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс") Тогда
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ПеремещениеОС2_4.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'перемещение ОС'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
	КонецЕсли; 
	#КонецОбласти
	
	#Область Документы2_2
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") Тогда
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ИзменениеСостоянияОС;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ИзменениеСостоянияОС.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
		Строка.ДобавитьКнопкуСоздать        = Ложь;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.РеализацияУслугПрочихАктивов.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'реализация услуг и прочих активов'");
		Строка.ДобавитьКнопкуСоздать        = Ложь;
		
	КонецЕсли; 
	
	#КонецОбласти
	
	#Область ИнвентаризацияОС
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ИнвентаризацияОС;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ИнвентаризацияОС.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'инвентаризация ОС'");
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ИнвентаризацияВложенийВОС;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ИнвентаризацияОС.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'инвентаризация ОС'");
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОбъектыСтроительства") Тогда
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ИнвентаризацияНезавершенногоСтроительства;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ИнвентаризацияОС.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'инвентаризация ОС'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
	КонецЕсли; 
	#КонецОбласти
	
	#Область Прочее
	
	Если ИспользоватьРеглУчет Тогда
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ИзменениеСпособаОтраженияИмущественныхНалогов;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ИзменениеСпособаОтраженияИмущественныхНалогов.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'изменение способа отражения имущественных налогов'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.СнятиеСРегистрацииЗемельныхУчастков;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.СнятиеСРегистрацииЗемельныхУчастков.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'отмена регистрации земельных участков'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
	
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.СнятиеСРегистрацииТранспортныхСредств;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.СнятиеСРегистрацииТранспортныхСредств.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'отмена регистрации транспортных средств'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ПараметрыНачисленияЗемельногоНалога;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ПараметрыНачисленияЗемельногоНалога.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'регистрация земельных участков'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ПараметрыНачисленияНалогаНаИмущество;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ПараметрыНачисленияНалогаНаИмущество.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'параметры начисления налога на имущество'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ПараметрыНачисленияТранспортногоНалога;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ПараметрыНачисленияТранспортногоНалога.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'регистрация транспортных средств'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ПерерасчетНалогаНаИмущество;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ПерерасчетИмущественныхНалогов.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ПерерасчетТранспортногоНалога;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ПерерасчетИмущественныхНалогов.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ПерерасчетЗемельногоНалога;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ПерерасчетИмущественныхНалогов.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
		Строка.ДобавитьКнопкуСоздать        = Ложь;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводПервоначальныхСведенийДляРасчетаНалогаНаИмущество;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводПервоначальныхСведенийДляРасчетаНалогаНаИмущество.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
		Строка.ДобавитьКнопкуСоздать        = Ложь;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводПервоначальныхСведенийДляРасчетаТранспортногоНалога;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводПервоначальныхСведенийДляРасчетаТранспортногоНалога.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
		Строка.ДобавитьКнопкуСоздать        = Ложь;
		
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПлатежейВПлатон") Тогда
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
		Строка.ПолноеИмяДокумента			= "Документ.ОтчетОператораСистемыПлатон";
		Строка.КлючНазначенияИспользования 	= КлючНазначенияИспользования;
		Строка.ЗаголовокРабочегоМеста       = НСтр("ru = 'отчеты оператора ""Платон""'");
		Строка.ДобавитьКнопкуСоздать		= Истина;
	КонецЕсли;
	
	#КонецОбласти
		
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаЖурналаОС(ТекстЗапроса) Экспорт

	//++ Локализация
	
	// ПроверкаДокументовВРеглУчете
	ПроверкаДокументовСервер.ДоработатьЗапросДинамическогоСпискаЖурналаДокументов(ТекстЗапроса, "РеестрДокументовПереопределяемый");
	// Конец ПроверкаДокументовВРеглУчете
	
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
// 	СоответствиеДокументов - ДанныеФормыКоллекция из ДанныеФормыЭлементКоллекции - 
Процедура ЗаполнитьСоответствиеДокументовЖурналаОС(СоответствиеДокументов) Экспорт

	//++ Локализация
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьСоответствиеДокументов("ВводОстатковВнеоборотныхАктивов2_4", "ВводОстатковВнеоборотныхАктивов", СоответствиеДокументов);
	ДобавитьСоответствиеДокументов("ВозвратОСИзАренды2_4", "ВозвратОСИзАренды", СоответствиеДокументов);
	ДобавитьСоответствиеДокументов("ИзменениеПараметровОС2_4", "ИзменениеПараметровОС", СоответствиеДокументов);
	ДобавитьСоответствиеДокументов("МодернизацияОС2_4", "МодернизацияОС", СоответствиеДокументов);
	ДобавитьСоответствиеДокументов("ПередачаОСВАренду2_4", "ПередачаОСВАренду", СоответствиеДокументов);
	ДобавитьСоответствиеДокументов("ПеремещениеОС2_4", "ПеремещениеОС", СоответствиеДокументов);
	ДобавитьСоответствиеДокументов("ПереоценкаОС2_4", "ПереоценкаОС", СоответствиеДокументов);
	ДобавитьСоответствиеДокументов("ПодготовкаКПередачеОС2_4", "ПодготовкаКПередачеОС", СоответствиеДокументов);
	ДобавитьСоответствиеДокументов("ПринятиеКУчетуОС2_4", "ПринятиеКУчетуОС", СоответствиеДокументов);
	ДобавитьСоответствиеДокументов("СписаниеОС2_4", "СписаниеОС", СоответствиеДокументов);
	ДобавитьСоответствиеДокументов("АмортизацияОС2_4", "АмортизацияОС", СоответствиеДокументов);
	
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
// 	СоответствиеДокументов - ДанныеФормыКоллекция из ДанныеФормыЭлементКоллекции - 
Процедура ЗаполнитьСоответствиеДокументовЖурналаНМА(СоответствиеДокументов) Экспорт
	
	//++ Локализация
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьСоответствиеДокументов("ВводОстатковВнеоборотныхАктивов2_4", "ВводОстатковВнеоборотныхАктивов", СоответствиеДокументов);
	ДобавитьСоответствиеДокументов("ПринятиеКУчетуНМА2_4", "ПринятиеКУчетуНМА", СоответствиеДокументов);
	ДобавитьСоответствиеДокументов("СписаниеНМА2_4", "СписаниеНМА", СоответствиеДокументов);
	ДобавитьСоответствиеДокументов("ПодготовкаКПередачеНМА2_4", "ПодготовкаКПередачеНМА", СоответствиеДокументов);
	ДобавитьСоответствиеДокументов("ИзменениеПараметровНМА2_4", "ИзменениеПараметровНМА", СоответствиеДокументов);
	ДобавитьСоответствиеДокументов("ПереоценкаНМА2_4", "ПереоценкаНМА", СоответствиеДокументов);
	ДобавитьСоответствиеДокументов("АмортизацияНМА2_4", "АмортизацияНМА", СоответствиеДокументов);
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ЖурналДокументовНМА

// 
// Параметры:
// 	ХозяйственныеОперацииИДокументы - ТаблицаЗначений из СтрокаТаблицыЗначений -
//  КлючНазначенияИспользования - Строка -
Процедура ДополнитьХозяйственныеОперацииИДокументыНМА(ХозяйственныеОперацииИДокументы, КлючНазначенияИспользования) Экспорт

	//++ Локализация
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация        = Перечисления.ХозяйственныеОперации.ИнвентаризацияНМА;
	Строка.ПолноеИмяДокумента           = Метаданные.Документы.ИнвентаризацияНМА.ПолноеИмя();
	Строка.КлючНазначенияИспользования  = КлючНазначенияИспользования;
	Строка.ЗаголовокРабочегоМеста       = НСтр("ru = 'Инвентаризация НМА'");
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация        = Перечисления.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации;
	Строка.ПолноеИмяДокумента           = Метаданные.Документы.ПринятиеКУчетуНМА2_4.ПолноеИмя();
	Строка.КлючНазначенияИспользования  = КлючНазначенияИспользования;
	Строка.ЗаголовокРабочегоМеста       = НСтр("ru = 'Принятие к учету НМА по инвентаризации'");
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс") Тогда
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация        = Перечисления.ХозяйственныеОперации.ПеремещениеНМАвПодразделениеВыделенноеНаБаланс;
		Строка.ПолноеИмяДокумента           = Метаданные.Документы.ПеремещениеНМА2_4.ПолноеИмя();
		Строка.КлючНазначенияИспользования  = КлючНазначенияИспользования;
		Строка.ЗаголовокРабочегоМеста       = НСтр("ru = 'Перемещение НМА'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
	КонецЕсли; 
	
	//-- Локализация	
	
КонецПроцедуры
 
Процедура ДополнитьТекстЗапросаЖурналаНМА(ТекстЗапроса) Экспорт

	//++ Локализация
	
	// ПроверкаДокументовВРеглУчете
	ПроверкаДокументовСервер.ДоработатьЗапросДинамическогоСпискаЖурналаДокументов(ТекстЗапроса, "РеестрДокументовПереопределяемый");
	// Конец ПроверкаДокументовВРеглУчете
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ТекстыЗапросов

// 
// Параметры:
// 	ТекстыЗапроса - СписокЗначений из Строка - 
// 	ИмяДокумента - Строка -
Процедура ТекстЗапросаТаблицаВтНалогообложениеНДС(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "ВтНалогообложениеНДС";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчета.ОсновноеСредство КАК ОсновноеСредство,
	|	НЕОПРЕДЕЛЕНО КАК НалогообложениеНДС
	|ПОМЕСТИТЬ ВтНалогообложениеНДС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ПорядокУчета";
	
	//++ Локализация
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчета.ОсновноеСредство        КАК ОсновноеСредство,
	|	ПорядокУчета.НалогообложениеНДС      КАК НалогообложениеНДС
	|ПОМЕСТИТЬ ВтНалогообложениеНДС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ПорядокУчета";
	
	//-- Локализация
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ДобавитьВТекстЗапросаРесурсыРегистраПервоначальныеСведенияОС(ТекстЗапроса, ИмяТаблицы) Экспорт

	РеквизитыЛокализация = "NULL";
	
	//++ Локализация
	
	РеквизитыЛокализация = 
	"	ПервоначальныеСведенияОС.СпособПоступления КАК СпособПоступления,
	|	ПервоначальныеСведенияОС.ПорядокУчетаНУ КАК ПорядокУчетаНУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияОС.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюНУ КАК ДатаВводаВЭксплуатациюНУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюНУ КАК ДокументВводаВЭксплуатациюНУ,
	|	ПервоначальныеСведенияОС.ДокументСнятияСУчетаНУ КАК ДокументСнятияСУчетаНУ";
	
	РеквизитыЛокализация = СтрЗаменить(РеквизитыЛокализация, "&ПервоначальныеСведенияОС", ИмяТаблицы);
	
	//-- Локализация
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПервоначальныеСведенияОС_РеквизитыЛокализация", РеквизитыЛокализация);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаОтражениеНачисленнойАмортизацииВПрочихРасходах() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаРасходы.ПериодРасчета                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	ВЫБОР
	|		КОГДА ТаблицаРасходы.ПередаватьРасходыВДругуюОрганизацию
	|			ТОГДА ТаблицаРасходы.ОрганизацияПолучательРасходов
	|		ИНАЧЕ ТаблицаРасходы.Организация
	|	КОНЕЦ                                             КАК Организация,
	|	ТаблицаРасходы.КорПодразделение                   КАК Подразделение,
	|	ТаблицаРасходы.СтатьяРасходов                     КАК СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов                  КАК АналитикаРасходов,
	|	ТаблицаРасходы.КорНаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                      КАК ВидДеятельностиНДС,
	|
	|	ТаблицаРасходы.СуммаУУ                            КАК СуммаСНДС,
	|	ТаблицаРасходы.СуммаУУ                            КАК СуммаБезНДС,
	|	ТаблицаРасходы.СуммаУУ                            КАК СуммаБезНДСУпр,
	|	ТаблицаРасходы.СуммаБУ + ТаблицаРасходы.СуммаЦФ   КАК СуммаСНДСРегл,
	|	ТаблицаРасходы.СуммаБУ + ТаблицаРасходы.СуммаЦФ   КАК СуммаБезНДСРегл,
	|	ТаблицаРасходы.СуммаПР + ТаблицаРасходы.СуммаПРЦФ КАК ПостояннаяРазница,
	|	ТаблицаРасходы.СуммаВР + ТаблицаРасходы.СуммаВРЦФ КАК ВременнаяРазница,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаРасходы.ПередаватьРасходыВДругуюОрганизацию
	|				И ТаблицаРасходы.ОрганизацияПолучательРасходов <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаРасходы.ВидВНА = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияОСизДругойОрганизации)
	|					КОГДА ТаблицаРасходы.ВидВНА = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.НМА)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияНМАизДругойОрганизации)
	|					КОГДА ТаблицаРасходы.ВидВНА = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.НИОКР)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыНИОКРИзДругойОрганизации)
	|				КОНЕЦ
	|
	|		КОГДА ТаблицаРасходы.ВидВНА = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияОС)
	|
	|		КОГДА ТаблицаРасходы.ВидВНА = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.НМА)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияНМА)
	|
	|		КОГДА ТаблицаРасходы.ВидВНА = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.НИОКР)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыНИОКР)
	|
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	
	|	ТаблицаРасходы.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаРасходы.ПередаватьРасходыВДругуюОрганизацию
	|				И ТаблицаРасходы.ОрганизацияПолучательРасходов <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаРасходы.ВидВНА = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство)
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.АмортизацияОСизДругойОрганизации)
	|					КОГДА ТаблицаРасходы.ВидВНА = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.НМА)
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.АмортизацияНМАизДругойОрганизации)
	|					КОГДА ТаблицаРасходы.ВидВНА = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.НИОКР)
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеНаРасходыНИОКРИзДругойОрганизации)
	|				КОНЕЦ
	|
	|		КОГДА ТаблицаРасходы.ВидВНА = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.АмортизацияОС)
	|
	|		КОГДА ТаблицаРасходы.ВидВНА = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.НМА)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.АмортизацияНМА)
	|
	|		КОГДА ТаблицаРасходы.ВидВНА = ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.НИОКР)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеНаРасходыНИОКР)
	|
	|	КОНЕЦ КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	НачисленнаяАмортизация КАК ТаблицаРасходы
	|
	|ГДЕ
	|	НЕ ТаблицаРасходы.НачислятьИзнос
	|	И ТаблицаРасходы.Организация = &Организация
	|	И ТаблицаРасходы.НомерПакета = &НомерПакета
	|
	|	И (ТаблицаРасходы.СуммаУУ <> 0
	|		ИЛИ ТаблицаРасходы.СуммаБУ <> 0
	|		ИЛИ ТаблицаРасходы.СуммаНУ <> 0
	|		ИЛИ ТаблицаРасходы.СуммаПР <> 0
	|		ИЛИ ТаблицаРасходы.СуммаВР <> 0
	|		ИЛИ ТаблицаРасходы.СуммаЦФ <> 0
	|		ИЛИ ТаблицаРасходы.СуммаНУЦФ <> 0
	|		ИЛИ ТаблицаРасходы.СуммаПРЦФ <> 0
	|		ИЛИ ТаблицаРасходы.СуммаВРЦФ <> 0)
	|";
	
	//-- Локализация
	
	Возврат ТекстЗапроса

КонецФункции

Функция ТекстЗапросаФормированиеЗаданийКРасчетуСтоимостиВНА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета,
	|
	|	МИНИМУМ(ВЫБОР
	|			КОГДА СтоимостьОС.Период < &ДатаНачалаУчета
	|				ТОГДА &ДатаНачалаУчета
	|			ИНАЧЕ СтоимостьОС.Период
	|		КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|		ПО (СтоимостьОС.Организация = ИзмененныеДанные.Организация)
	|			И (СтоимостьОС.АналитикаКапитализацииРасходов = ИзмененныеДанные.ОбъектУчета)
	|
	|			И (НЕ &ДвиженияЗаписываютсяПриРасчетеСтоимостиВНА
	|					И СтоимостьОС.Период >= ИзмененныеДанные.Период
	|				ИЛИ &ДвиженияЗаписываютсяПриРасчетеСтоимостиВНА
	|					И СтоимостьОС.Период >= ДОБАВИТЬКДАТЕ(ИзмененныеДанные.Период, МЕСЯЦ, 1))
	|
	|			И (СтоимостьОС.Активность)
	|			И (СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И (СтоимостьОС.ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС), 
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуУзловКомпонентовАмортизации), 
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуПредметовАренды), 
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС)))
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.РаспределениеНДС)
	|	И СтоимостьОС.Период >= &ДатаНачалаУчетаСебестоимости
	|	И &ИспользоватьУчетСебестоимости
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета,
	|
	|	МИНИМУМ(ВЫБОР
	|			КОГДА СтоимостьНМА.Период < &ДатаНачалаУчета
	|				ТОГДА &ДатаНачалаУчета
	|			ИНАЧЕ СтоимостьНМА.Период
	|		КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|		ПО (СтоимостьНМА.Организация = ИзмененныеДанные.Организация)
	|			И (СтоимостьНМА.НематериальныйАктив = ИзмененныеДанные.ОбъектУчета)
	|
	|			И (НЕ &ДвиженияЗаписываютсяПриРасчетеСтоимостиВНА
	|					И СтоимостьНМА.Период >= ИзмененныеДанные.Период
	|				ИЛИ &ДвиженияЗаписываютсяПриРасчетеСтоимостиВНА
	|					И СтоимостьНМА.Период >= ДОБАВИТЬКДАТЕ(ИзмененныеДанные.Период, МЕСЯЦ, 1))
	|
	|			И (СтоимостьНМА.Активность)
	|			И (СтоимостьНМА.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМА),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УлучшениеНМА)))
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.РаспределениеНДС)
	|	И СтоимостьНМА.Период >= &ДатаНачалаУчетаСебестоимости
	|	И &ИспользоватьУчетСебестоимости
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета,
	|
	|	МИНИМУМ(ВЫБОР
	|			КОГДА СтоимостьОС.Период > &ДатаНачалаУчета
	|				ТОГДА СтоимостьОС.Период
	|			ИНАЧЕ &ДатаНачалаУчета
	|		КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|		ПО (СтоимостьОС.Организация = ИзмененныеДанные.Организация)
	|			И (СтоимостьОС.АналитикаКапитализацииРасходов = ИзмененныеДанные.ОбъектУчета)
	|			И (СтоимостьОС.Период >= ИзмененныеДанные.НачалоМесяца)
	|			И (СтоимостьОС.Активность)
	|			И (СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И (СтоимостьОС.ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС), 
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуУзловКомпонентовАмортизации), 
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуПредметовАренды), 
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС)))
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.РаспределениеНДС)
	|	И СтоимостьОС.Период >= &ДатаНачалаУчетаСебестоимости
	|	И &ИспользоватьУчетСебестоимости
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета,
	|
	|	МИНИМУМ(ВЫБОР
	|			КОГДА СтоимостьНМА.Период > &ДатаНачалаУчета
	|				ТОГДА СтоимостьНМА.Период
	|			ИНАЧЕ &ДатаНачалаУчета
	|		КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|		ПО (СтоимостьНМА.Организация = ИзмененныеДанные.Организация)
	|			И (СтоимостьНМА.НематериальныйАктив = ИзмененныеДанные.ОбъектУчета)
	|			И (СтоимостьНМА.Период >= ИзмененныеДанные.НачалоМесяца)
	|			И (СтоимостьНМА.Активность)
	|			И (СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И (СтоимостьНМА.ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМА),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УлучшениеНМА)))
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.РаспределениеНДС)
	|	И СтоимостьНМА.Период >= &ДатаНачалаУчетаСебестоимости
	|	И &ИспользоватьУчетСебестоимости
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета";
	
	//-- Локализация	
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСтоимостьИАмортизацияОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияОстаток, 0)       
	|	КОНЕЦ КАК Амортизация,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияРеглОстаток, 0)
	|	КОНЕЦ КАК АмортизацияРегл,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияНУОстаток, 0)
	|	КОНЕЦ КАК АмортизацияНУ,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияПРОстаток, 0)
	|	КОНЕЦ КАК АмортизацияПР,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияВРОстаток, 0)
	|	КОНЕЦ КАК АмортизацияВР,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияЦФ,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияНУЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияНУЦФ,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияПРЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияПРЦФ,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияВРЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияВРЦФ,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьОстаток, 0)
	|	КОНЕЦ КАК Стоимость,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьРеглОстаток, 0)
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьНУОстаток, 0)
	|	КОНЕЦ КАК СтоимостьНУ,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьПРОстаток, 0)
	|	КОНЕЦ КАК СтоимостьПР,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьВРОстаток, 0)
	|	КОНЕЦ КАК СтоимостьВР,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьЦФОстаток, 0)
	|	КОНЕЦ КАК СтоимостьЦФ,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьНУЦФОстаток, 0)
	|	КОНЕЦ КАК СтоимостьНУЦФ,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьПРЦФОстаток, 0)
	|	КОНЕЦ КАК СтоимостьПРЦФ,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьВРЦФОстаток, 0)
	|	КОНЕЦ КАК СтоимостьВРЦФ,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.ЗалоговаяСтоимостьОстаток, 0)
	|	КОНЕЦ КАК ЗалоговаяСтоимость,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ОбесценениеВНАОстатки.ОбесценениеУпрОстаток, 0)
	|	КОНЕЦ КАК ОбесценениеУпр,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ОбесценениеВНАОстатки.ОбесценениеРеглОстаток, 0)
	|	КОНЕЦ КАК ОбесценениеРегл
	|
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС.Остатки(
	|				,
	|				Организация = &Организация
	|					И ОсновноеСредство = &ОсновноеСредство) КАК АмортизацияОСОстатки
	|		ПО ОбъектыЭксплуатации.Ссылка = АмортизацияОСОстатки.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС.Остатки(
	|				,
	|				Организация = &Организация
	|					И ОсновноеСредство = &ОсновноеСредство) КАК СтоимостьОСОстатки
	|		ПО ОбъектыЭксплуатации.Ссылка = СтоимостьОСОстатки.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|				,
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация = &Организация
	|					И ОсновноеСредство = &ОсновноеСредство) КАК ПорядокУчетаОСУУ
	|		ПО ОбъектыЭксплуатации.Ссылка = ПорядокУчетаОСУУ.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|				,
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация = &Организация
	|					И ОсновноеСредство = &ОсновноеСредство) КАК ПорядокУчетаОСБУ
	|		ПО ОбъектыЭксплуатации.Ссылка = ПорядокУчетаОСБУ.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбесценениеВНА.Остатки(
	|				,
	|				Организация = &Организация
	|					И ВнеоборотныйАктив = &ОсновноеСредство) КАК ОбесценениеВНАОстатки
	|		ПО ОбъектыЭксплуатации.Ссылка = ОбесценениеВНАОстатки.ВнеоборотныйАктив
	|ГДЕ
	|	ОбъектыЭксплуатации.Ссылка = &ОсновноеСредство";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСтоимостьИАмортизацияНМА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СтоимостьНМАОстатки.НематериальныйАктив КАК НематериальныйАктив,
	|	СтоимостьНМАОстатки.СтоимостьОстаток КАК СтоимостьУУ,
	|	СтоимостьНМАОстатки.СтоимостьРеглОстаток КАК СтоимостьБУ,
	|	СтоимостьНМАОстатки.СтоимостьНУОстаток КАК СтоимостьНУ,
	|	СтоимостьНМАОстатки.СтоимостьПРОстаток КАК СтоимостьПР,
	|	СтоимостьНМАОстатки.СтоимостьВРОстаток КАК СтоимостьВР,
	|	СтоимостьНМАОстатки.СтоимостьЦФОстаток КАК СтоимостьЦФ,
	|	СтоимостьНМАОстатки.СтоимостьНУЦФОстаток КАК СтоимостьНУЦФ,
	|	СтоимостьНМАОстатки.СтоимостьПРЦФОстаток КАК СтоимостьПРЦФ,
	|	СтоимостьНМАОстатки.СтоимостьВРЦФОстаток КАК СтоимостьВРЦФ,
	|	ВЫБОР
	|		КОГДА СтоимостьНМАОстатки.СтоимостьВРОстаток 
	|				+ СтоимостьНМАОстатки.СтоимостьПРОстаток
	|				+ СтоимостьНМАОстатки.СтоимостьВРЦФОстаток 
	|				+ СтоимостьНМАОстатки.СтоимостьПРЦФОстаток = 0
	|			ТОГДА 0
	|		ИНАЧЕ (СтоимостьНМАОстатки.СтоимостьПРОстаток + СтоимостьНМАОстатки.СтоимостьПРЦФОстаток)
	|				/ (СтоимостьНМАОстатки.СтоимостьВРОстаток 
	|					+ СтоимостьНМАОстатки.СтоимостьПРОстаток
	|					+ СтоимостьНМАОстатки.СтоимостьВРЦФОстаток 
	|					+ СтоимостьНМАОстатки.СтоимостьПРЦФОстаток)
	|	КОНЕЦ КАК ДоляПР
	|ПОМЕСТИТЬ СтоимостьНМАОстатки
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА.Остатки(
	|			,
	|			Организация = &Организация
	|				И НематериальныйАктив = &НематериальныйАктив) КАК СтоимостьНМАОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьУУ, 0)
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьУУ, 0)
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияОстаток, 0)
	|	КОНЕЦ КАК Амортизация,
	|
	// АмортизацияРегл
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьБУ, 0)
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьБУ, 0)
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьЦФ, 0)
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияРеглОстаток, 0)
	|	КОНЕЦ КАК АмортизацияРегл,
	|
	// АмортизацияЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияЦФ,
	|
	// АмортизацияНУ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ, 0)
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьНУ, 0)
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьНУЦФ, 0)
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияНУОстаток, 0)
	|	КОНЕЦ КАК АмортизацияНУ,
	|
	// АмортизацияНУЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияНУЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияНУЦФ,
	|
	// АмортизацияПР
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьПР, 0) 
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьПР, 0) 
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьПРЦФ, 0)
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияПРОстаток, 0)
	|	КОНЕЦ КАК АмортизацияПР,
	|
	// АмортизацияПРЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияПРЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияПРЦФ,
	|
	// АмортизацияВР
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьВР, 0) 
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьВР, 0) 
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьВРЦФ, 0)
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияВРОстаток, 0)
	|	КОНЕЦ КАК АмортизацияВР,
	|
	// АмортизацияВРЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияВРЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияВРЦФ,
	|
	// Стоимость
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьУУ, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьУУ, 0)
	|	КОНЕЦ КАК Стоимость,
	|
	// СтоимостьРегл
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьБУ, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьБУ, 0)
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	// СтоимостьЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьЦФ, 0)
	|	КОНЕЦ КАК СтоимостьЦФ,
	|
	// СтоимостьНУ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.СостояниеНУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьНУ, 0)
	|	КОНЕЦ КАК СтоимостьНУ,
	|
	// СтоимостьНУЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьНУЦФ, 0)
	|	КОНЕЦ КАК СтоимостьНУЦФ,
	|
	// СтоимостьПР
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьПР, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьПР, 0)
	|	КОНЕЦ КАК СтоимостьПР,
	|
	// СтоимостьПРЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьПРЦФ, 0)
	|	КОНЕЦ КАК СтоимостьПРЦФ,
	|
	// СтоимостьВР
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьВР, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьВР, 0)
	|	КОНЕЦ КАК СтоимостьВР,
	|
	// СтоимостьВРЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьВРЦФ, 0)
	|	КОНЕЦ КАК СтоимостьВРЦФ,
	|
	// ОбесценениеРегл
	|	ВЫБОР
	|		КОГДА &ВедетсяРегламентированныйУчетВНА И ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|				ИЛИ НЕ &ВедетсяРегламентированныйУчетВНА И ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ОбесценениеВНА.ОбесценениеРеглОстаток, 0)
	|	КОНЕЦ КАК ОбесценениеРегл,
	|
	//ОбесценениеУпр
	|   ВЫБОР
	|		КОГДА ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.Списан)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ОбесценениеВНА.ОбесценениеУпрОстаток, 0)
	|	КОНЕЦ КАК ОбесценениеУпр
	|
	|ИЗ
	|	Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияНМА.Остатки(
	|				,
	|				Организация = &Организация
	|					И НематериальныйАктив = &НематериальныйАктив) КАК АмортизацияНМАОстатки
	|		ПО НематериальныеАктивы.Ссылка = АмортизацияНМАОстатки.НематериальныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьНМАОстатки КАК СтоимостьНМАОстатки
	|		ПО НематериальныеАктивы.Ссылка = СтоимостьНМАОстатки.НематериальныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|				,
	|				Организация = &Организация
	|					И НематериальныйАктив = &НематериальныйАктив) КАК ПервоначальныеСведенияНМА
	|		ПО НематериальныеАктивы.Ссылка = ПервоначальныеСведенияНМА.НематериальныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|				,
	|				Организация = &Организация
	|					И НематериальныйАктив = &НематериальныйАктив) КАК ПорядокУчетаНМАБУ
	|		ПО НематериальныеАктивы.Ссылка = ПорядокУчетаНМАБУ.НематериальныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(
	|				,
	|				Организация = &Организация
	|					И НематериальныйАктив = &НематериальныйАктив) КАК ПорядокУчетаНМАУУ
	|		ПО НематериальныеАктивы.Ссылка = ПорядокУчетаНМАУУ.НематериальныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбесценениеВНА.Остатки(
	|				,
	|				Организация = &Организация
	|					И ВнеоборотныйАктив = &НематериальныйАктив) КАК ОбесценениеВНА
	|		ПО НематериальныеАктивы.Ссылка = ОбесценениеВНА.ВнеоборотныйАктив
	|
	|ГДЕ
	|	НематериальныеАктивы.Ссылка = &НематериальныйАктив";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСтоимостьИАмортизацияУзловКомпонентов() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УзлыКомпоненты.УзелКомпонент КАК УзелКомпонент
	|ПОМЕСТИТЬ ВтУзлыОсновныхСредств
	|ИЗ
	|	РегистрСведений.УзлыКомпонентыАмортизации КАК УзлыКомпоненты
	|ГДЕ
	|	УзлыКомпоненты.ОсновноеСредство = &ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	УзелКомпонент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УзлыКомпоненты.УзелКомпонент КАК УзелКомпонент
	|ПОМЕСТИТЬ УзлыКомпоненты
	|ИЗ
	|	РегистрСведений.УзлыКомпонентыАмортизации.СрезПоследних(, УзелКомпонент В
	|		(ВЫБРАТЬ
	|			ВтУзлыОсновныхСредств.УзелКомпонент КАК УзелКомпонент
	|		ИЗ
	|			ВтУзлыОсновныхСредств КАК ВтУзлыОсновныхСредств)) КАК УзлыКомпоненты
	|ГДЕ
	|	УзлыКомпоненты.ОсновноеСредство = &ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	УзелКомпонент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УзлыКомпоненты.УзелКомпонент КАК УзелКомпонент,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияОстаток, 0)
	|	КОНЕЦ КАК Амортизация,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияРеглОстаток, 0)
	|	КОНЕЦ КАК АмортизацияРегл,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьОстаток, 0)
	|	КОНЕЦ КАК Стоимость,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьРеглОстаток, 0)
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ОбесценениеВНАОстатки.ОбесценениеУпрОстаток, 0)
	|	КОНЕЦ КАК ОбесценениеУпр,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-ОбесценениеВНАОстатки.ОбесценениеРеглОстаток, 0)
	|	КОНЕЦ КАК ОбесценениеРегл,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьОстаток, 0)
	|	КОНЕЦ 
	|		- ВЫБОР
	|			КОГДА ПорядокУчетаОСУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияОстаток, 0)
	|		КОНЕЦ 
	|		- ВЫБОР
	|			КОГДА ПорядокУчетаОСУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(-ОбесценениеВНАОстатки.ОбесценениеУпрОстаток, 0)
	|		КОНЕЦ КАК ОстаточнаяСтоимость,
	|
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьРеглОстаток, 0)
	|	КОНЕЦ
	|		- ВЫБОР
	|			КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияРеглОстаток, 0)
	|		КОНЕЦ 
	|		- ВЫБОР
	|			КОГДА ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(-ОбесценениеВНАОстатки.ОбесценениеРеглОстаток, 0)
	|		КОНЕЦ КАК ОстаточнаяСтоимостьРегл
	|
	|ИЗ
	|	УзлыКомпоненты КАК УзлыКомпоненты
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС.Остатки(
	|				,
	|				Организация = &Организация
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							УзлыКомпоненты.УзелКомпонент
	|						ИЗ
	|							УзлыКомпоненты КАК УзлыКомпоненты)) КАК АмортизацияОСОстатки
	|		ПО УзлыКомпоненты.УзелКомпонент = АмортизацияОСОстатки.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС.Остатки(
	|				,
	|				Организация = &Организация
	|					И ОсновноеСредство  В
	|						(ВЫБРАТЬ
	|							УзлыКомпоненты.УзелКомпонент
	|						ИЗ
	|							УзлыКомпоненты КАК УзлыКомпоненты)) КАК СтоимостьОСОстатки
	|		ПО УзлыКомпоненты.УзелКомпонент = СтоимостьОСОстатки.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|				,
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация = &Организация
	|					И ОсновноеСредство  В
	|						(ВЫБРАТЬ
	|							УзлыКомпоненты.УзелКомпонент
	|						ИЗ
	|							УзлыКомпоненты КАК УзлыКомпоненты)) КАК ПорядокУчетаОСУУ
	|		ПО УзлыКомпоненты.УзелКомпонент = ПорядокУчетаОСУУ.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|				,
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация = &Организация
	|					И ОсновноеСредство  В
	|						(ВЫБРАТЬ
	|							УзлыКомпоненты.УзелКомпонент
	|						ИЗ
	|							УзлыКомпоненты КАК УзлыКомпоненты)) КАК ПорядокУчетаОСБУ
	|		ПО УзлыКомпоненты.УзелКомпонент = ПорядокУчетаОСБУ.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбесценениеВНА.Остатки(
	|				,
	|				Организация = &Организация
	|					И ВнеоборотныйАктив В
	|						(ВЫБРАТЬ
	|							УзлыКомпоненты.УзелКомпонент
	|						ИЗ
	|							УзлыКомпоненты КАК УзлыКомпоненты)) КАК ОбесценениеВНАОстатки
	|		ПО УзлыКомпоненты.УзелКомпонент = ОбесценениеВНАОстатки.ВнеоборотныйАктив";

	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроверитьВозможностьПринятияКУчетуОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбъектыЭксплуатации.Ссылка,
	|	ОбъектыЭксплуатации.Представление,
	|
	|	ОбъектыЭксплуатации.ТекущаяОрганизация,
	|	ОбъектыЭксплуатации.ТекущееМестонахождение,
	|	ОбъектыЭксплуатации.ТекущийМОЛ,
	|
	|	ОбъектыЭксплуатации.ДокументСнятияСУчетаБУ,
	|	ОбъектыЭксплуатации.ДокументСнятияСУчетаНУ,
	|	ОбъектыЭксплуатации.ДокументСнятияСУчетаУУ,
	|
	|	ОбъектыЭксплуатации.УжеПринятоКУчету,
	|	ОбъектыЭксплуатации.ДругаяОрганизация,
	|	ОбъектыЭксплуатации.ДругоеМестонахождение,
	|	ОбъектыЭксплуатации.ДругойМОЛ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОбъектыЭксплуатации.Ссылка КАК Ссылка,
	|		ОбъектыЭксплуатации.Представление КАК Представление,
	|
	|		МестонахождениеОС.Организация КАК ТекущаяОрганизация,
	|		МестонахождениеОС.Местонахождение КАК ТекущееМестонахождение,
	|		МестонахождениеОС.МОЛ КАК ТекущийМОЛ,
	|
	|		ЕСТЬNULL(ПервоначальныеСведенияОС.ДокументСнятияСУчетаБУ, НЕОПРЕДЕЛЕНО) КАК ДокументСнятияСУчетаБУ,
	|		ЕСТЬNULL(ПервоначальныеСведенияОС.ДокументСнятияСУчетаНУ, НЕОПРЕДЕЛЕНО) КАК ДокументСнятияСУчетаНУ,
	|		ЕСТЬNULL(ПервоначальныеСведенияОС.ДокументСнятияСУчетаУУ, НЕОПРЕДЕЛЕНО) КАК ДокументСнятияСУчетаУУ,
	|
	|		&ОтражатьВУпрУчете
	|				И ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|			ИЛИ &ОтражатьВБУ
	|				И ЕСТЬNULL(ПорядокУчетаОСБУ.СостояниеБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|			ИЛИ &ОтражатьВНУ
	|				И ЕСТЬNULL(ПорядокУчетаОСБУ.СостояниеНУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК УжеПринятоКУчету,
	|
	|		(НЕ &ОтражатьВУпрУчете ИЛИ НЕ &ОтражатьВРеглУчете)
	|			И НЕ МестонахождениеОС.Организация ЕСТЬ NULL
	|			И (&ОтражатьВРеглУчете И ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЛИ &ОтражатьВУпрУчете И ЕСТЬNULL(ПорядокУчетаОСБУ.СостояниеБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЛИ &ОтражатьВУпрУчете И ЕСТЬNULL(ПорядокУчетаОСБУ.СостояниеНУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	|			И ЕСТЬNULL(МестонахождениеОС.Организация, НЕОПРЕДЕЛЕНО) <> &Организация
	|			И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ДругаяОрганизация,
	|
	|		(НЕ &ОтражатьВУпрУчете ИЛИ НЕ &ОтражатьВРеглУчете)
	|			И НЕ МестонахождениеОС.Местонахождение ЕСТЬ NULL
	|			И (&ОтражатьВРеглУчете И ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЛИ &ОтражатьВУпрУчете И ЕСТЬNULL(ПорядокУчетаОСБУ.СостояниеБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЛИ &ОтражатьВУпрУчете И ЕСТЬNULL(ПорядокУчетаОСБУ.СостояниеНУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	|			И (ЕСТЬNULL(МестонахождениеОС.Местонахождение, НЕОПРЕДЕЛЕНО) <> &Местонахождение
	|					И &Местонахождение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				ИЛИ &МестонахождениеВТабличнойЧасти) КАК ДругоеМестонахождение,
	|
	|		(НЕ &ОтражатьВУпрУчете ИЛИ НЕ &ОтражатьВРеглУчете)
	|			И НЕ МестонахождениеОС.МОЛ ЕСТЬ NULL
	|			И (&ОтражатьВРеглУчете И ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЛИ &ОтражатьВУпрУчете И ЕСТЬNULL(ПорядокУчетаОСБУ.СостояниеБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЛИ &ОтражатьВУпрУчете И ЕСТЬNULL(ПорядокУчетаОСБУ.СостояниеНУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	|			И (ЕСТЬNULL(МестонахождениеОС.МОЛ, НЕОПРЕДЕЛЕНО) <> &МОЛ 
	|					И &МОЛ <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|				ИЛИ &МестонахождениеВТабличнойЧасти) КАК ДругойМОЛ
	|	ИЗ
	|		Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|						И НЕ Регистратор ССЫЛКА Документ.ЗаключениеДоговораАренды
	|						И Организация = &Организация
	|						И ОсновноеСредство В (&СписокОС)) КАК ПервоначальныеСведенияОС
	|			ПО (ПервоначальныеСведенияОС.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|						И ОсновноеСредство В (&СписокОС)) КАК МестонахождениеОС
	|			ПО (МестонахождениеОС.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|						И ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаОСБУ
	|			ПО (ПорядокУчетаОСБУ.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство)
	|				И (ПорядокУчетаОСБУ.Организация = МестонахождениеОС.Организация)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|						И ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаОСУУ
	|			ПО (ПорядокУчетаОСУУ.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство)
	|				И (ПорядокУчетаОСУУ.Организация = МестонахождениеОС.Организация)
	|	ГДЕ
	|		ОбъектыЭксплуатации.Ссылка В(&СписокОС)
	|	
	|	) КАК ОбъектыЭксплуатации
	|ГДЕ
	|	(ОбъектыЭксплуатации.УжеПринятоКУчету
	|			ИЛИ ОбъектыЭксплуатации.ДругаяОрганизация
	|			ИЛИ ОбъектыЭксплуатации.ДругоеМестонахождение
	|			ИЛИ ОбъектыЭксплуатации.ДругойМОЛ)";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции
 
Функция ТекстЗапросаПроверитьВозможностьПринятияКУчетуНМА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбъектыУчета.Ссылка,
	|	ОбъектыУчета.Представление,
	|	ОбъектыУчета.ВидОбъектаУчета,
	|	ОбъектыУчета.ТекущаяОрганизация,
	|	ОбъектыУчета.ТекущееПодразделение,
	|	ОбъектыУчета.ДокументСписания,
	|	ОбъектыУчета.УжеПринятоКУчету,
	|	ОбъектыУчета.ДругаяОрганизация,
	|	ОбъектыУчета.ДругоеПодразделение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОбъектыУчета.Ссылка КАК Ссылка,
	|		ОбъектыУчета.Представление КАК Представление,
	|		ОбъектыУчета.ВидОбъектаУчета КАК ВидОбъектаУчета,
	|		МестоУчетаНМА.Организация КАК ТекущаяОрганизация,
	|		МестоУчетаНМА.Подразделение КАК ТекущееПодразделение,
	|		ЕСТЬNULL(ПервоначальныеСведения.ДокументСписания, НЕОПРЕДЕЛЕНО) КАК ДокументСписания,
	|
	|		&ОтражатьВУпрУчете
	|				И ЕСТЬNULL(ПервоначальныеСведения.ДокументПринятияКУчетуУУ, НЕОПРЕДЕЛЕНО) <> &Ссылка
	|				И ЕСТЬNULL(ПервоначальныеСведения.ДатаПринятияКУчетуУУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ &ОтражатьВРеглУчете
	|				И ЕСТЬNULL(ПервоначальныеСведения.ДокументПринятияКУчетуБУ, НЕОПРЕДЕЛЕНО) <> &Ссылка
	|				И ЕСТЬNULL(ПервоначальныеСведения.ДатаПринятияКУчетуБУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) КАК УжеПринятоКУчету,
	|
	|		(НЕ &ОтражатьВУпрУчете ИЛИ НЕ &ОтражатьВРеглУчете)
	|			И НЕ МестоУчетаНМА.Организация ЕСТЬ NULL
	|			И (&ОтражатьВРеглУчете И ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|				ИЛИ &ОтражатьВУпрУчете И ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету))
	|			И ЕСТЬNULL(МестоУчетаНМА.Организация, НЕОПРЕДЕЛЕНО) <> &Организация
	|			И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ДругаяОрганизация,
	|
	|		(НЕ &ОтражатьВУпрУчете ИЛИ НЕ &ОтражатьВРеглУчете)
	|			И НЕ МестоУчетаНМА.Подразделение ЕСТЬ NULL
	|			И (&ОтражатьВРеглУчете И ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|				ИЛИ &ОтражатьВУпрУчете И ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету))
	|			И ЕСТЬNULL(МестоУчетаНМА.Подразделение, НЕОПРЕДЕЛЕНО) <> &Подразделение
	|			И &Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ДругоеПодразделение
	|	ИЗ
	|		Справочник.НематериальныеАктивы КАК ОбъектыУчета
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И Организация = &Организация
	|						И НематериальныйАктив В (&СписокНМА)) КАК ПервоначальныеСведения
	|			ПО (ПервоначальныеСведения.НематериальныйАктив = ОбъектыУчета.Ссылка)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестоУчетаНМА.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И НематериальныйАктив В (&СписокНМА)) КАК МестоУчетаНМА
	|			ПО (МестоУчетаНМА.НематериальныйАктив = ОбъектыУчета.Ссылка)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМАБУ
	|			ПО (ПорядокУчетаНМАБУ.НематериальныйАктив = МестоУчетаНМА.НематериальныйАктив)
	|				И (ПорядокУчетаНМАБУ.Организация = МестоУчетаНМА.Организация)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМАУУ
	|			ПО (ПорядокУчетаНМАУУ.НематериальныйАктив = МестоУчетаНМА.НематериальныйАктив)
	|				И (ПорядокУчетаНМАУУ.Организация = МестоУчетаНМА.Организация)
	|	ГДЕ
	|		ОбъектыУчета.Ссылка В(&СписокНМА)) КАК ОбъектыУчета
	|ГДЕ
	|	ОбъектыУчета.УжеПринятоКУчету
	|		ИЛИ ОбъектыУчета.ДругаяОрганизация
	|		ИЛИ ОбъектыУчета.ДругоеПодразделение";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСоздатьВтРасчетСтоимости(Выборка, Запрос) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТекущиеРасходы.ИдентификаторСтроки       КАК ИдентификаторСтроки,
	|	ТекущиеРасходы.ИдентификаторСтрокиБУ     КАК ИдентификаторСтрокиБУ,
	|	ТекущиеРасходы.ИдентификаторСтрокиНУ     КАК ИдентификаторСтрокиНУ,
	|	ТекущиеРасходы.Ссылка                    КАК Ссылка,
	|	ТекущиеРасходы.НомерСтроки               КАК НомерСтроки,
	|	ТекущиеРасходы.ОбъектУчета               КАК ОбъектУчета,
	|	ТекущиеРасходы.СтатьяРасходов            КАК КорСтатьяРасходов,
	|	ТекущиеРасходы.АналитикаРасходов         КАК КорАналитикаРасходов,
	|	ТекущиеРасходы.Подразделение             КАК КорПодразделение,
	|	ТекущиеРасходы.НаправлениеДеятельности   КАК КорНаправлениеДеятельности,
	|
	|	ТекущиеРасходы.СуммаУпр                  КАК Стоимость,
	|	ТекущиеРасходы.Сумма                     КАК Сумма,
	|
	// СтоимостьРегл
	|	ВЫБОР
	|		КОГДА &ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА 0
	|		ИНАЧЕ ТекущиеРасходы.СуммаРегл - ТекущиеРасходы.СуммаЦФ
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	// СтоимостьНУ
	|	ВЫБОР
	|		КОГДА НЕ &ПлательщикНалогаНаПрибыль
	|				ИЛИ &ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА 0
	|		ИНАЧЕ ТекущиеРасходы.СуммаРегл
	|				- ТекущиеРасходы.ПостояннаяРазница
	|				- ТекущиеРасходы.ВременнаяРазница
	|				- (ТекущиеРасходы.СуммаЦФ - ТекущиеРасходы.СуммаПРЦФ - ТекущиеРасходы.СуммаВРЦФ) 
	|				- ТекущиеРасходы.НеУчитываемаяСтоимостьНУ
	|	КОНЕЦ КАК СтоимостьНУ,
	|
	// СтоимостьПР
	|	ВЫБОР
	|		КОГДА &ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА 0
	|		ИНАЧЕ ТекущиеРасходы.ПостояннаяРазница - ТекущиеРасходы.СуммаПРЦФ
	|	КОНЕЦ КАК СтоимостьПР,
	|
	// СтоимостьВР
	|	ВЫБОР
	|		КОГДА &ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА 0
	|		ИНАЧЕ ТекущиеРасходы.ВременнаяРазница - ТекущиеРасходы.СуммаВРЦФ + ТекущиеРасходы.НеУчитываемаяСтоимостьНУ
	|	КОНЕЦ КАК СтоимостьВР,
	|
	|	0 КАК СтоимостьЦФ,
	|	0 КАК СтоимостьНУЦФ,
	|	0 КАК СтоимостьПРЦФ,
	|	0 КАК СтоимостьВРЦФ,
	|
	// КорСуммаНУ
	|	ВЫБОР
	|		КОГДА &ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА 0
	|		ИНАЧЕ ТекущиеРасходы.СуммаРегл - ТекущиеРасходы.ПостояннаяРазница - ТекущиеРасходы.ВременнаяРазница
	|				- (ТекущиеРасходы.СуммаЦФ - ТекущиеРасходы.СуммаПРЦФ - ТекущиеРасходы.СуммаВРЦФ)
	|	КОНЕЦ КАК КорСуммаНУ,
	|
	// КорПостояннаяРазница
	|	ВЫБОР &ВариантПримененияЦелевогоФинансирования
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА 0
	|		ИНАЧЕ ТекущиеРасходы.ПостояннаяРазница - ТекущиеРасходы.СуммаПРЦФ
	|	КОНЕЦ КАК КорПостояннаяРазница,
	|
	// НеУчитываемаяСтоимостьНУ
	|	ТекущиеРасходы.НеУчитываемаяСтоимостьНУ КАК НеУчитываемаяСтоимостьНУ
	|
	|ПОМЕСТИТЬ ВтРасчетСтоимости
	|
	|ИЗ
	|	втТекущиеРасходы КАК ТекущиеРасходы
	|
	|ГДЕ
	|	ТекущиеРасходы.СуммаУпр <> 0
	|		ИЛИ &ВариантПримененияЦелевогоФинансирования <> ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			И (ТекущиеРасходы.СуммаРегл <> 0
	|				ИЛИ ТекущиеРасходы.ПостояннаяРазница <> 0
	|				ИЛИ ТекущиеРасходы.ВременнаяРазница <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТекущиеРасходы.ИдентификаторСтроки       КАК ИдентификаторСтроки,
	|	ТекущиеРасходы.ИдентификаторСтрокиБУ     КАК ИдентификаторСтрокиБУ,
	|	ТекущиеРасходы.ИдентификаторСтрокиНУ     КАК ИдентификаторСтрокиНУ,
	|	ТекущиеРасходы.Ссылка                    КАК Ссылка,
	|	ТекущиеРасходы.НомерСтроки               КАК НомерСтроки,
	|	ТекущиеРасходы.ОбъектУчета               КАК ОбъектУчета,
	|	ТекущиеРасходы.СтатьяРасходов            КАК КорСтатьяРасходов,
	|	ТекущиеРасходы.АналитикаРасходов         КАК КорАналитикаРасходов,
	|	ТекущиеРасходы.Подразделение             КАК КорПодразделение,
	|	ТекущиеРасходы.НаправлениеДеятельности   КАК КорНаправлениеДеятельности,
	|
	|	0 КАК Стоимость,
	|	0 КАК Сумма,
	|
	|	0 КАК СтоимостьРегл,
	|	0 КАК СтоимостьНУ,
	|	0 КАК СтоимостьПР,
	|	0 КАК СтоимостьВР,
	|
	// СтоимостьЦФ
	|	ВЫБОР &ВариантПримененияЦелевогоФинансирования
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА ТекущиеРасходы.СуммаРегл
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное)
	|			ТОГДА ТекущиеРасходы.СуммаЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьЦФ,
	|
	// СтоимостьНУЦФ
	|	0 КАК СтоимостьНУЦФ,
	|
	// СтоимостьПРЦФ
	|	ВЫБОР &ВариантПримененияЦелевогоФинансирования
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА ТекущиеРасходы.СуммаРегл
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное)
	|			ТОГДА ТекущиеРасходы.СуммаЦФ 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьПРЦФ,
	|
	// СтоимостьВРЦФ
	|	0 КАК СтоимостьВРЦФ,
	|
	// КорСуммаНУ
	|	ВЫБОР &ВариантПримененияЦелевогоФинансирования
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА ТекущиеРасходы.СуммаРегл - ТекущиеРасходы.ПостояннаяРазница - ТекущиеРасходы.ВременнаяРазница
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное)
	|			ТОГДА ТекущиеРасходы.СуммаЦФ - ТекущиеРасходы.СуммаПРЦФ - ТекущиеРасходы.СуммаВРЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КорСуммаНУ,
	|
	// КорПостояннаяРазница
	|	ВЫБОР &ВариантПримененияЦелевогоФинансирования
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА ТекущиеРасходы.ПостояннаяРазница
	|		ИНАЧЕ ТекущиеРасходы.СуммаПРЦФ
	|	КОНЕЦ КАК КорПостояннаяРазница,
	|
	// НеУчитываемаяСтоимостьНУ
	|	0 КАК НеУчитываемаяСтоимостьНУ
	|
	|ИЗ
	|	втТекущиеРасходы КАК ТекущиеРасходы
	|
	|ГДЕ
	|	&ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|	ИЛИ &ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное)
	|		И (ТекущиеРасходы.СуммаЦФ <> 0
	|			ИЛИ ТекущиеРасходы.СуммаПРЦФ <> 0
	|			ИЛИ ТекущиеРасходы.СуммаВРЦФ <> 0)";
	
	Запрос.УстановитьПараметр("ВариантПримененияЦелевогоФинансирования", Выборка.ВариантПримененияЦелевогоФинансирования);
	Запрос.УстановитьПараметр("ПлательщикНалогаНаПрибыль", УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Выборка.Организация, Выборка.Период));
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНаработкиОбъектовЭксплуатацииИзменение(СписокУдаляемыхВТ) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ПервоначальныеСведения.Период) КАК Период_Последнее,
	|	ТаблицаИзменение.Период КАК Период,
	|	ТаблицаИзменение.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ПоНаработкеБУ_Последнее
	|ИЗ
	|	НаработкиОбъектовЭксплуатацииИзменениеБезОрганизации КАК ТаблицаИзменение
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведения
	|		ПО (ПервоначальныеСведения.ОсновноеСредство = ТаблицаИзменение.ОсновноеСредство)
	|			И (ПервоначальныеСведения.Период <= ТаблицаИзменение.Период)
	|			И (ПервоначальныеСведения.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИзменение.ОсновноеСредство,
	|	ТаблицаИзменение.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ПараметрыАмортизацииОСУУ.Период) КАК Период_Последнее,
	|	ТаблицаИзменение.Период КАК Период,
	|	ТаблицаИзменение.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ПоНаработкеУУ_Последнее
	|ИЗ
	|	НаработкиОбъектовЭксплуатацииИзменениеБезОрганизации КАК ТаблицаИзменение
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСУУ КАК ПараметрыАмортизацииОСУУ
	|		ПО (ПараметрыАмортизацииОСУУ.ОсновноеСредство = ТаблицаИзменение.ОсновноеСредство)
	|			И (ПараметрыАмортизацииОСУУ.Период <= ТаблицаИзменение.Период)
	|			И (ПараметрыАмортизацииОСУУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИзменение.ОсновноеСредство,
	|	ТаблицаИзменение.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоНаработкеБУ_Последнее.Период КАК Период,
	|	ПоНаработкеБУ_Последнее.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведения.Организация КАК Организация,
	|	ИСТИНА КАК ОтражатьВРеглУчете,
	|	ИСТИНА КАК ОтражатьВУпрУчете,
	|	&Регистратор КАК Документ
	|ПОМЕСТИТЬ НаработкиОбъектовЭксплуатацииИзменение
	|ИЗ
	|	ПоНаработкеБУ_Последнее КАК ПоНаработкеБУ_Последнее
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведения
	|		ПО (ПервоначальныеСведения.ОсновноеСредство = ПоНаработкеБУ_Последнее.ОсновноеСредство)
	|			И (ПервоначальныеСведения.Период = ПоНаработкеБУ_Последнее.Период_Последнее)
	|			И (ПервоначальныеСведения.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
	|ГДЕ
	|	ПервоначальныеСведения.МетодНачисленияАмортизацииБУ В (
	|			ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции), 
	|			ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоНаработкеУУ_Последнее.Период КАК Период,
	|	ПоНаработкеУУ_Последнее.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОСУУ.Организация КАК Организация,
	|	ИСТИНА КАК ОтражатьВРеглУчете,
	|	ИСТИНА КАК ОтражатьВУпрУчете,
	|	&Регистратор КАК Документ
	|ИЗ
	|	ПоНаработкеУУ_Последнее КАК ПоНаработкеУУ_Последнее
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСУУ КАК ПараметрыАмортизацииОСУУ
	|		ПО (ПараметрыАмортизацииОСУУ.ОсновноеСредство = ПоНаработкеУУ_Последнее.ОсновноеСредство)
	|			И (ПараметрыАмортизацииОСУУ.Период = ПоНаработкеУУ_Последнее.Период_Последнее)
	|			И (ПараметрыАмортизацииОСУУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
	|ГДЕ
	|	ПараметрыАмортизацииОСУУ.МетодНачисленияАмортизации В (
	|				ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции), 
	|				ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега))";
	
	СписокУдаляемыхВТ.Добавить("ПоНаработкеУУ_Последнее");
	СписокУдаляемыхВТ.Добавить("ПоНаработкеБУ_Последнее");
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРассчитатьНомераПакетовАмортизацииОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МИНИМУМ(ПорядокУчетаОС.Период)   КАК Период,
	|	ПорядокУчетаОС.Организация       КАК Организация,
	|	ПорядокУчетаОС.ОсновноеСредство  КАК ОсновноеСредство
	|ПОМЕСТИТЬ ВТ_СписокОС_БезНомера
	|ИЗ
	|	(ВЫБРАТЬ 
	|		НАЧАЛОПЕРИОДА(ПорядокУчетаОС.Период, МЕСЯЦ) КАК Период,
	|		ПорядокУчетаОС.Организация                  КАК Организация,
	|		ПорядокУчетаОС.ОсновноеСредство             КАК ОсновноеСредство
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОС
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизацииОС
	|			ПО (ПакетыАмортизацииОС.Организация = ПорядокУчетаОС.Организация)
	|				И (ПакетыАмортизацииОС.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство)
	|	ГДЕ
	|		(ПорядокУчетаОС.НачислятьАмортизациюБУ
	|			ИЛИ ПорядокУчетаОС.НачислятьАмортизациюНУ)
	|		И ПорядокУчетаОС.Организация В (&Организация)
	|		И ПорядокУчетаОС.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|		И ПакетыАмортизацииОС.НомерПакета ЕСТЬ NULL
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ПорядокУчетаОС.Период, МЕСЯЦ) КАК Период,
	|		ПорядокУчетаОС.Организация                  КАК Организация,
	|		ПорядокУчетаОС.ОсновноеСредство             КАК ОсновноеСредство
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчетаОС
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизацииОС
	|			ПО (ПакетыАмортизацииОС.Организация = ПорядокУчетаОС.Организация)
	|				И (ПакетыАмортизацииОС.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство)
	|	ГДЕ
	|		ПорядокУчетаОС.НачислятьАмортизациюУУ
	|		И ПорядокУчетаОС.Организация В (&Организация)
	|		И ПорядокУчетаОС.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|		И ПакетыАмортизацииОС.НомерПакета ЕСТЬ NULL
	|
	|	) КАК ПорядокУчетаОС
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОС.Организация,
	|	ПорядокУчетаОС.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокОС.Период                      КАК НачалоМесяца,
	|	КОНЕЦПЕРИОДА(СписокОС.Период, МЕСЯЦ) КАК КонецМесяца
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	ВТ_СписокОС_БезНомера КАК СписокОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокОС.Период                                 КАК Период,
	|	СписокОС.Организация                            КАК Организация,
	|	СписокОС.НомерПакета                            КАК НомерПакета,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СписокОС.ОсновноеСредство) КАК ОбъемПакета
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.НачалоМесяца КАК Период,
	|		ПорядокУчетаОС.Организация КАК Организация,
	|		ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|		ПакетыАмортизацииОС.НомерПакета КАК НомерПакета
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОС
	|			ПО (ПорядокУчетаОС.Период >= Периоды.НачалоМесяца)
	|				И (ПорядокУчетаОС.Период <= Периоды.КонецМесяца)
	|				И (ПорядокУчетаОС.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
	|				И (ПорядокУчетаОС.Организация В (&Организация))
	|				И (ПорядокУчетаОС.НачислятьАмортизациюБУ
	|					ИЛИ ПорядокУчетаОС.НачислятьАмортизациюНУ)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизацииОС
	|			ПО (ПакетыАмортизацииОС.Организация = ПорядокУчетаОС.Организация)
	|				И (ПакетыАмортизацииОС.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		Периоды.НачалоМесяца,
	|		ПорядокУчетаОС.Организация,
	|		ПорядокУчетаОС.ОсновноеСредство,
	|		ПакетыАмортизацииОС.НомерПакета КАК НомерПакета
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчетаОС
	|			ПО (ПорядокУчетаОС.Период >= Периоды.НачалоМесяца)
	|				И (ПорядокУчетаОС.Период <= Периоды.КонецМесяца)
	|				И (ПорядокУчетаОС.ДатаИсправления = ДАТАВРЕМЯ(1,1,1))
	|				И (ПорядокУчетаОС.Организация В (&Организация))
	|				И (ПорядокУчетаОС.НачислятьАмортизациюУУ)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизацииОС
	|			ПО (ПакетыАмортизацииОС.Организация = ПорядокУчетаОС.Организация)
	|				И (ПакетыАмортизацииОС.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство)) КАК СписокОС
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокОС.Период,
	|	СписокОС.НомерПакета,
	|	СписокОС.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокОС.Период            КАК Период,
	|	СписокОС.Организация       КАК Организация,
	|	СписокОС.ОсновноеСредство  КАК ОсновноеСредство
	|ИЗ
	|	ВТ_СписокОС_БезНомера КАК СписокОС";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРассчитатьНомераПакетовАмортизацииНМА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ 
	|	МИНИМУМ(ПорядокУчетаНМА.Период)     КАК Период,
	|	ПорядокУчетаНМА.Организация         КАК Организация,
	|	ПорядокУчетаНМА.НематериальныйАктив КАК НематериальныйАктив
	|ПОМЕСТИТЬ ВТ_СписокНМА_БезНомера
	|ИЗ
	|	(ВЫБРАТЬ 
	|		НАЧАЛОПЕРИОДА(ПорядокУчетаНМА.Период, МЕСЯЦ) КАК Период,
	|		ПорядокУчетаНМА.Организация                  КАК Организация,
	|		ПорядокУчетаНМА.НематериальныйАктив          КАК НематериальныйАктив
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМА
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизацииНМА
	|			ПО (ПакетыАмортизацииНМА.Организация = ПорядокУчетаНМА.Организация)
	|			И (ПакетыАмортизацииНМА.НематериальныйАктив = ПорядокУчетаНМА.НематериальныйАктив)
	|	ГДЕ
	|		(ПорядокУчетаНМА.НачислятьАмортизациюБУ
	|				ИЛИ ПорядокУчетаНМА.НачислятьАмортизациюНУ)
	|		И ПорядокУчетаНМА.Организация В (&Организация)
	|		И ПакетыАмортизацииНМА.НомерПакета ЕСТЬ NULL
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ 
	|		НАЧАЛОПЕРИОДА(ПорядокУчетаНМА.Период, МЕСЯЦ) КАК Период,
	|		ПорядокУчетаНМА.Организация                  КАК Организация,
	|		ПорядокУчетаНМА.НематериальныйАктив          КАК НематериальныйАктив
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчетаНМА
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизацииНМА
	|			ПО (ПакетыАмортизацииНМА.Организация = ПорядокУчетаНМА.Организация)
	|				И (ПакетыАмортизацииНМА.НематериальныйАктив = ПорядокУчетаНМА.НематериальныйАктив)
	|	ГДЕ
	|		ПорядокУчетаНМА.НачислятьАмортизациюУУ
	|		И ПорядокУчетаНМА.Организация В (&Организация)
	|		И ПакетыАмортизацииНМА.НомерПакета ЕСТЬ NULL
	|
	|	) КАК ПорядокУчетаНМА
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаНМА.Организация,
	|	ПорядокУчетаНМА.НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНМА.Период                      КАК НачалоМесяца,
	|	КОНЕЦПЕРИОДА(СписокНМА.Период, МЕСЯЦ) КАК КонецМесяца
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	ВТ_СписокНМА_БезНомера КАК СписокНМА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокНМА.Период                                    КАК Период,
	|	СписокНМА.Организация                               КАК Организация,
	|	СписокНМА.НомерПакета                               КАК НомерПакета,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СписокНМА.НематериальныйАктив) КАК ОбъемПакета
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.НачалоМесяца КАК Период,
	|		ПорядокУчетаНМА.Организация КАК Организация,
	|		ПорядокУчетаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|		ПакетыАмортизацииНМА.НомерПакета КАК НомерПакета
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМА
	|			ПО (ПорядокУчетаНМА.Период >= Периоды.НачалоМесяца)
	|				И (ПорядокУчетаНМА.Период <= Периоды.КонецМесяца)
	|				И (ПорядокУчетаНМА.Организация В (&Организация))
	|				И (ПорядокУчетаНМА.НачислятьАмортизациюБУ
	|					ИЛИ ПорядокУчетаНМА.НачислятьАмортизациюНУ)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизацииНМА
	|			ПО (ПакетыАмортизацииНМА.Организация = ПорядокУчетаНМА.Организация)
	|				И (ПакетыАмортизацииНМА.НематериальныйАктив = ПорядокУчетаНМА.НематериальныйАктив)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		Периоды.НачалоМесяца,
	|		ПорядокУчетаНМА.Организация,
	|		ПорядокУчетаНМА.НематериальныйАктив,
	|		ПакетыАмортизацииНМА.НомерПакета КАК НомерПакета
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчетаНМА
	|			ПО (ПорядокУчетаНМА.Период >= Периоды.НачалоМесяца)
	|				И (ПорядокУчетаНМА.Период <= Периоды.КонецМесяца)
	|				И (ПорядокУчетаНМА.Организация В (&Организация))
	|				И (ПорядокУчетаНМА.НачислятьАмортизациюУУ)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизацииНМА
	|			ПО (ПакетыАмортизацииНМА.Организация = ПорядокУчетаНМА.Организация)
	|				И (ПакетыАмортизацииНМА.НематериальныйАктив = ПорядокУчетаНМА.НематериальныйАктив)) КАК СписокНМА
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокНМА.Период,
	|	СписокНМА.НомерПакета,
	|	СписокНМА.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокНМА.Период               КАК Период,
	|	СписокНМА.Организация          КАК Организация,
	|	СписокНМА.НематериальныйАктив  КАК НематериальныйАктив
	|ИЗ
	|	ВТ_СписокНМА_БезНомера КАК СписокНМА";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроверитьРеквизитыОСПриПринятииКУчету(Запрос, Объект) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбъектыЭксплуатации.Ссылка,
	|	ОбъектыЭксплуатации.Представление,
	|
	|	ОбъектыЭксплуатации.НеЗаполненИнвентарныйНомер,
	|	ОбъектыЭксплуатации.НеЗаполненаГруппаОС,
	|	ОбъектыЭксплуатации.ДругаяГруппаОС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОбъектыЭксплуатации.Ссылка КАК Ссылка,
	|		ОбъектыЭксплуатации.Представление КАК Представление,
	|
	|		ОбъектыЭксплуатации.ИнвентарныйНомер = """"
	|			И ОбъектыЭксплуатации.ТипОС = ЗНАЧЕНИЕ(Перечисление.ТипыОС.ОбъектЭксплуатации) КАК НеЗаполненИнвентарныйНомер,
	|
	|		&ПроверитьЗаполнениеРеквизитов
	|			И &ИспользоватьРеглУчет
	|			И ОбъектыЭксплуатации.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка) КАК НеЗаполненаГруппаОС,
	|
	|		ОбъектыЭксплуатации.ГруппаОС <> &ГруппаОС
	|			И ОбъектыЭксплуатации.ГруппаОС <> ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка)
	|			И &ГруппаОС <> ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка) КАК ДругаяГруппаОС
	|
	|	ИЗ
	|		Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|	ГДЕ
	|		ОбъектыЭксплуатации.Ссылка В(&СписокОС)
	|
	|	) КАК ОбъектыЭксплуатации
	|
	|ГДЕ
	|	(ОбъектыЭксплуатации.НеЗаполненИнвентарныйНомер
	|			ИЛИ ОбъектыЭксплуатации.НеЗаполненаГруппаОС
	|			ИЛИ ОбъектыЭксплуатации.ДругаяГруппаОС)";
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ПринятиеКУчетуОС2_4") Тогда
		Запрос.УстановитьПараметр("ГруппаОС", Объект.ГруппаОС);
		Запрос.УстановитьПараметр("ПроверитьЗаполнениеРеквизитов", Ложь);
	Иначе
		Запрос.УстановитьПараметр("ГруппаОС", Перечисления.ГруппыОС.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПроверитьЗаполнениеРеквизитов", Истина);
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("ИспользоватьРеглУчет", Константы.ИспользоватьРеглУчет.Получить());
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТребуетсяРасчетАмортизацииОС(Период) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Поле1
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Период, 
	|			Организация В (&Организация)
	|				И (ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					ИЛИ ДатаИсправления >= &Период)) КАК НачислениеАмортизации
	|ГДЕ
	|	(НачислениеАмортизации.НачислятьАмортизациюБУ
	|			ИЛИ НачислениеАмортизации.НачислятьАмортизациюНУ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|			&Период, 
	|			Организация В (&Организация)
	|				И (ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					ИЛИ ДатаИсправления >= &Период)) КАК НачислениеАмортизации
	|ГДЕ
	|	НачислениеАмортизации.НачислятьАмортизациюУУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ КАК НачислениеАмортизации
	|ГДЕ
	|	(НачислениеАмортизации.НачислятьАмортизациюБУ
	|			ИЛИ НачислениеАмортизации.НачислятьАмортизациюНУ)
	|	И НачислениеАмортизации.Организация В(&Организация)
	|	И НачислениеАмортизации.Период >= &Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСУУ КАК НачислениеАмортизации
	|ГДЕ
	|	НачислениеАмортизации.НачислятьАмортизациюУУ
	|	И НачислениеАмортизации.Организация В(&Организация)
	|	И НачислениеАмортизации.Период >= &Период
	|";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;

КонецФункции
 
Функция ТекстЗапросаТребуетсяРасчетАмортизацииНМА(Период) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Поле1
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(&Период, Организация В (&Организация)) КАК НачислениеАмортизации
	|ГДЕ
	|	(НачислениеАмортизации.НачислятьАмортизациюБУ
	|			ИЛИ НачислениеАмортизации.НачислятьАмортизациюНУ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(&Период, Организация В (&Организация)) КАК НачислениеАмортизации
	|ГДЕ
	|	НачислениеАмортизации.НачислятьАмортизациюУУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ КАК НачислениеАмортизации
	|ГДЕ
	|	(НачислениеАмортизации.НачислятьАмортизациюБУ
	|			ИЛИ НачислениеАмортизации.НачислятьАмортизациюНУ)
	|	И НачислениеАмортизации.Организация В(&Организация)
	|	И НачислениеАмортизации.Период >= &Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАУУ КАК НачислениеАмортизации
	|ГДЕ
	|	НачислениеАмортизации.НачислятьАмортизациюУУ
	|	И НачислениеАмортизации.Организация В(&Организация)
	|	И НачислениеАмортизации.Период >= &Период";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроверитьЧтоОСПринятыКУчету(Объект, ПроверитьВВыбранномУчете) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТипДокумента = ТипЗнч(Объект);
	Если ТипДокумента = Тип("ДокументОбъект.ВозвратОСИзАренды2_4")
		ИЛИ ТипДокумента = Тип("ДокументОбъект.ПередачаОСВАренду2_4") Тогда
		ПроверитьВВыбранномУчете = Ложь;
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбъектыЭксплуатации.Ссылка КАК Ссылка,
	|	ОбъектыЭксплуатации.Представление КАК Представление,
	|	ЕСТЬNULL(ПорядокУчетаОСБУ.СостояниеБУ, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) КАК СостояниеБУ,
	|	ЕСТЬNULL(ПорядокУчетаОСБУ.СостояниеНУ, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) КАК СостояниеНУ,
	|	ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) КАК СостояниеУУ,
	|	МестонахождениеОС.Организация КАК МестонахождениеОрганизация,	
	|	МестонахождениеОС.Организация.Представление КАК МестонахождениеОрганизацияПредставление,	
	|	МестонахождениеОС.Местонахождение КАК МестонахождениеПодразделение,
	|	МестонахождениеОС.Местонахождение.Представление КАК МестонахождениеПодразделениеПредставление,
	|	МестонахождениеОС.МОЛ КАК МестонахождениеМОЛ,
	|	МестонахождениеОС.МОЛ.Представление КАК МестонахождениеМОЛПредставление 
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И ОсновноеСредство В (&СписокОС)) КАК МестонахождениеОС
	|		ПО (МестонахождениеОС.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаОСБУ
	|		ПО (ПорядокУчетаОСБУ.Организация = МестонахождениеОС.Организация)
	|			И (ПорядокУчетаОСБУ.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаОСУУ
	|		ПО (ПорядокУчетаОСУУ.Организация = МестонахождениеОС.Организация)
	|			И (ПорядокУчетаОСУУ.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство)
	|ГДЕ
	|	ОбъектыЭксплуатации.Ссылка В(&СписокОС)
	|	И (&ОтражатьВУпрУчете И &ПроверитьВВыбранномУчете
	|				И НЕ ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) В (&СостоянияПринят)
	|
	|			ИЛИ &ОтражатьВРеглУчете И &ПроверитьВВыбранномУчете
	|				И НЕ ЕСТЬNULL(ПорядокУчетаОСБУ.СостояниеБУ, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) В (&СостоянияПринят)
	|				И НЕ ЕСТЬNULL(ПорядокУчетаОСБУ.СостояниеНУ, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) В (&СостоянияПринят)
	|
	|			ИЛИ НЕ ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) В (&СостоянияПринят)
	|				И НЕ ЕСТЬNULL(ПорядокУчетаОСБУ.СостояниеБУ, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) В (&СостоянияПринят)
	|				И НЕ ЕСТЬNULL(ПорядокУчетаОСБУ.СостояниеНУ, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) В (&СостоянияПринят)
	|
	|			ИЛИ МестонахождениеОС.Организация <> &Организация	
	|			ИЛИ МестонахождениеОС.Местонахождение <> &Подразделение
	|					И &Подразделение <> НЕОПРЕДЕЛЕНО
	|			ИЛИ МестонахождениеОС.МОЛ <> &МОЛ 
	|					И &МОЛ <> НЕОПРЕДЕЛЕНО
	|	)";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроверитьЧтоНМАПринятыКУчету() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НематериальныеАктивы.Ссылка КАК Ссылка,
	|	НематериальныеАктивы.Представление КАК Представление,
	|	НематериальныеАктивы.ВидОбъектаУчета КАК ВидОбъектаУчета,
	|	ЕСТЬNULL(ПорядокУчетаНМАБУ.СостояниеБУ, ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.НеПринятКУчету)) КАК СостояниеБУ,
	|	ЕСТЬNULL(ПорядокУчетаНМАБУ.СостояниеНУ, ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.НеПринятКУчету)) КАК СостояниеНУ,
	|	ЕСТЬNULL(ПорядокУчетаНМАУУ.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.НеПринятКУчету)) КАК СостояниеУУ,
	|	МестоУчетаНМА.Организация КАК Организация,
	|	МестоУчетаНМА.Организация.Представление КАК ОрганизацияПредставление,
	|	МестоУчетаНМА.Подразделение КАК Подразделение,
	|	МестоУчетаНМА.Подразделение.Представление КАК ПодразделениеПредставление
	|ИЗ
	|	Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМАБУ
	|		ПО (ПорядокУчетаНМАБУ.НематериальныйАктив = НематериальныеАктивы.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМАУУ
	|		ПО (ПорядокУчетаНМАУУ.НематериальныйАктив = НематериальныеАктивы.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестоУчетаНМА.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И НематериальныйАктив В (&СписокНМА)) КАК МестоУчетаНМА
	|		ПО (МестоУчетаНМА.НематериальныйАктив = НематериальныеАктивы.Ссылка)
	|ГДЕ
	|	НематериальныеАктивы.Ссылка В(&СписокНМА)
	|	И (
	|		(&ОтражатьВУпрУчете И &ПроверитьВВыбранномУчете
	|				И НЕ ЕСТЬNULL(ПорядокУчетаНМАУУ.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.НеПринятКУчету)) В (&СостоянияПринят)
	|			ИЛИ &ОтражатьВРеглУчете И &ПроверитьВВыбранномУчете
	|				И НЕ ЕСТЬNULL(ПорядокУчетаНМАБУ.СостояниеБУ, ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.НеПринятКУчету)) В (&СостоянияПринят)
	|				И НЕ ЕСТЬNULL(ПорядокУчетаНМАБУ.СостояниеНУ, ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.НеПринятКУчету)) В (&СостоянияПринят)
	|			ИЛИ НЕ ЕСТЬNULL(ПорядокУчетаНМАУУ.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.НеПринятКУчету)) В (&СостоянияПринят)
	|				И НЕ ЕСТЬNULL(ПорядокУчетаНМАБУ.СостояниеБУ, ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.НеПринятКУчету)) В (&СостоянияПринят)
	|				И НЕ ЕСТЬNULL(ПорядокУчетаНМАБУ.СостояниеНУ, ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.НеПринятКУчету)) В (&СостоянияПринят)
	|		)
	|
	// Проверка места учета НМА
	|		ИЛИ (
	|				(НЕ &ОтражатьВУпрУчете ИЛИ ЕСТЬNULL(ПорядокУчетаНМАУУ.Состояние, НЕОПРЕДЕЛЕНО) В (&СостоянияПринят))
	|				И (НЕ &ОтражатьВРеглУчете ИЛИ ЕСТЬNULL(ПорядокУчетаНМАБУ.СостояниеБУ, НЕОПРЕДЕЛЕНО) В (&СостоянияПринят))
	|				И (ЕСТЬNULL(МестоУчетаНМА.Организация, НЕОПРЕДЕЛЕНО) <> &Организация
	|						И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ИЛИ ЕСТЬNULL(МестоУчетаНМА.Подразделение, НЕОПРЕДЕЛЕНО) <> &Подразделение
	|						И &Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|			)
	|		)";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции
 
Функция ТекстЗапросаПараметрыВладельца() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаВладельцев.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение,
	|	МестонахождениеОС.МОЛ КАК МОЛ,
	|	МестонахождениеОС.МОЛАрендатора КАК МОЛАрендатора,
	|	МестонахождениеОС.АдресМестонахождения КАК АдресМестонахождения,
	|	МестонахождениеОС.АдресМестонахожденияЗначение КАК АдресМестонахожденияЗначение,
	|	МестонахождениеОС.ПодразделениеАрендатора КАК ПодразделениеАрендатора,
	|	МестонахождениеОС.Арендатор КАК Арендатор,
	|	ПорядокУчетаОСУУ.СтатьяРасходов КАК СтатьяРасходовУУ,
	|	ПорядокУчетаОСУУ.АналитикаРасходов КАК АналитикаРасходовУУ,
	|	ПорядокУчетаОСУУ.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизациюУУ,
	|	ПорядокУчетаОСУУ.ОрганизацияПолучательРасходов КАК ОрганизацияПолучательРасходовУУ,
	|	ПорядокУчетаОСБУ.СтатьяРасходовБУ КАК СтатьяРасходовБУ,
	|	ПорядокУчетаОСБУ.АналитикаРасходовБУ КАК АналитикаРасходовБУ,
	|	ПорядокУчетаОСБУ.СтатьяРасходовАмортизационнойПремии КАК СтатьяРасходовАмортизационнойПремии,
	|	ПорядокУчетаОСБУ.АналитикаРасходовАмортизационнойПремии КАК АналитикаРасходовАмортизационнойПремии,
	|	ПорядокУчетаОСБУ.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчетаОСБУ.ОрганизацияПолучательРасходов КАК ОрганизацияПолучательРасходов,
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	ПорядокУчетаОСБУ.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ,
	|	ПорядокУчетаОСБУ.НедвижимоеИмущество КАК НедвижимоеИмущество,
	|	ПорядокУчетаОСБУ.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ПорядокУчетаОС.ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	ПорядокУчетаОС.ОтражатьВУпрУчете КАК ОтражатьВУпрУчете,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СоставЕГДС.ЕГДС КАК ЕГДС,
	|	СпособыОтраженияНалогНаИмущество.СтатьяРасходов КАК СтатьяРасходовНалогНаИмущество,
	|	СпособыОтраженияНалогНаИмущество.АналитикаРасходов КАК АналитикаРасходовНалогНаИмущество,
	|	СпособыОтраженияТранспортныйНалог.СтатьяРасходов КАК СтатьяРасходовТранспортныйНалог,
	|	СпособыОтраженияТранспортныйНалог.АналитикаРасходов КАК АналитикаРасходовТранспортныйНалог,
	|	СпособыОтраженияЗемельныйНалог.СтатьяРасходов КАК СтатьяРасходовЗемельныйНалог,
	|	СпособыОтраженияЗемельныйНалог.АналитикаРасходов КАК АналитикаРасходовЗемельныйНалог
	|
	|ПОМЕСТИТЬ ВтТаблицаСведенийДляКомпонентовАмортизации
	|
	|ИЗ
	|	ТаблицаВладельцев КАК ТаблицаВладельцев
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(
	|				&Период,
	|				ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						Т.ОсновноеСредство
	|					ИЗ
	|						ТаблицаВладельцев КАК Т)) КАК МестонахождениеОС
	|		ПО (МестонахождениеОС.ОсновноеСредство = ТаблицаВладельцев.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|				&Период,
	|				ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						Т.ОсновноеСредство
	|					ИЗ
	|						ТаблицаВладельцев КАК Т)) КАК ПорядокУчетаОС
	|		ПО (ПорядокУчетаОС.ОсновноеСредство = ТаблицаВладельцев.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							Т.ОсновноеСредство
	|						ИЗ
	|							ТаблицаВладельцев КАК Т)) КАК ПорядокУчетаОСБУ
	|		ПО (ПорядокУчетаОСБУ.ОсновноеСредство = ТаблицаВладельцев.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							Т.ОсновноеСредство
	|						ИЗ
	|							ТаблицаВладельцев КАК Т)) КАК ПорядокУчетаОСУУ
	|		ПО (ПорядокУчетаОСУУ.ОсновноеСредство = ТаблицаВладельцев.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставЕГДС.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И ВнеоборотныйАктив В
	|						(ВЫБРАТЬ
	|							Т.ОсновноеСредство
	|						ИЗ
	|							ТаблицаВладельцев КАК Т)) КАК СоставЕГДС
	|		ПО (СоставЕГДС.ВнеоборотныйАктив = ТаблицаВладельцев.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоИмущественнымНалогам.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И ВидНалога = ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.НалогНаИмущество)
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							Т.ОсновноеСредство
	|						ИЗ
	|							ТаблицаВладельцев КАК Т)) КАК СпособыОтраженияНалогНаИмущество
	|		ПО ТаблицаВладельцев.ОсновноеСредство = СпособыОтраженияНалогНаИмущество.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоИмущественнымНалогам.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И ВидНалога = ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог)
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							Т.ОсновноеСредство
	|						ИЗ
	|							ТаблицаВладельцев КАК Т)) КАК СпособыОтраженияТранспортныйНалог
	|		ПО ТаблицаВладельцев.ОсновноеСредство = СпособыОтраженияТранспортныйНалог.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоИмущественнымНалогам.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И ВидНалога = ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог)
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							Т.ОсновноеСредство
	|						ИЗ
	|							ТаблицаВладельцев КАК Т)) КАК СпособыОтраженияЗемельныйНалог
	|		ПО ТаблицаВладельцев.ОсновноеСредство = СпособыОтраженияЗемельныйНалог.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторСтроки
	|";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаАмортизацияОСМожетНачислятьсяСДатыПринятияКУчету() Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Организации.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка В (&СписокОрганизаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 Приоритет,
	|	ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету) КАК ПорядокНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаФинансовогоУчета.СрезПоследних(
	|		&Период, 
	|		Организация В
	|			(ВЫБРАТЬ
	|				Организации.ГоловнаяОрганизация
	|			ИЗ
	|				Организации КАК Организации)) КАК УчетнаяПолитикаФинансовогоУчета
	|ГДЕ
	|	УчетнаяПолитикаФинансовогоУчета.ПорядокНачисленияАмортизацииОС = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|		ИЛИ УчетнаяПолитикаФинансовогоУчета.ПорядокНачисленияАмортизацииАренда = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 Приоритет,
	|	ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету) КАК ПорядокНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаБухУчета.СрезПоследних(
	|		&Период, 
	|		Организация В
	|			(ВЫБРАТЬ
	|				Организации.ГоловнаяОрганизация
	|			ИЗ
	|				Организации КАК Организации)) КАК УчетнаяПолитикаБухУчета
	|ГДЕ
	|	УчетнаяПолитикаБухУчета.ПорядокНачисленияАмортизацииОС = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	2 Приоритет,
	|	ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца) КАК ПорядокНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаФинансовогоУчета.СрезПоследних(
	|		&Период, 
	|		Организация В
	|			(ВЫБРАТЬ
	|				Организации.ГоловнаяОрганизация
	|			ИЗ
	|				Организации КАК Организации)) КАК УчетнаяПолитикаФинансовогоУчета
	|ГДЕ
	|	УчетнаяПолитикаФинансовогоУчета.ПорядокНачисленияАмортизацииОС = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|		ИЛИ УчетнаяПолитикаФинансовогоУчета.ПорядокНачисленияАмортизацииАренда = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	2 Приоритет,
	|	ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца) КАК ПорядокНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаБухУчета.СрезПоследних(
	|		&Период, 
	|		Организация В
	|			(ВЫБРАТЬ
	|				Организации.ГоловнаяОрганизация
	|			ИЗ
	|				Организации КАК Организации)) КАК УчетнаяПолитикаБухУчета
	|ГДЕ
	|	УчетнаяПолитикаБухУчета.ПорядокНачисленияАмортизацииОС = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаАмортизацияНМАМожетНачислятьсяСДатыПринятияКУчету() Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Организации.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка В (&СписокОрганизаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 Приоритет,
	|	ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету) КАК ПорядокНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаФинансовогоУчета.СрезПоследних(
	|		&Период, 
	|		Организация В
	|			(ВЫБРАТЬ
	|				Организации.ГоловнаяОрганизация
	|			ИЗ
	|				Организации КАК Организации)) КАК УчетнаяПолитикаФинансовогоУчета
	|ГДЕ
	|	УчетнаяПолитикаФинансовогоУчета.ПорядокНачисленияАмортизацииНМА = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 Приоритет,
	|	ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету) КАК ПорядокНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаБухУчета.СрезПоследних(
	|		&Период, 
	|		Организация В
	|			(ВЫБРАТЬ
	|				Организации.ГоловнаяОрганизация
	|			ИЗ
	|				Организации КАК Организации)) КАК УчетнаяПолитикаБухУчета
	|ГДЕ
	|	УчетнаяПолитикаБухУчета.ПорядокНачисленияАмортизацииНМА = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	2 Приоритет,
	|	ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца) КАК ПорядокНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаФинансовогоУчета.СрезПоследних(
	|		&Период, 
	|		Организация В
	|			(ВЫБРАТЬ
	|				Организации.ГоловнаяОрганизация
	|			ИЗ
	|				Организации КАК Организации)) КАК УчетнаяПолитикаФинансовогоУчета
	|ГДЕ
	|	УчетнаяПолитикаФинансовогоУчета.ПорядокНачисленияАмортизацииНМА = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	2 Приоритет,
	|	ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца) КАК ПорядокНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаБухУчета.СрезПоследних(
	|		&Период, 
	|		Организация В
	|			(ВЫБРАТЬ
	|				Организации.ГоловнаяОрганизация
	|			ИЗ
	|				Организации КАК Организации)) КАК УчетнаяПолитикаБухУчета
	|ГДЕ
	|	УчетнаяПолитикаБухУчета.ПорядокНачисленияАмортизацииНМА = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПрочиеРасходыПринятияКУчету() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ЗапросыРегистра = Новый Массив;
	
	#Область ПринятиеКУчету // - Кт 08
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|   РасчетРасходов.Подразделение                 КАК Подразделение,
	|	РасчетРасходов.СтатьяРасходов                КАК СтатьяРасходов,
	|	РасчетРасходов.АналитикаРасходов             КАК АналитикаРасходов,
	|	РасчетРасходов.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	ВЫБОР
	|		КОГДА &ПорядокУчетаУУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|			ТОГДА 0
	|		ИНАЧЕ РасчетРасходов.Сумма
	|	КОНЕЦ КАК СуммаСНДС,
	|
	|	ВЫБОР
	|		КОГДА &ПорядокУчетаУУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|			ТОГДА 0
	|		ИНАЧЕ РасчетРасходов.СуммаБезНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|
	|	ВЫБОР
	|		КОГДА &ПорядокУчетаУУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|			ТОГДА 0
	|		ИНАЧЕ РасчетРасходов.СуммаУпр
	|	КОНЕЦ КАК СуммаБезНДСУпр,
	|
	|	ВЫБОР
	|		КОГДА &ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НеПриниматьКУчетуВключитьВРасходы)
	|				ИЛИ &ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|			ТОГДА 0
	|		ИНАЧЕ РасчетРасходов.СуммаРегл
	|	КОНЕЦ КАК СуммаСНДСРегл,
	|
	|	ВЫБОР
	|		КОГДА &ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НеПриниматьКУчетуВключитьВРасходы)
	|				ИЛИ &ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|			ТОГДА 0
	|		ИНАЧЕ РасчетРасходов.СуммаРегл
	|	КОНЕЦ КАК СуммаБезНДСРегл,
	|
	|	ВЫБОР
	|		КОГДА &ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НеПриниматьКУчетуВключитьВРасходы)
	|				ИЛИ &ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|			ТОГДА 0
	|		ИНАЧЕ РасчетРасходов.ПостояннаяРазница
	|	КОНЕЦ КАК ПостояннаяРазница,
	|
	|	ВЫБОР
	|		КОГДА &ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НеПриниматьКУчетуВключитьВРасходы)
	|				ИЛИ &ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|			ТОГДА 0
	|		ИНАЧЕ РасчетРасходов.СуммаРегл
	|	КОНЕЦ
	|		- ВЫБОР
	|			КОГДА &ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НеПриниматьКУчетуВключитьВРасходы)
	|					ИЛИ &ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|				ТОГДА 0
	|				ИНАЧЕ РасчетРасходов.СуммаРегл - РасчетРасходов.ПостояннаяРазница - РасчетРасходов.ВременнаяРазница
	|			КОНЕЦ
	|		- ВЫБОР
	|			КОГДА &ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НеПриниматьКУчетуВключитьВРасходы)
	|					ИЛИ &ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|				ТОГДА 0
	|			ИНАЧЕ РасчетРасходов.ПостояннаяРазница
	|		КОНЕЦ КАК ВременнаяРазница,
	|
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаНоменклатуры,
	|	                                                                             
	|	РасчетРасходов.ИдентификаторСтроки           КАК ИдентификаторФинЗаписи,
	|	&НастройкаХозяйственнойОперации              КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтРасчетРасходов КАК РасчетРасходов
	|
	|ГДЕ
	|	РасчетРасходов.Ссылка = &Ссылка
	|	И (&ПорядокУчетаУУ <> ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|		ИЛИ &ПорядокУчетаБУ <> ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НеПриниматьКУчетуВключитьВРасходы)
	|			И &ПорядокУчетаБУ <> ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|		ИЛИ &ПорядокУчетаНУ <> ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НеПриниматьКУчетуВключитьВРасходы)
	|			И &ПорядокУчетаНУ <> ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы))
	|";
	ЗапросыРегистра.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область НеПриниматьКУчетуВключитьВРасходы // Дт 91 - Кт 08
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|   РасчетРасходов.Подразделение                 КАК Подразделение,
	|	РасчетРасходов.СтатьяРасходов                КАК СтатьяРасходов,
	|	РасчетРасходов.АналитикаРасходов             КАК АналитикаРасходов,
	|	РасчетРасходов.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	РасчетРасходов.Сумма КАК СуммаСНДС,
	|	РасчетРасходов.СуммаБезНДС КАК СуммаБезНДС,
	|	РасчетРасходов.СуммаУпр КАК СуммаБезНДСУпр,
	|
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	|	&ХО_СписаниеНаРасходыСтоимостиНеПринимаяКУчету КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаНоменклатуры,
	|	                                                                             
	|	РасчетРасходов.ИдентификаторСтроки           КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_СписаниеНаРасходыСтоимостиНеПринимаяКУчету КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтРасчетРасходов КАК РасчетРасходов
	|
	|ГДЕ
	|	РасчетРасходов.Ссылка = &Ссылка
	|	И &ПорядокУчетаУУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|   РасчетРасходов.Подразделение                 КАК Подразделение,
	|	РасчетРасходов.СтатьяРасходов                КАК СтатьяРасходов,
	|	РасчетРасходов.АналитикаРасходов             КАК АналитикаРасходов,
	|	РасчетРасходов.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаБезНДСУпр,
	|
	|	РасчетРасходов.СуммаРегл КАК СуммаСНДСРегл,
	|	РасчетРасходов.СуммаРегл КАК СуммаБезНДСРегл,
	|
	|	РасчетРасходов.ПостояннаяРазница КАК ПостояннаяРазница,
	|
	|	(РасчетРасходов.СуммаРегл
	|		- РасчетРасходов.ПостояннаяРазница) КАК ВременнаяРазница,
	|
	|	&ХО_СписаниеНаРасходыСтоимостиНеПринимаяКУчету КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаНоменклатуры,
	|	                                                                             
	|	РасчетРасходов.ИдентификаторСтрокиБУ         КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_СписаниеНаРасходыСтоимостиНеПринимаяКУчету КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтРасчетРасходов КАК РасчетРасходов
	|
	|ГДЕ
	|	РасчетРасходов.Ссылка = &Ссылка
	|
	|	И (&ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НеПриниматьКУчетуВключитьВРасходы)
	|		ИЛИ &ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|   РасчетРасходов.Подразделение                 КАК Подразделение,
	|	РасчетРасходов.СтатьяРасходов                КАК СтатьяРасходов,
	|	РасчетРасходов.АналитикаРасходов             КАК АналитикаРасходов,
	|	РасчетРасходов.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаБезНДСУпр,
	|
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|
	|	0 КАК ПостояннаяРазница,
	|
	|	-(РасчетРасходов.СуммаРегл
	|		- РасчетРасходов.ПостояннаяРазница
	|		- РасчетРасходов.ВременнаяРазница) КАК ВременнаяРазница,
	|
	|	&ХО_СписаниеНаРасходыСтоимостиНеПринимаяКУчету КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаНоменклатуры,
	|	                                                                             
	|	РасчетРасходов.ИдентификаторСтрокиНУ         КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_СписаниеНаРасходыСтоимостиНеПринимаяКУчету КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтРасчетРасходов КАК РасчетРасходов
	|
	|ГДЕ
	|	РасчетРасходов.Ссылка = &Ссылка
	|
	|	И (&ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НеПриниматьКУчетуВключитьВРасходы)
	|		ИЛИ &ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|   &Местонахождение                             КАК Подразделение,
	|	&СтатьяРасходовУУ                            КАК СтатьяРасходов,
	|	&АналитикаРасходовУУ                         КАК АналитикаРасходов,
	|	&НаправлениеДеятельности                     КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	РасчетРасходов.Сумма КАК СуммаСНДС,
	|	РасчетРасходов.СуммаБезНДС КАК СуммаБезНДС,
	|	РасчетРасходов.СуммаУпр КАК СуммаБезНДСУпр,
	|
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	|	&ХО_СписаниеНаРасходыСтоимостиНеПринимаяКУчету КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаНоменклатуры,
	|	                                                                             
	|	РасчетРасходов.ИдентификаторСтроки           КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_СписаниеНаРасходыСтоимостиНеПринимаяКУчету КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтРасчетРасходов КАК РасчетРасходов
	|
	|ГДЕ
	|	РасчетРасходов.Ссылка = &Ссылка
	|	И &ПорядокУчетаУУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|   &Местонахождение                             КАК Подразделение,
	|	&СтатьяРасходовБУ                            КАК СтатьяРасходов,
	|	&АналитикаРасходовБУ                         КАК АналитикаРасходов,
	|	&НаправлениеДеятельности                     КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаБезНДСУпр,
	|
	|	РасчетРасходов.СуммаРегл КАК СуммаСНДСРегл,
	|	РасчетРасходов.СуммаРегл КАК СуммаБезНДСРегл,
	|
	|	РасчетРасходов.ПостояннаяРазница КАК ПостояннаяРазница,
	|
	|	(РасчетРасходов.СуммаРегл
	|		- РасчетРасходов.ПостояннаяРазница) КАК ВременнаяРазница,
	|
	|	&ХО_СписаниеНаРасходыСтоимостиНеПринимаяКУчету КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаНоменклатуры,
	|	                                                                             
	|	РасчетРасходов.ИдентификаторСтрокиБУ         КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_СписаниеНаРасходыСтоимостиНеПринимаяКУчету КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтРасчетРасходов КАК РасчетРасходов
	|
	|ГДЕ
	|	РасчетРасходов.Ссылка = &Ссылка
	|
	|	И &ПорядокУчетаБУ В (
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НеПриниматьКУчетуВключитьВРасходы),
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|   &Местонахождение                             КАК Подразделение,
	|	&СтатьяРасходовНУ                            КАК СтатьяРасходов,
	|	&АналитикаРасходовНУ                         КАК АналитикаРасходов,
	|	&НаправлениеДеятельности                     КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаБезНДСУпр,
	|
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|
	|	0 КАК ПостояннаяРазница,
	|
	|	-(РасчетРасходов.СуммаРегл
	|		- РасчетРасходов.ПостояннаяРазница
	|		- РасчетРасходов.ВременнаяРазница) КАК ВременнаяРазница,
	|
	|	&ХО_СписаниеНаРасходыСтоимостиНеПринимаяКУчету КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаНоменклатуры,
	|	                                                                             
	|	РасчетРасходов.ИдентификаторСтрокиНУ         КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_СписаниеНаРасходыСтоимостиНеПринимаяКУчету КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтРасчетРасходов КАК РасчетРасходов
	|
	|ГДЕ
	|	РасчетРасходов.Ссылка = &Ссылка
	|
	|	И &ПорядокУчетаНУ В (
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НеПриниматьКУчетуВключитьВРасходы),
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеПриниматьКУчетуВключитьВРасходы))
	|
	|	И НЕ &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации))
	|";
	ЗапросыРегистра.Добавить(ТекстЗапроса);
	#КонецОбласти

	ТекстЗапроса = СтрСоединить(ЗапросыРегистра, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ПанельСправочниковВнеоборотныеАктивы

Процедура ПриСозданииНаСервере_ПанельСправочниковВнеоборотныеАктивы(Форма) Экспорт

	//++ Локализация
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Форма.Элементы.ОткрытьГруппыФинансовогоУчетаВнеоборотныхАктивов.РасширеннаяПодсказка.Заголовок = 
			НСтр("ru = 'Классификация внеоборотных активов по правилам отражения в бухгалтерском учете.'");
	КонецЕсли; 
	//-- Локализация
	
КонецПроцедуры

Процедура УправлениеЭлементами_ПанельСправочниковВнеоборотныеАктивы(Форма) Экспорт
	
	//++ Локализация

	Элементы = Форма.Элементы;
	
	Элементы.ОткрытьКлассификаторЕНАОФ.Видимость = ПравоДоступа("Просмотр", Метаданные.Справочники.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов);
	Элементы.ОткрытьКлассификаторОКОФ.Видимость = ПравоДоступа("Просмотр", Метаданные.Справочники.ОбщероссийскийКлассификаторОсновныхФондов);
	Элементы.ОткрытьГодовыеГрафикиАмортизацииОС.Видимость = ПравоДоступа("Просмотр", Метаданные.Справочники.ГодовыеГрафикиАмортизацииОС);
	Элементы.ОткрытьСтавкиТранспортногоНалога.Видимость = ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.СтавкиТранспортногоНалога);
	Элементы.ОткрытьКатегорииЭксплуатации.Видимость = ПравоДоступа("Просмотр", Метаданные.Справочники.КатегорииЭксплуатации);
	
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ПанельАдминистрированияКА

Процедура СохранитьЗначениеРеквизита_ПанельАдминистрированияКА(Форма, РеквизитПутьКДанным, КонстантаИмя) Экспорт

	//++ Локализация
	
	НаборКонстант = Форма.НаборКонстант;
	
	Если РеквизитПутьКДанным = "УчетВнеоборотныхАктивов" Тогда
		
		Если Форма.УчетВнеоборотныхАктивов = "2_2" Тогда
			
			КонстантаИмя = "ИспользоватьВнеоборотныеАктивы2_2";
			
			НаборКонстант.ИспользоватьВнеоборотныеАктивы2_2 = Истина;
			НаборКонстант.ИспользоватьВнеоборотныеАктивы2_4 = Ложь;
			НаборКонстант.ДатаНачалаУчетаВнеоборотныхАктивов2_4 = '000101010000';
			
		ИначеЕсли Форма.УчетВнеоборотныхАктивов = "2_4" Тогда
			
			КонстантаИмя = "ИспользоватьВнеоборотныеАктивы2_4";
			
			Если НаборКонстант.ИспользоватьВнеоборотныеАктивы2_2 Тогда
				Если ЗначениеЗаполнено(Форма.ДоступностьУчета24.МинимальнаяДатаНачалаУчета2_4) Тогда
					НаборКонстант.ДатаНачалаУчетаВнеоборотныхАктивов2_4 = НачалоМесяца(Форма.ДоступностьУчета24.МинимальнаяДатаНачалаУчета2_4);
				Иначе
					НаборКонстант.ДатаНачалаУчетаВнеоборотныхАктивов2_4 = НачалоМесяца(ДобавитьМесяц(ТекущаяДатаСеанса(), 1));
				КонецЕсли; 
			Иначе
				НаборКонстант.ДатаНачалаУчетаВнеоборотныхАктивов2_4 = '000101010000';
			КонецЕсли; 
			
		Иначе
			
			КонстантаИмя = "ИспользоватьВнеоборотныеАктивы2_2";
			НаборКонстант.ИспользоватьВнеоборотныеАктивы2_2 = Ложь;
			НаборКонстант.ДатаНачалаУчетаВнеоборотныхАктивов2_4 = '000101010000';
			
		КонецЕсли;
		
		Константы.ИспользоватьВнеоборотныеАктивы2_2.Установить(НаборКонстант.ИспользоватьВнеоборотныеАктивы2_2);
		Константы.ИспользоватьВнеоборотныеАктивы2_4.Установить(НаборКонстант.ИспользоватьВнеоборотныеАктивы2_4);
		Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Установить(НаборКонстант.ДатаНачалаУчетаВнеоборотныхАктивов2_4);
		
		Если НаборКонстант.ОтображатьВнеоборотныеАктивы2_2 И НЕ НаборКонстант.ИспользоватьВнеоборотныеАктивы2_2 Тогда
			НаборКонстант.ОтображатьВнеоборотныеАктивы2_2 = Ложь;
			Константы.ОтображатьВнеоборотныеАктивы2_2.Установить(Ложь);
		ИначеЕсли НЕ НаборКонстант.ОтображатьВнеоборотныеАктивы2_2 И НаборКонстант.ИспользоватьВнеоборотныеАктивы2_2 Тогда
			НаборКонстант.ОтображатьВнеоборотныеАктивы2_2 = Истина;
			Константы.ОтображатьВнеоборотныеАктивы2_2.Установить(Истина);
		КонецЕсли; 
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область СтандартныеПодсистемы

// Определяет список объектов конфигурации, в модулях менеджеров которых предусмотрена процедура 
// ДобавитьКомандыСозданияНаОсновании, формирующая команды создания на основании объектов.
// Синтаксис процедуры ДобавитьКомандыСозданияНаОсновании см. в документации.
//
// Параметры:
//   Объекты - Массив - объекты метаданных (ОбъектМетаданных) с командами создания на основании.
//
// Пример:
//	Объекты.Добавить(Метаданные.Справочники.Организации);
//   
Процедура ПриОпределенииОбъектовСКомандамиСозданияНаОсновании(Объекты) Экспорт

	//++ Локализация
	
	// 2.2
	Объекты.Добавить(Метаданные.Документы.АмортизацияНМА);
	Объекты.Добавить(Метаданные.Документы.АмортизацияОС);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковВнеоборотныхАктивов);
	Объекты.Добавить(Метаданные.Документы.ВозвратОСИзАренды);
	Объекты.Добавить(Метаданные.Документы.ИзменениеПараметровНМА);
	Объекты.Добавить(Метаданные.Документы.ИзменениеПараметровОС);
	Объекты.Добавить(Метаданные.Документы.ИзменениеСостоянияОС);
	Объекты.Добавить(Метаданные.Документы.ИзменениеСпособаОтраженияИмущественныхНалогов);
	Объекты.Добавить(Метаданные.Документы.МодернизацияОС);
	Объекты.Добавить(Метаданные.Документы.ПередачаОСВАренду);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеОС);
	Объекты.Добавить(Метаданные.Документы.ПереоценкаНМА);
	Объекты.Добавить(Метаданные.Документы.ПереоценкаОС);
	Объекты.Добавить(Метаданные.Документы.ПодготовкаКПередачеНМА);
	Объекты.Добавить(Метаданные.Документы.ПодготовкаКПередачеОС);
	Объекты.Добавить(Метаданные.Документы.ПринятиеКУчетуНМА);
	Объекты.Добавить(Метаданные.Документы.ПринятиеКУчетуОС);
	Объекты.Добавить(Метаданные.Документы.СписаниеНМА);
	Объекты.Добавить(Метаданные.Документы.СписаниеОС);
	
	
	// 2.4
	Объекты.Добавить(Метаданные.Документы.ИнвентаризацияНМА);
	Объекты.Добавить(Метаданные.Документы.ИнвентаризацияОС);
	Объекты.Добавить(Метаданные.Документы.ОтчетОператораСистемыПлатон);
	
	Объекты.Добавить(Метаданные.Документы.СнятиеСРегистрацииЗемельныхУчастков);
	Объекты.Добавить(Метаданные.Документы.СнятиеСРегистрацииТранспортныхСредств);
	Объекты.Добавить(Метаданные.Документы.ПараметрыНачисленияЗемельногоНалога);
	Объекты.Добавить(Метаданные.Документы.ПараметрыНачисленияТранспортногоНалога);
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// см. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.
//
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт

	//++ Локализация
	
	#Область СверкаРасчетаАмортизации
	
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СверкаРасчетаАмортизации);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеОтчета.ФункциональныеОпции = "ИспользоватьВнеоборотныеАктивы2_2";
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ОписаниеВарианта.Описание = НСтр("ru = 'Показывает расхождения в расчете амортизации версии 2.2 и 2.4.
                                      |Используется только для тестирования в не рабочей информационной базе.'");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	
	#КонецОбласти
	
	#Область ВедомостьПоОС
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоОС);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие сводные данные о стоимости и амортизации основных средств?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоОС");
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие сводные данные о стоимости и амортизации основных средств?'");
	#КонецОбласти
	
	#Область ИнвентарнаяКнигаОС
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИнвентарнаяКнигаОС);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Отчет предназначен для учета наличия объектов основных средств, а также их движения внутри организации в соответствии с формой ОС-6б'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru = 'Наименование организации
		|Наименование структурного подразделения
		|Наименование объектов основных средств
		|Инвентарный номер
		|Поступило
		|Первоначальная стоимость
		|Срок полезного использования
		|Сумма начисленной амортизации (износа)
		|Остаточная стоимость
		|Переоценка
		|Внутренние перемещения, выбытие (списание)'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru = 'Период
		|Организация
		|Подразделение
		|МОЛ
		|Ответственный'");
	#КонецОбласти
	
	#Область СправкаРасчетАмортизационнойПремии
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетАмортизационнойПремии);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Наименование = НСтр("ru = 'Справка-расчет амортизационной премии'");
	ОписаниеВарианта.Описание = НСтр("ru = 'Сумма амортизационной премии, принятая в состав расходов текущего периода в соответствии со ст. 259 НК РФ.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьРеглУчет");
	#КонецОбласти
	
	#Область ВедомостьПоОС2_4
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоОС2_4);
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие сводные данные о стоимости и амортизации основных средств?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоОС");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие сводные данные о стоимости и амортизации основных средств?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоОС_БУ");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие сводные данные о стоимости и амортизации основных средств в бухгалтерском учете?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоОС_НУ");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие сводные данные о стоимости и амортизации основных средств в налоговом учете?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоОС_БУ_НУ");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие сводные данные о стоимости и амортизации основных средств в бухгалтерском и налоговом учетах?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоОС_УУ");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие сводные данные о стоимости и амортизации основных средств в управленческом учете?'");
	#КонецОбласти
	
	#Область ВедомостьПоНМА2_4
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоНМА2_4);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие сводные данные о стоимости и амортизации НМА и расходов на НИОКР?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоНМА_Основной");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие сводные данные о стоимости и амортизации НМА и расходов на НИОКР?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоНМА_БУ");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие сводные данные о стоимости и амортизации НМА и расходов на НИОКР в бухгалтерском учете?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоНМА_НУ");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие сводные данные о стоимости и амортизации НМА и расходов на НИОКР в налоговом учете?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоНМА_БУ_НУ");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие сводные данные о стоимости и амортизации НМА и расходов на НИОКР в бухгалтерском и налоговом учетах?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоНМА_УУ");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие сводные данные о стоимости и амортизации НМА и расходов на НИОКР в управленческом учете?'");
	#КонецОбласти
	
	#Область СправкаРасчетАмортизацииОС2_4
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетАмортизацииОС2_4);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'По какой формуле рассчитана амортизация?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СправкаРасчетАмортизацииОС");
	ОписаниеВарианта.Описание = НСтр("ru = 'По какой формуле рассчитана амортизация?'");
	
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СправкаРасчетПоДокументуАмортизацииОСКонтекст");
	#КонецОбласти
	
	#Область СправкаРасчетАмортизацииНМА2_4
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетАмортизацииНМА2_4);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'По какой формуле рассчитана амортизация?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СправкаРасчетАмортизацииНМА");
	ОписаниеВарианта.Описание = НСтр("ru = 'По какой формуле рассчитана амортизация?'");
	
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "СправкаРасчетПоДокументуАмортизацииНМАКонтекст");
	#КонецОбласти
	
	#Область СправкаРасчетПризнаниеРасходовПоАрендованнымОС
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетПризнаниеРасходовПоАрендованнымОС);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Наименование = НСтр("ru = 'Справка-расчет ""Признание расходов по арендованным ОС""'");
	ОписаниеВарианта.Описание = НСтр("ru = 'Информация о расходах, связанных с арендованными основными средствами.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьВнеоборотныеАктивы2_2");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьВнеоборотныеАктивы2_4");
	#КонецОбласти
	
	#Область РеестрОС
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РеестрОС);
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Какие основные средства числятся в организации?'");
	#КонецОбласти
	
	#Область СправкаРасчетПризнанияРасходовПоНИОКР
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетПризнанияРасходовПоНИОКР);
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'По какой формуле рассчитано признание расходов по исследованиям и разработкам?'");
	#КонецОбласти
	
	#Область ПерерасчетИмущественныхНалогов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПерерасчетИмущественныхНалогов);
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru = 'Сколько нужно доплатить или зачесть налогов в результате исправлений?'");
	#КонецОбласти

	//-- Локализация
	
КонецПроцедуры

Функция ТребуетсяЗагрузитьТаблицыДвижений(ИмяРегистра) Экспорт

	//++ Локализация
	
	//++ НЕ УТ
	Если ИмяРегистра = "ОтражениеДокументовВРеглУчете" Тогда
		// Формирование движений выполняется процедурой РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению().
		Возврат Ложь;
	КонецЕсли;
	//-- НЕ УТ

	//-- Локализация
	
	Возврат Истина;
	
КонецФункции

// 
// Параметры:
// 	Объекты - см. ВнеоборотныеАктивы.ОпределитьОбъектыСКомандамиОтчетов.Объекты 
Процедура ОпределитьОбъектыСКомандамиОтчетов(Объекты) Экспорт

	//++ Локализация
	
	Объекты.Добавить(Метаданные.Документы.АмортизацияНМА);
	Объекты.Добавить(Метаданные.Документы.АмортизацияОС);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковВнеоборотныхАктивов);
	Объекты.Добавить(Метаданные.Документы.ВозвратОСИзАренды);
	Объекты.Добавить(Метаданные.Документы.ИзменениеПараметровНМА);
	Объекты.Добавить(Метаданные.Документы.ИзменениеПараметровОС);
	Объекты.Добавить(Метаданные.Документы.ИзменениеСостоянияОС);
	Объекты.Добавить(Метаданные.Документы.ИзменениеСпособаОтраженияИмущественныхНалогов);
	Объекты.Добавить(Метаданные.Документы.ИнвентаризацияНМА);
	Объекты.Добавить(Метаданные.Документы.ИнвентаризацияОС);
	Объекты.Добавить(Метаданные.Документы.МодернизацияОС);
	Объекты.Добавить(Метаданные.Документы.СнятиеСРегистрацииЗемельныхУчастков);
	Объекты.Добавить(Метаданные.Документы.СнятиеСРегистрацииТранспортныхСредств);
	Объекты.Добавить(Метаданные.Документы.ОтчетОператораСистемыПлатон);
	Объекты.Добавить(Метаданные.Документы.ПередачаОСВАренду);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеОС);
	Объекты.Добавить(Метаданные.Документы.ПереоценкаНМА);
	Объекты.Добавить(Метаданные.Документы.ПереоценкаОС);
	Объекты.Добавить(Метаданные.Документы.ПерерасчетИмущественныхНалогов);
	Объекты.Добавить(Метаданные.Документы.ПодготовкаКПередачеНМА);
	Объекты.Добавить(Метаданные.Документы.ПодготовкаКПередачеОС);
	Объекты.Добавить(Метаданные.Документы.ПринятиеКУчетуНМА);
	Объекты.Добавить(Метаданные.Документы.ПринятиеКУчетуОС);
	Объекты.Добавить(Метаданные.Документы.ПараметрыНачисленияЗемельногоНалога);
	Объекты.Добавить(Метаданные.Документы.ПараметрыНачисленияНалогаНаИмущество);
	Объекты.Добавить(Метаданные.Документы.ПараметрыНачисленияТранспортногоНалога);
	Объекты.Добавить(Метаданные.Документы.СписаниеНМА);
	Объекты.Добавить(Метаданные.Документы.СписаниеОС);
	
	Объекты.Добавить(Метаданные.Обработки.ЖурналДокументовНМА);
	Объекты.Добавить(Метаданные.Обработки.ЖурналДокументовОС);
	Объекты.Добавить(Метаданные.Обработки.ЖурналДокументовИсправлениеИмущественныхНалогов);
	
	
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
// 	ТекстыТекущегоЗапроса - Массив -
Процедура ДополнитьТекстЗапросаТаблицаПрочиеДоходыПриПереоценке(ТекстыТекущегоЗапроса) Экспорт

	//++ Локализация
	
	#Область ПризнаниеДоходовОтЦелевогоФинансирования
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	&Период                                        КАК Период,
	|	&Организация                                   КАК Организация,
	|	&Подразделение                                 КАК Подразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	&ХО_УменьшениеНакопленнойАмортизации           КАК ХозяйственнаяОперация,
	|	&СтатьяДоходов                                 КАК СтатьяДоходов,
	|	&АналитикаДоходов                              КАК АналитикаДоходов,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУпр,
	|
	|	ТаблицаПереоценки.СуммаУценкиСтоимостиЦФ 
	|		- ВЫБОР 
	|			КОГДА ТаблицаПереоценки.НачислятьИзнос
	|				ТОГДА 0
	|			КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииЦФ > 0
	|				ТОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииЦФ
	|			ИНАЧЕ 0 
	|		КОНЕЦ КАК СуммаРегл,
	|
	|	ТаблицаПереоценки.ИдентификаторФинЗаписи      КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_УменьшениеНакопленнойАмортизации КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	ТаблицаПереоценки.СуммаУценкиСтоимостиЦФ > 0
	|	И &ИспользоватьУчетПрочихДоходовРасходовРегл";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
// 	СписокЗапросовОбъединение - Массив
Процедура ДополнитьТекстЗапросаЕстьУчетВнеоборотныхАктивов(СписокЗапросовОбъединение) Экспорт

	//++ Локализация
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыНачисленияТранспортногоНалога КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыНачисленияЗемельногоНалога КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ПоступлениеАрендованныхОС КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ВыбытиеАрендованныхОС КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ИнвентаризацияОС КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ЗаключениеДоговораАренды КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
// 	СписокЗапросовОбъединение - Массив
Процедура ДополнитьТекстЗапросаЕстьУчетВнеоборотныхАктивов2_4(СписокЗапросовОбъединение) Экспорт

	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииНМАБУ КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБУ КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ИнвентаризацияНМА КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	
	//-- Локализация
	
КонецПроцедуры
 
// 
// Параметры:
// 	Период - Дата -
// 	МассивОСиНМА - Массив из Массив -
Процедура ДополнитьГруппыОрганизацийОСиНМА(Период, МассивОСиНМА) Экспорт

	//++ Локализация
	
	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Период) Тогда
		// Поддержка только 2.4
		Возврат;
	КонецЕсли;
	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("Период", Период);
	ВнеоборотныеАктивыСлужебный.ДополнитьПараметрамиУчетаВнеоборотныхАктивов(ПараметрыРасчета);
	
	СписокЗапросов = Новый Массив;
	
	#Область ПеремещенияМеждуОрганизациями
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ТабличнаяЧасть.ОсновноеСредство КАК ОбъектУчета
	|ПОМЕСТИТЬ ПеремещенияМеждуОрганизациями
	|ИЗ
	|	Документ.ПеремещениеОС2_4 КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС2_4.ОС КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ТаблицаДокумента.Ссылка)
	|ГДЕ
	|	ТаблицаДокумента.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.ОрганизацияПолучатель,
	|	ТабличнаяЧасть.НематериальныйАктив
	|ИЗ
	|	Документ.ПеремещениеНМА2_4 КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеНМА2_4.НМА КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ТаблицаДокумента.Ссылка)
	|ГДЕ
	|	ТаблицаДокумента.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеНМАвПодразделениеВыделенноеНаБаланс)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчета
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчета.ОсновноеСредство КАК ОбъектУчета,
	|	ПорядокУчета.Организация КАК Организация,
	|	ПорядокУчета.СпособОтраженияРасходовБУ КАК СпособОтраженияРасходов,
	|	ПорядокУчета.ОрганизацияПолучательРасходов КАК ОрганизацияПолучатель
	|ПОМЕСТИТЬ ПорядокУчета
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(&КонецПредыдущегоМесяца, ДатаИсправления = ДАТАВРЕМЯ(1,1,1)) КАК ПорядокУчета
	|ГДЕ
	|	(ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию
	|			ИЛИ НЕ ПорядокУчета.СпособОтраженияРасходовБУ В (
	|					НЕОПРЕДЕЛЕНО,
	|					ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС.ПустаяСсылка),
	|					ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка)))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчета.ОсновноеСредство КАК ОбъектУчета,
	|	ПорядокУчета.Организация КАК Организация,
	|	ПорядокУчета.СпособОтраженияРасходовНУ КАК СпособОтраженияРасходов,
	|	ПорядокУчета.ОрганизацияПолучательРасходов КАК ОрганизацияПолучатель
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(&КонецПредыдущегоМесяца, ДатаИсправления = ДАТАВРЕМЯ(1,1,1)) КАК ПорядокУчета
	|ГДЕ
	|	НЕ ПорядокУчета.СпособОтраженияРасходовНУ В (
	|					НЕОПРЕДЕЛЕНО,
	|					ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС.ПустаяСсылка),
	|					ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчета.ОсновноеСредство,
	|	ПорядокУчета.Организация,
	|	ПорядокУчета.СпособОтраженияРасходов,
	|	ПорядокУчета.ОрганизацияПолучательРасходов
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(&КонецПредыдущегоМесяца, ДатаИсправления = ДАТАВРЕМЯ(1,1,1)) КАК ПорядокУчета
	|ГДЕ
	|	(ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию
	|			ИЛИ НЕ ПорядокУчета.СпособОтраженияРасходов В (
	|					НЕОПРЕДЕЛЕНО,
	|					ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС.ПустаяСсылка),
	|					ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка)))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчета.ОсновноеСредство,
	|	ПорядокУчета.Организация,
	|	ПорядокУчета.СпособОтраженияРасходов,
	|	ПорядокУчета.ОрганизацияПолучательРасходов
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчета
	|ГДЕ
	|	ПорядокУчета.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ПорядокУчета.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|	И (ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию
	|			ИЛИ НЕ ПорядокУчета.СпособОтраженияРасходов В (
	|					НЕОПРЕДЕЛЕНО,
	|					ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС.ПустаяСсылка),
	|					ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка)))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчета.НематериальныйАктив,
	|	ПорядокУчета.Организация,
	|	ПорядокУчета.СпособОтраженияРасходовБУ,
	|	ПорядокУчета.ОрганизацияПолучательРасходов
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(&КонецПредыдущегоМесяца, ) КАК ПорядокУчета
	|ГДЕ
	|	(ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию
	|			ИЛИ НЕ ПорядокУчета.СпособОтраженияРасходовБУ В (
	|					НЕОПРЕДЕЛЕНО,
	|					ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА.ПустаяСсылка),
	|					ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА2_4.ПустаяСсылка)))
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчета.НематериальныйАктив,
	|	ПорядокУчета.Организация,
	|	ПорядокУчета.СпособОтраженияРасходовНУ,
	|	ПорядокУчета.ОрганизацияПолучательРасходов
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(&КонецПредыдущегоМесяца, ) КАК ПорядокУчета
	|ГДЕ
	|	НЕ ПорядокУчета.СпособОтраженияРасходовНУ В (
	|					НЕОПРЕДЕЛЕНО,
	|					ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА.ПустаяСсылка),
	|					ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА2_4.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчета.НематериальныйАктив,
	|	ПорядокУчета.Организация,
	|	ПорядокУчета.СпособОтраженияРасходов,
	|	ПорядокУчета.ОрганизацияПолучательРасходов
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(&КонецПредыдущегоМесяца, ) КАК ПорядокУчета
	|ГДЕ
	|	(ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию
	|			ИЛИ НЕ ПорядокУчета.СпособОтраженияРасходов В (
	|						НЕОПРЕДЕЛЕНО,
	|						ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА.ПустаяСсылка),
	|						ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА2_4.ПустаяСсылка)))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчета.НематериальныйАктив,
	|	ПорядокУчета.Организация,
	|	ПорядокУчета.СпособОтраженияРасходов,
	|	ПорядокУчета.ОрганизацияПолучательРасходов
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчета
	|ГДЕ
	|	ПорядокУчета.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И (ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию
	|			ИЛИ НЕ ПорядокУчета.СпособОтраженияРасходов В (
	|						НЕОПРЕДЕЛЕНО,
	|						ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА.ПустаяСсылка),
	|						ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА2_4.ПустаяСсылка)))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СпособОтраженияРасходов";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СпособыОтраженияРасходов
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчета.СпособОтраженияРасходов КАК СпособОтраженияРасходов
	|ПОМЕСТИТЬ ПорядокУчетаСоСпособомОтраженияРасходов
	|ИЗ
	|	ПорядокУчета КАК ПорядокУчета
	|ГДЕ
	|	ПорядокУчета.СпособОтраженияРасходов <> НЕОПРЕДЕЛЕНО
	|		И ПорядокУчета.СпособОтраженияРасходов <> НЕОПРЕДЕЛЕНО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СпособОтраженияРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАмортизация.Ссылка КАК СпособОтраженияРасходов,
	|	ТаблицаАмортизация.ОрганизацияПолучательРасходов КАК ОрганизацияПолучатель
	|ПОМЕСТИТЬ СпособыОтраженияРасходов
	|ИЗ
	|	Документ.ИзменениеПараметровОС2_4.Амортизация КАК ТаблицаАмортизация
	|ГДЕ
	|	ТаблицаАмортизация.Ссылка В
	|			(ВЫБРАТЬ
	|				СпособыОтраженияРасходов.СпособОтраженияРасходов
	|			ИЗ
	|				ПорядокУчетаСоСпособомОтраженияРасходов КАК СпособыОтраженияРасходов)
	|	И ТаблицаАмортизация.ПередаватьРасходыВДругуюОрганизацию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаАмортизация.Ссылка,
	|	ТаблицаАмортизация.ОрганизацияПолучательРасходов
	|ИЗ
	|	Документ.ИзменениеПараметровОС2_4.АмортизационнаяПремия КАК ТаблицаАмортизация
	|ГДЕ
	|	ТаблицаАмортизация.Ссылка В
	|			(ВЫБРАТЬ
	|				СпособыОтраженияРасходов.СпособОтраженияРасходов
	|			ИЗ
	|				ПорядокУчетаСоСпособомОтраженияРасходов КАК СпособыОтраженияРасходов)
	|	И ТаблицаАмортизация.ПередаватьРасходыВДругуюОрганизацию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаАмортизация.Ссылка,
	|	ТаблицаАмортизация.ОрганизацияПолучательРасходов
	|ИЗ
	|	Документ.ИзменениеПараметровНМА2_4.АмортизационныеРасходы КАК ТаблицаАмортизация
	|ГДЕ
	|	ТаблицаАмортизация.Ссылка В
	|			(ВЫБРАТЬ
	|				СпособыОтраженияРасходов.СпособОтраженияРасходов
	|			ИЗ
	|				ПорядокУчетаСоСпособомОтраженияРасходов КАК СпособыОтраженияРасходов)
	|	И ТаблицаАмортизация.ПередаватьРасходыВДругуюОрганизацию";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПакетыАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДанных.Организация КАК Организация,
	|	ТаблицаДанных.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ТаблицаДанных.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ ПакетыАмортизации
	|ИЗ
	|	ПеремещенияМеждуОрганизациями КАК ТаблицаДанных
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДанных.Организация,
	|	ТаблицаДанных.ОрганизацияПолучатель,
	|	ТаблицаДанных.ОбъектУчета
	|ИЗ
	|	ПорядокУчета КАК ТаблицаДанных
	|ГДЕ
	|	(ТаблицаДанных.СпособОтраженияРасходов = НЕОПРЕДЕЛЕНО
	|			ИЛИ ТаблицаДанных.СпособОтраженияРасходов = НЕОПРЕДЕЛЕНО)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДанных.Организация,
	|	СпособыОтраженияРасходов.ОрганизацияПолучатель,
	|	ТаблицаДанных.ОбъектУчета
	|ИЗ
	|	ПорядокУчета КАК ТаблицаДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО (СпособыОтраженияРасходов.СпособОтраженияРасходов = ТаблицаДанных.СпособОтраженияРасходов)
	|ГДЕ
	|	ТаблицаДанных.СпособОтраженияРасходов <> НЕОПРЕДЕЛЕНО
	|	И ТаблицаДанных.СпособОтраженияРасходов <> НЕОПРЕДЕЛЕНО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета,
	|	Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СписокОбъектовУчета
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОбъектУчета
	|ПОМЕСТИТЬ СписокОбъектовУчета
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|			&КонецПредыдущегоМесяца,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|			И (Организация, ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					ПакетыАмортизации.Организация,
	|					ПакетыАмортизации.ОбъектУчета
	|				ИЗ
	|					ПакетыАмортизации КАК ПакетыАмортизации)) КАК ПорядокУчетаОС
	|
	|ГДЕ
	|	ПорядокУчетаОС.НачислятьАмортизациюУУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОбъектУчета
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчетаОС
	|
	|ГДЕ
	|	ПорядокУчетаОС.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ПорядокУчетаОС.Активность
	|
	|	И ПорядокУчетаОС.НачислятьАмортизациюУУ
	|
	|	И ТИПЗНАЧЕНИЯ(ПорядокУчетаОС.Регистратор) В (
	|				ТИП(Документ.ПринятиеКУчетуОС2_4),
	|				ТИП(Документ.РазукомплектацияОС),
	|				ТИП(Документ.ОбъединениеОС))
	|
	|	И (ПорядокУчетаОС.Организация, ПорядокУчетаОС.ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					ПакетыАмортизации.Организация,
	|					ПакетыАмортизации.ОбъектУчета
	|				ИЗ
	|					ПакетыАмортизации КАК ПакетыАмортизации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОбъектУчета
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&КонецПредыдущегоМесяца,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|			И (Организация, ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					ПакетыАмортизации.Организация,
	|					ПакетыАмортизации.ОбъектУчета
	|				ИЗ
	|					ПакетыАмортизации КАК ПакетыАмортизации)) КАК ПорядокУчетаОС
	|ГДЕ
	|	(ПорядокУчетаОС.НачислятьАмортизациюБУ
	|		ИЛИ ПорядокУчетаОС.НачислятьАмортизациюНУ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОбъектУчета
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОС
	|
	|ГДЕ
	|	ПорядокУчетаОС.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ПорядокУчетаОС.Активность
	|
	|	И (ПорядокУчетаОС.НачислятьАмортизациюБУ
	|		ИЛИ ПорядокУчетаОС.НачислятьАмортизациюНУ)
	|
	|	И ТИПЗНАЧЕНИЯ(ПорядокУчетаОС.Регистратор) В (
	|				ТИП(Документ.ПринятиеКУчетуОС2_4),
	|				ТИП(Документ.РазукомплектацияОС),
	|				ТИП(Документ.ОбъединениеОС))
	|
	|	И (ПорядокУчетаОС.Организация, ПорядокУчетаОС.ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					ПакетыАмортизации.Организация,
	|					ПакетыАмортизации.ОбъектУчета
	|				ИЗ
	|					ПакетыАмортизации КАК ПакетыАмортизации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаНМА.НематериальныйАктив КАК ОбъектУчета
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(
	|			&КонецПредыдущегоМесяца,
	|			(Организация, НематериальныйАктив) В
	|				(ВЫБРАТЬ
	|					ПакетыАмортизации.Организация,
	|					ПакетыАмортизации.ОбъектУчета
	|				ИЗ
	|					ПакетыАмортизации КАК ПакетыАмортизации)) КАК ПорядокУчетаНМА
	|
	|ГДЕ
	|	ПорядокУчетаНМА.НачислятьАмортизациюУУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаНМА.НематериальныйАктив КАК ОбъектУчета
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчетаНМА
	|
	|ГДЕ
	|	ПорядокУчетаНМА.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ПорядокУчетаНМА.Активность
	|
	|	И ПорядокУчетаНМА.НачислятьАмортизациюУУ
	|
	|	И ТИПЗНАЧЕНИЯ(ПорядокУчетаНМА.Регистратор) = ТИП(Документ.ПринятиеКУчетуНМА2_4)
	|
	|	И (ПорядокУчетаНМА.Организация, ПорядокУчетаНМА.НематериальныйАктив) В
	|				(ВЫБРАТЬ
	|					ПакетыАмортизации.Организация,
	|					ПакетыАмортизации.ОбъектУчета
	|				ИЗ
	|					ПакетыАмортизации КАК ПакетыАмортизации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаНМА.НематериальныйАктив КАК ОбъектУчета
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|			&КонецПредыдущегоМесяца,
	|			(Организация, НематериальныйАктив) В
	|				(ВЫБРАТЬ
	|					ПакетыАмортизации.Организация,
	|					ПакетыАмортизации.ОбъектУчета
	|				ИЗ
	|					ПакетыАмортизации КАК ПакетыАмортизации)) КАК ПорядокУчетаНМА
	|ГДЕ
	|	(ПорядокУчетаНМА.НачислятьАмортизациюБУ
	|		ИЛИ ПорядокУчетаНМА.НачислятьАмортизациюНУ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаНМА.НематериальныйАктив КАК ОбъектУчета
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМА
	|
	|ГДЕ
	|	ПорядокУчетаНМА.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ПорядокУчетаНМА.Активность
	|
	|	И (ПорядокУчетаНМА.НачислятьАмортизациюБУ
	|		ИЛИ ПорядокУчетаНМА.НачислятьАмортизациюНУ)
	|
	|	И ТИПЗНАЧЕНИЯ(ПорядокУчетаНМА.Регистратор) = ТИП(Документ.ПринятиеКУчетуНМА2_4)
	|
	|	И (ПорядокУчетаНМА.Организация, ПорядокУчетаНМА.НематериальныйАктив) В
	|				(ВЫБРАТЬ
	|					ПакетыАмортизации.Организация,
	|					ПакетыАмортизации.ОбъектУчета
	|				ИЗ
	|					ПакетыАмортизации КАК ПакетыАмортизации)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область Выборка
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДанных.Организация КАК Организация,
	|	ТаблицаДанных.ОрганизацияПолучатель КАК ОрганизацияПолучатель
	|ИЗ
	|	ПакетыАмортизации КАК ТаблицаДанных
	|ГДЕ
	|	ТаблицаДанных.ОбъектУчета В
	|			(ВЫБРАТЬ
	|				СписокОбъектовУчета.ОбъектУчета
	|			ИЗ
	|				СписокОбъектовУчета КАК СписокОбъектовУчета)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	ВнеоборотныеАктивы.УстановитьПараметрыЗапросаДляРасчетаАмортизации(Запрос, ПараметрыРасчета);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	НомерГруппы  = -1;
	
	Пока Выборка.Следующий() Цикл
		
		НомерГруппы = НомерГруппы + 1;
		МассивОСиНМА.Добавить(Новый Массив);
		
		МассивОСиНМА[НомерГруппы].Добавить(Выборка.Организация);
		МассивОСиНМА[НомерГруппы].Добавить(Выборка.ОрганизацияПолучатель);
		
	КонецЦикла;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьПараметрыЗапросаДляРасчетаАмортизации(Запрос, ПараметрыРасчета) Экспорт

	//++ Локализация
	
	Запрос.УстановитьПараметр("МинимальнаяСуммаВР", МинимальнаяСуммаВР());
	
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
// 	ПустыеСпособыОтраженияРасходов - Массив -
Процедура ДополнитьПустыеСпособыОтраженияРасходов(ПустыеСпособыОтраженияРасходов) Экспорт
	
	//++ Локализация
	ПустыеСпособыОтраженияРасходов.Добавить(Документы.ИзменениеПараметровОС.ПустаяСсылка());
	ПустыеСпособыОтраженияРасходов.Добавить(Документы.ИзменениеПараметровНМА.ПустаяСсылка());
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТипыДокументовКоторыеМогутИзменитьСтоимость(ТипыОбъектов) Экспорт

	//++ Локализация
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("ПоступлениеАрендованныхОС", Ложь, ТипыОбъектов);
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("ПередачаОСВАренду2_4", Ложь, ТипыОбъектов);
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("РегламентнаяОперация", Ложь, ТипыОбъектов);
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТипыДокументовКоторыеИзменяютСтоимостьВКонцеМесяца(ТипыОбъектов) Экспорт

	//++ Локализация
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("РегламентнаяОперация", Ложь, ТипыОбъектов);
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТипыДокументовДвиженияКоторыхНужноПеренестиНаНачалоМесяца(ТипыОбъектов) Экспорт

	//++ Локализация
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("РаспределениеНДС", Ложь, ТипыОбъектов);
	//-- Локализация
	
КонецПроцедуры
 
Процедура ДанныеВыбораНематериальныхАктивов2_2(Параметры) Экспорт

	//++ Локализация
	
	Если Параметры.Свойство("Контекст")Тогда
		
		ИндексЗапятой = СтрНайти(Параметры.Контекст, ",");
		Контекст = Параметры.Контекст;
		Если ИндексЗапятой <> 0 Тогда
			Контекст = Сред(Контекст, 1, ИндексЗапятой-1);
		КонецЕсли;
		
		Если Контекст = "БУ"
			И (ОбщегоНазначенияУТКлиентСервер.СтруктураСодержитКлючи(Параметры, "ТекущийРегистратор, ДатаСведений")
				Или Параметры.Свойство("Отбор")
				И ОбщегоНазначенияУТКлиентСервер.СтруктураСодержитКлючи(Параметры.Отбор, "БУОрганизация, БУСостояние")) Тогда
			
			Параметры.Отбор.Вставить("Ссылка", ЭлементыНМАПоОтборуБУ(Параметры));
		КонецЕсли;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДанныеВыбораОбъектовЭксплуатации2_2(Параметры) Экспорт

	//++ Локализация
	
	Если Не Параметры.Свойство("Отбор") Тогда
		Параметры.Вставить("Отбор", Новый Структура);
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("ГруппаОС") Тогда
		Параметры.Отбор.Вставить("БУГруппаОС", Параметры.Отбор.ГруппаОС);
		Параметры.Отбор.Удалить("ГруппаОС");
	ИначеЕсли Параметры.Свойство("БУГруппаОС") Тогда
		Параметры.Отбор.Вставить("ГруппаОС", Параметры.Отбор.БУГруппаОС);
	КонецЕсли;
	Если Параметры.Отбор.Свойство("АмортизационнаяГруппа") Тогда
		Параметры.Отбор.Вставить("БУАмортизационнаяГруппа", Параметры.Отбор.АмортизационнаяГруппа);
	ИначеЕсли Параметры.Свойство("БУАмортизационнаяГруппа") Тогда
		Параметры.Отбор.Вставить("АмортизационнаяГруппа", Параметры.Отбор.БУАмортизационнаяГруппа);
	КонецЕсли;
	
	Если Параметры.Свойство("Договор") И ЗначениеЗаполнено(Параметры.Договор) Тогда
		Параметры.Отбор.Вставить("НаправлениеДеятельности", ВнеоборотныеАктивыВызовСервера.НаправлениеДеятельности(Параметры.Договор));
	КонецЕсли;
	Если Параметры.Свойство("ВариантПримененияЦелевогоФинансирования")
		И Параметры.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется") Тогда
		Параметры.Отбор.Удалить("НаправлениеДеятельности");
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("МФУГруппаОС") Тогда
		Параметры.Отбор.Вставить("ГруппаОСМеждународныйУчет", Параметры.Отбор.МФУГруппаОС);
	КонецЕсли;
	
	
	Если Параметры.Свойство("Контекст")Тогда
		
		ИндексЗапятой = СтрНайти(Параметры.Контекст, ",");
		Контекст = Параметры.Контекст;
		Если ИндексЗапятой <> 0 Тогда
			Контекст = Сред(Контекст, 1, ИндексЗапятой-1);
		КонецЕсли;
		
		Если Контекст = "БУ"
			И (ОбщегоНазначенияУТКлиентСервер.СтруктураСодержитКлючи(Параметры, "ТекущийРегистратор, ДатаСведений")
				Или Параметры.Свойство("Отбор")
				И ОбщегоНазначенияУТКлиентСервер.СтруктураСодержитКлючи(Параметры.Отбор, "БУОрганизация, БУПодразделение, БУСостояние, ВидНалога")) Тогда
			
			Параметры.Отбор.Вставить("Ссылка", ЭлементыОСПоОтборуБУ(Параметры));
		КонецЕсли;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьНаличиеУчета(НаличиеУчета) Экспорт

	//++ Локализация
	НаличиеУчета.Вставить("ЕстьУчет2_2", ЕстьУчетВнеоборотныхАктивов2_2());
	НаличиеУчета.Вставить("ВедетсяУчетПлатежейВПлатон", ВедетсяУчетПлатежейВПлатон());
	НаличиеУчета.Вставить("ИспользуетсяУУНаПланеСчетовХозрасчетный", Константы.ВестиУУНаПланеСчетовХозрасчетный.Получить());
	НаличиеУчета.Вставить("ИспользоватьРеглУчет", Константы.ИспользоватьРеглУчет.Получить());
	
	НаличиеУчета.МожноОтключитьУчет = 
		НаличиеУчета.МожноОтключитьУчет
		И НЕ НаличиеУчета.ЕстьУчет2_2 
		И НЕ НаличиеУчета.ВедетсяУчетПлатежейВПлатон;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДобавитьВТекстЗапросаВтТаблицаОСПоляЛокализации(ТекстЗапроса, ИмяДокумента) Экспорт

	ПоляЛокализации = "NULL";
	
	//++ Локализация
	Если ИмяДокумента = "Документ.ПередачаОСВАренду2_4" Тогда
		ПоляЛокализации = "ТаблицаОС.ЗалоговаяСтоимость КАК ЗалоговаяСтоимость";
	КонецЕсли;
	//-- Локализация
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляЛокализации", ПоляЛокализации);
	
КонецПроцедуры

Процедура ПроверитьВозможностьПринятияКУчетуОС(Выборка, Объект, ДанныеСтроки, МестонахождениеВТабличнойЧасти, Путь, Отказ) Экспорт

	//++ Локализация
	
	ТекстНеУказан = НСтр("ru = '<Не указан>'");
	
	Если Выборка.УжеПринятоКУчету Тогда
		Если ЗначениеЗаполнено(Выборка.ДокументСнятияСУчетаБУ)
			ИЛИ ЗначениеЗаполнено(Выборка.ДокументСнятияСУчетаНУ) Тогда
			ТекстСообщения = НСтр("ru='Основное средство ""%1"" было снято с учета в организации %2. Повторное принятие к учету в ту же организацию не поддерживается.'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Объект.Организация);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
		КонецЕсли; 
	КонецЕсли;
	
	Если Выборка.ДругаяОрганизация И НЕ Выборка.УжеПринятоКУчету Тогда
		Если Объект.ОтражатьВУпрУчете Тогда
			ТекстСообщения = НСтр("ru = 'Основное средство ""%1"" должно быть принято в организацию ""%2"", соответствующую регламентированному учету.'");
		Иначе
			ТекстСообщения = НСтр("ru = 'Основное средство ""%1"" должно быть принято в организацию ""%2"", соответствующую управленческому учету.'");
		КонецЕсли; 
		ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Выборка.ТекущаяОрганизация);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
	КонецЕсли;
	
	Если Выборка.ДругоеМестонахождение И НЕ Выборка.УжеПринятоКУчету 
		И (НЕ МестонахождениеВТабличнойЧасти ИЛИ ДанныеСтроки.Подразделение <> Выборка.ТекущееМестонахождение) Тогда
		Если Объект.ОтражатьВУпрУчете Тогда
			ТекстСообщения = НСтр("ru = 'Основное средство ""%1"" должно быть принято в подразделение ""%2"", соответствующее регламентированному учету.'");
		Иначе
			ТекстСообщения = НСтр("ru = 'Основное средство ""%1"" должно быть принято в подразделение ""%2"", соответствующее управленческому учету.'");
		КонецЕсли; 
		ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Выборка.ТекущееМестонахождение);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
	КонецЕсли;
	
	Если Выборка.ДругойМОЛ И НЕ Выборка.УжеПринятоКУчету
		И (НЕ МестонахождениеВТабличнойЧасти ИЛИ ДанныеСтроки.МОЛ <> Выборка.ТекущийМОЛ) Тогда
		Если Объект.ОтражатьВУпрУчете Тогда
			ТекстСообщения = НСтр("ru = 'Основное средство ""%1"" должно быть принято с МОЛ ""%2"", соответствующему регламентированному учету.'");
		Иначе
			ТекстСообщения = НСтр("ru = 'Основное средство ""%1"" должно быть принято с МОЛ ""%2"", соответствующему в управленческому учету.'");
		КонецЕсли; 
		ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, ?(ЗначениеЗаполнено(Выборка.ТекущийМОЛ), Выборка.ТекущийМОЛ, ТекстНеУказан));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
	КонецЕсли;
		
	//-- Локализация
	
КонецПроцедуры
 
Процедура ПроверитьВозможностьПринятияКУчетуНМА(Выборка, Объект, Путь, Отказ) Экспорт
	
	//++ Локализация
	
	Если Выборка.ДругаяОрганизация И НЕ Выборка.УжеПринятоКУчету Тогда
		Если Объект.ОтражатьВУпрУчете Тогда
			Если Выборка.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
				ТекстСообщения = НСтр("ru = 'Расходы на НИОКР ""%1"" должны быть приняты в организацию ""%2"", соответствующую регламентированному учету.'");
			Иначе
				ТекстСообщения = НСтр("ru = 'Нематериальный актив ""%1"" должен быть принят в организацию ""%2"", соответствующую регламентированному учету.'");
			КонецЕсли; 
		Иначе
			Если Выборка.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
				ТекстСообщения = НСтр("ru = 'Расходы на НИОКР ""%1"" должны быть приняты в организацию ""%2"", соответствующую управленческому учету.'");
			Иначе
				ТекстСообщения = НСтр("ru = 'Нематериальный актив ""%1"" должен быть принят в организацию ""%2"", соответствующую управленческому учету.'");
			КонецЕсли;
		КонецЕсли; 
		ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Выборка.ТекущаяОрганизация);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
	КонецЕсли;
	
	Если Выборка.ДругоеПодразделение И НЕ Выборка.УжеПринятоКУчету Тогда
		Если Объект.ОтражатьВУпрУчете Тогда
			Если Выборка.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
				ТекстСообщения = НСтр("ru = 'Расходы на НИОКР ""%1"" должны быть приняты в подразделение ""%2"", соответствующее регламентированному учету.'");
			Иначе
				ТекстСообщения = НСтр("ru = 'Нематериальный актив ""%1"" должен быть принят в подразделение ""%2"", соответствующее регламентированному учету.'");
			КонецЕсли;
		Иначе
			Если Выборка.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
				ТекстСообщения = НСтр("ru = 'Расходы на НИОКР ""%1"" должны быть приняты в подразделение ""%2"", соответствующее управленческому учету.'");
			Иначе
				ТекстСообщения = НСтр("ru = 'Нематериальный актив ""%1"" должен быть принят в подразделение ""%2"", соответствующее управленческому учету.'");
			КонецЕсли;
		КонецЕсли; 
		ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Выборка.ТекущееПодразделение);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
	КонецЕсли;

	//-- Локализация

КонецПроцедуры
 
Функция ИспользуетсяУправлениеВНА_2_4(Период) Экспорт

	ИспользуетсяУправлениеВНА_2_4 = Истина;
	
	//++ Локализация
	
	ДатаНачалаУчета = ДатаНачалаУчетаВнеоборотныхАктивов2_4();
	
	ИспользуетсяУправлениеВНА_2_4 = 
		(Период >= ДатаНачалаУчета
			ИЛИ Период = '000101010000' 
				И ТекущаяДатаСеанса() >= ДатаНачалаУчета);
					
	//-- Локализация

	Возврат ИспользуетсяУправлениеВНА_2_4;
	
КонецФункции
 
Функция ИспользуетсяУправлениеВНА() Экспорт

	ИспользуетсяУправлениеВНА = Ложь;
	
	//++ Локализация
	ИспользуетсяУправлениеВНА = ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2");
	//-- Локализация
	
	Возврат ИспользуетсяУправлениеВНА;
	
КонецФункции

Функция УсловияПереходаНаУчет2_2() Экспорт

	КомментарийУчет2_2 = "";
	
	Если НЕ Константы.ИспользоватьРеглУчет.Получить() Тогда
		КомментарийУчет2_2 = КомментарийУчет2_2 + Символы.ПС
			+ НСтр("ru = '- включить опцию ""Регламентированный учет""
                    |(раздел ""НСИ и администрирование"" - ""Регламентированный учет"")'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КомментарийУчет2_2) Тогда
		КомментарийУчет2_2 = НСтр("ru = 'Для включения возможности учета версии 2.2 необходимо:'") + КомментарийУчет2_2;
	КонецЕсли; 
	
	ДоступностьУчета2_2 = Новый Структура;
	ДоступностьУчета2_2.Вставить("КомментарийУчет2_2", КомментарийУчет2_2);
	ДоступностьУчета2_2.Вставить("ДоступенУчет", НЕ ЗначениеЗаполнено(КомментарийУчет2_2));
	
	Возврат ДоступностьУчета2_2;
	
КонецФункции

Процедура УсловияПереходаНаУчет2_4(МинимальнаяДатаНачалаУчета2_4, КомментарийМинДатаНачалаУчета2_4, МаксимальнаяДатаНачалаУчета2_4, КомментарийМаксДатаНачалаУчета2_4) Экспорт

	//++ Локализация
	
	ДатаОпции = МаксимальнаяДатаДокументовВерсии22();
	Если ЗначениеЗаполнено(ДатаОпции) И ДатаОпции > МинимальнаяДатаНачалаУчета2_4 Тогда
		МинимальнаяДатаНачалаУчета2_4 = КонецМесяца(ДатаОпции) + 1;
		ШаблонСообщения = НСтр("ru = 'Начало учета должно быть позже даты оформленных документов версии 2.2 : %1'");
		КомментарийМинДатаНачалаУчета2_4 = СтрШаблон(ШаблонСообщения, Формат(МинимальнаяДатаНачалаУчета2_4, "ДЛФ=D"));
	КонецЕсли; 
	
	МаксимальнаяДатаНачалаУчета2_4 = ?(Константы.ВестиУУНаПланеСчетовХозрасчетный.Получить(), Константы.ДатаНачалаУУНаПланеСчетовХозрасчетный.Получить(), '000101010000');
	Если ЗначениеЗаполнено(МаксимальнаяДатаНачалаУчета2_4) Тогда
		ШаблонСообщения = НСтр("ru = 'Начало учета должно быть не позже даты начала ведения управленческого учета на плане счетов регл. учета: %1'");
		КомментарийМаксДатаНачалаУчета2_4 = СтрШаблон(ШаблонСообщения, Формат(МаксимальнаяДатаНачалаУчета2_4, "ДЛФ=D"));
	КонецЕсли; 

	//-- Локализация
	
КонецПроцедуры
 
Процедура ДополнитьУсловияПереходаНаУчет2_4(ДоступностьУчета2_4) Экспорт

	//++ Локализация
	
	УчетВФункциональнойВалюте = Ложь;
	УчетВнеоборотныхАктивовМеждународныйУчет = Ложь;
	УчетВФункциональнойВалютеУпр = Ложь;
	
	
	ДоступностьУчета2_4.Вставить("УчетВнеоборотныхАктивовМеждународныйУчет", УчетВнеоборотныхАктивовМеждународныйУчет);
	ДоступностьУчета2_4.Вставить("УчетВФункциональнойВалюте", УчетВФункциональнойВалютеУпр);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПроверитьРеквизитыОСПриПринятииКУчету(Выборка, Объект, Путь, Отказ) Экспорт

	//++ Локализация
	
	Если Выборка.ДругаяГруппаОС Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Группа основного средства ""%1"" не должна отличаться от группы, указанной в документе.'"), Выборка.Представление);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
	КонецЕсли;
	Если Выборка.НеЗаполненаГруппаОС Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'В карточке основного средства ""%1"" необходимо заполнить группу ОС.'"), Выборка.Представление);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Выборка.Ссылка, "ГруппаОС",, Отказ);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Функция ЕстьПраваНаЧтениеСостоянияОС() Экспорт

	ЕстьПрава = Истина;
	
	//++ Локализация
	ЕстьПрава = ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ПорядокУчетаОСБУ);
	//-- Локализация
	
	Возврат ЕстьПрава;
	
КонецФункции

Функция ЕстьПраваНаЧтениеСостоянияНМА() Экспорт

	ЕстьПрава = Истина;
	
	//++ Локализация
	ЕстьПрава = ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ПорядокУчетаНМАБУ);
	//-- Локализация
	
	Возврат ЕстьПрава;

КонецФункции
 
// 
// Параметры:
// 	ХозяйственныеОперацииИДокументы - ТаблицаЗначений из СтрокаТаблицыЗначений - 
Процедура ДополнитьОписаниеОперацийИТиповДокументовДляЖурналаДокументовЗакупки(ХозяйственныеОперацииИДокументы) Экспорт

	//++ Локализация
	
	// ОтчетОператораСистемыПлатон
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.КлючНазначенияИспользования 	= "ОтчетОператораСистемыПлатон";
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
	Строка.ДобавитьКнопкуСоздать		= Истина;
	Строка.ТипДокумента 				= Тип("ДокументСсылка.ОтчетОператораСистемыПлатон");
	Строка.ПолноеИмяДокумента			= "Документ.ОтчетОператораСистемыПлатон";
	Строка.ЗаголовокРабочегоМеста       = НСтр("ru = 'Документы закупки (отчеты системы ""Платон"")'");
	
	//-- Локализация
	
КонецПроцедуры

Функция ТекстЗапросаПринятыеКУчетуОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(&Период, ДатаИсправления = ДАТАВРЕМЯ(1,1,1) И ОсновноеСредство В (&СписокОС)) КАК МестонахождениеОС
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|				&Период, 
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаОСУУ
	|		ПО МестонахождениеОС.ОсновноеСредство = ПорядокУчетаОСУУ.ОсновноеСредство
	|			И МестонахождениеОС.Организация = ПорядокУчетаОСУУ.Организация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|				&Период, 
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаОСБУ
	|		ПО МестонахождениеОС.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|			И МестонахождениеОС.Организация = ПорядокУчетаОСБУ.Организация
	|ГДЕ
	|	(ПорядокУчетаОСБУ.СостояниеБУ В(&СостояниеПринят)
	|			ИЛИ ПорядокУчетаОСБУ.СостояниеНУ В(&СостояниеПринят)
	|			ИЛИ ПорядокУчетаОСУУ.Состояние В(&СостояниеПринят))
	|
	|УПОРЯДОЧИТЬ ПО
	|	МестонахождениеОС.ОсновноеСредство.Наименование,
	|	МестонахождениеОС.ОсновноеСредство.ИнвентарныйНомер";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПринятыеКУчетуНМА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МестоУчетаНМА.НематериальныйАктив КАК НематериальныйАктив
	|ИЗ
	|	РегистрСведений.МестоУчетаНМА.СрезПоследних(&Период, НематериальныйАктив В (&СписокНМА)) КАК МестоУчетаНМА
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(&Период, НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМАУУ
	|		ПО МестоУчетаНМА.НематериальныйАктив = ПорядокУчетаНМАУУ.НематериальныйАктив
	|			И МестоУчетаНМА.Организация = ПорядокУчетаНМАУУ.Организация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(&Период, НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМАБУ
	|		ПО МестоУчетаНМА.НематериальныйАктив = ПорядокУчетаНМАБУ.НематериальныйАктив
	|			И МестоУчетаНМА.Организация = ПорядокУчетаНМАБУ.Организация
	|
	|ГДЕ
	|	(ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|			ИЛИ ПорядокУчетаНМАБУ.СостояниеНУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|			ИЛИ ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету))
	|
	|УПОРЯДОЧИТЬ ПО
	|	МестоУчетаНМА.НематериальныйАктив.Наименование,
	|	МестоУчетаНМА.НематериальныйАктив.Код";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПредельнаяСтоимостьСписанияНаРасходы() Экспорт

	Возврат 100000;
	
КонецФункции

// См. ДатыЗапретаИзмененияПереопределяемый.ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения
//
Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных) Экспорт
	
	Для Каждого ИмяДокумента Из СписокДокументовВНА() Цикл
		
		ДатыЗапретаИзменения.ДобавитьСтроку(
			ИсточникиДанных, 
			"Документ." + ИмяДокумента,
			"Дата", 
			"ВнеоборотныеАктивы", 
			"Организация");
			
	КонецЦикла;
	
КонецПроцедуры

// Возвращает список документов подсистемы ВНА.
// 
// Возвращаемое значение:
// 	Массив - Список документов подсистемы ВНА.
//
Функция СписокДокументовВНА() Экспорт
	
	СписокДокументовВНА = Новый Массив;
	
	//++ Локализация
	СписокДокументовВНА.Добавить("АмортизацияНМА");
	СписокДокументовВНА.Добавить("АмортизацияОС");
	СписокДокументовВНА.Добавить("ВводОстатковВнеоборотныхАктивов");
	СписокДокументовВНА.Добавить("ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога");
	СписокДокументовВНА.Добавить("ВводПервоначальныхСведенийДляРасчетаНалогаНаИмущество");
	СписокДокументовВНА.Добавить("ВводПервоначальныхСведенийДляРасчетаТранспортногоНалога");
	СписокДокументовВНА.Добавить("ВозвратОСИзАренды");
	СписокДокументовВНА.Добавить("ИзменениеПараметровНМА");
	СписокДокументовВНА.Добавить("ИзменениеПараметровОС");
	СписокДокументовВНА.Добавить("ИзменениеСостоянияОС");
	СписокДокументовВНА.Добавить("ИзменениеСпособаОтраженияИмущественныхНалогов");
	СписокДокументовВНА.Добавить("ИнвентаризацияНМА");
	СписокДокументовВНА.Добавить("ИнвентаризацияОС");
	СписокДокументовВНА.Добавить("МодернизацияОС");
	СписокДокументовВНА.Добавить("СнятиеСРегистрацииЗемельныхУчастков");
	СписокДокументовВНА.Добавить("СнятиеСРегистрацииТранспортныхСредств");
	СписокДокументовВНА.Добавить("ОтчетОператораСистемыПлатон");
	СписокДокументовВНА.Добавить("ПередачаОСВАренду");
	СписокДокументовВНА.Добавить("ПеремещениеОС");
	СписокДокументовВНА.Добавить("ПереоценкаНМА");
	СписокДокументовВНА.Добавить("ПереоценкаОС");
	СписокДокументовВНА.Добавить("ПерерасчетИмущественныхНалогов");
	СписокДокументовВНА.Добавить("ПодготовкаКПередачеНМА");
	СписокДокументовВНА.Добавить("ПодготовкаКПередачеОС");
	СписокДокументовВНА.Добавить("ПринятиеКУчетуНМА");
	СписокДокументовВНА.Добавить("ПринятиеКУчетуОС");
	СписокДокументовВНА.Добавить("ПараметрыНачисленияЗемельногоНалога");
	СписокДокументовВНА.Добавить("ПараметрыНачисленияНалогаНаИмущество");
	СписокДокументовВНА.Добавить("ПараметрыНачисленияТранспортногоНалога");
	СписокДокументовВНА.Добавить("ПерерасчетИмущественныхНалогов");
	СписокДокументовВНА.Добавить("СписаниеНМА");
	СписокДокументовВНА.Добавить("СписаниеОС");
	//-- Локализация

	Возврат СписокДокументовВНА;
	
КонецФункции

#КонецОбласти

//++ Локализация

#Область ПроведениеПоРеглУчету

// 
// Параметры:
// 	СписокЗапросов - Массив -
Процедура ТекстОтраженияВРеглУчетеПеремещенияСтоимостиОС(СписокЗапросов) Экспорт

	#Область ПеремещениеСтоимости
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение стоимости ОС (Дт СчетУчетаСтоимости :: Кт СчетУчетаСтоимости)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Арендатор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	ВЫБОР 
	|		КОГДА Строки.КорКонтрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Строки.КорКонтрагент 
	|		ИНАЧЕ Строки.Арендатор 
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР 
	|		КОГДА Строки.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Строки.КорОрганизация 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	Строки.СтоимостьПР КАК СуммаПРКт,
	|	Строки.СтоимостьВР КАК СуммаВРКт,
	|	""Перемещение стоимости ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровСтоимостиОС)
	|	И (Строки.Стоимость <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПеремещениеСтоимостиЦФ_Дт_СчетУчетаСтоимости_ЦФ__Кт_СчетУчетаСтоимости_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение стоимости ОС (Дт СчетУчетаСтоимости_ЦФ :: Кт СчетУчетаСтоимости_ЦФ)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Арендатор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	Строки.Арендатор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУКт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРКт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРКт,
	|	""Перемещение стоимости ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровСтоимостиОС)
	|	И (Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
КонецПроцедуры

// 
// Параметры:
// 	СписокЗапросов - Массив -
Процедура ТекстОтраженияВРеглУчетеПеремещенияАмортизацииОС(СписокЗапросов) Экспорт

	#Область ПеремещениеАмортизации_Дт_СчетУчетаАмортизации__Кт_СчетУчетаАмортизации
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение амортизации ОС (Дт СчетУчетаАмортизации :: Кт СчетУчетаАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияРегл 
	|	КОНЕЦ КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияНУ 
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияПР 
	|	КОНЕЦ КАК СуммаПРДт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияВР 
	|	КОНЕЦ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияНУ 
	|	КОНЕЦ КАК СуммаНУКт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияПР 
	|	КОНЕЦ КАК СуммаПРКт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияВР 
	|	КОНЕЦ КАК СуммаВРКт,
	|	""Перемещение амортизации ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС)
	|	И (Строки.Амортизация <> 0
	|		ИЛИ НЕ Строки.НачислятьИзнос 
	|			И (Строки.АмортизацияРегл <> 0
	|				ИЛИ Строки.АмортизацияНУ <> 0
	|				ИЛИ Строки.АмортизацияПР <> 0
	|				ИЛИ Строки.АмортизацияВР <> 0))";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПеремещениеАмортизацииЦФ_Дт_СчетУчетаАмортизации_ЦФ__Кт_СчетУчетаАмортизации_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение амортизации ОС (Дт СчетУчетаАмортизации_ЦФ :: Кт СчетУчетаАмортизации_ЦФ) за счет целевого финансирования
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУДт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРДт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	""Перемещение амортизации ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС)
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПередачаИзносаИсходящиеДвижения // Дт  :: Кт 010
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Передача амортизации ОС исходящие проводки (Дт  :: Кт 010)
	|ВЫБРАТЬ
	|
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл + Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Перемещение накопленного износа ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс))
	|	И Строки.НачислятьИзнос
	|	И (Строки.Организация <> Строки.КорОрганизация
	|		ИЛИ Строки.Подразделение <> Строки.КорПодразделение)
	|	И (Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПередачаИзносаВходящиеДвижения // Дт 010 :: Кт 
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Передача амортизации ОС исходящие проводки (Дт 010 :: Кт)
	|ВЫБРАТЬ
	|
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл + Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Перемещение накопленного износа ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Строки.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс))
	|	И Строки.НачислятьИзнос
	|	И (Строки.Организация <> Строки.КорОрганизация
	|		ИЛИ Строки.Подразделение <> Строки.КорПодразделение)
	|	И (Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
КонецПроцедуры

// 
// Параметры:
// 	СписокЗапросов - Массив -
Процедура ТекстОтраженияВРеглУчетеПеремещенияСтоимостиНМА(СписокЗапросов) Экспорт

	#Область ПеремещениеСтоимости
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение стоимости НМА (Дт СчетУчетаСтоимости :: Кт СчетУчетаСтоимости)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	Строки.СтоимостьПР КАК СуммаПРКт,
	|	Строки.СтоимостьВР КАК СуммаВРКт,
	|	""Перемещение стоимости НМА"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровСтоимостиНМА)
	|	И (Строки.Стоимость <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПеремещениеСтоимостиЦФ_Дт_СчетУчетаСтоимости_ЦФ__Кт_СчетУчетаСтоимости_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение стоимости НМА (Дт СчетУчетаСтоимости_ЦФ :: Кт СчетУчетаСтоимости_ЦФ)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУКт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРКт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРКт,
	|	""Перемещение стоимости НМА"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровСтоимостиНМА)
	|	И (Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

КонецПроцедуры

// 
// Параметры:
// 	СписокЗапросов - Массив -
Процедура ТекстОтраженияВРеглУчетеПеремещенияАмортизацииНМА(СписокЗапросов) Экспорт

	#Область ПеремещениеАмортизации_Дт_СчетУчетаАмортизации__Кт_СчетУчетаАмортизации
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение амортизации НМА (Дт СчетУчетаАмортизации :: Кт СчетУчетаАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУ КАК СуммаНУДт,
	|	Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	""Перемещение амортизации НМА"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииНМА)
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПеремещениеАмортизацииЦФ_Дт_СчетУчетаАмортизации_ЦФ__Кт_СчетУчетаАмортизации_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение амортизации НМА (Дт СчетУчетаАмортизации_ЦФ :: Кт СчетУчетаАмортизации_ЦФ) за счет целевого финансирования
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУДт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРДт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	""Перемещение амортизации НМА"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииНМА)
	|	И (Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

КонецПроцедуры

// 
// Параметры:
// 	СписокЗапросов - Массив -
Процедура ТекстОтраженияВРеглУчетеНачисленияАмортизацииОС(СписокЗапросов) Экспорт

	// Амортизация

	#Область Амортизация // (Дт <Расходы> :: Кт <АмортизацияВНА>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт Расходы :: Кт АмортизацияВНА)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.КорСтатьяРасходов КАК СубконтоДт1,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	ВЫБОР 
	|		КОГДА Строки.КорСтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА 
	|			ТОГДА Строки.АмортизацияНУ 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР 
	|		КОГДА Строки.КорСтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ 
	|			ТОГДА Строки.АмортизацияНУ 
	|		ИНАЧЕ 0 
	|	КОНЕЦ + Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|		ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|			И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|		ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|			И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|		ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|
	|ГДЕ
	|	Строки.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.АмортизацияОС)
	|	И Строки.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область Амортизация_ЦФ // Дт <Расходы> :: Кт <АмортизацияВНА_ЦФ>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт Расходы :: Кт АмортизацияВНА_ЦФ)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.КорСтатьяРасходов КАК СубконтоДт1,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	ВЫБОР 
	|		КОГДА Строки.КорСтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА 
	|			ТОГДА Строки.АмортизацияНУЦФ 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР 
	|		КОГДА Строки.КорСтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ 
	|			ТОГДА Строки.АмортизацияНУЦФ 
	|		ИНАЧЕ 0 
	|	КОНЕЦ + Строки.АмортизацияПРЦФ КАК СуммаПРДт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|		ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|			И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|		ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|			И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|		ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|
	|ГДЕ
	|	Строки.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.АмортизацияОС)
	|	И Строки.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область Амортизация_Отправитель // Дт <РасчетыПоТекущимОперациям> :: Кт <АмортизацияВНА>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт РасчетыПоТекущимОперациям :: Кт АмортизацияВНА)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоТекущимОперациям) КАК СчетДт,
	|	Строки.КорОрганизация КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	ВЫБОР 
	|		КОГДА Строки.КорСтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА 
	|			ТОГДА Строки.АмортизацияНУ 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР 
	|		КОГДА Строки.КорСтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ 
	|			ТОГДА Строки.АмортизацияНУ 
	|		ИНАЧЕ 0 
	|	КОНЕЦ + Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.АмортизацияОСвДругуюОрганизацию)
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область Амортизация_Получатель // Дт <Расходы> :: Кт <РасчетыПоТекущимОперациям>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт Расходы :: Кт РасчетыПоТекущимОперациям)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.КорОрганизация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.КорСтатьяРасходов КАК СубконтоДт1,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	ВЫБОР 
	|		КОГДА Строки.КорСтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА 
	|			ТОГДА Строки.АмортизацияНУ 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР 
	|		КОГДА Строки.КорСтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ 
	|			ТОГДА Строки.АмортизацияНУ 
	|		ИНАЧЕ 0 
	|	КОНЕЦ + Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоТекущимОперациям) КАК СчетКт,
	|	Строки.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	ВЫБОР 
	|		КОГДА Строки.КорСтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА 
	|			ТОГДА Строки.АмортизацияНУ 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаНУКт,
	|	ВЫБОР 
	|		КОГДА Строки.КорСтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ 
	|			ТОГДА Строки.АмортизацияНУ 
	|		ИНАЧЕ 0 
	|	КОНЕЦ + Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|		ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|			И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|		ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|			И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|		ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|
	|ГДЕ
	|	Строки.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.АмортизацияОСвДругуюОрганизацию)
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
		
	#Область Амортизация_Отправитель_ЦФ // Дт <РасчетыПоТекущимОперациям> :: Кт <АмортизацияВНА_ЦФ>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт РасчетыПоТекущимОперациям :: Кт АмортизацияВНА_ЦФ)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоТекущимОперациям) КАК СчетДт,
	|	Строки.КорОрганизация КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	ВЫБОР 
	|		КОГДА Строки.КорСтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА 
	|			ТОГДА Строки.АмортизацияНУЦФ 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР 
	|		КОГДА Строки.КорСтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ 
	|			ТОГДА Строки.АмортизацияНУЦФ 
	|		ИНАЧЕ 0 
	|	КОНЕЦ + Строки.АмортизацияПРЦФ КАК СуммаПРДт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.АмортизацияОСвДругуюОрганизацию)
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область Амортизация_Получатель_ЦФ // Дт <Расходы> :: Кт <РасчетыПоТекущимОперациям>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт Расходы :: Кт РасчетыПоТекущимОперациям)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.КорОрганизация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.КорСтатьяРасходов КАК СубконтоДт1,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	ВЫБОР 
	|		КОГДА Строки.КорСтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА 
	|			ТОГДА Строки.АмортизацияНУЦФ 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР 
	|		КОГДА Строки.КорСтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ 
	|			ТОГДА Строки.АмортизацияНУЦФ 
	|		ИНАЧЕ 0 
	|	КОНЕЦ + Строки.АмортизацияПРЦФ КАК СуммаПРДт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоТекущимОперациям) КАК СчетКт,
	|	Строки.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	ВЫБОР 
	|		КОГДА Строки.КорСтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА 
	|			ТОГДА Строки.АмортизацияНУЦФ 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаНУКт,
	|	ВЫБОР 
	|		КОГДА Строки.КорСтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ 
	|			ТОГДА Строки.АмортизацияНУЦФ 
	|		ИНАЧЕ 0 
	|	КОНЕЦ + Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|		ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|			И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|		ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|			И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|		ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|
	|ГДЕ
	|	Строки.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.АмортизацияОСвДругуюОрганизацию)
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти

	#Область Износ // Дт <СчетУчетаИзноса> :: Кт <>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаИзноса :: Кт ---)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление износа"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.НачислятьИзнос
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти

	#Область Амортизация_НаПрочиеОперации // Дт <Расходы> :: Кт <АмортизацияВНА>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт Расходы :: Кт АмортизацияВНА)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	ВЫБОР 
	|		КОГДА Строки.КорСтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА 
	|			ТОГДА Строки.АмортизацияНУ 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР 
	|		КОГДА Строки.КорСтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ 
	|			ТОГДА Строки.АмортизацияНУ 
	|		ИНАЧЕ 0 
	|	КОНЕЦ + Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|		ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|			И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|ГДЕ
	|	Строки.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.АмортизацияОС)
	|	И Строки.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область ДоходыОтЦелевогоФинансирования // Дт <98> :: Кт <91>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Признание доходов от целевого финансирования (Дт 98 :: Кт 91)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	Строки.АмортизацияНУЦФ + Строки.АмортизацияПРЦФ + Строки.АмортизацияВРЦФ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	ПараметрыЦелевогоФинансированияОС.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Строки.КорПодразделение КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ПараметрыЦелевогоФинансированияОС.СтатьяДоходов КАК СубконтоКт1,
	|	ПараметрыЦелевогоФинансированияОС.АналитикаДоходов КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	Строки.АмортизацияНУЦФ + Строки.АмортизацияПРЦФ + Строки.АмортизацияВРЦФ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Признание доходов от целевого финансирования"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыЦелевогоФинансированияОС КАК ПараметрыЦелевогоФинансированияОС
	|		ПО Строки.Регистратор = ПараметрыЦелевогоФинансированияОС.Ссылка
	|			И Строки.ОсновноеСредство = ПараметрыЦелевогоФинансированияОС.ОсновноеСредство
	|			И Строки.Организация = ПараметрыЦелевогоФинансированияОС.Организация
	|ГДЕ
	|	НЕ Строки.НачислятьИзнос
	|	И (Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти

	// Обесценение
	
	#Область КорректировкаОбесценения // (Дт <ОбесценениеВНА> :: Кт <АмортизацияВНА>
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Корректировка обесценения (Дт ОбесценениеВНА :: Кт АмортизацияВНА)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбесценениеВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Подразделение КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	Строки.АмортизацияНУ КАК СуммаНУДт,
	|	Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	
	|	""Корректировка обесценения"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КорректировкаОбесцененияОС)
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти

	#Область КорректировкаОбесценения_ЦФ // (Дт <ОбесценениеВНА> :: Кт <АмортизацияВНА_ЦФ>
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Корректировка обесценения (Дт ОбесценениеВНА :: Кт АмортизацияВНА_ЦФ)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбесценениеВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Подразделение КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	Строки.АмортизацияНУЦФ КАК СуммаНУДт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРДт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	
	|	""Корректировка обесценения"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.КорректировкаОбесцененияОС)
	|	И Строки.АмортизацияЦФ <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область СторноОбесценения // (Дт <Расходы> :: Кт <ОбесценениеВНА>
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Сторно обесценения (Дт Расходы :: Кт ОбесценениеВНА)
	|ВЫБРАТЬ
	|	
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	СтрокиДт.СуммаРегл КАК Сумма,
	|	СтрокиДт.Сумма КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	СтрокиДт.СтатьяРасходов КАК АналитикаУчетаДт,
	|	СтрокиДт.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	СтрокиДт.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	СтрокиДт.СтатьяРасходов КАК СубконтоДт1,
	|	СтрокиДт.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	ВЫБОР 
	|		КОГДА СтрокиДт.СтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА 
	|			ТОГДА СтрокиДт.СуммаРегл - СтрокиДт.ПостояннаяРазница - СтрокиДт.ВременнаяРазница 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР 
	|		КОГДА СтрокиДт.СтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ 
	|			ТОГДА СтрокиДт.СуммаРегл - СтрокиДт.ПостояннаяРазница - СтрокиДт.ВременнаяРазница 
	|		ИНАЧЕ 0 
	|	КОНЕЦ + СтрокиДт.ПостояннаяРазница КАК СуммаПРДт,
	|	СтрокиДт.ВременнаяРазница КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбесценениеВНА) КАК ВидСчетаКт,
	|	СтрокиКт.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	СтрокиКт.Подразделение КАК ПодразделениеКт,
	|	СтрокиКт.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	СтрокиКт.ВнеоборотныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	СтрокиКт.ОбесценениеРегл КАК СуммаВРКт,
	|	
	|	""Сторно обесценения"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиДт
	|		ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбесценениеВНА КАК СтрокиКт
	|		ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|			И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|			И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|		ПО СтрокиДт.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|			И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|		ПО СтрокиДт.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|			И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|		ПО ОбъектыСтроительства.Ссылка = СтрокиДт.КорАналитикаРасходов
	|
	|ГДЕ
	|	СтрокиДт.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СторноОбесцененияОС)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область СторноОбесцененияОтправитель // (Дт <РасчетыПоТекущимОперациям> :: Кт <ОбесценениеВНА>
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Сторно обесценения (Дт РасчетыПоТекущимОперациям :: Кт ОбесценениеВНА)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.ОбесценениеРегл КАК Сумма,
	|	Строки.ОбесценениеУпр КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоТекущимОперациям) КАК СчетДт,
	|	СтрокиДт.Организация КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	Строки.ОбесценениеРегл КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбесценениеВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ВнеоборотныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	Строки.ОбесценениеРегл КАК СуммаВРКт,
	|	
	|	""Сторно обесценения"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбесценениеВНА КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиДт
	|		ПО СтрокиДт.Регистратор = Строки.Регистратор
	|			И СтрокиДт.НастройкаХозяйственнойОперации = Строки.НастройкаХозяйственнойОперации
	|			И СтрокиДт.ИдентификаторФинЗаписи = Строки.ИдентификаторФинЗаписи
	|
	|ГДЕ
	|	Строки.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СторноОбесцененияОСВДругуюОрганизацию)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область СторноОбесцененияПолучатель // (Дт <Расходы> :: Кт <РасчетыПоТекущимОперациям>
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Сторно обесценения (Дт Расходы :: Кт РасчетыПоТекущимОперациям)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаРегл КАК Сумма,
	|	Строки.Сумма КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	ВЫБОР 
	|		КОГДА Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА 
	|			ТОГДА Строки.СуммаРегл - Строки.ПостояннаяРазница - Строки.ВременнаяРазница 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР 
	|		КОГДА Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ 
	|			ТОГДА Строки.СуммаРегл - Строки.ПостояннаяРазница - Строки.ВременнаяРазница 
	|		ИНАЧЕ 0 
	|	КОНЕЦ + Строки.ПостояннаяРазница КАК СуммаПРДт,
	|	Строки.ВременнаяРазница КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоТекущимОперациям) КАК СчетКт,
	|	СтрокиКт.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	СтрокиКт.ОбесценениеРегл КАК СуммаВРКт,
	|	
	|	""Сторно обесценения"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбесценениеВНА КАК СтрокиКт
	|		ПО СтрокиКт.Регистратор = Строки.Регистратор
	|			И СтрокиКт.НастройкаХозяйственнойОперации = Строки.НастройкаХозяйственнойОперации
	|			И СтрокиКт.ИдентификаторФинЗаписи = Строки.ИдентификаторФинЗаписи
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|		ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|			И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|		ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|			И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|		ПО ОбъектыСтроительства.Ссылка = Строки.АналитикаРасходов
	|
	|ГДЕ
	|	Строки.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СторноОбесцененияОСВДругуюОрганизацию)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
КонецПроцедуры

// 
// Параметры:
// 	СписокЗапросов - Массив -
Процедура ТекстОтраженияВРеглУчетеАмортизационнойПремии(СписокЗапросов) Экспорт
			
	#Область АмортизационнаяПремия // Дт <Расходы> :: Кт <СчетУчетаОС>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт Расходы :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.КорСтатьяРасходов КАК СубконтоДт1,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.СтоимостьНУ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	Строки.Арендатор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-Строки.СтоимостьНУ КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизационнаяПремияКВ // Дт <> :: Кт <КВ>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Снятие амортизационной премии с КВ (Дт <ПустаяСсылка> :: Кт КВ)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаКапитальныеВложения) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюНУ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизационнаяПремия КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|	ПО Строки.Организация = ПервоначальныеСведенияОС.Организация
	|		И Строки.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|	
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизационнаяПремияОтправитель // Дт <РасчетыПоТекущимОперациям> :: Кт <СчетУчетаОС>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт РасчетыПоТекущимОперациям :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоТекущимОперациям) КАК СчетДт,
	|	Строки.КорОрганизация КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.СтоимостьНУ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	Строки.Арендатор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-Строки.СтоимостьНУ КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0
	|	И Строки.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизационнаяПремияПолучатель // Дт <Расходы> :: Кт <РасчетыПоТекущимОперациям>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт Расходы :: Кт РасчетыПоТекущимОперациям)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.КорОрганизация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.КорСтатьяРасходов КАК СубконтоДт1,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.СтоимостьНУ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоТекущимОперациям) КАК СчетКт,
	|	Строки.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-Строки.СтоимостьНУ КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|			И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|		ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|			И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|		ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|			И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|		ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0
	|	И Строки.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизационнаяПремияНаПрочиеОперации // Дт <Расходы> :: Кт <СчетУчетаОС>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт Расходы :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.СтоимостьНУ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	Строки.Арендатор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-Строки.СтоимостьНУ КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|			И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|		ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|			И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0
	|	И Строки.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
КонецПроцедуры

// 
// Параметры:
// 	СписокЗапросов - Массив -
Процедура ТекстОтраженияВРеглУчетеПеремещенияДоходовОСЗаСчетЦФ(СписокЗапросов) Экспорт

	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение доходов за счет целевого финансирования (Дт 98 :: Кт 98)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.Сумма КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.Сумма КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.Сумма КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Перемещение доходов за счет целевого финансирования"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДоходыОСЗаСчетЦФ КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.Организация = Строки.КорОрганизация
	|	И Строки.Подразделение <> Строки.КорПодразделение";

	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// 
// Параметры:
// 	СписокЗапросов - Массив -
Процедура ТекстОтраженияВРеглУчетеСписанияОС(СписокЗапросов) Экспорт
	
	#Область СписаниеПервоначальнойСтоимостиОС // Дт 01.09 :: Кт 01.01
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Списание первоначальной стоимости ОС (Дт 01.09 :: Кт 01.01)
	|ВЫБРАТЬ
	|	
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	СтрокиКт.СтоимостьРегл КАК Сумма,
	|	СтрокиКт.Стоимость КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	СтрокиДт.СтатьяРасходов КАК ГруппаФинансовогоУчетаДт,
	|	СтрокиДт.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	СтрокиДт.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	СтрокиДт.СтатьяРасходов КАК СубконтоДт1,
	|	СтрокиДт.АналитикаРасходов КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	СтрокиКт.СтоимостьНУ КАК СуммаНУДт,
	|	СтрокиКт.СтоимостьПР КАК СуммаПРДт,
	|	СтрокиКт.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	СтрокиКт.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	СтрокиКт.Подразделение КАК ПодразделениеКт,
	|	СтрокиКт.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	СтрокиКт.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	СтрокиКт.СтоимостьНУ КАК СуммаНУКт,
	|	СтрокиКт.СтоимостьПР КАК СуммаПРКт,
	|	СтрокиКт.СтоимостьВР КАК СуммаВРКт,
	|	
	|	""Списание первоначальной стоимости ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиДт
	|		ПО ДокументыКОтражению.Ссылка = СтрокиДт.Регистратор
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК СтрокиКт
	|		ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|			И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|			И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|			И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|ГДЕ
	|	СтрокиДт.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиАрендованныхОС))
	|
	|	И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	И (СтрокиДт.СуммаРегл <> 0
	|		ИЛИ СтрокиДт.ПостояннаяРазница <> 0
	|		ИЛИ СтрокиДт.ВременнаяРазница <> 0
	|		ИЛИ СтрокиКт.СтоимостьНУ <> 0
	|		ИЛИ СтрокиКт.СтоимостьПР <> 0
	|		ИЛИ СтрокиКт.СтоимостьВР <> 0)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СписаниеПервоначальнойСтоимостиОСЦФ // Дт 01.09 :: Кт 01.ЦФ
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Списание первоначальной стоимости ОС ЦФ (Дт 01.09 :: Кт 01.ЦФ)
	|ВЫБРАТЬ
	|	
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	СтрокиКт.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	СтрокиДт.СтатьяРасходов КАК ГруппаФинансовогоУчетаДт,
	|	СтрокиДт.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	СтрокиДт.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	СтрокиДт.СтатьяРасходов КАК СубконтоДт1,
	|	СтрокиДт.АналитикаРасходов КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	СтрокиКт.СтоимостьНУЦФ КАК СуммаНУДт,
	|	СтрокиКт.СтоимостьПРЦФ КАК СуммаПРДт,
	|	СтрокиКт.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаКт,
	|	СтрокиКт.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	СтрокиКт.Подразделение КАК ПодразделениеКт,
	|	СтрокиКт.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	СтрокиКт.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	СтрокиКт.СтоимостьНУЦФ КАК СуммаНУКт,
	|	СтрокиКт.СтоимостьПРЦФ КАК СуммаПРКт,
	|	СтрокиКт.СтоимостьВРЦФ КАК СуммаВРКт,
	|	
	|	""Списание первоначальной стоимости ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиДт
	|		ПО ДокументыКОтражению.Ссылка = СтрокиДт.Регистратор
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК СтрокиКт
	|		ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|			И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|			И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|			И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|ГДЕ
	|	СтрокиДт.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиАрендованныхОС))
	|
	|	И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	И (СтрокиКт.СтоимостьЦФ <> 0
	|		ИЛИ СтрокиКт.СтоимостьНУЦФ <> 0
	|		ИЛИ СтрокиКт.СтоимостьПРЦФ <> 0
	|		ИЛИ СтрокиКт.СтоимостьВРЦФ <> 0)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СписаниеНачисленнойАмортизации // Дт 02.01 :: Кт 01.09
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Списание начисленной амортизации (Дт 02.01 :: Кт 01.09)
	|ВЫБРАТЬ
	|	
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ВЫБОР КОГДА СтрокиДт.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ СтрокиДт.АмортизацияРегл 
	|	КОНЕЦ КАК Сумма,
	|	СтрокиДт.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаДт,
	|	СтрокиДт.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	СтрокиДт.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	СтрокиДт.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	ВЫБОР КОГДА СтрокиДт.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ СтрокиДт.АмортизацияНУ 
	|	КОНЕЦ КАК СуммаНУДт,
	|
	|	ВЫБОР КОГДА СтрокиДт.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ СтрокиДт.АмортизацияПР 
	|	КОНЕЦ КАК СуммаПРДт,
	|
	|	ВЫБОР КОГДА СтрокиДт.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ СтрокиДт.АмортизацияВР 
	|	КОНЕЦ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	СтрокиКт.СтатьяРасходов КАК ГруппаФинансовогоУчетаКт,
	|	СтрокиКт.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	СтрокиКт.Подразделение КАК ПодразделениеКт,
	|	СтрокиКт.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	СтрокиКт.СтатьяРасходов КАК СубконтоКт1,
	|	СтрокиКт.АналитикаРасходов КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	ВЫБОР КОГДА СтрокиДт.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ СтрокиДт.АмортизацияНУ 
	|	КОНЕЦ КАК СуммаНУКт,
	|
	|	ВЫБОР КОГДА СтрокиДт.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ СтрокиДт.АмортизацияПР 
	|	КОНЕЦ КАК СуммаПРКт,
	|
	|	ВЫБОР КОГДА СтрокиДт.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ СтрокиДт.АмортизацияВР 
	|	КОНЕЦ КАК СуммаВРКт,
	|	
	|	""Списание начисленной амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК СтрокиДт
	|		ПО ДокументыКОтражению.Ссылка = СтрокиДт.Регистратор
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиКт
	|		ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|			И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|			И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|			И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|ГДЕ
	|	СтрокиДт.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеАмортизацииОС)
	|	И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	И (СтрокиДт.Амортизация <> 0
	|		ИЛИ НЕ СтрокиДт.НачислятьИзнос 
	|			И (СтрокиДт.АмортизацияРегл <> 0
	|				ИЛИ СтрокиДт.АмортизацияНУ <> 0
	|				ИЛИ СтрокиДт.АмортизацияПР <> 0
	|				ИЛИ СтрокиДт.АмортизацияВР <> 0))";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область СписаниеНачисленнойАмортизацииЦФ // Дт 02.ЦФ :: Кт 01.09
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Списание начисленной амортизации \  Частичная ликвидация целевых средств в начисленной амортизации(Дт Счет начисления амортизации:: Кт 01.09)
	|ВЫБРАТЬ
	|	
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	СтрокиДт.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаДт,
	|	СтрокиДт.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	СтрокиДт.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	СтрокиДт.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	СтрокиДт.АмортизацияНУЦФ КАК СуммаНУДт,
	|	СтрокиДт.АмортизацияПРЦФ КАК СуммаПРДт,
	|	СтрокиДт.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	СтрокиКт.СтатьяРасходов КАК ГруппаФинансовогоУчетаКт,
	|	СтрокиКт.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	СтрокиКт.Подразделение КАК ПодразделениеКт,
	|	СтрокиКт.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	СтрокиКт.СтатьяРасходов КАК СубконтоКт1,
	|	СтрокиКт.АналитикаРасходов КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	СтрокиДт.АмортизацияНУЦФ КАК СуммаНУКт,
	|	СтрокиДт.АмортизацияПРЦФ КАК СуммаПРКт,
	|	СтрокиДт.АмортизацияВРЦФ КАК СуммаВРКт,
	|	
	|	""Списание начисленной амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК СтрокиДт
	|		ПО ДокументыКОтражению.Ссылка = СтрокиДт.Регистратор
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиКт
	|		ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|			И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|			И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|			И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|ГДЕ
	|	СтрокиДт.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеАмортизацииОС)
	|	И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И НЕ СтрокиДт.НачислятьИзнос
	|	И (СтрокиДт.АмортизацияЦФ <> 0
	|		ИЛИ СтрокиДт.АмортизацияНУЦФ <> 0
	|		ИЛИ СтрокиДт.АмортизацияПРЦФ <> 0
	|		ИЛИ СтрокиДт.АмортизацияВРЦФ <> 0)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область СписаниеНачисленногоИзноса // Дт --- :: Кт СчетИзноса
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Списание начисленной амортизации \ Частичная ликвидация начисленной амортизации (Дт --- :: Кт СчетИзноса)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл + Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств) КАК СчетКт,
	|	
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	ВЫБОР КОГДА Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)
	|		ТОГДА ""Частичная ликвидация начисленного износа""
	|		ИНАЧЕ ""Списание начисленного износа""
	|	КОНЕЦ КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО ДокументыКОтражению.Ссылка = Строки.Регистратор
	|ГДЕ
	|	Строки.НачислятьИзнос
	|	И (Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияЦФ <> 0)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область СписаниеОбесценения // Дт 02.04 :: Кт 01.09
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Списание обесценения (Дт 02.04 :: Кт 01.09)
	|ВЫБРАТЬ
	|	
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	СтрокиДт.ОбесценениеРегл КАК Сумма,
	|	СтрокиДт.ОбесценениеУпр КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбесценениеВНА) КАК ВидСчетаДт,
	|	СтрокиДт.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	СтрокиДт.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	СтрокиДт.ВнеоборотныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	СтрокиДт.ОбесценениеРегл КАК СуммаВРДт,
	|
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	СтрокиКт.СтатьяРасходов КАК ГруппаФинансовогоУчетаКт,
	|	СтрокиКт.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	СтрокиКт.Подразделение КАК ПодразделениеКт,
	|	СтрокиКт.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	СтрокиКт.СтатьяРасходов КАК СубконтоКт1,
	|	СтрокиКт.АналитикаРасходов КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	СтрокиКт.СуммаРегл - СтрокиКт.ПостояннаяРазница - СтрокиКт.ВременнаяРазница КАК СуммаНУКт,
	|	СтрокиКт.ПостояннаяРазница КАК СуммаПРКт,
	|	СтрокиКт.ВременнаяРазница КАК СуммаВРКт,
	|	
	|	""Списание обесценения ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбесценениеВНА КАК СтрокиДт
	|		ПО ДокументыКОтражению.Ссылка = СтрокиДт.Регистратор
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиКт
	|		ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|			И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|			И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|			И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|ГДЕ
	|	СтрокиДт.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеОбесцененияОС)
	|	И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И (СтрокиДт.ОбесценениеРегл <> 0
	|		ИЛИ СтрокиДт.ОбесценениеУпр <> 0)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область СписаниеДоходыОтЦелевогоФинансирования // Дт 98 :: Кт 91
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Признание доходов от целевого финансирования (Дт 98 :: Кт 91)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаРегл КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС) КАК СчетДт,
	|	ТаблицаОС.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	Строки.СуммаРегл КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	Строки.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.СтатьяДоходов КАК СубконтоКт1,
	|	Строки.АналитикаДоходов КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	Строки.СуммаРегл КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Признание доходов от целевого финансирования при списании остаточной стоимости"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеДоходы КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = Строки.Регистратор
	|			И ТаблицаОС.ИдентификаторСтроки = Строки.ИдентификаторФинЗаписи
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ВыбытиеАрендованногоОС // Дт ---:: Кт СчетЗабалансовогоУчета
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Выбытие с забалансового учета арендуемых ОС (Дт ---:: Кт СчетЗабалансовогоУчета)
	|ВЫБРАТЬ
	|
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.ЗалоговаяСтоимость КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗабалансовыйУчетВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.КорКонтрагент КАК СубконтоКт1,
	|	Строки.ОсновноеСредство КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|
	|	""Выбытие с забалансового учета арендуемых ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|		ПО ДокументыКОтражению.Ссылка = Строки.Регистратор
	|
	|ГДЕ
	|	Строки.ЗалоговаяСтоимость <> 0";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область СписаниеРезерваДооценки //Дт 83.01 :: Кт 84.01
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Списание резерва дооценки (Дт 83.01 :: Кт 84.01)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.ПриростСтоимостиРегл КАК Сумма,
	|	Строки.ПриростСтоимости КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервДоОценкиВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибыльПодлежащаяРаспределению) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Списание резерва дооценки"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|		ПО ДокументыКОтражению.Ссылка = Строки.Регистратор
	|
	|ГДЕ
	|	Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРезерваПереоценкиСтоимостиОС)
	|	И (Строки.ПриростСтоимости <> 0
	|		ИЛИ Строки.ПриростСтоимостиРегл <> 0)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
КонецПроцедуры

// 
// Параметры:
// 	СписокЗапросов - Массив -
Процедура ТекстОтраженияВРеглУчетеЗакрытияРасходовОтВыбытияОС(СписокЗапросов) Экспорт
	
	#Область ЗакрытиеРасходовОтВыбытияОС_НаСтатьиРасходов // Дт 91 :: Кт 01.09
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Закрытие расходов от выбытия ОС на статьи расходов (Дт 91 :: Кт 01.09)
	|ВЫБРАТЬ
	|	
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	СтрокиДт.СуммаРегл КАК Сумма,
	|	СтрокиДт.Сумма КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ВЫБОР КОГДА СтатьиСтроительства.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	СтрокиДт.СтатьяРасходов КАК АналитикаУчетаДт,
	|	СтрокиДт.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	СтрокиДт.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	СтрокиДт.СтатьяРасходов КАК СубконтоДт1,
	|	СтрокиДт.АналитикаРасходов КАК СубконтоДт2,
	|
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|				ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|						ТОГДА ОбъектыСтроительства.СпособСтроительства
	|					ИНАЧЕ 
	|						ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) 
	|				КОНЕЦ
	|	ИНАЧЕ
	|		ЕСТЬNULL(ЕСТЬNULL(СписаниеОС.ОсновноеСредство, РеализацияОС.ВнеоборотныйАктив), НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	СтрокиДт.СуммаРегл - СтрокиДт.ПостояннаяРазница - СтрокиДт.ВременнаяРазница КАК СуммаНУДт,
	|	СтрокиДт.ПостояннаяРазница КАК СуммаПРДт,
	|	СтрокиДт.ВременнаяРазница КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	СтрокиКт.СтатьяРасходов КАК ГруппаФинансовогоУчетаКт,
	|	СтрокиКт.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	СтрокиКт.Подразделение КАК ПодразделениеКт,
	|	СтрокиКт.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	СтрокиКт.СтатьяРасходов КАК СубконтоКт1,
	|	СтрокиКт.АналитикаРасходов КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	СтрокиКт.СуммаРегл - СтрокиКт.ПостояннаяРазница - СтрокиКт.ВременнаяРазница КАК СуммаНУКт,
	|	СтрокиКт.ПостояннаяРазница КАК СуммаПРКт,
	|	СтрокиКт.ВременнаяРазница КАК СуммаВРКт,
	|	
	|	""Закрытие расходов от выбытия ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиДт
	|		ПО ДокументыКОтражению.Ссылка = СтрокиДт.Регистратор
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиКт
	|		ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|			И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|			И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|			И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|		ПО СтрокиДт.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|			И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|		ПО ОбъектыСтроительства.Ссылка = СтрокиДт.АналитикаРасходов
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеОС2_4.ОС КАК СписаниеОС
	|		ПО СписаниеОС.Ссылка = СтрокиДт.Регистратор
	|			И СписаниеОС.ИдентификаторСтроки = СтрокиДт.ИдентификаторФинЗаписи
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Расходы КАК РеализацияОС
	|		ПО РеализацияОС.Ссылка = СтрокиДт.Регистратор
	|			И РеализацияОС.ИдентификаторСтроки = СтрокиДт.ИдентификаторФинЗаписи
	|
	|ГДЕ
	|	СтрокиДт.НастройкаХозяйственнойОперации В (
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ЗакрытиеРасходовОтСписанияОС),
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ЗакрытиеРасходовОтРеализацииОС))
	|
	|	И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ЗакрытиеРасходовОтВыбытияОС_НаСтатьиАктивовПассивов // Дт ... :: Кт 01.09
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Закрытие расходов от выбытия ОС на прочие активы (Дт ... :: Кт 01.09)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаРегл КАК Сумма,
	|	Строки.Сумма КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	Операция.НастройкаСчетовУчета.СчетУчета КАК СчетДт,
	|
	|	Операция.НастройкаСчетовУчета.Субконто1 КАК СубконтоДт1,
	|	Операция.НастройкаСчетовУчета.Субконто2 КАК СубконтоДт2,
	|	Операция.НастройкаСчетовУчета.Субконто3 КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	Строки.СуммаРегл - Строки.ПостояннаяРазница - Строки.ВременнаяРазница КАК СуммаНУДт,
	|	Строки.ПостояннаяРазница КАК СуммаПРДт,
	|	Строки.ВременнаяРазница КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	Строки.СтатьяРасходов КАК ГруппаФинансовогоУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	Строки.СтатьяРасходов КАК СубконтоКт1,
	|	Строки.АналитикаРасходов КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	Строки.СуммаРегл - Строки.ПостояннаяРазница - Строки.ВременнаяРазница КАК СуммаНУКт,
	|	Строки.ПостояннаяРазница КАК СуммаПРКт,
	|	Строки.ВременнаяРазница КАК СуммаВРКт,
	|	
	|	""Закрытие расходов от выбытия ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК Строки
	|		ПО ДокументыКОтражению.Ссылка = Строки.Регистратор
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС2_4 КАК Операция
	|		ПО Строки.Регистратор = Операция.Ссылка
	|	
	|ГДЕ
	|	Строки.НастройкаХозяйственнойОперации В (
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ЗакрытиеРасходовОтСписанияОС),
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ЗакрытиеРасходовОтРеализацииОС))
	|
	|	И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Операция.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
		
КонецПроцедуры

// 
// Параметры:
// 	СписокЗапросов - Массив -
Процедура ТекстОтраженияВРеглУчетеЗакрытияРасходовОтВыбытияОССОтложеннымПереходомПрав(СписокЗапросов) Экспорт
	
	#Область НедвижимостьДоПереходаПрава_Дт_45_04___Кт_01_09
	ТекстЗапроса =
	"ВЫБРАТЬ //// Передача актива до перехода права собственности (Дт <45.04> :: Кт <01.09>)
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаРегл КАК Сумма,
	|	Строки.Сумма КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПустаяСсылка) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПереданныеОбъектыНедвижимости) КАК СчетДт,
	|	
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	Строки.СуммаРегл - Строки.ПостояннаяРазница - Строки.ВременнаяРазница КАК СуммаНУДт,
	|	Строки.ПостояннаяРазница КАК СуммаПРДт,
	|	Строки.ВременнаяРазница КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	Строки.СтатьяРасходов КАК СубконтоКт1,
	|	Строки.АналитикаРасходов КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	Строки.СуммаРегл - Строки.ПостояннаяРазница - Строки.ВременнаяРазница КАК СуммаНУКт,
	|	Строки.ПостояннаяРазница КАК СуммаПРКт,
	|	Строки.ВременнаяРазница КАК СуммаВРКт,
	|	
	|	""Закрытие расходов от выбытия ОС до перехода права собственности"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов КАК Операция
	|		ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОСБУ КАК втПорядокУчетаОСБУ
	|		ПО втПорядокУчетаОСБУ.Ссылка = Строки.Регистратор
	|	
	|ГДЕ
	|	Строки.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав)
	|	И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ЕСТЬNULL(втПорядокУчетаОСБУ.НедвижимоеИмущество, ЛОЖЬ)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область НедвижимостьПослеПереходаПрава_Дт_91_02___Кт_45_04
	ТекстЗапроса =
	"ВЫБРАТЬ //// Расходы от списания актива с отложенным переходом прав (Дт <91.02> :: Кт <45.04>)
	|	
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	СтрокиДт.СуммаРегл КАК Сумма,
	|	СтрокиДт.Сумма КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	СтрокиДт.СтатьяРасходов КАК АналитикаУчетаДт,
	|	СтрокиДт.Подразделение КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	СтрокиДт.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	
	|	СтрокиДт.СтатьяРасходов КАК СубконтоДт1,
	|	СтрокиДт.АналитикаРасходов КАК СубконтоДт2,
	|	СтрокиКт.ВнеоборотныйАктив КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	СтрокиДт.СуммаРегл - СтрокиДт.ПостояннаяРазница - СтрокиДт.ВременнаяРазница КАК СуммаНУДт,
	|	СтрокиДт.ПостояннаяРазница КАК СуммаПРДт,
	|	СтрокиДт.ВременнаяРазница КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПустаяСсылка) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	СтрокиДт.Подразделение КАК ПодразделениеКт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПереданныеОбъектыНедвижимости) КАК СчетКт,
	|	
	|	Операция.Контрагент КАК СубконтоКт1,
	|	СтрокиКт.ВнеоборотныйАктив КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	СтрокиДт.СуммаРегл - СтрокиДт.ПостояннаяРазница - СтрокиДт.ВременнаяРазница КАК СуммаНУКт,
	|	СтрокиДт.ПостояннаяРазница КАК СуммаПРКт,
	|	СтрокиДт.ВременнаяРазница КАК СуммаВРКт,
	|	
	|	""Закрытие расходов от выбытия ОС после перехода права собственности""  КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов КАК Операция
	|		ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиДт
	|		ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Расходы КАК СтрокиКт
	|		ПО СтрокиКт.Ссылка = СтрокиДт.Регистратор
	|			И СтрокиКт.ИдентификаторСтроки = СтрокиДт.ИдентификаторСтроки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОСБУ КАК втПорядокУчетаОСБУ
	|		ПО втПорядокУчетаОСБУ.Ссылка = СтрокиКт.Ссылка
	|	
	|ГДЕ
	|	СтрокиДт.НастройкаХозяйственнойОперации В (
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав),
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ЗакрытиеРасходовОтРеализацииОСПослеПереходаПрав))
	|	И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ЕСТЬNULL(втПорядокУчетаОСБУ.НедвижимоеИмущество, ЛОЖЬ)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
			
	#Область ДвижимоеИмуществоДоПереходаПрава_Дт_45_03___Кт_01_09
	ТекстЗапроса =
	"ВЫБРАТЬ //// Передача актива до перехода права собственности (Дт <45.03> :: Кт <01.09>)
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаРегл КАК Сумма,
	|	Строки.Сумма КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПустаяСсылка) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеТоварыОтгруженные) КАК СчетДт,
	|	
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	Строки.СуммаРегл - Строки.ПостояннаяРазница - Строки.ВременнаяРазница КАК СуммаНУДт,
	|	Строки.ПостояннаяРазница КАК СуммаПРДт,
	|	Строки.ВременнаяРазница КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	Строки.СтатьяРасходов КАК СубконтоКт1,
	|	Строки.АналитикаРасходов КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	Строки.СуммаРегл - Строки.ПостояннаяРазница - Строки.ВременнаяРазница КАК СуммаНУКт,
	|	Строки.ПостояннаяРазница КАК СуммаПРКт,
	|	Строки.ВременнаяРазница КАК СуммаВРКт,
	|	
	|	""Закрытие расходов от выбытия ОС до перехода права собственности"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов КАК Операция
	|		ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОСБУ КАК втПорядокУчетаОСБУ
	|		ПО втПорядокУчетаОСБУ.Ссылка = Строки.Регистратор
	|	
	|ГДЕ
	|	Строки.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав)
	|	И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И НЕ ЕСТЬNULL(втПорядокУчетаОСБУ.НедвижимоеИмущество, ЛОЖЬ)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ДвижимоеИмуществоПослеПереходаПрава_Дт_91_02__Кт_45_03
	ТекстЗапроса =
	"ВЫБРАТЬ //// Расходы от списания актива с отложенным переходом прав (Дт <91.02> :: Кт <45.03>)
	|	
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	СтрокиДт.СуммаРегл КАК Сумма,
	|	СтрокиДт.Сумма КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	СтрокиДт.СтатьяРасходов КАК АналитикаУчетаДт,
	|	СтрокиДт.Подразделение КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	СтрокиДт.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	
	|	СтрокиДт.СтатьяРасходов КАК СубконтоДт1,
	|	СтрокиДт.АналитикаРасходов КАК СубконтоДт2,
	|	СтрокиКт.ВнеоборотныйАктив КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	СтрокиДт.СуммаРегл - СтрокиДт.ПостояннаяРазница - СтрокиДт.ВременнаяРазница КАК СуммаНУДт,
	|	СтрокиДт.ПостояннаяРазница КАК СуммаПРДт,
	|	СтрокиДт.ВременнаяРазница КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПустаяСсылка) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	СтрокиДт.Подразделение КАК ПодразделениеКт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеТоварыОтгруженные) КАК СчетКт,
	|	
	|	Операция.Контрагент КАК СубконтоКт1,
	|	СтрокиКт.ВнеоборотныйАктив КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	СтрокиДт.СуммаРегл - СтрокиДт.ПостояннаяРазница - СтрокиДт.ВременнаяРазница КАК СуммаНУКт,
	|	СтрокиДт.ПостояннаяРазница КАК СуммаПРКт,
	|	СтрокиДт.ВременнаяРазница КАК СуммаВРКт,
	|	
	|	""Закрытие расходов от выбытия ОС после перехода права собственности"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов КАК Операция
	|		ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиДт
	|		ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Расходы КАК СтрокиКт
	|		ПО СтрокиКт.Ссылка = СтрокиДт.Регистратор
	|			И СтрокиКт.ИдентификаторСтроки = СтрокиДт.ИдентификаторСтроки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОСБУ КАК втПорядокУчетаОСБУ
	|		ПО втПорядокУчетаОСБУ.Ссылка = СтрокиКт.Ссылка
	|	
	|ГДЕ
	|	СтрокиДт.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ЗакрытиеРасходовОтРеализацииОСПослеПереходаПрав)
	|	И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И НЕ ЕСТЬNULL(втПорядокУчетаОСБУ.НедвижимоеИмущество, ЛОЖЬ)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
			
КонецПроцедуры

// 
// Параметры:
// 	СписокЗапросов - Массив -
Процедура ТекстОтраженияВРеглУчетеУслугПоАренде(СписокЗапросов) Экспорт

	#Область УслугаБезНДС // Дт <76.07.1> :: Кт <76.07.2, 76.07.3, 76.07.4>
	ТекстЗапроса =
	"
	|// Поступление услуг по аренде (Дт <76.07.1> :: Кт <76.07.2, 76.07.3, 76.07.4>)
	|ВЫБРАТЬ
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	СтрокиДт.СуммаРегл КАК Сумма,
	|	СтрокиДт.СуммаУпр КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательства) КАК ВидСчетаДт,
	|	СтрокиДт.Договор.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	СтрокиДт.Валюта КАК ВалютаДт,
	|	ВЫРАЗИТЬ(СтрокиДт.Договор КАК Справочник.ДоговорыАренды).Подразделение КАК ПодразделениеДт,
	|	ВЫРАЗИТЬ(СтрокиДт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоДт1,
	|	СтрокиДт.Договор    КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоДт3,
	|	
	|	СтрокиДт.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ВЫБОР СтрокиКт.ТипСуммы
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.УслугаПоАренде)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбеспечительныйПлатеж)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупнаяСтоимость)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательства)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.Проценты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НачислениеПроцентовПоАренде)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.НДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриАренде)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	СтрокиКт.Валюта КАК ВалютаКт,
	|	СтрокиКт.Договор.Подразделение КАК ПодразделениеКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	СтрокиКт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоКт1,
	|	СтрокиКт.Договор    КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоКт3,
	|
	|	СтрокиКт.Сумма КАК ВалютнаяСуммаКт,
	|	
	|	0 КАК КоличествоКт,
	|
	|	ВЫБОР 
	|		КОГДА СтрокиКт.ТипСуммы В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства))
	|			ТОГДА СтрокиКт.СуммаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНУКт,
	|
	|	0 КАК СуммаПРКт,
	|
	|	ВЫБОР 
	|		КОГДА НЕ СтрокиКт.ТипСуммы В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства))
	|			ТОГДА СтрокиКт.СуммаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВРКт,
	|
	|	ВЫБОР СтрокиКт.ТипСуммы
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|			ТОГДА ""Поступление услуг по аренде""
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|			ТОГДА ""Зачет обеспечительного платежа""
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость)
	|			ТОГДА ""Выкуп предметов аренды""
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.Проценты) 
	|			ТОГДА ""Списание процентов""
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.НДС)
	|			ТОГДА ""Списание НДС""
	|	КОНЕЦ КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиДт
	|	ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|		И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И СтрокиДт.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиКт
	|	ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|		И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|		И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|		И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|ГДЕ
	|	СтрокиДт.НастройкаХозяйственнойОперации В (
	|			ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПоступлениеУслугПоАренде),
	|			ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОбеспечительныйПлатеж),
	|			ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВыкупАрендованныхОС))";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область УслугаНДС // НДС  (Дт <76.07.1> :: Кт <76.07.09>)
	ТекстЗапроса = 
	"ВЫБРАТЬ // НДС в составе услуг по лизингу (Дт <76.07.1> :: Кт <76.07.09>)
	|
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|	Строки.СуммаУпр КАК СуммаУУ,
	|
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательства) КАК ВидСчетаДт,
	|	ВЫРАЗИТЬ(Строки.Договор КАК Справочник.ДоговорыАренды).ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	Строки.Валюта КАК ВалютаДт,
	|	ВЫРАЗИТЬ(Строки.Договор КАК Справочник.ДоговорыАренды).Подразделение КАК ПодразделениеДт,
	|	ВЫРАЗИТЬ(Строки.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	Строки.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоДт1,
	|	Строки.Договор    КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО      КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриАренде) КАК ВидСчетаКт,
	|	Строки.Договор.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	Строки.Валюта КАК ВалютаКт,
	|	ВЫРАЗИТЬ(Строки.Договор КАК Справочник.ДоговорыАренды).Подразделение КАК ПодразделениеКт,
	|	ВЫРАЗИТЬ(Строки.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоАренднымОбязательствам) КАК СчетКт,
	|	
	|	Строки.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоКт1,
	|	Строки.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""НДС в составе услуг по аренде"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.НДС)
	|ГДЕ
	|	Строки.НастройкаХозяйственнойОперации В (
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.НачислениеНДСВЧастиУслугиПоАренде),
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.НачислениеНДСВЧастиОбеспечительногоПлатежа),
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.НачислениеНДСВЧастиВыкупнойСтоимости))";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ТекстНДС // НДС  (Дт <19.ХХ> :: Кт <76.07.2, 76.07.3, 76.07.4>)
	ТекстЗапроса =
	"ВЫБРАТЬ // Поступление НДС (Дт <19.ХХ> :: Кт <76.07.2, 76.07.3, 76.07.4>) @НДСПредъявленный
	|
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СтрокиДт.НДС КАК Сумма,
	|	0 КАК СуммаУУ,
	|
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) КАК ВидСчетаДт,
	|	СтрокиДт.ВидДеятельностиНДС КАК АналитикаУчетаДт,
	|	СтрокиДт.ВидЦенности КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеДт,
	|	ЕСТЬNULL(ВводСобственныхСредств.НаправлениеДеятельности, СтрокиДт.НаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	СтрокиКт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоДт1,
	|	СтрокиДт.Регистратор КАК СубконтоДт2,
	|	ВЫБОР КОГДА Статьи.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы) ТОГДА
	|		СтрокиДт.АналитикаРасходов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ВЫБОР СтрокиКт.ТипСуммы
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.УслугаПоАренде)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбеспечительныйПлатеж)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупнаяСтоимость)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательства)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	СтрокиКт.Валюта КАК ВалютаКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).Подразделение КАК ПодразделениеКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	СтрокиКт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоКт1,
	|	СтрокиКт.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	СтрокиКт.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Поступление НДС"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДСПредъявленный КАК СтрокиДт
	|	ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиКт
	|	ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|		И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|		И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|		И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И СтрокиКт.СуммаРегл <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|	ПО СтрокиДт.СтатьяРасходов = Статьи.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТВводСобственныхСредств КАК ВводСобственныхСредств
	|	ПО ВводСобственныхСредств.Ссылка = СтрокиДт.Регистратор 
	|		И ВводСобственныхСредств.СчетФактура = СтрокиДт.СчетФактура
	|		И ВводСобственныхСредств.ИсходноеНаправлениеДеятельности = СтрокиДт.НаправлениеДеятельности
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Поступление НДС (Дт <19.ХХ> :: Кт <76.07.2, 76.07.3, 76.07.4>) @НДСПредъявленный
	|
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	СтрокиДт.НДСУпр КАК СуммаУУ,
	|
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) КАК ВидСчетаДт,
	|	СтрокиДт.ВидДеятельностиНДС КАК АналитикаУчетаДт,
	|	СтрокиДт.ВидЦенности КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеДт,
	|	ЕСТЬNULL(ВводСобственныхСредств.НаправлениеДеятельности, СтрокиДт.НаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	СтрокиКт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоДт1,
	|	СтрокиДт.Регистратор КАК СубконтоДт2,
	|	ВЫБОР КОГДА Статьи.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы) ТОГДА
	|		СтрокиДт.АналитикаРасходов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ВЫБОР СтрокиКт.ТипСуммы
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.УслугаПоАренде)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбеспечительныйПлатеж)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупнаяСтоимость)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательства)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	СтрокиКт.Валюта КАК ВалютаКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).Подразделение КАК ПодразделениеКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	СтрокиКт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоКт1,
	|	СтрокиКт.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Поступление НДС"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДСПредъявленный КАК СтрокиДт
	|	ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиКт
	|	ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|		И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|		И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|		И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И СтрокиКт.СуммаУпр <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|	ПО СтрокиДт.СтатьяРасходов = Статьи.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТВводСобственныхСредств КАК ВводСобственныхСредств
	|	ПО ВводСобственныхСредств.Ссылка = СтрокиДт.Регистратор 
	|		И ВводСобственныхСредств.СчетФактура = СтрокиДт.СчетФактура
	|		И ВводСобственныхСредств.ИсходноеНаправлениеДеятельности = СтрокиДт.НаправлениеДеятельности";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УслугаНаРасходыБезНДС // (Дт <Расходы> :: Кт <76.2, 76.4>)
	ТекстЗапроса =
	"ВЫБРАТЬ // Отражение услуги в расходах (Дт <Расходы> :: Кт <76.2, 76.4>)
	|
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СтрокиДт.СуммаРегл КАК Сумма,
	|	СтрокиДт.СуммаУпр КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	СтрокиДт.СтатьяРасходов КАК АналитикаУчетаДт,
	|	СтрокиДт.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	СтрокиДт.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	СтрокиДт.АналитикаРасходов КАК СубконтоДт1,
	|	СтрокиДт.СтатьяРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	СтрокиДт.СуммаРегл - СтрокиДт.ПостояннаяРазница - СтрокиДт.ВременнаяРазница КАК СуммаНУДт,
	|	СтрокиДт.ПостояннаяРазница КАК СуммаПРДт,
	|	СтрокиДт.ВременнаяРазница КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ВЫБОР СтрокиКт.ТипСуммы
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.УслугаПоАренде)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.УслугаПоАренде)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупнаяСтоимость)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	СтрокиКт.Договор.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	СтрокиКт.Валюта КАК ВалютаКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).Подразделение КАК ПодразделениеКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	СтрокиКт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоКт1,
	|	СтрокиКт.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	СтрокиКт.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|
	|	""Отражение услуги в расходах"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиДт
	|	ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|		И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиКт
	|	ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|		И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|		И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|		И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО СтрокиДт.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО СтрокиДт.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = СтрокиДт.АналитикаРасходов
	|ГДЕ
	|	СтрокиДт.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтражениеУслугПоАрендеВРасходах)
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И (СтрокиДт.СуммаРегл <> 0
	|		ИЛИ СтрокиДт.СуммаУпр <> 0
	|		ИЛИ СтрокиДт.СуммаРегл - СтрокиДт.ПостояннаяРазница - СтрокиДт.ВременнаяРазница <> 0
	|		ИЛИ СтрокиДт.ПостояннаяРазница <> 0
	|		ИЛИ СтрокиДт.ВременнаяРазница <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СтрокиДт.СуммаРегл КАК Сумма,
	|	СтрокиДт.СуммаУпр КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	СтрокиДт.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	СтрокиДт.НастройкаСчетовУчета.СчетУчета КАК СчетДт,
	|	СтрокиДт.НастройкаСчетовУчета.Субконто1 КАК СубконтоДт1,
	|	СтрокиДт.НастройкаСчетовУчета.Субконто2 КАК СубконтоДт2,
	|	СтрокиДт.НастройкаСчетовУчета.Субконто3 КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	СтрокиДт.СуммаРегл - СтрокиДт.ПостояннаяРазница - СтрокиДт.ВременнаяРазница КАК СуммаНУДт,
	|	СтрокиДт.ПостояннаяРазница КАК СуммаПРДт,
	|	СтрокиДт.ВременнаяРазница КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ВЫБОР СтрокиКт.ТипСуммы
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.УслугаПоАренде)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.УслугаПоАренде)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимость) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупнаяСтоимость)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	СтрокиКт.Договор.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	СтрокиКт.Валюта КАК ВалютаКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).Подразделение КАК ПодразделениеКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	СтрокиКт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоКт1,
	|	СтрокиКт.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	СтрокиКт.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|
	|	""Отражение услуги в расходах"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияПоПрочимАктивамПассивам КАК СтрокиДт
	|	ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиКт
	|	ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|		И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|		И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|		И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|ГДЕ
	|	СтрокиДт.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтражениеУслугПоАрендеВРасходах)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область БалансировкаВР // (Дт <Расходы> :: Кт 76.А)
	ТекстЗапроса =
	"ВЫБРАТЬ // Балансировка ВР по договору аренды (Дт <Расходы> :: Кт 76.А)
	|
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	СтрокиДт.СтатьяРасходов КАК АналитикаУчетаДт,
	|	СтрокиДт.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	СтрокиДт.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	СтрокиДт.АналитикаРасходов КАК СубконтоДт1,
	|	СтрокиДт.СтатьяРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).Подразделение КАК ПодразделениеКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.БалансировкаВРПоДоговорамАренды) КАК СчетКт,
	|	СтрокиКт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоКт1,
	|	СтрокиКт.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	-СтрокиДт.ВременнаяРазница КАК СуммаНУКт,
	|	0                          КАК СуммаПРКт,
	|	СтрокиДт.ВременнаяРазница  КАК СуммаВРКт,
	|
	|	""Балансировка ВР по договору аренды"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиДт
	|	ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|		И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиКт
	|	ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|		И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|		И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|		И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО СтрокиДт.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО СтрокиДт.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = СтрокиДт.АналитикаРасходов
	|ГДЕ
	|	СтрокиДт.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтражениеУслугПоАрендеВРасходах)
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	СтрокиДт.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	СтрокиДт.НастройкаСчетовУчета.СчетУчета КАК СчетДт,
	|	СтрокиДт.НастройкаСчетовУчета.Субконто1 КАК СубконтоДт1,
	|	СтрокиДт.НастройкаСчетовУчета.Субконто2 КАК СубконтоДт2,
	|	СтрокиДт.НастройкаСчетовУчета.Субконто3 КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).Подразделение КАК ПодразделениеКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.БалансировкаВРПоДоговорамАренды) КАК СчетКт,
	|	СтрокиКт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоКт1,
	|	СтрокиКт.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	-СтрокиДт.ВременнаяРазница КАК СуммаНУКт,
	|	0                          КАК СуммаПРКт,
	|	СтрокиДт.ВременнаяРазница  КАК СуммаВРКт,
	|
	|	""Балансировка ВР по договору аренды"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияПоПрочимАктивамПассивам КАК СтрокиДт
	|	ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиКт
	|	ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|		И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|		И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|		И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|ГДЕ
	|	СтрокиДт.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтражениеУслугПоАрендеВРасходах)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
КонецПроцедуры

// 
// Параметры:
// 	СписокЗапросов - Массив -
Процедура ТекстОтраженияВРеглУчетеЗачетаАвансовПоАренде(СписокЗапросов) Экспорт
	
	ТекстЗапроса =
	"
	|// Поступление услуг по аренде (Дт <76.07.4> :: Кт <76.07.2, 76.07.3>)
	|ВЫБРАТЬ
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	СтрокиДт.СуммаРегл КАК Сумма,
	|	СтрокиДт.СуммаУпр КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупнаяСтоимость) КАК ВидСчетаДт,
	|	СтрокиДт.Договор.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	СтрокиДт.Валюта КАК ВалютаДт,
	|	ВЫРАЗИТЬ(СтрокиДт.Договор КАК Справочник.ДоговорыАренды).Подразделение КАК ПодразделениеДт,
	|	ВЫРАЗИТЬ(СтрокиДт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоДт1,
	|	СтрокиДт.Договор    КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоДт3,
	|	
	|	СтрокиДт.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ВЫБОР СтрокиКт.ТипСуммы
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.УслугаПоАренде)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбеспечительныйПлатеж)
	|
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимостьАванс)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупнаяСтоимость)
	|
	|	КОНЕЦ КАК ВидСчетаКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	СтрокиКт.Валюта КАК ВалютаКт,
	|	СтрокиКт.Договор.Подразделение КАК ПодразделениеКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	СтрокиКт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоКт1,
	|	СтрокиКт.Договор    КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоКт3,
	|
	|	СтрокиКт.Сумма КАК ВалютнаяСуммаКт,
	|	
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	ВЫБОР СтрокиКт.ТипСуммы
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде)
	|			ТОГДА ""Зачет оплаты услуги по аренде в счет выкупной стоимости""
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж)
	|			ТОГДА ""Зачет обеспечительного платежа в счет выкупной стоимости""
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ВыкупнаяСтоимостьАванс)
	|			ТОГДА ""Зачет аванаса выкупной стоимости""
	|	КОНЕЦ КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиДт
	|	ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|		И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиКт
	|	ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|		И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|		И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|		И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|ГДЕ
	|	СтрокиДт.НастройкаХозяйственнойОперации В (
	|			ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ЗачетОплатыУслугиПоАрендеВСчетВыкупнойСтоимости),
	|			ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ЗачетОбеспечительногоПлатежаВСчетВыкупнойСтоимости),
	|			ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ЗачетАвансаВыкупнойСтоимостиВСчетВыкупнойСтоимости))";
	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

// 
// Параметры:
// 	СписокЗапросов - Массив -
Процедура ТекстОтраженияВРеглУчетеЗакрытияСчетовПоАренде(СписокЗапросов) Экспорт

	#Область ЗакрытиеСчетов // Дт <76.07.1> - Кт <70.07.5, 76.07.9>
	ТекстЗапроса =
	"
	|// Закрытие счетов по аренде (Дт <76.07.1> - Кт <70.07.5, 76.07.9>)
	|ВЫБРАТЬ
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	СтрокиДт.СуммаРегл КАК Сумма,
	|	СтрокиДт.СуммаУпр КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательства) КАК ВидСчетаДт,
	|	СтрокиДт.Договор.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	СтрокиДт.Валюта КАК ВалютаДт,
	|	ВЫРАЗИТЬ(СтрокиДт.Договор КАК Справочник.ДоговорыАренды).Подразделение КАК ПодразделениеДт,
	|	ВЫРАЗИТЬ(СтрокиДт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоДт1,
	|	СтрокиДт.Договор    КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоДт3,
	|	
	|	СтрокиДт.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ВЫБОР СтрокиКт.ТипСуммы
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.Проценты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НачислениеПроцентовПоАренде)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.НДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриАренде)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	СтрокиКт.Валюта КАК ВалютаКт,
	|	СтрокиКт.Договор.Подразделение КАК ПодразделениеКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	СтрокиКт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоКт1,
	|	СтрокиКт.Договор    КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоКт3,
	|
	|	СтрокиКт.Сумма КАК ВалютнаяСуммаКт,
	|	
	|	0 КАК КоличествоКт,
	|
	|	ВЫБОР 
	|		КОГДА СтрокиКт.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.Проценты)
	|			ТОГДА СтрокиДт.СуммаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	ВЫБОР 
	|		КОГДА СтрокиКт.ТипСуммы <> ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.Проценты)
	|			ТОГДА СтрокиДт.СуммаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВРКт,
	|
	|	ВЫБОР СтрокиКт.ТипСуммы
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.Проценты)
	|			ТОГДА ""Списание процентов""
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.НДС)
	|			ТОГДА ""Списание НДС""
	|	КОНЕЦ КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиДт
	|	ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|		И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиКт
	|	ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|		И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|		И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|		И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|ГДЕ
	|	СтрокиДт.НастройкаХозяйственнойОперации В (
	|			ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеПроцентовПоАренде),
	|			ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеНДСПоАренде))";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ЗакрытиеСчета01К // Дт <76.07.1> - Кт <01.К>
	ТекстЗапроса =
	"
	|// Закрытие счетов по аренде (Дт <76.07.1> - Кт <01.К>)
	|ВЫБРАТЬ
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательства) КАК ВидСчетаДт,
	|	СтрокиДт.Договор.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	СтрокиДт.Валюта КАК ВалютаДт,
	|	ВЫРАЗИТЬ(СтрокиДт.Договор КАК Справочник.ДоговорыАренды).Подразделение КАК ПодразделениеДт,
	|	ВЫРАЗИТЬ(СтрокиДт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоДт1,
	|	СтрокиДт.Договор    КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоДт3,
	|	
	|	СтрокиДт.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	СтрокиКт.Подразделение КАК ПодразделениеКт,
	|	СтрокиКт.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества) КАК СчетКт,
	|	
	|	СтрокиКт.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	СтрокиКт.НеУчитываемаяСтоимостьНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-СтрокиКт.НеУчитываемаяСтоимостьНУ КАК СуммаВРКт,
	|
	|	""Списание не учитываемой части стоимости предметов аренды в налоговом учете"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиДт
	|	ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|		И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК СтрокиКт
	|	ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|		И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|		И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|		И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|ГДЕ
	|	СтрокиКт.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеНеУчитываемойСтоимостиНУ)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область БалансировкаВР_ЗакрытиеСчета01К // Дт <76.А> - Кт <01.К>
	ТекстЗапроса =
	"
	|// Закрытие счетов по аренде (Дт <76.А> - Кт <01.К>)
	|ВЫБРАТЬ
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	СтрокиДт.Договор.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	СтрокиДт.Валюта КАК ВалютаДт,
	|	ВЫРАЗИТЬ(СтрокиДт.Договор КАК Справочник.ДоговорыАренды).Подразделение КАК ПодразделениеДт,
	|	ВЫРАЗИТЬ(СтрокиДт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.БалансировкаВРПоДоговорамАренды) КАК СчетДт,
	|	
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоДт1,
	|	СтрокиДт.Договор    КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	СтрокиКт.НеУчитываемаяСтоимостьНУ  КАК СуммаНУДт,
	|	0                                  КАК СуммаПРДт,
	|	-СтрокиКт.НеУчитываемаяСтоимостьНУ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	СтрокиКт.Подразделение КАК ПодразделениеКт,
	|	СтрокиКт.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества) КАК СчетКт,
	|	
	|	СтрокиКт.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|
	|	""Списание не учитываемой части стоимости предметов аренды в налоговом учете, балансировка ВР"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиДт
	|	ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|		И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК СтрокиКт
	|	ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|		И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|		И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|		И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|ГДЕ
	|	СтрокиКт.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеНеУчитываемойСтоимостиНУ)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОтражениеАрендныхОбязательствВРасходах // Дт <Расходы> - Кт <76.07.1>
	ТекстЗапроса =
	"
	|// Отражение арендных обязательств в расходах (Дт <Расходы> - Кт <76.07.1>)
	|ВЫБРАТЬ
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	СтрокиДт.СуммаРегл КАК Сумма,
	|	СтрокиДт.СуммаУпр КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	СтрокиДт.СтатьяРасходов КАК АналитикаУчетаДт,
	|	СтрокиДт.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	СтрокиДт.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	СтрокиДт.АналитикаРасходов КАК СубконтоДт1,
	|	СтрокиДт.СтатьяРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	СтрокиДт.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	СтрокиДт.СуммаРегл - СтрокиДт.ПостояннаяРазница - СтрокиДт.ВременнаяРазница КАК СуммаНУДт,
	|	СтрокиДт.ПостояннаяРазница КАК СуммаПРДт,
	|	СтрокиДт.ВременнаяРазница КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательства) КАК ВидСчетаКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	СтрокиКт.Валюта КАК ВалютаКт,
	|	СтрокиКт.Договор.Подразделение КАК ПодразделениеКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	СтрокиКт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоКт1,
	|	СтрокиКт.Договор    КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоКт3,
	|
	|	СтрокиКт.Сумма КАК ВалютнаяСуммаКт,
	|	
	|	0 КАК КоличествоКт,
	|
	|	СтрокиДт.СуммаРегл КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|
	|	""Отражение арендных обязательств в расходах"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиДт
	|	ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|		И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиКт
	|	ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|		И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|		И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|		И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО СтрокиДт.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = СтрокиДт.АналитикаРасходов
	|ГДЕ
	|	СтрокиДт.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтражениеАрендныхОбязательствВРасходах)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область БалансировкаВР_ОтражениеАрендныхОбязательствВРасходах // Дт <Расходы> - Кт <76.А>
	ТекстЗапроса =
	"
	|// Отражение арендных обязательств в расходах (Дт <Расходы> - Кт <76.А>)
	|ВЫБРАТЬ
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	СтрокиДт.СтатьяРасходов КАК АналитикаУчетаДт,
	|	СтрокиДт.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	СтрокиДт.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	СтрокиДт.АналитикаРасходов КАК СубконтоДт1,
	|	СтрокиДт.СтатьяРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	СтрокиКт.Валюта КАК ВалютаКт,
	|	СтрокиКт.Договор.Подразделение КАК ПодразделениеКт,
	|	ВЫРАЗИТЬ(СтрокиКт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.БалансировкаВРПоДоговорамАренды) КАК СчетКт,
	|	
	|	СтрокиКт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоКт1,
	|	СтрокиКт.Договор    КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	
	|	0 КАК КоличествоКт,
	|
	|	-СтрокиДт.ВременнаяРазница КАК СуммаНУКт,
	|	0                          КАК СуммаПРКт,
	|	СтрокиДт.ВременнаяРазница  КАК СуммаВРКт,
	|
	|	""Отражение арендных обязательств в расходах, балансировка ВР"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиДт
	|	ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|		И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиКт
	|	ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|		И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|		И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|		И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО СтрокиДт.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = СтрокиДт.АналитикаРасходов
	|ГДЕ
	|	СтрокиДт.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтражениеАрендныхОбязательствВРасходах)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ОтражениеАрендныхОбязательствВДоходах // Дт <76.07.1> - Кт <Доходы>
	ТекстЗапроса =
	"
	|// Закрытие счетов по аренде (Дт <76.07.1> - Кт <Доходы>)
	|ВЫБРАТЬ
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	СтрокиДт.СуммаРегл КАК Сумма,
	|	СтрокиДт.СуммаУпр КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательства) КАК ВидСчетаДт,
	|	СтрокиДт.Договор.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	СтрокиДт.Валюта КАК ВалютаДт,
	|	ВЫРАЗИТЬ(СтрокиДт.Договор КАК Справочник.ДоговорыАренды).Подразделение КАК ПодразделениеДт,
	|	ВЫРАЗИТЬ(СтрокиДт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоДт1,
	|	СтрокиДт.Договор    КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоДт3,
	|	
	|	СтрокиДт.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	СтрокиДт.СуммаРегл КАК СуммаНУДт,
	|	0                  КАК СуммаПРДт,
	|	0                  КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	СтрокиКт.СтатьяДоходов КАК АналитикаУчетаКт,
	|	СтрокиКт.Подразделение КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	СтрокиКт.Подразделение КАК ПодразделениеКт,
	|	СтрокиКт.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоКт1,
	|	СтрокиКт.СтатьяДоходов                        КАК СубконтоКт2,
	|	СтрокиКт.АналитикаДоходов                     КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	
	|	0 КАК КоличествоКт,
	|
	|	0                  КАК СуммаНУКт,
	|	0                  КАК СуммаПРКт,
	|	СтрокиДт.СуммаРегл КАК СуммаВРКт,
	|
	|	""Отражение арендных обязательств в доходах"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиДт
	|	ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|		И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеДоходы КАК СтрокиКт
	|	ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|		И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|		И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|		И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|ГДЕ
	|	СтрокиДт.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтражениеАрендныхОбязательствВДоходах)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область БалансировкаВР_ОтражениеАрендныхОбязательствВДоходах // Дт <76.А> - Кт <Доходы>
	ТекстЗапроса =
	"
	|// Балансировка ВР Закрытие счетов по аренде (Дт <76.А> - Кт <Доходы>)
	|ВЫБРАТЬ
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	СтрокиДт.Договор.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	СтрокиДт.Валюта КАК ВалютаДт,
	|	ВЫРАЗИТЬ(СтрокиДт.Договор КАК Справочник.ДоговорыАренды).Подразделение КАК ПодразделениеДт,
	|	ВЫРАЗИТЬ(СтрокиДт.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.БалансировкаВРПоДоговорамАренды) КАК СчетДт,
	|	
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоДт1,
	|	СтрокиДт.Договор    КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоДт3,
	|	
	|	0                   КАК ВалютнаяСуммаДт,
	|	0                   КАК КоличествоДт,
	|
	|	-СтрокиДт.СуммаРегл КАК СуммаНУДт,
	|	0                   КАК СуммаПРДт,
	|	СтрокиДт.СуммаРегл  КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	СтрокиКт.СтатьяДоходов КАК АналитикаУчетаКт,
	|	СтрокиКт.Подразделение КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	СтрокиКт.Подразделение КАК ПодразделениеКт,
	|	СтрокиКт.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	СтрокиДт.АналитикаУчетаПоПартнерам.Контрагент КАК СубконтоКт1,
	|	СтрокиКт.СтатьяДоходов                        КАК СубконтоКт2,
	|	СтрокиКт.АналитикаДоходов                     КАК СубконтоКт3,
	|
	|	0                  КАК ВалютнаяСуммаКт,
	|	0                  КАК КоличествоКт,
	|
	|	0                  КАК СуммаНУКт,
	|	0                  КАК СуммаПРКт,
	|	0                  КАК СуммаВРКт,
	|
	|	""Отражение арендных обязательств в доходах, балансировка ВР"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоФинансовымИнструментам КАК СтрокиДт
	|	ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|		И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеДоходы КАК СтрокиКт
	|	ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|		И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|		И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|		И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|ГДЕ
	|	СтрокиДт.НастройкаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтражениеАрендныхОбязательствВДоходах)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
КонецПроцедуры

// 
// Параметры:
// 	СписокЗапросов - Массив -
Процедура ТекстЗапросаВТНачислениеАмортизацииОС(СписокЗапросов) Экспорт

	#Область втПервоначальныеСведенияОС
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюНУ
	|ПОМЕСТИТЬ втПервоначальныеСведенияОС
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|		ПО (Строки.Регистратор = ДокументыКОтражению.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(, ДатаИсправления = ДАТАВРЕМЯ(1,1,1)) КАК ПервоначальныеСведенияОС
	|		ПО (Строки.Организация = ПервоначальныеСведенияОС.Организация)
	|			И (Строки.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство)
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область втПараметрыЦелевогоФинансированияОС
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДокументыКОтражению.Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	Строки.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втСписокОС
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО (Строки.Регистратор = ДокументыКОтражению.Ссылка)
	|ГДЕ
	|	(Строки.АмортизацияЦФ <> 0
	|			ИЛИ Строки.АмортизацияНУЦФ <> 0
	|			ИЛИ Строки.АмортизацияПРЦФ <> 0
	|			ИЛИ Строки.АмортизацияВРЦФ <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыЦелевогоФинансированияОС.Ссылка КАК Ссылка,
	|	ПараметрыЦелевогоФинансированияОС.Организация КАК Организация,
	|	ПараметрыЦелевогоФинансированияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыЦелевогоФинансированияОСПоследнее.СтатьяДоходов,
	|	ПараметрыЦелевогоФинансированияОСПоследнее.АналитикаДоходов
	|ПОМЕСТИТЬ втПараметрыЦелевогоФинансированияОС
	|ИЗ
	|	(ВЫБРАТЬ
	|		СписокОС.Ссылка КАК Ссылка,
	|		СписокОС.Организация КАК Организация,
	|		СписокОС.ОсновноеСредство КАК ОсновноеСредство,
	|		МАКСИМУМ(ПараметрыЦелевогоФинансированияОС.Период) КАК ПоследнийПериод
	|	ИЗ
	|		втСписокОС КАК СписокОС
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК ПараметрыЦелевогоФинансированияОС
	|			ПО СписокОС.ОсновноеСредство = ПараметрыЦелевогоФинансированияОС.ОсновноеСредство
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СписокОС.Ссылка,
	|		СписокОС.Организация,
	|		СписокОС.ОсновноеСредство) КАК ПараметрыЦелевогоФинансированияОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК ПараметрыЦелевогоФинансированияОСПоследнее
	|		ПО ПараметрыЦелевогоФинансированияОС.ОсновноеСредство = ПараметрыЦелевогоФинансированияОСПоследнее.ОсновноеСредство
	|			И ПараметрыЦелевогоФинансированияОС.ПоследнийПериод = ПараметрыЦелевогоФинансированияОСПоследнее.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Организация,
	|	ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
КонецПроцедуры

// 
// Параметры:
// 	ДобавитьСчетаУчетаНМА - Булево -
// 	СписокЗапросов - СписокЗначений -
// Возвращаемое значение:
// 	Строка - 
Функция ТекстЗапросаВтСчетаВложенияВоВнеоборотныеАктивы(ДобавитьСчетаУчетаНМА, СписокЗапросов) Экспорт

	ИмяТаблицы = "втСчетаВложенияВоВнеоборотныеАктивы";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	План.Ссылка КАК Счет
	|ПОМЕСТИТЬ втСчетаВложенияВоВнеоборотныеАктивы
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|ГДЕ
	|	План.Ссылка В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПодготовкаКВводуВЭксплуатацию), 
	|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеЗемельныхУчастков), 
	|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеОбъектовПриродопользования), 
	|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств)
	|					//ДобавитьСчетаУчетаНМА//
	|					)
	|   
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	План.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|		ПО ХозрасчетныйВидыСубконто.Ссылка = План.Ссылка
	|			И ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства)
	|ГДЕ
	|	План.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы))";
	
	Если ДобавитьСчетаУчетаНМА Тогда
		ТекстСчетаНМА = 
		",ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеНематериальныхАктивов), 
		|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыполнениеНИОКР),
		|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НематериальныеПоисковыеАктивы)";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДобавитьСчетаУчетаНМА//", ТекстСчетаНМА);
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, СписокЗапросов) Тогда
		СписокЗапросов.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтДоходыОСЗаСчетЦФ() Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДоходыЗаСчетЦФ.Регистратор КАК Регистратор,
	|	ДоходыЗаСчетЦФ.Период КАК Период,
	|	ДоходыЗаСчетЦФ.Организация КАК Организация,
	|	ДоходыЗаСчетЦФ.КорОрганизация КАК КорОрганизация,
	|	ДоходыЗаСчетЦФ.Подразделение КАК Подразделение,
	|	ДоходыЗаСчетЦФ.КорПодразделение КАК КорПодразделение,
	|	ДоходыЗаСчетЦФ.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДоходыЗаСчетЦФ.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ДоходыЗаСчетЦФ.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ДоходыЗаСчетЦФ.Сумма) КАК Сумма
	|ПОМЕСТИТЬ втДоходыОСЗаСчетЦФ
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтоимостьОС.Регистратор КАК Регистратор,
	|		СтоимостьОС.Период КАК Период,
	|		СтоимостьОС.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|		СтоимостьОС.КорГруппаФинансовогоУчета КАК КорГруппаФинансовогоУчета,
	|		СтоимостьОС.Организация КАК Организация,
	|		СтоимостьОС.КорОрганизация КАК КорОрганизация,
	|		СтоимостьОС.Подразделение КАК Подразделение,
	|		СтоимостьОС.КорПодразделение КАК КорПодразделение,
	|		СтоимостьОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтоимостьОС.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|		СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
	|		СтоимостьОС.СтоимостьЦФ КАК Сумма
	|	ИЗ
	|		РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|	ГДЕ
	|		СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И СтоимостьОС.СтоимостьЦФ <> 0
	|		И СтоимостьОС.Регистратор В
	|				(ВЫБРАТЬ
	|					ДокументыКОтражению.Ссылка
	|				ИЗ
	|					ДокументыКОтражению КАК ДокументыКОтражению)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		АмортизацияОС.Регистратор,
	|		АмортизацияОС.Период,
	|		АмортизацияОС.ГруппаФинансовогоУчета,
	|		АмортизацияОС.КорГруппаФинансовогоУчета,
	|		АмортизацияОС.Организация,
	|		АмортизацияОС.КорОрганизация,
	|		АмортизацияОС.Подразделение,
	|		АмортизацияОС.КорПодразделение,
	|		АмортизацияОС.НаправлениеДеятельности,
	|		АмортизацияОС.КорНаправлениеДеятельности,
	|		АмортизацияОС.ОсновноеСредство,
	|		-АмортизацияОС.АмортизацияЦФ
	|	ИЗ
	|		РегистрНакопления.АмортизацияОС КАК АмортизацияОС
	|	ГДЕ
	|		АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И АмортизацияОС.АмортизацияЦФ <> 0
	|		И АмортизацияОС.Регистратор В
	|				(ВЫБРАТЬ
	|					ДокументыКОтражению.Ссылка
	|				ИЗ
	|					ДокументыКОтражению КАК ДокументыКОтражению)) КАК ДоходыЗаСчетЦФ
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыЗаСчетЦФ.Регистратор,
	|	ДоходыЗаСчетЦФ.Период,
	|	ДоходыЗаСчетЦФ.Организация,
	|	ДоходыЗаСчетЦФ.КорОрганизация,
	|	ДоходыЗаСчетЦФ.Подразделение,
	|	ДоходыЗаСчетЦФ.КорПодразделение,
	|	ДоходыЗаСчетЦФ.НаправлениеДеятельности,
	|	ДоходыЗаСчетЦФ.КорНаправлениеДеятельности,
	|	ДоходыЗаСчетЦФ.ОсновноеСредство
	|
	|ИМЕЮЩИЕ
	|	СУММА(ДоходыЗаСчетЦФ.Сумма) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#Область ЦелевоеФинансирование

Процедура ЗаполнитьСуммыЦелевыхСредств(ОС, ЦелевоеФинансирование, ВариантПримененияЦелевогоФинансирования) Экспорт
	
	Для каждого ДанныеСтроки Из ОС Цикл
		ДанныеСтроки.СуммаЦелевыхСредств = 0;
	КонецЦикла; 
	
	Если ВариантПримененияЦелевогоФинансирования = Перечисления.ВариантыПримененияЦелевогоФинансирования.Полное Тогда
		
		Для каждого ДанныеСтроки Из ЦелевоеФинансирование Цикл
			ДанныеСтроки.Сумма = 0;
		КонецЦикла; 
		
	ИначеЕсли ВариантПримененияЦелевогоФинансирования = Перечисления.ВариантыПримененияЦелевогоФинансирования.Частичное Тогда
		
		СтоимостьРеглКоэффициенты = Новый Массив;
		Для каждого ДанныеСтроки Из ОС Цикл
			СтоимостьРеглКоэффициенты.Добавить(ДанныеСтроки.СтоимостьБУ);
		КонецЦикла; 
		
		СуммаКРаспределению = ЦелевоеФинансирование.Итог("Сумма");
		РезультатРаспределения = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СуммаКРаспределению, СтоимостьРеглКоэффициенты);
		
		Если РезультатРаспределения = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Для Сч = 0 По РезультатРаспределения.ВГраница() Цикл
			ОС[Сч].СуммаЦелевыхСредств = РезультатРаспределения[Сч];
		КонецЦикла;
		
	Иначе
		
		ЦелевоеФинансирование.Очистить();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЦелевоеФинансированиеОчиститьСубконто(ЦелевоеФинансирование) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблица", ЦелевоеФинансирование.Выгрузить());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	(ВЫРАЗИТЬ(Таблица.НомерСтроки КАК ЧИСЛО)) - 1 КАК ИндексСтроки,
	|	ВЫРАЗИТЬ(Таблица.Счет КАК ПланСчетов.Хозрасчетный) КАК Счет,
	|	Таблица.Субконто1 КАК Субконто1,
	|	Таблица.Субконто2 КАК Субконто2,
	|	Таблица.Субконто3 КАК Субконто3
	|ПОМЕСТИТЬ втДанныеЗаполнения
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеЗаполнения.ИндексСтроки,
	|	
	|	ВЫБОР КОГДА ХозрасчетныйВидыСубконто1.Ссылка ЕСТЬ NULL
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ втДанныеЗаполнения.Субконто1
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР КОГДА ХозрасчетныйВидыСубконто2.Ссылка ЕСТЬ NULL
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ втДанныеЗаполнения.Субконто2
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР КОГДА ХозрасчетныйВидыСубконто3.Ссылка ЕСТЬ NULL
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ втДанныеЗаполнения.Субконто3
	|	КОНЕЦ КАК Субконто3
	|ИЗ
	|	втДанныеЗаполнения КАК втДанныеЗаполнения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто1
	|		ПО втДанныеЗаполнения.Счет = ХозрасчетныйВидыСубконто1.Ссылка И (ХозрасчетныйВидыСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто2
	|		ПО втДанныеЗаполнения.Счет = ХозрасчетныйВидыСубконто2.Ссылка И (ХозрасчетныйВидыСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто3
	|		ПО втДанныеЗаполнения.Счет = ХозрасчетныйВидыСубконто3.Ссылка И (ХозрасчетныйВидыСубконто3.НомерСтроки = 3)";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаЦФ = ЦелевоеФинансирование[Выборка.ИндексСтроки];
		ЗаполнитьЗначенияСвойств(СтрокаЦФ, Выборка);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// 
// Параметры:
// 	ТекстыЗапроса - СписокЗначений - 
// 	ИмяДокумента - Строка -
Процедура ТекстЗапросаТаблицаВтПараметрыЦелевогоФинансированияОС(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "втПараметрыЦелевогоФинансированияОС";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПараметрыЦелевогоФинансированияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыЦелевогоФинансированияОС.ПрименениеЦелевогоФинансирования КАК ПрименениеЦелевогоФинансирования,
	|	ПараметрыЦелевогоФинансированияОС.СтатьяДоходов КАК СтатьяДоходов,
	|	ПараметрыЦелевогоФинансированияОС.АналитикаДоходов КАК АналитикаДоходов
	|ПОМЕСТИТЬ втПараметрыЦелевогоФинансированияОС
	|ИЗ
	|	РегистрСведений.ПараметрыЦелевогоФинансированияОС.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ПараметрыЦелевогоФинансированияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

// 
// Параметры:
// 	ТекстыЗапроса - СписокЗначений - 
// 	ИмяДокумента - Строка -
Процедура ТекстЗапросаТаблицаВтПараметрыЦелевогоФинансированияНМА(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "втПараметрыЦелевогоФинансированияНМА";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокНМА(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПараметрыЦелевогоФинансированияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПараметрыЦелевогоФинансированияНМА.ПрименениеЦелевогоФинансирования КАК ПрименениеЦелевогоФинансирования,
	|	ПараметрыЦелевогоФинансированияНМА.СчетУчета КАК СчетУчета,
	|	ПараметрыЦелевогоФинансированияНМА.СчетАмортизации КАК СчетАмортизации,
	|	ПараметрыЦелевогоФинансированияНМА.СтатьяДоходов КАК СтатьяДоходов,
	|	ПараметрыЦелевогоФинансированияНМА.АналитикаДоходов КАК АналитикаДоходов
	|ПОМЕСТИТЬ втПараметрыЦелевогоФинансированияНМА
	|ИЗ
	|	РегистрСведений.ПараметрыЦелевогоФинансированияНМА.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						СписокНМА.НематериальныйАктив
	|					ИЗ
	|						втСписокНМА КАК СписокНМА)) КАК ПараметрыЦелевогоФинансированияНМА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПараметрыЦелевогоФинансированияНМА.НематериальныйАктив";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

// 
// Параметры:
// 	ТекстыЗапроса - СписокЗначений - 
// 	ИмяДокумента - Строка -
Процедура ТекстЗапросаТаблицаВтПараметрыНачисленияЗемельногоНалога(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "втПараметрыНачисленияЗемельногоНалога";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ОсновноеСредство КАК ОсновноеСредство,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.ВключатьВНалоговуюБазу КАК ВключатьВНалоговуюБазу,
	|	ДанныеРегистра.ДатаНачалаПроектирования КАК ДатаНачалаПроектирования,
	|	ДанныеРегистра.ДатаРегистрацииПравНаОбъектНедвижимости КАК ДатаРегистрацииПравНаОбъектНедвижимости,
	|	ДанныеРегистра.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ДанныеРегистра.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	ДанныеРегистра.ДоляНеОблагаемойНалогомПлощадиЗнаменатель КАК ДоляНеОблагаемойНалогомПлощадиЗнаменатель,
	|	ДанныеРегистра.ДоляНеОблагаемойНалогомПлощадиЧислитель КАК ДоляНеОблагаемойНалогомПлощадиЧислитель,
	|	ДанныеРегистра.ЖилищноеСтроительство КАК ЖилищноеСтроительство,
	|	ДанныеРегистра.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	ДанныеРегистра.КадастровыйНомер КАК КадастровыйНомер,
	|	ДанныеРегистра.КБК КАК КБК,
	|	ДанныеРегистра.КодКатегорииЗемель КАК КодКатегорииЗемель,
	|	ДанныеРегистра.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395 КАК КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	ДанныеРегистра.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391 КАК КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	ДанныеРегистра.КодПоОКАТО КАК КодПоОКАТО,
	|	ДанныеРегистра.КодПоОКТМО КАК КодПоОКТМО,
	|	ДанныеРегистра.НалоговаяЛьготаПоНалоговойБазе КАК НалоговаяЛьготаПоНалоговойБазе,
	|	ДанныеРегистра.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ДанныеРегистра.НалоговыйОрган КАК НалоговыйОрган,
	|	ДанныеРегистра.НеОблагаемаяНалогомСумма КАК НеОблагаемаяНалогомСумма,
	|	ДанныеРегистра.ОбщаяСобственность КАК ОбщаяСобственность,
	|	ДанныеРегистра.ПостановкаНаУчетВНалоговомОргане КАК ПостановкаНаУчетВНалоговомОргане,
	|	ДанныеРегистра.ПроцентУменьшенияСуммыНалога КАК ПроцентУменьшенияСуммыНалога,
	|	ДанныеРегистра.СниженнаяНалоговаяСтавка КАК СниженнаяНалоговаяСтавка,
	|	ДанныеРегистра.СуммаУменьшенияСуммыНалога КАК СуммаУменьшенияСуммыНалога,
	|	ДанныеРегистра.УменьшениеНалоговойБазыНаСумму КАК УменьшениеНалоговойБазыНаСумму,
	|	ДанныеРегистра.УменьшениеНалоговойБазыПоСтатье391 КАК УменьшениеНалоговойБазыПоСтатье391,
	|	ДанныеРегистра.ВидЗаписи КАК ВидЗаписи
	|ПОМЕСТИТЬ втПараметрыНачисленияЗемельногоНалога
	|ИЗ
	|	РегистрСведений.ПараметрыНачисленияЗемельногоНалога.СрезПоследних(
	|			&Период, 
	|			Регистратор <> &Ссылка
	|				И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ДанныеРегистра
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

// 
// Параметры:
// 	ТекстыЗапроса - СписокЗначений - 
// 	ИмяДокумента - Строка -
Процедура ТекстЗапросаТаблицаВтПараметрыНачисленияТранспортногоНалога(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "втПараметрыНачисленияТранспортногоНалога";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ОсновноеСредство КАК ОсновноеСредство,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.ВключатьВНалоговуюБазу КАК ВключатьВНалоговуюБазу,
	|	ДанныеРегистра.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ДанныеРегистра.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	ДанныеРегистра.ЕдиницаИзмеренияНалоговойБазы КАК ЕдиницаИзмеренияНалоговойБазы,
	|	ДанныеРегистра.ИдентификационныйНомер КАК ИдентификационныйНомер,
	|	ДанныеРегистра.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
	|	ДанныеРегистра.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
	|	ДанныеРегистра.КодПоОКАТО КАК КодПоОКАТО,
	|	ДанныеРегистра.КодПоОКТМО КАК КодПоОКТМО,
	|	ДанныеРегистра.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
	|	ДанныеРегистра.Марка КАК Марка,
	|	ДанныеРегистра.НалоговаяБаза КАК НалоговаяБаза,
	|	ДанныеРегистра.НалоговаяЛьгота КАК НалоговаяЛьгота,
	|	ДанныеРегистра.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ДанныеРегистра.НалоговаяСтавкаЗависитОтГодаВыпускаТС КАК НалоговаяСтавкаЗависитОтГодаВыпускаТС,
	|	ДанныеРегистра.НалоговыйОрган КАК НалоговыйОрган,
	|	ДанныеРегистра.ОбщаяСобственность КАК ОбщаяСобственность,
	|	ДанныеРегистра.ПовышающийКоэффициент КАК ПовышающийКоэффициент,
	|	ДанныеРегистра.ПостановкаНаУчетВНалоговомОргане КАК ПостановкаНаУчетВНалоговомОргане,
	|	ДанныеРегистра.ПроцентУменьшения КАК ПроцентУменьшения,
	|	ДанныеРегистра.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
	|	ДанныеРегистра.РегистрационныйЗнак КАК РегистрационныйЗнак,
	|	ДанныеРегистра.СтавкаОпределяетсяАвтоматически КАК СтавкаОпределяетсяАвтоматически,
	|	ДанныеРегистра.СуммаУменьшения КАК СуммаУменьшения,
	|	ДанныеРегистра.ЭкологическийКласс КАК ЭкологическийКласс,
	|	ДанныеРегистра.ВидЗаписи КАК ВидЗаписи
	|ПОМЕСТИТЬ втПараметрыНачисленияТранспортногоНалога
	|ИЗ
	|	РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
	|			&Период, 
	|			Регистратор <> &Ссылка
	|				И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ДанныеРегистра
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

// 
// Параметры:
// 	Запрос - Запрос -
// 	ТекстыЗапроса - СписокЗначений - 
// 	Регистры - Структура -
// Возвращаемое значение:
// 	Строка - 
Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете_Амортизация(Запрос, ТекстыЗапроса, Регистры) Экспорт

	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	НАЧАЛОПЕРИОДА(ТаблицаРасходы.ПериодРасчета, ДЕНЬ) КАК ДатаОтражения,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете) КАК Статус
	|ИЗ
	|	НачисленнаяАмортизация КАК ТаблицаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Ссылка,
	|	&Период,
	|	НАЧАЛОПЕРИОДА(ТаблицаРасходы.ПериодРасчета, ДЕНЬ),
	|	ТаблицаРасходы.ОрганизацияПолучательРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете)
	|ИЗ
	|	НачисленнаяАмортизация КАК ТаблицаРасходы
	|ГДЕ
	|	ТаблицаРасходы.ОрганизацияПолучательРасходов <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПериодРасчетаНалогаНаИмущество(Организация, НачалоПериода) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГоловныеОрганизации.ОбособленноеПодразделение КАК Ссылка,
	|	ВЫБОР
	|		КОГДА Т.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Общая)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОСНО
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(
	|			&КонецКвартала,
	|			(Организация В
	|				(ВЫБРАТЬ
	|					ГоловныеОрганизации.Организация
	|				ИЗ
	|					ВтГоловныеОрганизации КАК ГоловныеОрганизации)
	|					ИЛИ &ПоВсемОрганизациям)
	|			И ((СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Общая)
	|			ИЛИ &КонецКвартала >= ДАТАВРЕМЯ(2015, 1, 1)))) КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтГоловныеОрганизации КАК ГоловныеОрганизации 
	|	ПО ГоловныеОрганизации.Организация = Т.Организация
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Организации.Организация КАК Организация
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПорядокУчетаОСБУ.Организация КАК Организация
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|				&НачалоГода,
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация В
	|						(ВЫБРАТЬ
	|							Организации.Ссылка
	|						ИЗ
	|							Организации
	|						ГДЕ
	|							Организации.ОСНО)) КАК ПорядокУчетаОСБУ
	|	ГДЕ
	|		ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПорядокУчетаОСБУ.Организация КАК Организация
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|	ГДЕ
	|		ПорядокУчетаОСБУ.Период МЕЖДУ &НачалоГода И &КонецКвартала
	|		И ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|		И ПорядокУчетаОСБУ.Активность
	|		И ПорядокУчетаОСБУ.Организация В
	|				(ВЫБРАТЬ
	|					Организации.Ссылка
	|				ИЗ
	|					Организации
	|				ГДЕ
	|					Организации.ОСНО)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		СтавкиНалога.Организация
	|	ИЗ
	|		РегистрСведений.ПараметрыНачисленияНалогаНаИмущество.СрезПоследних(
	|				&КонецКвартала,
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация В
	|						(ВЫБРАТЬ
	|							Организации.Ссылка
	|						ИЗ
	|							Организации)) КАК СтавкиНалога
	|	ГДЕ
	|		СтавкиНалога.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)) КАК Организации";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	НастройкиНалоговУчетныхПолитик.ДополнитьМенеджерВременныхТаблицГоловнымиОрганизациями(МенеджерВременныхТаблиц, Организация);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(НачалоПериода));
	Запрос.УстановитьПараметр("КонецКвартала", КонецКвартала(НачалоПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(Организация));
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	
		УплачиваютсяАвансы = РасчетИмущественныхНалоговУП.УплачиваютсяАвансыПоНалогуНаИмущество(
								Выборка.Организация, НачалоПериода);
		
		Если УплачиваютсяАвансы Тогда
			Возврат НачалоМесяца(КонецКвартала(НачалоПериода));
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат НачалоМесяца(КонецГода(НачалоПериода));

КонецФункции

Функция ПериодРасчетаЗемельногоНалога(Организация, НачалоПериода) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Регистрация.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.ПараметрыНачисленияЗемельногоНалога.СрезПоследних(
	|			&КонецКвартала,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И (Организация В (&Организация)
	|					ИЛИ &ПоВсемОрганизациям)
	|				И ВключатьВНалоговуюБазу) КАК Регистрация";

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("КонецКвартала", КонецКвартала(НачалоПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(Организация));

	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	
		УплачиваютсяАвансы = РасчетИмущественныхНалоговУП.УплачиваютсяАвансыПоЗемельномуНалогу(
								Выборка.Организация, НачалоПериода);
		
		Если УплачиваютсяАвансы Тогда
			Возврат НачалоМесяца(КонецКвартала(НачалоПериода));
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат НачалоМесяца(КонецГода(НачалоПериода));
	
КонецФункции

Функция ПериодРасчетаТранспортногоНалога(Организация, НачалоПериода) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	(Организации.Ссылка В (&Организация)
	|			ИЛИ &ПоВсемОрганизациям)
	|	И Организации.ЮридическоеФизическоеЛицо <> ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Регистрация.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
	|			&КонецКвартала,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация В
	|					(ВЫБРАТЬ
	|						Организации.Ссылка
	|					ИЗ
	|						Организации)
	|				И ВключатьВНалоговуюБазу) КАК Регистрация";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("КонецКвартала", КонецКвартала(НачалоПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(Организация));

	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	
		УплачиваютсяАвансы = РасчетИмущественныхНалоговУП.УплачиваютсяАвансыПоТранспортномуНалогу(
								Выборка.Организация, НачалоПериода);
		
		Если УплачиваютсяАвансы Тогда
			Возврат НачалоМесяца(КонецКвартала(НачалоПериода));
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат НачалоМесяца(КонецГода(НачалоПериода));

КонецФункции

// Определяет в какой организации НМА принят к учету.
//
// Параметры:
//  НематериальныйАктив - СправочникСсылка.НематериальныеАктивы - НМА, для которого нужно проверить принятие к учету.
// 
// Возвращаемое значение:
//  СправочникСсылка.Организации - организация, в которой НМА принят к учету.
//
Функция ОрганизацияВКоторойНМАПринятКУчету(НематериальныйАктив) Экспорт
	
	Если НЕ ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ПорядокУчетаНМАБУ) Тогда
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли; 

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ПорядокУчетаНМАБУ.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(, НематериальныйАктив = &НМА) КАК ПорядокУчетаНМАБУ
	|ГДЕ
	|	ПорядокУчетаНМАБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|		ИЛИ ПорядокУчетаНМАБУ.СостояниеНУ = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НМА", НематериальныйАктив);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Организация;

КонецФункции


#Область ЦелевоеФинансирование

// Возвращает данные для заполнения табличной части "Целевое финансирование" документов принятия к учета НМА/ОС и
// модернизации ОС.
//
// Параметры:
// 		ДанныеОтбора - Структура, ДанныеФормыСтруктура - Структура параметров отбора остатков.
// 		
//
// Возвращаемое значение:
// 		ТаблицаЗначений - Таблица с данными для заполнения ТЧ.
//
Функция ДанныеЗаполненияЦелевогоФинансирования(ДанныеОтбора) Экспорт
	
	Параметры = Новый Структура("Дата, Организация, Подразделение, НаправлениеДеятельности");
	ЗаполнитьЗначенияСвойств(Параметры, ДанныеОтбора);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СчетРодитель", ПланыСчетов.Хозрасчетный.ЦелевоеФинансирование);
	Запрос.УстановитьПараметр("ПустойЗаголовок", НСтр("ru = 'отсутствует'"));
	Запрос.УстановитьПараметр("ПоВсемПодразделениям", НЕ ЗначениеЗаполнено(Параметры.Подразделение));
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Запрос.Параметры, Параметры, Истина);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Субконто2,
	|	ХозрасчетныйОстатки.Субконто3,
	|	-ХозрасчетныйОстатки.СуммаОстаток КАК Сумма,
	|	НЕ ХозрасчетныйВидыСубконто1.Ссылка ЕСТЬ NULL  КАК Субконто1Разрешено,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто1.ВидСубконто, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК Субконто1Вид,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто1.ВидСубконто.Представление, &ПустойЗаголовок) КАК Субконто1Заголовок,
	|	ХозрасчетныйВидыСубконто1.ВидСубконто.ТипЗначения КАК Субконто1ТипЗначения,
	|	НЕ ХозрасчетныйВидыСубконто2.Ссылка ЕСТЬ NULL  КАК Субконто2Разрешено,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто2.ВидСубконто, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК Субконто2Вид,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто2.ВидСубконто.Представление, &ПустойЗаголовок) КАК Субконто2Заголовок,
	|	ХозрасчетныйВидыСубконто2.ВидСубконто.ТипЗначения КАК Субконто2ТипЗначения,
	|	НЕ ХозрасчетныйВидыСубконто3.Ссылка ЕСТЬ NULL  КАК Субконто3Разрешено,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто3.ВидСубконто, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК Субконто3Вид,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто3.ВидСубконто.Представление, &ПустойЗаголовок) КАК Субконто3Заголовок,
	|	ХозрасчетныйВидыСубконто3.ВидСубконто.ТипЗначения КАК Субконто3ТипЗначения
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Дата,
	|			Счет.Родитель В ИЕРАРХИИ (&СчетРодитель),
	|			,
	|			Организация = &Организация
	|				И (Подразделение = &Подразделение ИЛИ &ПоВсемПодразделениям)
	|				И НаправлениеДеятельности = &НаправлениеДеятельности) КАК ХозрасчетныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто1
	|		ПО ХозрасчетныйОстатки.Счет = ХозрасчетныйВидыСубконто1.Ссылка
	|			И (ХозрасчетныйВидыСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто2
	|		ПО ХозрасчетныйОстатки.Счет = ХозрасчетныйВидыСубконто2.Ссылка
	|			И (ХозрасчетныйВидыСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто3
	|		ПО ХозрасчетныйОстатки.Счет = ХозрасчетныйВидыСубконто3.Ссылка
	|			И (ХозрасчетныйВидыСубконто3.НомерСтроки = 3)
	|ГДЕ
	|	ХозрасчетныйОстатки.СуммаОстаток < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ХозрасчетныйОстатки.Счет.Порядок";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Заполняет служебные реквизиты в таблице "ЦелевоеФинансирование" таблицы объекта документа.
//
// Параметры:
// 		ОбъектФормы - ДанныеФормыСтруктура - Объект документа
// 		Строка - Число - Идентификатор строки, в которой требуется заполнение.
//
Процедура ЗаполнитьСлужебныеРеквизитыВТаблицеЦелевогоФинансирования(ОбъектФормы, Строка=Неопределено) Экспорт
	
	МассивСтрок = Неопределено;
	Если Строка <> Неопределено Тогда
		МассивСтрок = Новый Массив;
		МассивСтрок.Добавить(ОбъектФормы.ЦелевоеФинансирование.НайтиПоИдентификатору(Строка));
	КонецЕсли;
	
	Таблица = ОбъектФормы.ЦелевоеФинансирование.Выгрузить(МассивСтрок);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблица", Таблица);
	Запрос.УстановитьПараметр("ПустойЗаголовок", НСтр("ru = 'отсутствует'"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	(ВЫРАЗИТЬ(Таблица.НомерСтроки КАК ЧИСЛО)) - 1 КАК ИндексСтроки,
	|	ВЫРАЗИТЬ(Таблица.Счет КАК ПланСчетов.Хозрасчетный) КАК Счет
	|ПОМЕСТИТЬ втДанныеЗаполнения
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеЗаполнения.ИндексСтроки,
	|	
	|	НЕ ХозрасчетныйВидыСубконто1.Ссылка ЕСТЬ NULL КАК Субконто1Разрешено,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто1.ВидСубконто, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК Субконто1Вид,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто1.ВидСубконто.Представление, &ПустойЗаголовок) КАК Субконто1Заголовок,
	|	ХозрасчетныйВидыСубконто1.ВидСубконто.ТипЗначения КАК Субконто1ТипЗначения,
	|	
	|	НЕ ХозрасчетныйВидыСубконто2.Ссылка ЕСТЬ NULL КАК Субконто2Разрешено,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто2.ВидСубконто, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК Субконто2Вид,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто2.ВидСубконто.Представление, &ПустойЗаголовок) КАК Субконто2Заголовок,
	|	ХозрасчетныйВидыСубконто2.ВидСубконто.ТипЗначения КАК Субконто2ТипЗначения,
	|	
	|	НЕ ХозрасчетныйВидыСубконто3.Ссылка ЕСТЬ NULL КАК Субконто3Разрешено,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто3.ВидСубконто, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК Субконто3Вид,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто3.ВидСубконто.Представление, &ПустойЗаголовок) КАК Субконто3Заголовок,
	|	ХозрасчетныйВидыСубконто3.ВидСубконто.ТипЗначения КАК Субконто3ТипЗначения
	|ИЗ
	|	втДанныеЗаполнения КАК втДанныеЗаполнения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто1
	|		ПО втДанныеЗаполнения.Счет = ХозрасчетныйВидыСубконто1.Ссылка И (ХозрасчетныйВидыСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто2
	|		ПО втДанныеЗаполнения.Счет = ХозрасчетныйВидыСубконто2.Ссылка И (ХозрасчетныйВидыСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто3
	|		ПО втДанныеЗаполнения.Счет = ХозрасчетныйВидыСубконто3.Ссылка И (ХозрасчетныйВидыСубконто3.НомерСтроки = 3)";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ШаблонПредставления = НСтр("ru = '<%1>'");
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаЦФ = ОбъектФормы.ЦелевоеФинансирование[Выборка.ИндексСтроки];
		ЗаполнитьЗначенияСвойств(СтрокаЦФ, Выборка);
		СтрокаЦФ.Субконто1Заголовок = СтрШаблон(ШаблонПредставления, Выборка.Субконто1Заголовок);
		СтрокаЦФ.Субконто2Заголовок = СтрШаблон(ШаблонПредставления, Выборка.Субконто2Заголовок);
		СтрокаЦФ.Субконто3Заголовок = СтрШаблон(ШаблонПредставления, Выборка.Субконто3Заголовок);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

//-- Локализация

#Область ПроверкаНаличияСчетовУчета

// Возвращает признак наличия ошибок заполнения настроек отражения амортизации НМА в регламентированном учете.
//
// Параметры:
// 		МассивОрганизаций - Массив, СправочникСсылка.Организации - Массив или ссылка на элемент справочника организаций, по которым выполняется проверка
// 		Период - Дата - Период отражения амортизации.
//
// Возвращаемое значение:
// 		Булево - Истина, если имеются ошибки заполнения настроек отражения расходов.
//
Функция ЕстьОшибкиЗаполненияРасходовПоАмортизацииНМА(МассивОрганизаций, Период) Экспорт
	
	ЗначениеВозврата = Ложь;
	//++ Локализация
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрОрганизации = Неопределено;
	Если ТипЗнч(МассивОрганизаций) = Тип("Массив") Тогда
		ПараметрОрганизации = МассивОрганизаций;
	Иначе
		ПараметрОрганизации = Новый Массив;
		ПараметрОрганизации.Добавить(МассивОрганизаций);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрОрганизации);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Период));
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МестоУчетаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	МестоУчетаНМА.Подразделение КАК Местонахождение
	|ПОМЕСТИТЬ втМестонахожденияНМА
	|ИЗ
	|	РегистрСведений.МестоУчетаНМА.СрезПоследних(&НачалоМесяца, Организация В (&МассивОрганизаций)) КАК МестоУчетаНМА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ОрганизацииПоДокументу.Ссылка, ЕСТЬNULL(ОрганизацииПоРегистру.Ссылка, ПорядокУчетаНМАБУ.Организация)) КАК Организация,
	|	ЕСТЬNULL(ОтражениеАмортизационныхРасходов.Подразделение, ЕСТЬNULL(МестонахождениеНМА.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))) КАК Подразделение,
	|	ЕСТЬNULL(ОтражениеАмортизационныхРасходов.СтатьяРасходов, ПорядокУчетаНМАБУ.СтатьяРасходовБУ) КАК СтатьяРасходов
	|ПОМЕСТИТЬ втСтатьиНМАКОтражению
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(&НачалоМесяца, Организация В (&МассивОрганизаций)) КАК ПорядокУчетаНМАБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровНМА.ОтражениеАмортизационныхРасходов КАК ОтражениеАмортизационныхРасходов
	|		ПО ПорядокУчетаНМАБУ.СпособОтраженияРасходовБУ = ОтражениеАмортизационныхРасходов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацииПоДокументу
	|		ПО ОтражениеАмортизационныхРасходов.ОрганизацияПолучательРасходов = ОрганизацииПоДокументу.Ссылка
	|			И ОтражениеАмортизационныхРасходов.ПередаватьРасходыВДругуюОрганизацию
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацииПоРегистру
	|		ПО ПорядокУчетаНМАБУ.ОрганизацияПолучательРасходов = ОрганизацииПоРегистру.Ссылка
	|			И ПорядокУчетаНМАБУ.ПередаватьРасходыВДругуюОрганизацию
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияНМА КАК МестонахождениеНМА
	|		ПО ПорядокУчетаНМАБУ.НематериальныйАктив = МестонахождениеНМА.НематериальныйАктив
	|ГДЕ
	|	ЕСТЬNULL(ОтражениеАмортизационныхРасходов.СтатьяРасходов, ПорядокУчетаНМАБУ.СтатьяРасходовБУ) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	втСтатьиНМАКОтражению.СтатьяРасходов
	|ИЗ
	|	втСтатьиНМАКОтражению КАК втСтатьиНМАКОтражению
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокОтраженияНаСчетахУчетаПереопределяемый КАК ПорядокОтраженияНаСчетахУчетаПереопределяемый
	|			ПО ПорядокОтраженияНаСчетахУчетаПереопределяемый.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|				И ПорядокОтраженияНаСчетахУчетаПереопределяемый.Организация = втСтатьиНМАКОтражению.Организация
	|				И ПорядокОтраженияНаСчетахУчетаПереопределяемый.АналитикаУчета = втСтатьиНМАКОтражению.СтатьяРасходов.ГруппаФинансовогоУчетаРегл
	|				И ПорядокОтраженияНаСчетахУчетаПереопределяемый.МестоУчета = втСтатьиНМАКОтражению.Подразделение
	|ГДЕ
	|	ПорядокОтраженияНаСчетахУчетаПереопределяемый.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)";
	
	РегистрыСведений.ПорядокОтраженияНаСчетахУчета.ПереопределитьВТекстеЗапросаПорядокОтраженияСчетаУчета(Запрос.Текст);
	ЗначениеВозврата = Не Запрос.Выполнить().Пустой();
	//-- Локализация
	Возврат ЗначениеВозврата;
	
КонецФункции

// Возвращает признак наличия ошибок заполнения настроек отражения амортизации ОС в регламентированном учете.
//
// Параметры:
// 		МассивОрганизаций - Массив, СправочникСсылка.Организации - Массив или ссылка на элемент справочника организаций, по которым выполняется проверка
// 		Период - Дата - Период отражения амортизации.
//
// Возвращаемое значение:
// 		Булево - Истина, если имеются ошибки заполнения настроек отражения расходов.
//
Функция ЕстьОшибкиЗаполненияРасходовПоАмортизацииОС(МассивОрганизаций, Период) Экспорт
	
	ЗначениеВозврата = Ложь;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ОрганизацииПоДокументу.Ссылка, ЕСТЬNULL(ОрганизацииПоРегистру.Ссылка, ПорядокУчетаОСБУ.Организация)) КАК Организация,
	|	ВЫБОР КОГДА СтатьиРасходовПоИзменениюПараметров.Ссылка ЕСТЬ NULL
	|		ТОГДА ЕСТЬNULL(МестонахождениеОС.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|		ИНАЧЕ ЕСТЬNULL(ОтражениеАмортизационныхРасходов.Подразделение, ЕСТЬNULL(МестонахождениеОС.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)))
	|	КОНЕЦ КАК Подразделение,
	|	ЕСТЬNULL(СтатьиРасходовПоИзменениюПараметров.Ссылка, ПринятиеКУчетуОС.СтатьяРасходовАмортизационнойПремии) КАК СтатьяРасходов
	|ПОМЕСТИТЬ втСтатьиОсновныхСредствКОтражению
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(&НачалоМесяца, Организация В (&МассивОрганизаций)) КАК ПорядокУчетаОСБУ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС.ОтражениеАмортизационныхРасходов КАК ОтражениеАмортизационныхРасходов
	|		ПО ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ = ОтражениеАмортизационныхРасходов.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(&НачалоМесяца, Организация В (&МассивОрганизаций)) КАК МестонахождениеОС
	|		ПО ПорядокУчетаОСБУ.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|				&НачалоМесяца,
	|				Организация В (&МассивОрганизаций)
	|					И Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС) КАК ПервоначальныеСведения
	|		ПО ПорядокУчетаОСБУ.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС КАК ПринятиеКУчетуОС
	|		ПО (ПервоначальныеСведения.Регистратор = ПринятиеКУчетуОС.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацииПоДокументу
	|		ПО ОтражениеАмортизационныхРасходов.ОрганизацияПолучательРасходов = ОрганизацииПоДокументу.Ссылка
	|			И ОтражениеАмортизационныхРасходов.ПередаватьРасходыВДругуюОрганизацию
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацииПоРегистру
	|		ПО ПорядокУчетаОСБУ.ОрганизацияПолучательРасходов = ОрганизацииПоРегистру.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходовПоИзменениюПараметров
	|		ПО ОтражениеАмортизационныхРасходов.СтатьяРасходовАмортизационнойПремии = СтатьиРасходовПоИзменениюПараметров.Ссылка
	|ГДЕ
	|	ПринятиеКУчетуОС.ВключитьАмортизационнуюПремиюВСоставРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ОрганизацииПоДокументу.Ссылка, ЕСТЬNULL(ОрганизацииПоРегистру.Ссылка, ПорядокУчетаОСБУ.Организация)),
	|	ЕСТЬNULL(ОтражениеАмортизационныхРасходов.Подразделение, ЕСТЬNULL(МестонахождениеОС.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))),
	|	ЕСТЬNULL(ОтражениеАмортизационныхРасходов.СтатьяРасходов, ПорядокУчетаОСБУ.СтатьяРасходовБУ)
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(&НачалоМесяца, Организация В (&МассивОрганизаций)) КАК ПорядокУчетаОСБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС.ОтражениеАмортизационныхРасходов КАК ОтражениеАмортизационныхРасходов
	|		ПО ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ = ОтражениеАмортизационныхРасходов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацииПоДокументу
	|		ПО ОтражениеАмортизационныхРасходов.ОрганизацияПолучательРасходов = ОрганизацииПоДокументу.Ссылка
	|			И ОтражениеАмортизационныхРасходов.ПередаватьРасходыВДругуюОрганизацию
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацииПоРегистру
	|		ПО ПорядокУчетаОСБУ.ОрганизацияПолучательРасходов = ОрганизацииПоРегистру.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(&НачалоМесяца, Организация В (&МассивОрганизаций)) КАК МестонахождениеОС
	|		ПО ПорядокУчетаОСБУ.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|ГДЕ
	|	ЕСТЬNULL(ОтражениеАмортизационныхРасходов.СтатьяРасходов, ПорядокУчетаОСБУ.СтатьяРасходовБУ) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	втСтатьиОсновныхСредствКОтражению.СтатьяРасходов
	|ИЗ
	|	втСтатьиОсновныхСредствКОтражению КАК втСтатьиОсновныхСредствКОтражению
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокОтраженияНаСчетахУчетаПереопределяемый КАК ПорядокОтраженияНаСчетахУчетаПереопределяемый
	|			ПО ПорядокОтраженияНаСчетахУчетаПереопределяемый.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|				И ПорядокОтраженияНаСчетахУчетаПереопределяемый.Организация = втСтатьиОсновныхСредствКОтражению.Организация
	|				И ПорядокОтраженияНаСчетахУчетаПереопределяемый.АналитикаУчета = втСтатьиОсновныхСредствКОтражению.СтатьяРасходов.ГруппаФинансовогоУчетаРегл
	|				И ПорядокОтраженияНаСчетахУчетаПереопределяемый.МестоУчета = втСтатьиОсновныхСредствКОтражению.Подразделение
	|ГДЕ
	|	ПорядокОтраженияНаСчетахУчетаПереопределяемый.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)";
	
	ПараметрОрганизации = Неопределено;
	Если ТипЗнч(МассивОрганизаций) = Тип("Массив") Тогда
		ПараметрОрганизации = МассивОрганизаций;
	Иначе
		ПараметрОрганизации = Новый Массив;
		ПараметрОрганизации.Добавить(МассивОрганизаций);
	КонецЕсли;

	РегистрыСведений.ПорядокОтраженияНаСчетахУчета.ПереопределитьВТекстеЗапросаПорядокОтраженияСчетаУчета(ТекстЗапроса);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрОрганизации);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Период));

	УстановитьПривилегированныйРежим(Истина);
	ЗначениеВозврата = Не Запрос.Выполнить().Пустой();
	УстановитьПривилегированныйРежим(Ложь);

	//-- Локализация
	Возврат ЗначениеВозврата;
	
КонецФункции

// Возвращает признак наличия ошибок заполнения настроек отражения доходов от целевого финансирования НМА в
// регламентированном учете.
//
// Параметры:
// 		МассивОрганизаций - Массив, СправочникСсылка.Организации - Массив или ссылка на элемент справочника организаций, по которым выполняется проверка
// 		Период - Дата - Период отражения доходов.
//
// Возвращаемое значение:
// 		Булево - Истина, если имеются ошибки заполнения настроек отражения расходов.
//
Функция ЕстьОшибкиЗаполненияДоходовЦелевогоФинансированияНМА(МассивОрганизаций, Период) Экспорт
	
	ЗначениеВозврата = Ложь;
	//++ Локализация
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрОрганизации = Неопределено;
	Если ТипЗнч(МассивОрганизаций) = Тип("Массив") Тогда
		ПараметрОрганизации = МассивОрганизаций;
	Иначе
		ПараметрОрганизации = Новый Массив;
		ПараметрОрганизации.Добавить(МассивОрганизаций);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрОрганизации);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Период));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПорядокУчетаНМА.НематериальныйАктив,
	|	ПорядокУчетаНМА.СчетУчета,
	|	ПараметрыЦелевогоФинансированияНМА.СчетУчета КАК СчетУчетаЦФ,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансированияНМА.ПрименениеЦелевогоФинансирования, ЛОЖЬ) КАК ПрименениеЦелевогоФинансирования
	|ПОМЕСТИТЬ втПорядокУчетаНМА
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМА.СрезПоследних(&НачалоМесяца, Организация В (&МассивОрганизаций)) КАК ПорядокУчетаНМА
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияНМА.СрезПоследних(&НачалоМесяца, ) КАК ПараметрыЦелевогоФинансированияНМА
	|	ПО ПорядокУчетаНМА.НематериальныйАктив = ПараметрыЦелевогоФинансированияНМА.НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втПорядокУчетаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ЕСТЬNULL(ДанныеСчетУчета.Подразделение, ЕСТЬNULL(ДанныеСчетУчетаЦФ.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))) КАК Местонахождение
	|ПОМЕСТИТЬ втМестонахожденияНМА
	|ИЗ
	|	втПорядокУчетаНМА КАК втПорядокУчетаНМА
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НачалоМесяца,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.СчетУчета
	|				ИЗ
	|					втПорядокУчетаНМА КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			Организация В (&МассивОрганизаций)) КАК ДанныеСчетУчета
	|	ПО втПорядокУчетаНМА.НематериальныйАктив = ДанныеСчетУчета.Субконто1
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НачалоМесяца,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.СчетУчетаЦФ
	|				ИЗ
	|					втПорядокУчетаНМА КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			Организация В (&МассивОрганизаций)) КАК ДанныеСчетУчетаЦФ
	|	ПО втПорядокУчетаНМА.НематериальныйАктив = ДанныеСчетУчетаЦФ.Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведения.Организация КАК Организация,
	|	ЕСТЬNULL(МестонахождениеНМА.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансирования.СтатьяДоходов, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)) КАК СтатьяДоходов
	|ПОМЕСТИТЬ втСтатьиНМАКОтражению
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(&НачалоМесяца, Организация В (&МассивОрганизаций)) КАК ПервоначальныеСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияНМА КАК МестонахождениеНМА
	|		ПО ПервоначальныеСведения.НематериальныйАктив = МестонахождениеНМА.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияНМА.СрезПоследних(&НачалоМесяца) КАК ПараметрыЦелевогоФинансирования
	|		ПО ПервоначальныеСведения.НематериальныйАктив = ПараметрыЦелевогоФинансирования.НематериальныйАктив
	|ГДЕ
	|	ПараметрыЦелевогоФинансирования.ПрименениеЦелевогоФинансирования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	втСтатьиНМАКОтражению.СтатьяДоходов
	|ИЗ
	|	втСтатьиНМАКОтражению КАК втСтатьиНМАКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаДоходовРасходов КАК ГФУ
	|	ПО втСтатьиНМАКОтражению.СтатьяДоходов.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПорядокОтраженияНаСчетахУчетаПереопределяемый КАК ПорядокОтраженияНаСчетахУчетаПереопределяемый
	|	ПО ПорядокОтраженияНаСчетахУчетаПереопределяемый.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы)
	|		И ПорядокОтраженияНаСчетахУчетаПереопределяемый.Организация = втСтатьиНМАКОтражению.Организация
	|		И ПорядокОтраженияНаСчетахУчетаПереопределяемый.АналитикаУчета = ЕСТЬNULL(ГФУ.Ссылка, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаДоходовРасходов.ПустаяСсылка))
	|		И ПорядокОтраженияНаСчетахУчетаПереопределяемый.МестоУчета = втСтатьиНМАКОтражению.Подразделение
	|ГДЕ
	|	ПорядокОтраженияНаСчетахУчетаПереопределяемый.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)";
	
	РегистрыСведений.ПорядокОтраженияНаСчетахУчета.ПереопределитьВТекстеЗапросаПорядокОтраженияСчетаУчета(Запрос.Текст);
	ЗначениеВозврата = Не Запрос.Выполнить().Пустой();
	//-- Локализация
	Возврат ЗначениеВозврата;
	
КонецФункции

// Возвращает признак наличия ошибок заполнения настроек отражения доходов от целевого финансирования ОС в
// регламентированном учете.
//
// Параметры:
// 		МассивОрганизаций - Массив, СправочникСсылка.Организации - Массив или ссылка на элемент справочника организаций, по которым выполняется проверка
// 		Период - Дата - Период отражения доходов.
//
// Возвращаемое значение:
// 		Булево - Истина, если имеются ошибки заполнения настроек отражения расходов.
//
Функция ЕстьОшибкиЗаполненияДоходовЦелевогоФинансированияОС(МассивОрганизаций, Период) Экспорт
	
	ЗначениеВозврата = Ложь;
	//++ Локализация
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрОрганизации = Неопределено;
	Если ТипЗнч(МассивОрганизаций) = Тип("Массив") Тогда
		ПараметрОрганизации = МассивОрганизаций;
	Иначе
		ПараметрОрганизации = Новый Массив;
		ПараметрОрганизации.Добавить(МассивОрганизаций);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрОрганизации);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Период));
	Запрос.Текст =
	"
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведения.Организация КАК Организация,
	|	ЕСТЬNULL(МестонахождениеОС.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансирования.СтатьяДоходов, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)) КАК СтатьяДоходов
	|ПОМЕСТИТЬ втСтатьиОсновныхСредствКОтражению
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&НачалоМесяца, 
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация В (&МассивОрганизаций)) КАК ПервоначальныеСведения
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&НачалоМесяца, 
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация В (&МассивОрганизаций)) КАК МестонахождениеОС
	|		ПО ПервоначальныеСведения.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	| 
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС.СрезПоследних(&НачалоМесяца) КАК ПараметрыЦелевогоФинансирования
	|		ПО ПервоначальныеСведения.ОсновноеСредство = ПараметрыЦелевогоФинансирования.ОсновноеСредство
	|ГДЕ
	|	ПараметрыЦелевогоФинансирования.ПрименениеЦелевогоФинансирования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	втСтатьиОсновныхСредствКОтражению.СтатьяДоходов
	|ИЗ
	|	втСтатьиОсновныхСредствКОтражению КАК втСтатьиОсновныхСредствКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаДоходовРасходов КАК ГФУ
	|	ПО втСтатьиОсновныхСредствКОтражению.СтатьяДоходов.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПорядокОтраженияНаСчетахУчетаПереопределяемый КАК ПорядокОтраженияНаСчетахУчетаПереопределяемый
	|	ПО ПорядокОтраженияНаСчетахУчетаПереопределяемый.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы)
	|		И ПорядокОтраженияНаСчетахУчетаПереопределяемый.Организация = втСтатьиОсновныхСредствКОтражению.Организация
	|		И ПорядокОтраженияНаСчетахУчетаПереопределяемый.АналитикаУчета = ЕСТЬNULL(ГФУ.Ссылка, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаДоходовРасходов.ПустаяСсылка))
	|		И ПорядокОтраженияНаСчетахУчетаПереопределяемый.МестоУчета = втСтатьиОсновныхСредствКОтражению.Подразделение
	|ГДЕ
	|	ПорядокОтраженияНаСчетахУчетаПереопределяемый.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)";
	
	РегистрыСведений.ПорядокОтраженияНаСчетахУчета.ПереопределитьВТекстеЗапросаПорядокОтраженияСчетаУчета(Запрос.Текст);
	ЗначениеВозврата = Не Запрос.Выполнить().Пустой();
	//-- Локализация
	Возврат ЗначениеВозврата;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
 
Функция ИмяДокументаАмортизацияОС() Экспорт

	ИмяДокумента = "";
	
	//++ Локализация
	ИмяДокумента = Метаданные.Документы.АмортизацияОС.Имя;
	//-- Локализация
	
	Возврат ИмяДокумента;

КонецФункции

Функция ИмяДокументаАмортизацияНМА() Экспорт

	ИмяДокумента = "";
	
	//++ Локализация
	ИмяДокумента = Метаданные.Документы.АмортизацияНМА.Имя;
	//-- Локализация
	
	Возврат ИмяДокумента;

КонецФункции

Процедура УстановитьПараметрыНабораСвойствВНА22() Экспорт

	//++ Локализация
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИспользоватьВнеоборотныеАктивы2_2 = Константы.ИспользоватьВнеоборотныеАктивы2_2.Получить();
	ИспользоватьВнеоборотныеАктивы2_4 = Константы.ИспользоватьВнеоборотныеАктивы2_4.Получить();
										
	ПараметрыНабора = УправлениеСвойствами.СтруктураПараметровНабораСвойств();
	ПараметрыНабора.Используется = ИспользоватьВнеоборотныеАктивы2_2;
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ИзменениеПараметровНМА", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ИзменениеПараметровОС", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_МодернизацияОС", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ПеремещениеОС", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ПодготовкаКПередачеОС", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ПринятиеКУчетуНМА", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ПринятиеКУчетуОС", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_СписаниеНМА", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_СписаниеОС", ПараметрыНабора);
	
	ПараметрыНабора = УправлениеСвойствами.СтруктураПараметровНабораСвойств();
	ПараметрыНабора.Используется = 
		ИспользоватьВнеоборотныеАктивы2_2
		ИЛИ ИспользоватьВнеоборотныеАктивы2_4;
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Справочник_НематериальныеАктивы", ПараметрыНабора);
	
	ПараметрыНабора = УправлениеСвойствами.СтруктураПараметровНабораСвойств();
	ПараметрыНабора.Используется = 
		ИспользоватьВнеоборотныеАктивы2_2
		ИЛИ ИспользоватьВнеоборотныеАктивы2_4
		ИЛИ Константы.ИспользоватьУправлениеРемонтами.Получить();
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Справочник_ОбъектыЭксплуатации_Общие", ПараметрыНабора);
	
	//-- Локализация
	
КонецПроцедуры

Функция ДокументИмеетПрисоединенныеФайлы(ТипВладелецФайла) Экспорт

	ДокументИмеетПрисоединенныеФайлы = Ложь;
	
	//++ Локализация
	ДокументИмеетПрисоединенныеФайлы =
		ТипВладелецФайла = Тип("ДокументСсылка.ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.ВводПервоначальныхСведенийДляРасчетаНалогаНаИмущество")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.ВводПервоначальныхСведенийДляРасчетаТранспортногоНалога")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.ИзменениеСпособаОтраженияИмущественныхНалогов")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.ИнвентаризацияНМА")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.ИнвентаризацияОС")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.СнятиеСРегистрацииЗемельныхУчастков")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.СнятиеСРегистрацииТранспортныхСредств")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.ПерерасчетИмущественныхНалогов")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.ПараметрыНачисленияЗемельногоНалога")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.ПараметрыНачисленияНалогаНаИмущество")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.ПараметрыНачисленияТранспортногоНалога")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.ПерерасчетИмущественныхНалогов");
	//-- Локализация
	
	Возврат ДокументИмеетПрисоединенныеФайлы;
	
КонецФункции
 
// Добавляет в профиль роли, позволяющие работать в подсистеме ВНА с правами на изменение.
// 
// Параметры:
// 	ОписаниеПрофиля - см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа
Процедура ДобавитьРолиДляДоступаКПодсистемеВНАНаИзменение(ОписаниеПрофиля) Экспорт
	
	//++ Локализация
	
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеДокументовНМА");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеДокументовОС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеОтчетовОператораСистемыПлатон");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеИнвентаризацииНМА");

	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеВводаПервоначальныхСведенийДляРасчетаЗемельногоНалога");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеВводаПервоначальныхСведенийДляРасчетаНалогаНаИмущество");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеВводаПервоначальныхСведенийДляРасчетаТранспортногоНалога");

	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеПараметровНачисленияЗемельногоНалога");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеПараметровНачисленияТранспортногоНалога");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеПерерасчетаИмущественныхНалогов");
	
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеОбработкиЖурналДокументовИсправлениеИмущественныхНалогов");
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеОбработкиПомощникПереходаНаУчетВнеоборотныхАктивовВерсии24");
	
	//-- Локализация

КонецПроцедуры

// Добавляет в профиль роли, позволяющие работать в подсистеме ВНА с правами на чтение.
// 
// Параметры:
// 	ОписаниеПрофиля - см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа
Процедура ДобавитьРолиДляДоступаКПодсистемеВНАНаЧтение(ОписаниеПрофиля) Экспорт
	
	//++ Локализация
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДокументовНМА");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДокументовОС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеОтчетовОператораСистемыПлатон");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеИнвентаризацииНМА");
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеВводаПервоначальныхСведенийДляРасчетаЗемельногоНалога");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеВводаПервоначальныхСведенийДляРасчетаНалогаНаИмущество");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеВводаПервоначальныхСведенийДляРасчетаТранспортногоНалога");

	ОписаниеПрофиля.Роли.Добавить("ЧтениеПараметровНачисленияЗемельногоНалога");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеПараметровНачисленияТранспортногоНалога");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеПерерасчетаИмущественныхНалогов");
	
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеОбработкиПомощникПереходаНаУчетВнеоборотныхАктивовВерсии24");
	
	//-- Локализация

КонецПроцедуры

Процедура ДополнитьРегистрыПоддерживающиеИсправления(СписокРегистров) Экспорт
	
	//++ Локализация
	СписокРегистров.Добавить(ВРег("ПараметрыАмортизацииОСБУ"));
	СписокРегистров.Добавить(ВРег("ПараметрыНачисленияЗемельногоНалога"));
	СписокРегистров.Добавить(ВРег("ПараметрыНачисленияНалогаНаИмущество"));
	СписокРегистров.Добавить(ВРег("ПараметрыНачисленияТранспортногоНалога"));
	//-- Локализация
	
КонецПроцедуры

#Область Аренда

// Определяет используется ли учет аренды по стандарту ФСБУ 25/2018.
//
// Параметры:
//  Организация - СправочникСсылка.Организации, Массив, Неопределено - Организация, для которой проверяется порядок учета.
//  Период	 - Дата - На какую дату нужно проверить (если не указана, то проверяется на текущую дату).
//  УчестьНачалоПерехода - Булево - Истина, если нужно учесть начало перехода на новый стандарт.
// 
// Возвращаемое значение:
//  Булево, Неопределено - Истина, если используется учет аренды по ФСБУ 25/2018 
//                    для указанной организации или для любой организации, если организация не указана.
//
Функция ИспользуетсяУчетАрендыПоФСБУ25_2018(Организация = Неопределено, Период = '000101010000', УчестьНачалоПерехода = Ложь) Экспорт

	ИспользуетсяУчетАрендыПоФСБУ25_2018 = Неопределено;
	
	//++ Локализация
	
	Если ЗначениеЗаполнено(Организация) Тогда
	
		Если ТипЗнч(Организация) = Тип("Массив") Тогда
			СписокОрганизаций = Организация;
		Иначе
			СписокОрганизаций = Новый Массив;
			СписокОрганизаций.Добавить(Организация);
		КонецЕсли;
		
		УчетныеПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикПоОрганизациям(
										"УчетнаяПолитикаФинансовогоУчета",
										СписокОрганизаций,
										Период,
										Ложь);
										
		ИспользуетсяУчетАрендыПоФСБУ25_2018 = Ложь;
		Для Каждого ПараметрыУчетнойПолитики Из УчетныеПолитики Цикл
			ИспользуетсяУчетАрендыПоФСБУ25_2018 = ПараметрыУчетнойПолитики.УчетАрендыПоФСБУ25_2018;
			Если ИспользуетсяУчетАрендыПоФСБУ25_2018 Тогда
				Прервать
			КонецЕсли;
		КонецЦикла;
		
		Если УчестьНачалоПерехода
			И НЕ ИспользуетсяУчетАрендыПоФСБУ25_2018 
			И КонецДня(Период) = КонецМесяца(Период) Тогда
			
			// При переходе на учет по стандарту дата на день раньше чем начало учета по стандарту
			УчетныеПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикПоОрганизациям(
											"УчетнаяПолитикаФинансовогоУчета",
											СписокОрганизаций,
											КонецДня(Период) + 1,
											Ложь);
											
			Для Каждого ПараметрыУчетнойПолитики Из УчетныеПолитики Цикл
				ИспользуетсяУчетАрендыПоФСБУ25_2018 = ПараметрыУчетнойПолитики.УчетАрендыПоФСБУ25_2018;
				Если ИспользуетсяУчетАрендыПоФСБУ25_2018 Тогда
					Прервать
				КонецЕсли;
			КонецЦикла;
					
		КонецЕсли;
				
	Иначе
		
		СписокОрганизаций = НастройкиНалоговУчетныхПолитик.ОрганизацииСЗаданнымПараметромПолитики(
								"УчетнаяПолитикаФинансовогоУчета",
								"УчетАрендыПоФСБУ25_2018",
								Истина,,
								Период);
								
		ИспользуетсяУчетАрендыПоФСБУ25_2018 = (СписокОрганизаций.Количество() <> 0);
		 
	КонецЕсли;
	
	//-- Локализация

	Возврат ИспользуетсяУчетАрендыПоФСБУ25_2018;
	
КонецФункции

// Определяет дату начала учета аренды по стандарту ФСБУ 25/2018
// 
// Параметры:
// 	Организация - СправочникСсылка.Организации -
// Возвращаемое значение:
// 	Дата, Неопределено - 
Функция НачалоУчетаАрендыПоФСБУ25_2018(Организация) Экспорт
	
	НачалоУчета = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(ТаблицаРегистра.Период), ДАТАВРЕМЯ(1,1,1)) КАК Период
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК ТаблицаРегистра
	|ГДЕ
	|	ТаблицаРегистра.УчетАрендыПоФСБУ25_2018
	|	И ТаблицаРегистра.Организация В
	|			(ВЫБРАТЬ
	|				ГоловныеОрганизации.Организация
	|			ИЗ
	|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	НастройкиНалоговУчетныхПолитик.ДополнитьМенеджерВременныхТаблицГоловнымиОрганизациями(МенеджерВременныхТаблиц, Организация);

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		НачалоУчета = Выборка.Период;
	КонецЕсли;
	
	//-- Локализация
	
	Возврат НачалоУчета;
	
КонецФункции

#КонецОбласти

#Область РасчетДвиженийПоКомпонентамАмортизации

// 
// Параметры:
//  Запрос - Запрос - Запрос.
//  ТекстыЗапроса - СписокЗначений - Тексты запроса.
//  Ссылка - ДокументСсылка - Ссылка на документ.
Процедура ДополнитьТаблицыДвиженийПоКомпонентамАмортизации(Запрос, ТекстыЗапроса, Ссылка) Экспорт
	
	//++ Локализация
	ТекстЗапросаПорядокУчетаОСБУПоКомпонентамАмортизации(Запрос, ТекстыЗапроса, Ссылка);
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Механизмы

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа
//
Процедура ПриЗаполненииСписковСОграничениемДоступа(Списки) Экспорт
	
	//++ Локализация
	
	Для Каждого ИмяДокумента Из СписокДокументовВНА() Цикл
		Списки.Вставить(Метаданные.Документы[ИмяДокумента], Истина);
	КонецЦикла;
	
	Списки.Вставить(Метаданные.РегистрыСведений.ИсправлениеПараметровНалогаНаИмущество, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПараметрыНачисленияНалогаНаИмущество, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СтавкиНалогаНаИмущество, Истина);

	
	//-- Локализация
	
КонецПроцедуры

// Получает описание предопределенных наборов свойств.
//
// Параметры:
//  Наборы - ДеревоЗначений - с колонками:
//     * Имя           - Строка - Имя набора свойств. Формируется из полного имени объекта
//                       метаданных заменой символа "." на "_".
//                       Например, "Документ_ЗаказПокупателя".
//     * Идентификатор - УникальныйИдентификатор - Идентификатор ссылки предопределенного элемента.
//     * Используется  - Неопределено, Булево - Признак того, что набор свойств используется.
//                       Например, можно использовать для скрытия набора по функциональным опциям.
//                       Значение по умолчанию - Неопределено, соответствует значению Истина.
//     * ЭтоГруппа     - Булево - Истина, если набор свойств является группой.
//
Процедура ПриПолученииПредопределенныхНаборовСвойств(Наборы) Экспорт

	//++ Локализация
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_ПерерасчетИмущественныхНалогов";
	Набор.Идентификатор = Новый УникальныйИдентификатор("37f4e6b4-fd3a-4dee-b933-467362345e7a");
	Набор.Используется  = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога";
	Набор.Идентификатор = Новый УникальныйИдентификатор("f799192e-a40e-4eae-b9cf-291a49c9a126");
	Набор.Используется  = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_ВводПервоначальныхСведенийДляРасчетаНалогаНаИмущество";
	Набор.Идентификатор = Новый УникальныйИдентификатор("7c951aea-8aed-4a6c-9c91-e0a48ac4be03");
	Набор.Используется  = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_ВводПервоначальныхСведенийДляРасчетаТранспортногоНалога";
	Набор.Идентификатор = Новый УникальныйИдентификатор("40a3c263-3924-4d55-988a-18276eec1933");
	Набор.Используется  = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
	
	//-- Локализация

КонецПроцедуры

#КонецОбласти

//++ Локализация

#Область РасчетСтоимостиВнеоборотныхАктивов

Процедура ОпределитьРазницуВСтоимостиОСПослеРасчетаСтоимости(НачалоРасчета, МенеджерВременныхТаблиц)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтоимостьОС.Организация КАК Организация,
	|	СтоимостьОС.ОсновноеСредство КАК ОбъектУчета,
	|	СУММА(СтоимостьОС.ФактическаяСтоимостьУУ - СтоимостьОС.ПредварительнаяСтоимостьУУ) КАК Стоимость,
	|	СУММА(СтоимостьОС.ФактическаяСтоимостьБУ - СтоимостьОС.ПредварительнаяСтоимостьБУ) КАК СтоимостьРегл
	|ПОМЕСТИТЬ ВТ_РазницаВСтоимостиОС
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтоимостьОС.Организация КАК Организация,
	|		СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
	|		СтоимостьОС.Стоимость КАК ФактическаяСтоимостьУУ,
	|		СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ КАК ФактическаяСтоимостьБУ,
	|		0 КАК ПредварительнаяСтоимостьУУ,
	|		0 КАК ПредварительнаяСтоимостьБУ
	|	ИЗ
	|		РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|	ГДЕ
	|		СтоимостьОС.РасчетСтоимости
	|		И СтоимостьОС.Регистратор В
	|				(ВЫБРАТЬ
	|					ДанныеКРасчету.Регистратор
	|				ИЗ
	|					ДанныеКРасчету КАК ДанныеКРасчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтоимостьОС.Организация,
	|		СтоимостьОС.ОсновноеСредство,
	|		СтоимостьОС.Стоимость,
	|		СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ,
	|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|	ГДЕ
	|		СтоимостьОС.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|		И СтоимостьОС.Регистратор ССЫЛКА Документ.РаспределениеНДС
	|		И (СтоимостьОС.Организация, СтоимостьОС.ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					ДанныеКРасчету.Организация,
	|					ДанныеКРасчету.АналитикаКапитализацииРасходов
	|				ИЗ
	|					ДанныеКРасчету КАК ДанныеКРасчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтоимостьОС.Ссылка.Организация,
	|		СтоимостьОС.ОсновноеСредство,
	|		0,
	|		0,
	|		СтоимостьОС.СтоимостьУУ,
	|		СтоимостьОС.СтоимостьБУ
	|	ИЗ
	|		Документ.ПринятиеКУчетуОС2_4.ОС КАК СтоимостьОС
	|	ГДЕ
	|		СтоимостьОС.Ссылка В
	|				(ВЫБРАТЬ
	|					ДанныеКРасчету.Регистратор
	|				ИЗ
	|					ДанныеКРасчету КАК ДанныеКРасчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтоимостьОС.Ссылка.Организация,
	|		СтоимостьОС.ОсновноеСредство,
	|		0,
	|		0,
	|		СтоимостьОС.СтоимостьУУ,
	|		СтоимостьОС.СтоимостьБУ
	|	ИЗ
	|		Документ.МодернизацияОС2_4.ОС КАК СтоимостьОС
	|	ГДЕ
	|		СтоимостьОС.Ссылка В
	|				(ВЫБРАТЬ
	|					ДанныеКРасчету.Регистратор
	|				ИЗ
	|					ДанныеКРасчету КАК ДанныеКРасчету)
	|
	|	) КАК СтоимостьОС
	|
	|СГРУППИРОВАТЬ ПО
	|	СтоимостьОС.Организация,
	|	СтоимостьОС.ОсновноеСредство
	|
	|ИМЕЮЩИЕ
	|	(СУММА(СтоимостьОС.ФактическаяСтоимостьУУ) > СУММА(СтоимостьОС.ПредварительнаяСтоимостьУУ)
	|		ИЛИ СУММА(СтоимостьОС.ФактическаяСтоимостьБУ) > СУММА(СтоимостьОС.ПредварительнаяСтоимостьБУ))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(НачалоРасчета));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(НачалоРасчета));
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ДоначислитьНалогНаИмущество(Месяц, МенеджерВременныхТаблиц, Отказ)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Ссылка КАК РегламентныйДокумент,
	|	РегламентнаяОперация.Дата КАК ДатаОтражения
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Проведен
	|	И РегламентнаяОперация.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И РегламентнаяОперация.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетНалогаНаИмущество)
	|	И РегламентнаяОперация.Организация В
	|			(ВЫБРАТЬ
	|				ВТ_РазницаВСтоимостиОС.Организация
	|			ИЗ
	|				ВТ_РазницаВСтоимостиОС
	|			ГДЕ
	|				ВТ_РазницаВСтоимостиОС.СтоимостьРегл > 0)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Месяц));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Месяц));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СписокИзменяемыхРегистров = Новый Массив;
	СписокИзменяемыхРегистров.Добавить("ПрочиеРасходы");
	СписокИзменяемыхРегистров.Добавить("ПрочиеАктивыПассивы");
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.РегламентнаяОперация");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.РегламентныйДокумент);
			
			// До конца 2022г.
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.РасчетНалогаНаИмущество.НаборЗаписей");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.РегламентныйДокумент);
			
			// С 2023г.
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.РасчетНалогаНаИмуществоПоКадастровойСтоимости.НаборЗаписей");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.РегламентныйДокумент);
			
			// С 2023г.
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.РасчетНалогаНаИмуществоПоСреднегодовойСтоимости.НаборЗаписей");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.РегламентныйДокумент);
			
			Для каждого ИмяРегистра Из СписокИзменяемыхРегистров Цикл
				ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления." + ИмяРегистра + ".НаборЗаписей");
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.РегламентныйДокумент);
			КонецЦикла; 
			
			Блокировка.Заблокировать(); 
			
			ВременныеТаблицыДоРасчета = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);
			
			ДополнительныеПараметрыРасчета = Новый Структура;
			ДополнительныеПараметрыРасчета.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);
			
			РасчетИмущественныхНалоговУП.УточнитьПараметрыОсвобожденияОтУплатыНалогов(
				ДополнительныеПараметрыРасчета, Выборка.Организация, Месяц);
				
			РасчетПоНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоНалогуНаИмущество(
								Выборка.Организация, 
								Месяц, 
								ДополнительныеПараметрыРасчета);
		
			// Удалим все таблицы, которые были созданы во время расчета налога.
			ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ВременныеТаблицыДоРасчета);
		
			РасходыПоНалогу = РасходыПоНалогу(Выборка.Организация, Месяц, РасчетПоНалогу, Отказ);
			
			СформироватьДвиженияРасчетНалога(
				Выборка.Организация, 
				Выборка.ДатаОтражения, 
				Выборка.РегламентныйДокумент, 
				РасчетПоНалогу,
				РасходыПоНалогу,
				СписокИзменяемыхРегистров);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				Перечисления.ОперацииЗакрытияМесяца.РасчетСтоимостиВнеоборотныхАктивов,
				Месяц,
				Выборка.Организация,
				ТекстОшибки,,,
				Отказ);
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Функция РасходыПоНалогу(Организация, Период, РасчетПоНалогу, Отказ)

	СправкаРасчет = РасчетИмущественныхНалоговПереопределяемый.ПустаяСправкаРасчет("РасчетНалогаНаИмущество");
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РасчетПоНалогу, СправкаРасчет);
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегл = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Организация);

	КоэффициентПересчетаВУпр = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
												ВалютаРегл, ВалютаУпр, Период, ВалютаРегл);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.ИФНС КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.СуммаНалогаКУплате КАК СуммаНалогаКУплате
	|ПОМЕСТИТЬ СправкаРасчет
	|ИЗ
	|	&СправкаРасчет КАК СправкаРасчет
	|ГДЕ
	|	СправкаРасчет.СуммаНалогаКУплате <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ ПорядокУчетаОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(&КонецМесяца, ДатаИсправления = ДАТАВРЕМЯ(1, 1, 1)
	|	И ОсновноеСредство В
	|		(ВЫБРАТЬ
	|			СправкаРасчет.ОсновноеСредство
	|		ИЗ
	|			СправкаРасчет КАК СправкаРасчет)) КАК ПорядокУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение КАК Подразделение
	|ПОМЕСТИТЬ МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(&КонецМесяца, ДатаИсправления = ДАТАВРЕМЯ(1, 1, 1)
	|	И Организация = &Организация
	|	И ОсновноеСредство В
	|		(ВЫБРАТЬ
	|			СправкаРасчет.ОсновноеСредство
	|		ИЗ
	|			СправкаРасчет КАК СправкаРасчет)) КАК МестонахождениеОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетНалогаНаИмущество.Период                      КАК Период,
	|	РасчетНалогаНаИмущество.Организация                 КАК Организация,
	|	РасчетНалогаНаИмущество.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	РасчетНалогаНаИмущество.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СУММА(РасчетНалогаНаИмущество.СуммаРегл)            КАК СуммаРегл,
	|	СУММА(РасчетНалогаНаИмущество.Сумма)                КАК Сумма,
	|	СУММА(РасчетНалогаНаИмущество.СуммаБезНДС)          КАК СуммаБезНДС,
	|	СУММА(РасчетНалогаНаИмущество.СуммаУпр)             КАК СуммаУпр,
	|	СУММА(РасчетНалогаНаИмущество.ПостояннаяРазница)    КАК ПостояннаяРазница,
	|	РасчетНалогаНаИмущество.Подразделение               КАК Подразделение,
	|	&СтатьяРасходов                                     КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                        КАК АналитикаРасходов,
	|	&ХозяйственнаяОперация                              КАК ХозяйственнаяОперация
	|ИЗ
	|	(
	|	// До конца 2022г 1 регистр.
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		&Организация КАК Организация,
	|		ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|		СУММА(СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате) КАК СуммаРегл,
	|		СУММА((СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате) *
	|			&КоэффициентПересчетаВУпр) КАК Сумма,
	|		СУММА((СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате) *
	|			&КоэффициентПересчетаВУпр) КАК СуммаБезНДС,
	|		СУММА(ВЫБОР
	|			КОГДА &УправленческийУчетОрганизаций
	|				ТОГДА (СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате) * &КоэффициентПересчетаВУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаУпр,
	|		СУММА(ВЫБОР
	|			КОГДА НЕ ЕСТЬNULL(СтатьиРасходов.ПринятиеКНалоговомуУчету, ИСТИНА)
	|				ТОГДА СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПостояннаяРазница,
	|		МестонахождениеОС.Подразделение КАК Подразделение
	|	ИЗ
	|		СправкаРасчет КАК СправкаРасчет
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|			ПО (РасчетНалогаНаИмущество.Организация = &Организация)
	|			И (РасчетНалогаНаИмущество.ПериодРасчета = &Период)
	|			И (РасчетНалогаНаИмущество.ОсновноеСредство = СправкаРасчет.ОсновноеСредство)
	|			ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|			ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|			ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|			ПО (СтатьиРасходов.Ссылка = &СтатьяРасходов)
	|	ГДЕ
	|		СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате > 0
	|	СГРУППИРОВАТЬ ПО
	|		ПорядокУчетаОС.НаправлениеДеятельности,
	|		СправкаРасчет.РегистрацияВНалоговомОргане,
	|		МестонахождениеОС.Подразделение
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	// Начиная с 2023г 2 регистра.
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		&Организация КАК Организация,
	|		ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|		СУММА(СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоКадастровая.СуммаНалогаКУплате) КАК СуммаРегл,
	|		СУММА((СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоКадастровая.СуммаНалогаКУплате) *
	|			&КоэффициентПересчетаВУпр) КАК Сумма,
	|		СУММА((СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоКадастровая.СуммаНалогаКУплате) *
	|			&КоэффициентПересчетаВУпр) КАК СуммаБезНДС,
	|		СУММА(ВЫБОР
	|			КОГДА &УправленческийУчетОрганизаций
	|				ТОГДА (СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоКадастровая.СуммаНалогаКУплате) *
	|					&КоэффициентПересчетаВУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаУпр,
	|		СУММА(ВЫБОР
	|			КОГДА НЕ ЕСТЬNULL(СтатьиРасходов.ПринятиеКНалоговомуУчету, ИСТИНА)
	|				ТОГДА СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоКадастровая.СуммаНалогаКУплате
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПостояннаяРазница,
	|		МестонахождениеОС.Подразделение КАК Подразделение
	|	ИЗ
	|		СправкаРасчет КАК СправкаРасчет
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РасчетНалогаНаИмуществоПоКадастровойСтоимости КАК
	|				РасчетНалогаНаИмуществоКадастровая
	|			ПО (РасчетНалогаНаИмуществоКадастровая.Организация = &Организация)
	|			И (РасчетНалогаНаИмуществоКадастровая.ПериодРасчета = &Период)
	|			И (РасчетНалогаНаИмуществоКадастровая.ОсновноеСредство = СправкаРасчет.ОсновноеСредство)
	|			ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|			ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|			ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|			ПО (СтатьиРасходов.Ссылка = &СтатьяРасходов)
	|	ГДЕ
	|		СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоКадастровая.СуммаНалогаКУплате > 0
	|	СГРУППИРОВАТЬ ПО
	|		ПорядокУчетаОС.НаправлениеДеятельности,
	|		СправкаРасчет.РегистрацияВНалоговомОргане,
	|		МестонахождениеОС.Подразделение
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		&Организация КАК Организация,
	|		ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|		СУММА(СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоСреднегодовая.СуммаНалогаКУплате) КАК СуммаРегл,
	|		СУММА((СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоСреднегодовая.СуммаНалогаКУплате) *
	|			&КоэффициентПересчетаВУпр) КАК Сумма,
	|		СУММА((СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоСреднегодовая.СуммаНалогаКУплате) *
	|			&КоэффициентПересчетаВУпр) КАК СуммаБезНДС,
	|		СУММА(ВЫБОР
	|			КОГДА &УправленческийУчетОрганизаций
	|				ТОГДА (СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоСреднегодовая.СуммаНалогаКУплате) *
	|					&КоэффициентПересчетаВУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаУпр,
	|		СУММА(ВЫБОР
	|			КОГДА НЕ ЕСТЬNULL(СтатьиРасходов.ПринятиеКНалоговомуУчету, ИСТИНА)
	|				ТОГДА СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоСреднегодовая.СуммаНалогаКУплате
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПостояннаяРазница,
	|		МестонахождениеОС.Подразделение КАК Подразделение
	|	ИЗ
	|		СправкаРасчет КАК СправкаРасчет
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РасчетНалогаНаИмуществоПоСреднегодовойСтоимости КАК
	|				РасчетНалогаНаИмуществоСреднегодовая
	|			ПО (РасчетНалогаНаИмуществоСреднегодовая.Организация = &Организация)
	|			И (РасчетНалогаНаИмуществоСреднегодовая.ПериодРасчета = &Период)
	|			И (РасчетНалогаНаИмуществоСреднегодовая.ОсновноеСредство = СправкаРасчет.ОсновноеСредство)
	|			ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|			ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|			ПО СправкаРасчет.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|			ПО (СтатьиРасходов.Ссылка = &СтатьяРасходов)
	|	ГДЕ
	|		СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмуществоСреднегодовая.СуммаНалогаКУплате > 0
	|	СГРУППИРОВАТЬ ПО
	|		ПорядокУчетаОС.НаправлениеДеятельности,
	|		СправкаРасчет.РегистрацияВНалоговомОргане,
	|		МестонахождениеОС.Подразделение
	|
	|	) КАК РасчетНалогаНаИмущество
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетНалогаНаИмущество.Период,
	|	РасчетНалогаНаИмущество.Организация,
	|	РасчетНалогаНаИмущество.НаправлениеДеятельности,
	|	РасчетНалогаНаИмущество.РегистрацияВНалоговомОргане,
	|	РасчетНалогаНаИмущество.Подразделение";
	
	Запрос.УстановитьПараметр("СправкаРасчет", СправкаРасчет);
	Запрос.УстановитьПараметр("Период",        НачалоДня(КонецМесяца(Период)));
	Запрос.УстановитьПараметр("КонецМесяца",   КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВУпр", КоэффициентПересчетаВУпр);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.НачислениеИмущественныхНалогов);
	Запрос.УстановитьПараметр("СтатьяРасходов",   ПланыВидовХарактеристик.СтатьиРасходов.ДоначислениеИмущественныхНалоговИАмортизации);
	Запрос.УстановитьПараметр("УправленческийУчетОрганизаций",
		РасчетСебестоимостиПовтИсп.УправленческийУчетОрганизаций(НачалоМесяца(Период)));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ТаблицаРасходовПоНалогу = РасчетИмущественныхНалоговУП.ТаблицаРасходовПоНалогу(
									Перечисления.ТипыНалогов.НалогНаИмущество, 
									Выборка,
									Неопределено,
									Отказ);
									
	Возврат ТаблицаРасходовПоНалогу;
	
КонецФункции

Процедура СформироватьДвиженияРасчетНалога(Организация, ДатаОтражения, РегламентныйДокумент, РасчетПоНалогу, ТаблицыНачислениеНалога, СписокИзменяемыхРегистров)
	
	Для Каждого ДанныеРасчета Из РасчетПоНалогу Цикл
		
		// Измерения текущего регистра.
		МассивИзмерений = Новый Массив;
		Для Каждого Измерение Из Метаданные.РегистрыСведений[ДанныеРасчета.Ключ].Измерения Цикл
			МассивИзмерений.Добавить(Измерение.Имя);
		КонецЦикла;
		
		ПоляПоиска = СтрСоединить(МассивИзмерений,",");
		
		РасчетНалогаНаИмущество = РегистрыСведений[ДанныеРасчета.Ключ].СоздатьНаборЗаписей();
		РасчетНалогаНаИмущество.Отбор.Регистратор.Установить(РегламентныйДокумент);
		РасчетНалогаНаИмущество.Прочитать(); 
		
		Для каждого ДанныеСтроки Из РасчетНалогаНаИмущество Цикл
			СтруктураПоиска = Новый Структура(ПоляПоиска);
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, ДанныеСтроки);
			СписокСтрок = ДанныеРасчета.Значение.НайтиСтроки(СтруктураПоиска);
			
			// Если в расчете более 1 строки по набору измерений - берем первую.
			Если СписокСтрок.Количество() <> 0 Тогда
				ЗаполнитьЗначенияСвойств(ДанныеСтроки, СписокСтрок[0]);
			КонецЕсли; 
		КонецЦикла;  
		
		РасчетНалогаНаИмущество.ДополнительныеСвойства.Вставить(ВнеоборотныеАктивы.ИмяПризнакаВыполненияРасчетаСтоимостиВнеоборотныхАктивов());
		РасчетНалогаНаИмущество.Записать();
		
	КонецЦикла;
	
	Для каждого ИмяРегистра Из СписокИзменяемыхРегистров Цикл
		
		ДобавитьВРегистрНовыеЗаписи(
			РегламентныйДокумент,
			ИмяРегистра, 
			ТаблицыНачислениеНалога[ИмяРегистра],
			Перечисления.ВидыИсточниковДвижений.ДоначислениеНалогаНаИмуществоПослеРасчетаСтоимостиОС);
			
	КонецЦикла;
	
	ТаблицаОтражениеДокументовВРеглУчете = 
		ВнеоборотныеАктивыСлужебный.ТаблицаОтражениеДокументов(
				РегламентныйДокумент, 
				Организация, 
				ДатаОтражения);
	
	РеглУчетПроведениеСервер.ВернутьДокументыКОтражению(ТаблицаОтражениеДокументовВРеглУчете);

КонецПроцедуры

Процедура РассчитатьСтоимостьПриЦелевомФинансировании(ВыборкаДокумент, ДанныеДокумента, ТекущиеРасходы)

	Если ВыборкаДокумент.ВариантПримененияЦелевогоФинансирования <> Перечисления.ВариантыПримененияЦелевогоФинансирования.Частичное Тогда
		Возврат;
	КонецЕсли; 
		
	Для каждого СтрокаДокумента Из ДанныеДокумента Цикл
		
		// Сумму целевых средств нужно распределить пропорционально по строкам расходов.
		СтоимостьРеглКоэффициенты = Новый Массив;
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ОбъектУчета", СтрокаДокумента.ОбъектУчета);
		СписокСтрок = ТекущиеРасходы.НайтиСтроки(СтруктураПоиска);
		Для каждого СтрокаРасход Из СписокСтрок Цикл
			СтоимостьРеглКоэффициенты.Добавить(СтрокаРасход.СуммаРегл);
		КонецЦикла; 
		
		СуммаЦФ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаДокумента.СуммаЦелевыхСредств, СтоимостьРеглКоэффициенты);
		
		Для Сч = 0 По СписокСтрок.ВГраница() Цикл
			
			СтрокаРасход = СписокСтрок[Сч];
			
			СтрокаРасход.СуммаЦФ = ?(СуммаЦФ <> Неопределено, СуммаЦФ[Сч], 0);
			
			СтрокаРасход.СуммаПРЦФ = Мин(СтрокаРасход.СуммаЦФ, СтрокаРасход.ПостояннаяРазница);
			
			Если СтрокаРасход.ПостояннаяРазница > 0
				И СтрокаРасход.ПостояннаяРазница > СтрокаРасход.СуммаЦФ Тогда
				СтрокаРасход.СуммаВРЦФ = 0;
			ИначеЕсли СтрокаРасход.ВременнаяРазница > 0 
				И СтрокаРасход.ВременнаяРазница > (СтрокаРасход.СуммаЦФ - СтрокаРасход.ПостояннаяРазница) Тогда
				СтрокаРасход.СуммаВРЦФ = СтрокаРасход.СуммаЦФ - СтрокаРасход.ПостояннаяРазница;
			ИначеЕсли СтрокаРасход.ВременнаяРазница > 0 
				И СтрокаРасход.ПостояннаяРазница <= (СтрокаРасход.СуммаЦФ - СтрокаРасход.ПостояннаяРазница) Тогда
				СтрокаРасход.СуммаВРЦФ = СтрокаРасход.ВременнаяРазница;
			КонецЕсли; 
			
		КонецЦикла;
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура КорректировкаСтоимостиАрендованногоИмущества(ВыборкаДокумент, ДанныеДокумента, ТекущиеРасходы)

	Если ВыборкаДокумент.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПринятиеКУчетуПредметовАренды
		ИЛИ НЕ ВыборкаДокумент.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи Тогда
		Возврат;
	КонецЕсли; 
	
	Для каждого СтрокаДокумента Из ДанныеДокумента Цикл
		
		// Стоимость в НУ распределить пропорционально по строкам расходов.
		СтоимостьНУКоэффициенты = Новый Массив;
		
		СтруктураПоиска = Новый Структура("ОбъектУчета", СтрокаДокумента.ОбъектУчета);
		СписокСтрок = ТекущиеРасходы.НайтиСтроки(СтруктураПоиска);
		Для каждого СтрокаРасход Из СписокСтрок Цикл
			СтоимостьНУКоэффициенты.Добавить(СтрокаРасход.СуммаРегл - СтрокаРасход.ПостояннаяРазница - СтрокаРасход.ВременнаяРазница);
		КонецЦикла; 
		
		СуммаНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаДокумента.СтоимостьНУ, СтоимостьНУКоэффициенты);

		Если СуммаНУ = Неопределено Тогда
			Продолжить
		КонецЕсли;
		
		Для Сч = 0 По СписокСтрок.ВГраница() Цикл
			
			СтрокаРасход = СписокСтрок[Сч];
			СтрокаРасход.НеУчитываемаяСтоимостьНУ = СтоимостьНУКоэффициенты[Сч] - СуммаНУ[Сч];
			
		КонецЦикла;
		
	КонецЦикла; 

КонецПроцедуры

#КонецОбласти

#Область РаспределениеНДС_2_2

Процедура ВключитьВСтоимостьВНАРезультатРаспределенияНДС_2_2(ТаблицаВнеоборотныхАктивов, РезультатРаспределения, ТаблицыДляДвижений, Реквизиты)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВнеоборотныеАктивы.Организация,
	|	ВнеоборотныеАктивы.Объект
	|ПОМЕСТИТЬ Отбор
	|ИЗ
	|	&ВнеоборотныеАктивы КАК ВнеоборотныеАктивы
	|;
	|
	|///////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПараметрыАмортизацииОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОС.Организация КАК Организация,
	|	ПараметрыАмортизацииОС.СрокПолезногоИспользованияБУ КАК СрокПолезногоИспользованияБУ,
	|	ПараметрыАмортизацииОС.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
	|	ПараметрыАмортизацииОС.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОС.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОС.КоэффициентАмортизацииБУ КАК КоэффициентАмортизацииБУ,
	|	ПараметрыАмортизацииОС.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ПараметрыАмортизацииОС.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОС.СтоимостьДляВычисленияАмортизацииЦФ КАК СтоимостьДляВычисленияАмортизацииЦФ,
	|	ПараметрыАмортизацииОС.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОС.ГрафикАмортизации КАК ГрафикАмортизации,
	|	ПараметрыАмортизацииОС.СпециальныйКоэффициент КАК СпециальныйКоэффициент,
	|	ПараметрыАмортизацииОС.ДатаПоследнегоИзменения КАК ДатаПоследнегоИзменения,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБУ.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|			И (Организация, ОсновноеСредство) В (
	|					ВЫБРАТЬ 
	|						Т.Организация,
	|						Т.Объект 
	|					ИЗ 
	|						Отбор КАК Т)
	|	) КАК ПараметрыАмортизацииОС
	|;
	|
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПервоначальныеСведенияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПервоначальныеСведенияНМА.Организация КАК Организация,
	|	ПервоначальныеСведенияНМА.СпособПоступления КАК СпособПоступления,
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьПР КАК ПервоначальнаяСтоимостьПР,
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьВР КАК ПервоначальнаяСтоимостьВР,
	|	ПервоначальныеСведенияНМА.ПорядокУчетаНУ КАК ПорядокУчетаНУ,
	|	ПервоначальныеСведенияНМА.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ПервоначальныеСведенияНМА.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияНМА.ДатаПриобретения КАК ДатаПриобретения,
	|	ПервоначальныеСведенияНМА.ДатаПринятияКУчетуБУ КАК ДатаПринятияКУчетуБУ,
	|	ПервоначальныеСведенияНМА.ДокументПринятияКУчетуБУ КАК ДокументПринятияКУчетуБУ,
	|	ПервоначальныеСведенияНМА.ДокументСписания КАК ДокументСписания,
	|	ПервоначальныеСведенияНМА.РезервПереоценкиАмортизации КАК РезервПереоценкиАмортизации,
	|	ПервоначальныеСведенияНМА.РезервПереоценкиСтоимости КАК РезервПереоценкиСтоимости,
	|	ПервоначальныеСведенияНМА.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	ПервоначальныеСведенияНМА.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	ПервоначальныеСведенияНМА.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияНМА.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|			И (Организация, НематериальныйАктив) В (
	|					ВЫБРАТЬ 
	|						Т.Организация,
	|						Т.Объект 
	|					ИЗ 
	|						Отбор КАК Т)
	|	) КАК ПервоначальныеСведенияНМА
	|;
	|
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.СпособПоступления КАК СпособПоступления,
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
	|	ПервоначальныеСведенияОС.ПорядокУчетаНУ КАК ПорядокУчетаНУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюНУ КАК ДатаВводаВЭксплуатациюНУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюНУ КАК ДокументВводаВЭксплуатациюНУ,
	|	ПервоначальныеСведенияОС.ДокументСнятияСУчетаБУ КАК ДокументСнятияСУчетаБУ,
	|	ПервоначальныеСведенияОС.ДокументСнятияСУчетаНУ КАК ДокументСнятияСУчетаНУ,
	|	ПервоначальныеСведенияОС.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	ПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|	ИСТИНА КАК РесурсыОбновлены,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|				И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И (Организация, ОсновноеСредство) В (
	|					ВЫБРАТЬ 
	|						Т.Организация,
	|						Т.Объект 
	|					ИЗ 
	|						Отбор КАК Т)
	|	) КАК ПервоначальныеСведенияОС";
	
	Запрос.УстановитьПараметр("ВнеоборотныеАктивы", ТаблицаВнеоборотныхАктивов);
	Запрос.УстановитьПараметр("Граница",            Новый Граница(Реквизиты.ПериодОкончание, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Период",             Реквизиты.Период);
	Запрос.УстановитьПараметр("ДокументСсылка",     Реквизиты.Ссылка);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ПараметрыАмортизацииОСБУ  = РезультатЗапроса[1].Выгрузить();
	ПервоначальныеСведенияНМА = РезультатЗапроса[2].Выгрузить();
	ПервоначальныеСведенияОС  = РезультатЗапроса[3].Выгрузить();
	
	ТаблицыДляДвижений.Вставить("Таблица" + "ПараметрыАмортизацииОСБУ", 
		ТаблицаПараметрыАмортизацииОС(РезультатРаспределения, ПараметрыАмортизацииОСБУ));
		
	ТаблицыДляДвижений.Вставить("Таблица" + "ПервоначальныеСведенияОС", 
		ТаблицаПервоначальныеСведенияОС(РезультатРаспределения, ПервоначальныеСведенияОС));
	
	ТаблицыДляДвижений.Вставить("Таблица" + "ПервоначальныеСведенияНМА", 
		ТаблицаПервоначальныеСведенияНМА(РезультатРаспределения, ПервоначальныеСведенияНМА));
	
КонецПроцедуры

Функция ТаблицаПервоначальныеСведенияНМА(РезультатРаспределения, ТаблицаПервоначальныеСведенияНМА)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "НМА");
	
	ТаблицыИсточники = Новый Соответствие;
	ТаблицыИсточники.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	ТаблицыИсточники.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если ТаблицыИсточники.Получить(ТаблицаРаспределения.Ключ) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиНМА = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаНМА Из СтрокиНМА Цикл
			
			Если СтрокаНМА.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
					ИЛИ СтрокаНМА.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
				// Уже в расходах
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения = ТаблицаПервоначальныеСведенияНМА.Найти(СтрокаНМА.АналитикаРасходов, "НематериальныйАктив");
			Если ПервоначальныеСведения = Неопределено Тогда
				ПервоначальныеСведения = ТаблицаПервоначальныеСведенияНМА.Найти(СтрокаНМА.АналитикаАктивовПассивов, "НематериальныйАктив");
			КонецЕсли;
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.ПервоначальнаяСтоимостьБУ = 
				ПервоначальныеСведения.ПервоначальнаяСтоимостьБУ
				+ СтрокаНМА.НДСРегл;
				
			ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ = 
				ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ 
				+ СтрокаНМА.НДСРегл;
				
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаПервоначальныеСведенияНМА.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

Функция ТаблицаПервоначальныеСведенияОС(РезультатРаспределения, ТаблицаПервоначальныеСведенияОС)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "ОС");
	
	ТаблицыИсточники = Новый Соответствие;
	ТаблицыИсточники.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	ТаблицыИсточники.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если ТаблицыИсточники.Получить(ТаблицаРаспределения.Ключ) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиОС = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаОС Из СтрокиОС Цикл
			
			Если СтрокаОС.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
					ИЛИ СтрокаОС.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
				// Уже в расходах
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения = ТаблицаПервоначальныеСведенияОС.Найти(СтрокаОС.АналитикаРасходов, "ОсновноеСредство");
			Если ПервоначальныеСведения = Неопределено Тогда
				ПервоначальныеСведения = ТаблицаПервоначальныеСведенияОС.Найти(СтрокаОС.АналитикаАктивовПассивов, "ОсновноеСредство");
			КонецЕсли;
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.ПервоначальнаяСтоимостьБУ = 
				ПервоначальныеСведения.ПервоначальнаяСтоимостьБУ 
				+ СтрокаОС.НДСРегл;
				
			ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ = 
				ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ 
				+ СтрокаОС.НДСРегл;
				
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаПервоначальныеСведенияОС.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

Функция ТаблицаПараметрыАмортизацииОС(РезультатРаспределения, ТаблицаПараметрыАмортизацииОС)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "ОС");
	
	ТаблицыИсточники = Новый Соответствие;
	ТаблицыИсточники.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	ТаблицыИсточники.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если ТаблицыИсточники.Получить(ТаблицаРаспределения.Ключ) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиОС = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаОС Из СтрокиОС Цикл
			
			Если СтрокаОС.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
					ИЛИ СтрокаОС.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
				// Уже в расходах
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения = ТаблицаПараметрыАмортизацииОС.Найти(СтрокаОС.АналитикаРасходов, "ОсновноеСредство");
			Если ПервоначальныеСведения = Неопределено Тогда
				ПервоначальныеСведения = ТаблицаПараметрыАмортизацииОС.Найти(СтрокаОС.АналитикаАктивовПассивов, "ОсновноеСредство");
			КонецЕсли;
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.СтоимостьДляВычисленияАмортизации = ПервоначальныеСведения.СтоимостьДляВычисленияАмортизации + СтрокаОС.НДСРегл;
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаПараметрыАмортизацииОС.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

#КонецОбласти

#Область ПризнаниеВНУАрендныхПлатежей

Функция ПодготовитьПараметрыПризнаниеВНУАрендныхПлатежей(СтруктураШапки)

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	
	Содержание = "Лизинговые платежи";
	
	Запрос.УстановитьПараметр("Ссылка",     СтруктураШапки.Ссылка);
	Запрос.УстановитьПараметр("Организация",СтруктураШапки.Организация);
	Запрос.УстановитьПараметр("КонДата",    СтруктураШапки.КонДата);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(СтруктураШапки.КонДата));
	Запрос.УстановитьПараметр("Содержание", Содержание);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = 
		ТекстЗапросаРеквизитыАрендныеПлатежи(НомераТаблиц)
		+ ТекстЗапросаТаблицаОС(НомераТаблиц);
					
	Результат = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ТекстЗапросаРеквизитыАрендныеПлатежи(НомераТаблиц)
	
	НомераТаблиц.Вставить("АрендныеПлатежи", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Дата КАК Период,
	|	РегламентнаяОперация.Дата КАК ДатаРасчета,
	|	ИСТИНА КАК ВыдаватьСообщения,
	|	"""" КАК ИмяСписка,
	|	&Содержание КАК Содержание
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицаОС(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаОС", НомераТаблиц.Количество() + 2);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	МАКСИМУМ(ПорядокУчетаОСБУ.Период) КАК Период
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ДокВводОстатков
	|		ПО ДокВводОстатков.Ссылка = ПорядокУчетаОСБУ.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДокВводОстатков24
	|		ПО ДокВводОстатков24.Ссылка = ПорядокУчетаОСБУ.Регистратор
	|ГДЕ
	|	(ПорядокУчетаОСБУ.Период < &НачалоМесяца
	|			И НЕ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|			И НЕ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|		ИЛИ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|			И КОНЕЦПЕРИОДА(ДокВводОстатков.Дата, МЕСЯЦ) < &НачалоМесяца
	|		ИЛИ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|			И КОНЕЦПЕРИОДА(ДокВводОстатков24.Дата, МЕСЯЦ) < &НачалоМесяца)
	|	И ПорядокУчетаОСБУ.Организация = &Организация
	|	И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|	И ПорядокУчетаОСБУ.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСБУ.ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО ДатыПоследнихСостояний.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|			И ДатыПоследнихСостояний.Организация = ПорядокУчетаОСБУ.Организация
	|			И ДатыПоследнихСостояний.Период = ПорядокУчетаОСБУ.Период
	|			И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|ГДЕ
	|	ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|ГДЕ
	|	ПорядокУчетаОСБУ.Период МЕЖДУ &НачалоМесяца И &КонДата
	|	И ПорядокУчетаОСБУ.Организация = &Организация
	|	И ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|	И ПорядокУчетаОСБУ.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерСтроки,
	|	АрендованныеОС.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	РегистрСведений.АрендованныеОС.СрезПоследних(
	|			&КонДата,
	|			ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						НеСнятыеСУчета.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета)) КАК АрендованныеОС
	|ГДЕ
	|	АрендованныеОС.Договор <> ЗНАЧЕНИЕ(Справочник.ДоговорыАренды.ПустаяСсылка)
	|	И АрендованныеОС.Договор ССЫЛКА Справочник.ДоговорыАренды";
	
	Возврат ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов();
	
КонецФункции

Процедура ТекстЗапросаВтРасходыПоАренднымПлатежам(ТекстыЗапроса)
	
	ИмяТаблицы = "ВтРасходыПоАренднымПлатежам";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Организация                                  КАК Организация,
	|	РасходыПоАренднымПлатежам.ОсновноеСредство    КАК ОсновноеСредство,
	|	РасходыПоАренднымПлатежам.Контрагент          КАК Контрагент,
	|	ВЫРАЗИТЬ(РасходыПоАренднымПлатежам.Договор КАК Справочник.ДоговорыАренды) КАК Договор,
	|	РасходыПоАренднымПлатежам.Подразделение       КАК Подразделение,
	|	РасходыПоАренднымПлатежам.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	РасходыПоАренднымПлатежам.СуммаПлатежаНУ      КАК СуммаПлатежаНУ,
	|	РасходыПоАренднымПлатежам.КорректировкаАмортизацииНУ        КАК КорректировкаАмортизацииНУ,
	|	РасходыПоАренднымПлатежам.НаправлениеДеятельности           КАК НаправлениеДеятельности,
	|	РасходыПоАренднымПлатежам.НаправлениеДеятельностиЗатрат     КАК НаправлениеДеятельностиЗатрат,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыЛизинговыеПлатежи) КАК СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий
	|ПОМЕСТИТЬ ВтРасходыПоАренднымПлатежам
	|ИЗ
	|	&РасходыПоАренднымПлатежам КАК РасходыПоАренднымПлатежам
	|ГДЕ
	|	РасходыПоАренднымПлатежам.СуммаПлатежаНУ <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);

КонецПроцедуры

Процедура ТекстЗапросаВтКорректировкаАмортизации(ТекстыЗапроса)

	ИмяТаблицы = "ВтКорректировкаАмортизации";

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Организация                                  КАК Организация,
	|	КорректировкаАмортизации.ОсновноеСредство    КАК ОсновноеСредство,
	|	КорректировкаАмортизации.Контрагент          КАК Контрагент,
	|	ВЫРАЗИТЬ(КорректировкаАмортизации.Договор КАК Справочник.ДоговорыАренды) КАК Договор,
	|	КорректировкаАмортизации.Подразделение       КАК Подразделение,
	|	КорректировкаАмортизации.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	КорректировкаАмортизации.АналитикаРасходов   КАК АналитикаРасходов,
	|	КорректировкаАмортизации.КорректировкаАмортизацииНУ        КАК КорректировкаАмортизацииНУ,
	|	КорректировкаАмортизации.НаправлениеДеятельности           КАК НаправлениеДеятельности,
	|	КорректировкаАмортизации.НаправлениеДеятельностиЗатрат     КАК НаправлениеДеятельностиЗатрат,
	|	ВЫРАЗИТЬ(КорректировкаАмортизации.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов) КАК СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий
	|ПОМЕСТИТЬ ВтКорректировкаАмортизации
	|ИЗ
	|	&КорректировкаАмортизации КАК КорректировкаАмортизации
	|ГДЕ
	|	КорректировкаАмортизации.КорректировкаАмортизацииНУ <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);

КонецПроцедуры

Процедура ТекстЗапросаПризнаниеВНУАрендныхПлатежейПрочиеРасходы(ТекстыЗапроса)
	
	ИмяТаблицы = "ПрочиеРасходы";

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	ВтДанныеРасходы.Организация                   КАК Организация,
	|	ВтДанныеРасходы.ПодразделениеЗатрат           КАК Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельностиЗатрат КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов                КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                  КАК АналитикаРасходов,
	|	-ВтДанныеРасходы.СуммаПлатежаНУ               КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПризнаниеВНУАрендныхПлатежей) КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтРасходыПоАренднымПлатежам КАК ВтДанныеРасходы
	|ГДЕ
	|	ВтДанныеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И ВтДанныеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	И ВтДанныеРасходы.СтатьяРасходов.ПринятиеКНалоговомуУчету
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	ВтДанныеРасходы.Организация                   КАК Организация,
	|	ВтДанныеРасходы.ПодразделениеЗатрат           КАК Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельностиЗатрат КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов                КАК СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов             КАК АналитикаРасходов,
	|	-ВтДанныеРасходы.КорректировкаАмортизацииНУ   КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПризнаниеВНУАрендныхПлатежей) КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтКорректировкаАмортизации КАК ВтДанныеРасходы
	|ГДЕ
	|	ВтДанныеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И ВтДанныеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	И ВтДанныеРасходы.СтатьяРасходов.ПринятиеКНалоговомуУчету";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры

Процедура ТекстЗапросаПризнаниеВНУАрендныхПлатежейПартииПрочихРасходов(ТекстыЗапроса)
	
	ИмяТаблицы = "ПартииПрочихРасходов";

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	ВтДанныеРасходы.Организация                   КАК Организация,
	|	ВтДанныеРасходы.ПодразделениеЗатрат           КАК Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельностиЗатрат КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов                КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                  КАК АналитикаРасходов,
	|	&Ссылка                                       КАК ДокументПоступленияРасходов,
	|	ВтДанныеРасходы.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	-ВтДанныеРасходы.СуммаПлатежаНУ               КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПризнаниеВНУАрендныхПлатежей) КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтРасходыПоАренднымПлатежам КАК ВтДанныеРасходы
	|ГДЕ
	|	ВтДанныеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И ВтДанныеРасходы.СтатьяРасходов.ПринятиеКНалоговомуУчету
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	ВтДанныеРасходы.Организация                   КАК Организация,
	|	ВтДанныеРасходы.ПодразделениеЗатрат           КАК Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельностиЗатрат КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов                КАК СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов             КАК АналитикаРасходов,
	|	&Ссылка                                       КАК ДокументПоступленияРасходов,
	|	ВтДанныеРасходы.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	-ВтДанныеРасходы.КорректировкаАмортизацииНУ   КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПризнаниеВНУАрендныхПлатежей) КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтКорректировкаАмортизации КАК ВтДанныеРасходы
	|ГДЕ
	|	ВтДанныеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И ВтДанныеРасходы.СтатьяРасходов.ПринятиеКНалоговомуУчету";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры

Процедура ТекстЗапросаПризнаниеВНУАрендныхПлатежейСтоимостьОС(ТекстыЗапроса)
	
	#Область втПорядокУчетаОС
	ИмяТаблицы = "втСписокОС";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Т.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втСписокОС
	|ИЗ
	|	ВтРасходыПоАренднымПлатежам КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.ОсновноеСредство
	|ИЗ
	|	ВтКорректировкаАмортизации КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	#КонецОбласти

	#Область втПорядокУчетаОС
	ИмяТаблицы = "втПорядокУчетаОС";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистра.ОсновноеСредство          КАК ОсновноеСредство,
	|	ДанныеРегистра.ГруппаФинансовогоУчета    КАК ГруппаФинансовогоУчета,
	|	ДанныеРегистра.НаправлениеДеятельности   КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втПорядокУчетаОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&Период,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						Т.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК Т)) КАК ДанныеРегистра
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	#КонецОбласти

	#Область втМестонахождениеОС
	ИмяТаблицы = "втМестонахождениеОС";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистра.ОсновноеСредство  КАК ОсновноеСредство,
	|	ДанныеРегистра.Местонахождение   КАК Местонахождение
	|ПОМЕСТИТЬ втМестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&Период,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						Т.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК Т)) КАК ДанныеРегистра
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	#КонецОбласти
	
	#Область СтоимостьОС
	ИмяТаблицы = "СтоимостьОС";

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	ВтДанныеРасходы.Организация                   КАК Организация,
	|	ВтДанныеРасходы.ОсновноеСредство              КАК ОсновноеСредство,
	|	втМестонахождениеОС.Местонахождение           КАК Подразделение,
	|	втПорядокУчетаОС.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	втПорядокУчетаОС.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СуммаПлатежаНУ                КАК НеУчитываемаяСтоимостьНУ,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПризнаниеВНУАрендныхПлатежей) КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтРасходыПоАренднымПлатежам КАК ВтДанныеРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождениеОС КАК втМестонахождениеОС
	|		ПО втМестонахождениеОС.ОсновноеСредство = ВтДанныеРасходы.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК втПорядокУчетаОС
	|		ПО втПорядокУчетаОС.ОсновноеСредство = ВтДанныеРасходы.ОсновноеСредство
	|ГДЕ
	|	ВтДанныеРасходы.СуммаПлатежаНУ <> 0
	|	И &ИспользуетсяУправлениеВНА_2_4
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	ВтДанныеРасходы.Организация                   КАК Организация,
	|	ВтДанныеРасходы.ОсновноеСредство              КАК ОсновноеСредство,
	|	втМестонахождениеОС.Местонахождение           КАК Подразделение,
	|	втПорядокУчетаОС.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	втПорядокУчетаОС.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.КорректировкаАмортизацииНУ    КАК НеУчитываемаяСтоимостьНУ,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПризнаниеВНУАрендныхПлатежей) КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтКорректировкаАмортизации КАК ВтДанныеРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождениеОС КАК втМестонахождениеОС
	|		ПО втМестонахождениеОС.ОсновноеСредство = ВтДанныеРасходы.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК втПорядокУчетаОС
	|		ПО втПорядокУчетаОС.ОсновноеСредство = ВтДанныеРасходы.ОсновноеСредство
	|ГДЕ
	|	ВтДанныеРасходы.КорректировкаАмортизацииНУ <> 0
	|	И &ИспользуетсяУправлениеВНА_2_4";
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	#КонецОбласти

КонецПроцедуры

Процедура СформироватьДвиженияРасчетРасходовПоАренде(ТаблицаРасходыПоАренднымПлатежамНУ, ТаблицаРеквизиты, Движения, Отказ)

	Параметры = ПодготовитьПараметрыРасчетРасходовПоАренде(ТаблицаРасходыПоАренднымПлатежамНУ, 
		ТаблицаРеквизиты);

	Если Параметры.Реквизиты.Количество() = 0 
		ИЛИ Параметры.ТаблицаРасходыПоАренднымПлатежамНУ.Количество() = 0 Тогда
		
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	ТаблицаРасходыПоАренднымПлатежамНУ.Свернуть(
		"ОсновноеСредство, Контрагент, Договор",
		"АмортизацияБУ, АмортизацияНУ, АмортизацияВР, АмортизацияПР, КорректировкаАмортизацииНУ,
		|СуммаПлатежаБезНДС, СуммаПлатежаНУ");
	
	Для Каждого СтрокаТаблицы Из ТаблицаРасходыПоАренднымПлатежамНУ Цикл
	
		Если СтрокаТаблицы.АмортизацияБУ = 0
			И СтрокаТаблицы.АмортизацияНУ = 0
			И СтрокаТаблицы.АмортизацияВР = 0
			И СтрокаТаблицы.АмортизацияПР = 0
			И СтрокаТаблицы.КорректировкаАмортизацииНУ = 0
			И СтрокаТаблицы.СуммаПлатежаБезНДС = 0
			И СтрокаТаблицы.СуммаПлатежаНУ = 0 Тогда
			Продолжить;
		КонецЕсли;
	
		Движение = Движения.РасчетРасходовПоАренде.Добавить();
		
		ЗаполнитьЗначенияСвойств(Движение, СтрокаТаблицы);
		Движение.ПериодРасчета 	= Реквизиты.ДатаРасчета;
		Движение.Организация	= Реквизиты.Организация;
		
	КонецЦикла;
				
	Движения.РасчетРасходовПоАренде.Записывать = Истина;
	
КонецПроцедуры

Функция ПодготовитьТаблицыРасходовПоАренднымПлатежамНУ(ТаблицаОС, ТаблицаРеквизиты, ТаблицаЗатрат, КоличествоОбработанныхДанных, Отказ)

	Параметры = ПодготовитьПараметрыТаблицыРасходовПоАренднымПлатежамНУ(ТаблицаОС, ТаблицаРеквизиты, ТаблицаЗатрат);

	Реквизиты = Параметры.Реквизиты[0];
	
	ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);

	ТаблицаРасходыПоАренднымПлатежамНУ = ПолучитьПустуюТаблицуРасходыПоАренднымПлатежамНУ();
	ТаблицаЗатратПоАмортизации = Параметры.ТаблицаЗатрат;
	
	ПараметрыРасходовПоАренднымПлатежам = Новый Структура;
	
	ПараметрыРасходовПоАренднымПлатежам.Вставить("ТаблицаРеквизиты", Параметры.Реквизиты);
	ПараметрыРасходовПоАренднымПлатежам.Вставить("ТаблицаРасходыПоАренднымПлатежамНУ", ТаблицаРасходыПоАренднымПлатежамНУ);
	ПараметрыРасходовПоАренднымПлатежам.Вставить("ТаблицаКорректировкаАмортизации", ТаблицаЗатратПоАмортизации);

	Если Не ПлательщикНалогаНаПрибыль Тогда
		Возврат ПараметрыРасходовПоАренднымПлатежам;
	КонецЕсли;
	
	ТаблицаАрендныхПлатежей = ПодготовитьТаблицуАрендныхПлатежей(
								Параметры.ТаблицаОС, 
								Реквизиты, 
								КоличествоОбработанныхДанных, 
								Отказ);
	
	Если Отказ Тогда 
		Возврат ПараметрыРасходовПоАренднымПлатежам;
	КонецЕсли;

	// Оставим в таблице затрат по амортизации только строки, 
	// относящиеся к ОС, полученным в аренду, т.е. учитываемые на субсчетах по аренде.
	Счет02_03 = ПланыСчетов.Хозрасчетный.АмортизацияАрендованногоИмущества;
	
	Инд = ТаблицаЗатратПоАмортизации.Количество() - 1;
	Пока Инд >= 0 Цикл
		СтрокаТаблицы = ТаблицаЗатратПоАмортизации[Инд];
		Если НЕ БухгалтерскийУчетПовтИсп.СчетВИерархии(СтрокаТаблицы.СчетАмортизации, Счет02_03) Тогда
			ТаблицаЗатратПоАмортизации.Удалить(Инд);
		КонецЕсли;
		Инд = Инд - 1;
	КонецЦикла;

	// Если нет арендованных ОС, то больше ничего не делаем.
	Если ТаблицаЗатратПоАмортизации.Количество() + ТаблицаАрендныхПлатежей.Количество() = 0 Тогда
		Возврат ПараметрыРасходовПоАренднымПлатежам;
	КонецЕсли;

	// Амортизация по некоторым объектам ОС могла быть рассчитана ранее в течение месяца 
	// при перемещениях ОС, эти суммы необходимо объединить с текущим расчетом.
	МассивОСвАренде = ТаблицаАрендныхПлатежей.ВыгрузитьКолонку("ОсновноеСредство");
	ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(МассивОСвАренде);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",     Реквизиты.Организация);
	Запрос.УстановитьПараметр("НачалоПериода",   НачалоМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("КонецПериода",    КонецМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("Регистратор",     Реквизиты.Регистратор);
	Запрос.УстановитьПараметр("МассивОСвАренде", МассивОСвАренде);
	
	Если Параметры.ТаблицаОС.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(Реквизиты.Регистратор.МоментВремени(), ВидГраницы.Исключая));
	Иначе
		Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(КонецМесяца(Реквизиты.Период), ВидГраницы.Включая));
	КонецЕсли;
	
	ИспользуетсяУправлениеВНА_2_4 = ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Реквизиты.Период);
	
	ТекстыЗапросов = Новый Массив;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СчетУчетаАмортизации.СчетУчета, 
	|				ПорядокУчетаОС.СчетНачисленияАмортизации) КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&НачалоПериода,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ОсновноеСредство В (&МассивОСвАренде)) КАК ПорядокУчетаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизации
	|		ПО СчетУчетаАмортизации.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА)
	|			И СчетУчетаАмортизации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаАмортизации.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаАмортизации.МестоУчета = НЕОПРЕДЕЛЕНО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СчетУчетаАмортизации.СчетУчета, 
	|				ПорядокУчетаОС.СчетНачисленияАмортизации) КАК СчетНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизации
	|		ПО СчетУчетаАмортизации.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА)
	|			И СчетУчетаАмортизации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаАмортизации.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаАмортизации.МестоУчета = НЕОПРЕДЕЛЕНО
	|ГДЕ
	|	ПорядокУчетаОС.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПорядокУчетаОС.Организация = &Организация
	|	И ПорядокУчетаОС.ОсновноеСредство В (&МассивОСвАренде) 
	|	И (ПорядокУчетаОС.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|		ИЛИ ПорядокУчетаОС.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АрендованныеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫРАЗИТЬ(АрендованныеОС.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	АрендованныеОС.Контрагент КАК Контрагент,
	|	АрендованныеОС.Договор КАК Договор
	|ПОМЕСТИТЬ ВТ_АрендованныеОС
	|ИЗ
	|	РегистрСведений.АрендованныеОС.СрезПоследних(
	|			&КонецПериода,
	|			ОсновноеСредство В (&МассивОСвАренде)) КАК АрендованныеОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	Если ИспользуетсяУправлениеВНА_2_4 Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СчетУчетаАмортизации.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетАмортизации,
		|	РанееНачисленнаяАмортизация.ОсновноеСредство КАК ОсновноеСредство,
		|	РанееНачисленнаяАмортизация.Подразделение КАК Подразделение,
		|	РанееНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	СУММА(РанееНачисленнаяАмортизация.АмортизацияРегл) КАК СуммаБУ,
		|	СУММА(РанееНачисленнаяАмортизация.АмортизацияНУ) КАК СуммаНУ,
		|	СУММА(РанееНачисленнаяАмортизация.АмортизацияВР) КАК СуммаВР,
		|	СУММА(РанееНачисленнаяАмортизация.АмортизацияПР) КАК СуммаПР
		|ПОМЕСТИТЬ ВТ_РанееНачисленнаяАмортизация
		|ИЗ
		|	РегистрНакопления.АмортизацияОС КАК РанееНачисленнаяАмортизация
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизации
		|		ПО СчетУчетаАмортизации.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА)
		|			И СчетУчетаАмортизации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			И СчетУчетаАмортизации.АналитикаУчета = РанееНачисленнаяАмортизация.ГруппаФинансовогоУчета
		|			И СчетУчетаАмортизации.МестоУчета = НЕОПРЕДЕЛЕНО
		|ГДЕ
		|	РанееНачисленнаяАмортизация.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И РанееНачисленнаяАмортизация.Регистратор ССЫЛКА Документ.АмортизацияОС2_4
		|	И РанееНачисленнаяАмортизация.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И РанееНачисленнаяАмортизация.Организация = &Организация
		|	И РанееНачисленнаяАмортизация.ОсновноеСредство В (&МассивОСвАренде)
		|	И РанееНачисленнаяАмортизация.Активность
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(СчетУчетаАмортизации.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)),
		|	РанееНачисленнаяАмортизация.ОсновноеСредство,
		|	РанееНачисленнаяАмортизация.Подразделение,
		|	РанееНачисленнаяАмортизация.НаправлениеДеятельности
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство";
		
		ТекстыЗапросов.Добавить(ТекстЗапроса);
		
	Иначе
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	РанееНачисленнаяАмортизация.СчетКт КАК СчетАмортизации,
		|	РанееНачисленнаяАмортизация.СубконтоКт1 КАК ОсновноеСредство,
		|	РанееНачисленнаяАмортизация.ПодразделениеКт КАК Подразделение,
		|	РанееНачисленнаяАмортизация.НаправлениеДеятельностиКт КАК НаправлениеДеятельности,
		|	СУММА(РанееНачисленнаяАмортизация.Сумма) КАК СуммаБУ,
		|	СУММА(РанееНачисленнаяАмортизация.СуммаНУКт) КАК СуммаНУ,
		|	СУММА(РанееНачисленнаяАмортизация.СуммаВРКт) КАК СуммаВР,
		|	СУММА(РанееНачисленнаяАмортизация.СуммаПРКт) КАК СуммаПР
		|ПОМЕСТИТЬ ВТ_РанееНачисленнаяАмортизация
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
		|			&НачалоПериода,
		|			&КонецПериодаГраница,
		|			Организация = &Организация
		|				И СчетКт В
		|					(ВЫБРАТЬ
		|						СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации
		|					ИЗ
		|						СчетаБухгалтерскогоУчетаОС)
		|				И НЕ СчетДт В
		|						(ВЫБРАТЬ
		|							СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации
		|						ИЗ
		|							СчетаБухгалтерскогоУчетаОС)
		|				И Регистратор <> &Регистратор
		|				И СубконтоКт1 В (&МассивОСвАренде),
		|			,
		|			) КАК РанееНачисленнаяАмортизация
		|
		|СГРУППИРОВАТЬ ПО
		|	РанееНачисленнаяАмортизация.СчетКт,
		|	РанееНачисленнаяАмортизация.СубконтоКт1,
		|	РанееНачисленнаяАмортизация.ПодразделениеКт,
		|	РанееНачисленнаяАмортизация.НаправлениеДеятельностиКт
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство";
		
		ТекстыЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МестонахождениеОС.Организация,
	|	МестонахождениеОС.ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение
	|ПОМЕСТИТЬ ВТ_МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|				&НачалоПериода,
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация = &Организация
	|					И ОсновноеСредство В (&МассивОСвАренде)) КАК МестонахождениеОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МестонахождениеОС.Организация,
	|	МестонахождениеОС.ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение
	|ИЗ
	|	РегистрСведений.МестонахождениеОС КАК МестонахождениеОС
	|ГДЕ
	|	МестонахождениеОС.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И МестонахождениеОС.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|	И МестонахождениеОС.Организация = &Организация
	|	И МестонахождениеОС.ОсновноеСредство В (&МассивОСвАренде) 
	|	И (МестонахождениеОС.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|		ИЛИ МестонахождениеОС.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство    КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.СтатьяРасходовНУ    КАК СтатьяРасходов,
	|	ПорядокУчетаОСБУ.АналитикаРасходовНУ КАК АналитикаРасходов,
	|
	|	НЕ ПорядокУчетаОСБУ.СпособОтраженияРасходовНУ В (
	|			ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС.ПустаяСсылка),
	|			ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка),
	|			НЕОПРЕДЕЛЕНО) КАК СпособОтраженияРасходовЗаданДокументом,
	|
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовНУ КАК СпособОтраженияРасходов
	|                                                                
	|ПОМЕСТИТЬ ВТ_СпособыОтраженияРасходовБУ
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&НачалоПериода,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация = &Организация
	|				И ОсновноеСредство В (&МассивОСвАренде)) КАК ПорядокУчетаОСБУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство      КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.СтатьяРасходовНУ      КАК СтатьяРасходов,
	|	ПорядокУчетаОСБУ.АналитикаРасходовНУ   КАК АналитикаРасходов,
	|
	|	НЕ ПорядокУчетаОСБУ.СпособОтраженияРасходовНУ В (
	|			ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС.ПустаяСсылка),
	|			ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка),
	|			НЕОПРЕДЕЛЕНО) КАК СпособОтраженияРасходовЗаданДокументом,
	|
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовНУ КАК СпособОтраженияРасходов                                                                
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|ГДЕ
	|	ПорядокУчетаОСБУ.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|	И ПорядокУчетаОСБУ.Организация = &Организация
	|	И ПорядокУчетаОСБУ.ОсновноеСредство В (&МассивОСвАренде)
	|	И (ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|		ИЛИ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СпособОтраженияРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпособыОтраженияРасходовБУ.ОсновноеСредство    КАК ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение              КАК Подразделение,
	|	СпособыОтраженияРасходовБУ.СтатьяРасходов      КАК СтатьяРасходов,
	|	СпособыОтраженияРасходовБУ.АналитикаРасходов   КАК АналитикаРасходов,
	|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом КАК СпособОтраженияРасходовЗаданДокументом,
	|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ВТ_АрендованныеОС.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	ВТ_СпособыОтраженияРасходовБУ КАК СпособыОтраженияРасходовБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АрендованныеОС КАК ВТ_АрендованныеОС
	|		ПО (ВТ_АрендованныеОС.ОсновноеСредство = СпособыОтраженияРасходовБУ.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестонахождениеОС КАК МестонахождениеОС
	|		ПО (МестонахождениеОС.Организация = &Организация)
	|			И (МестонахождениеОС.ОсновноеСредство = СпособыОтраженияРасходовБУ.ОсновноеСредство)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзменениеПараметровОС.Ссылка КАК СпособОтраженияРасходов,
	|	ИзменениеПараметровОС.ОтражениеАмортизационныхРасходов.(
	|		НомерСтроки,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов,
	|		АналитикаРасходов,
	|		СтатьяРасходовАмортизационнойПремии,
	|		АналитикаРасходовАмортизационнойПремии,
	|		Коэффициент,
	|		ПередаватьРасходыВДругуюОрганизацию,
	|		ОрганизацияПолучательРасходов,
	|		СчетПередачиРасходов
	|	) КАК ОтражениеАмортизационныхРасходов
	|ИЗ
	|	ВТ_СпособыОтраженияРасходовБУ КАК СпособыОтраженияРасходовБУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС КАК ИзменениеПараметровОС
	|		ПО СпособыОтраженияРасходовБУ.СпособОтраженияРасходов = ИзменениеПараметровОС.Ссылка
	|ГДЕ
	|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИзменениеПараметровОС.Ссылка КАК СпособОтраженияРасходов,
	|	ИзменениеПараметровОС.Амортизация.(
	|		НомерСтроки,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов,
	|		АналитикаРасходов,
	|		NULL,
	|		NULL,
	|		Коэффициент,
	|		ПередаватьРасходыВДругуюОрганизацию,
	|		ОрганизацияПолучательРасходов,
	|		NULL
	|	) КАК ОтражениеАмортизационныхРасходов
	|ИЗ
	|	ВТ_СпособыОтраженияРасходовБУ КАК СпособыОтраженияРасходовБУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС2_4 КАК ИзменениеПараметровОС
	|		ПО СпособыОтраженияРасходовБУ.СпособОтраженияРасходов = ИзменениеПараметровОС.Ссылка
	|ГДЕ
	|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РанееНачисленнаяАмортизация.СчетАмортизации,
	|	ВТ_РанееНачисленнаяАмортизация.ОсновноеСредство,
	|	ВТ_АрендованныеОС.Контрагент,
	|	ВТ_АрендованныеОС.Договор,
	|	ВТ_СпособыОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом,
	|	ВТ_СпособыОтраженияРасходовБУ.СпособОтраженияРасходов,
	|	ВТ_СпособыОтраженияРасходовБУ.СтатьяРасходов,
	|	ВТ_СпособыОтраженияРасходовБУ.АналитикаРасходов,
	|	ВТ_РанееНачисленнаяАмортизация.Подразделение,
	|	ВТ_АрендованныеОС.НаправлениеДеятельности,
	|	ВТ_РанееНачисленнаяАмортизация.СуммаБУ,
	|	ВТ_РанееНачисленнаяАмортизация.СуммаНУ,
	|	ВТ_РанееНачисленнаяАмортизация.СуммаВР,
	|	ВТ_РанееНачисленнаяАмортизация.СуммаПР
	|ИЗ
	|	ВТ_РанееНачисленнаяАмортизация КАК ВТ_РанееНачисленнаяАмортизация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АрендованныеОС КАК ВТ_АрендованныеОС
	|		ПО ВТ_РанееНачисленнаяАмортизация.ОсновноеСредство = ВТ_АрендованныеОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СпособыОтраженияРасходовБУ КАК ВТ_СпособыОтраженияРасходовБУ
	|		ПО ВТ_РанееНачисленнаяАмортизация.ОсновноеСредство = ВТ_СпособыОтраженияРасходовБУ.ОсновноеСредство";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	Запрос.Текст = СтрСоединить(ТекстыЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	// Заполнение соответствия способов отражения расходов
	СоответствиеСпособовОтражения = Новый Соответствие;
	СпособыОтраженияРасходовБУ = РезультатЗапроса[РезультатЗапроса.ВГраница()-2].Выгрузить();
	СпособыОтраженияРасходовБУ.Индексы.Добавить("ОсновноеСредство");
	Выборка = РезультатЗапроса[РезультатЗапроса.ВГраница()-1].Выбрать();
	Пока Выборка.Следующий() Цикл
		СоответствиеСпособовОтражения.Вставить(Выборка.СпособОтраженияРасходов, Выборка.ОтражениеАмортизационныхРасходов.Выгрузить());
	КонецЦикла;
	
	Выборка = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать();
	
	КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + Выборка.Количество();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.СпособОтраженияРасходовЗаданДокументом Тогда
			
			ТаблицаРаспределения = СоответствиеСпособовОтражения.Получить(Выборка.СпособОтраженияРасходов);
		
			МассивБазы = Новый Массив;
			Для Каждого СтрокаРаспределения Из ТаблицаРаспределения Цикл
				МассивБазы.Добавить(СтрокаРаспределения.Коэффициент);
			КонецЦикла;
			
			МассивАмортизацияБУ	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Выборка.СуммаБУ, МассивБазы);
			МассивАмортизацияНУ	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Выборка.СуммаНУ, МассивБазы);
			МассивАмортизацияВР	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Выборка.СуммаВР, МассивБазы);
			МассивАмортизацияПР	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Выборка.СуммаПР, МассивБазы);
				
			Для Сч = 0 По ТаблицаРаспределения.Количество()-1 Цикл
				
				СтрокаРаспределения = ТаблицаРаспределения[Сч];
			
				СтрокаТаблицы = ТаблицаЗатратПоАмортизации.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
				
				СтрокаТаблицы.СуммаБУ = ?(МассивАмортизацияБУ <> Неопределено, МассивАмортизацияБУ[Сч], 0);
				СтрокаТаблицы.СуммаНУ = ?(МассивАмортизацияНУ <> Неопределено, МассивАмортизацияНУ[Сч], 0);
				СтрокаТаблицы.СуммаВР = ?(МассивАмортизацияВР <> Неопределено, МассивАмортизацияВР[Сч], 0);
				СтрокаТаблицы.СуммаПР = ?(МассивАмортизацияПР <> Неопределено, МассивАмортизацияПР[Сч], 0);
						
				СтрокаТаблицы.ПодразделениеЗатрат = СтрокаРаспределения.Подразделение;
				СтрокаТаблицы.СтатьяРасходов      = СтрокаРаспределения.СтатьяРасходов;
				СтрокаТаблицы.АналитикаРасходов   = СтрокаРаспределения.АналитикаРасходов;
				СтрокаТаблицы.НаправлениеДеятельностиЗатрат = СтрокаРаспределения.НаправлениеДеятельности;
						
			КонецЦикла;
			
		Иначе
			
			СтрокаТаблицы = ТаблицаЗатратПоАмортизации.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
			СтрокаТаблицы.ПодразделениеЗатрат = Выборка.Подразделение;
			СтрокаТаблицы.НаправлениеДеятельностиЗатрат = Выборка.НаправлениеДеятельности;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаЗатратПоАмортизации.Свернуть("АналитикаРасходов,Договор,Контрагент,
											|НаправлениеДеятельности,НаправлениеДеятельностиЗатрат,
											|ОсновноеСредство,Подразделение,ПодразделениеЗатрат,СтатьяРасходов,СчетАмортизации", 
										"КорректировкаАмортизацииНУ,СуммаБУ,СуммаВР,СуммаНУ,СуммаПР");
	
	// Определим общую сумму платежа в разрезе объекта ОС.
	ТаблицаАрендныхПлатежейПоОС = ТаблицаАрендныхПлатежей.Скопировать(, 
		"ОсновноеСредство, Контрагент, Договор,
		|СуммаПлатежаБезНДС, ВалютнаяСуммаНачальныйОстаток, ВалютнаяСуммаОборотКт");
	
	// Добавим в таблицу все ОС из таблицы затрат по амортизации для получения полного списка ОС.
	Для Каждого СтрокаТаблицы Из ТаблицаЗатратПоАмортизации Цикл
		НоваяСтрока = ТаблицаАрендныхПлатежейПоОС.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
	КонецЦикла;
	
	ТаблицаАрендныхПлатежейПоОС.Свернуть("ОсновноеСредство, Контрагент, Договор", 
		"СуммаПлатежаБезНДС, ВалютнаяСуммаНачальныйОстаток, ВалютнаяСуммаОборотКт");
	
	ТаблицаЗатратПоАмортизации.Индексы.Добавить("ОсновноеСредство");
	ТаблицаАрендныхПлатежей.Индексы.Добавить("ОсновноеСредство");
		
	СтруктураПоискаОС = Новый Структура("ОсновноеСредство");
	МассивБазы = Новый Массив;
	
	КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + ТаблицаАрендныхПлатежейПоОС.Количество();
	
	Для Каждого СтрокаТаблицыАрендныхПлатежейПоОС Из ТаблицаАрендныхПлатежейПоОС Цикл
	
		СтруктураПоискаОС.ОсновноеСредство = СтрокаТаблицыАрендныхПлатежейПоОС.ОсновноеСредство;
		
		НайденныеСтрокиАмортизации = ТаблицаЗатратПоАмортизации.НайтиСтроки(СтруктураПоискаОС);
		МассивБазы.Очистить();
		СуммаПлатежаНУ = 0;
		АмортизацияБУ = 0;
		АмортизацияНУ = 0;
		АмортизацияВР = 0;
		АмортизацияПР = 0;
		КорректировкаАмортизацииНУ = 0;
		
		Для Каждого НайденнаяСтрокаАмортизации Из НайденныеСтрокиАмортизации Цикл
			АмортизацияБУ = АмортизацияБУ + НайденнаяСтрокаАмортизации.СуммаБУ;
			АмортизацияНУ = АмортизацияНУ + НайденнаяСтрокаАмортизации.СуммаНУ;
			АмортизацияВР = АмортизацияВР + НайденнаяСтрокаАмортизации.СуммаВР;
			АмортизацияПР = АмортизацияПР + НайденнаяСтрокаАмортизации.СуммаПР;
			МассивБазы.Добавить(НайденнаяСтрокаАмортизации.СуммаНУ);
		КонецЦикла;
		
		СуммаЗадолженностиПоАренде = СтрокаТаблицыАрендныхПлатежейПоОС.ВалютнаяСуммаНачальныйОстаток 
			+ СтрокаТаблицыАрендныхПлатежейПоОС.ВалютнаяСуммаОборотКт;
			
		// Чтобы совокупная величина расходов НУ, состоящая из арендных платежей
		// и амортизации предметов лизинга, не превысила общей суммы выплат по договору, проверяем:
		//  - расходы в НУ относим только в период действия договора (пока задолженность по аренде > 0)
		//  - если амортизация превышает платежи текущего месяца, то суммы превышения относим на ВР или ПР.
		Если ПлательщикНалогаНаПрибыль Тогда
			Если СуммаЗадолженностиПоАренде > 0 Тогда
				СуммаПлатежаНУ = СтрокаТаблицыАрендныхПлатежейПоОС.СуммаПлатежаБезНДС - АмортизацияНУ;
				
				Если СуммаПлатежаНУ < 0 Тогда
					Если СтрокаТаблицыАрендныхПлатежейПоОС.СуммаПлатежаБезНДС < 0 Тогда
						// Корректировка арендных платежей в течение месяца, учитываем только ее.
						СуммаПлатежаНУ = СтрокаТаблицыАрендныхПлатежейПоОС.СуммаПлатежаБезНДС;
					Иначе
						// Превышение амортизации НУ над суммой арендных платежей.
						// Надо скорректировать сумму амортизации НУ на величину превышения.
						КорректировкаАмортизацииНУ = СуммаПлатежаНУ;

						МассивРаспределения = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СуммаПлатежаНУ, МассивБазы);
						Если МассивРаспределения <> Неопределено Тогда
							Для Инд = 0 По НайденныеСтрокиАмортизации.ВГраница() Цикл
								
								НайденныеСтрокиАмортизации[Инд].КорректировкаАмортизацииНУ = МассивРаспределения[Инд];
								
							КонецЦикла;
						КонецЕсли;
						СуммаПлатежаНУ = 0;
					КонецЕсли;
				КонецЕсли;
			Иначе
				// На начало месяца задолженности по аренде не было и в течение месяца
				// задолженность не увеличивалась (ОборотКт), поэтому сумму такой амортизации в НУ не признаем,
				// относим на ПР.
				КорректировкаАмортизацииНУ = - АмортизацияНУ;
				Для Инд = 0 По НайденныеСтрокиАмортизации.ВГраница() Цикл
					НайденныеСтрокиАмортизации[Инд].КорректировкаАмортизацииНУ = - НайденныеСтрокиАмортизации[Инд].СуммаНУ;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		МассивБазы.Очистить();
		НайденныеСтрокиПлатежей = ТаблицаАрендныхПлатежей.НайтиСтроки(СтруктураПоискаОС);
		
		СуммаПлатежейБезНДС = 0;
		Для Каждого НайденнаяСтрокаПлатежа Из НайденныеСтрокиПлатежей Цикл
			СуммаПлатежейБезНДС = СуммаПлатежейБезНДС + НайденнаяСтрокаПлатежа.СуммаПлатежаБезНДС;
		КонецЦикла;
		
		Если НайденныеСтрокиПлатежей.Количество() = 0 ИЛИ СуммаПлатежейБезНДС = 0 Тогда
		
			// Платежи по предмету аренды уже закончились, осталась только амортизация.
			// Заполняем данные в таблице для последующей записи в регистр сведений РасчетРасходовПоАренде.
 			НоваяСтрокаРасходов = ТаблицаРасходыПоАренднымПлатежамНУ.Добавить();
 			ЗаполнитьЗначенияСвойств(НоваяСтрокаРасходов, СтрокаТаблицыАрендныхПлатежейПоОС);
			
			НоваяСтрокаРасходов.СуммаПлатежаБезНДС 	= 0;
			НоваяСтрокаРасходов.СуммаПлатежаНУ 	= 0;
			НоваяСтрокаРасходов.АмортизацияБУ 	= АмортизацияБУ;
			НоваяСтрокаРасходов.АмортизацияНУ 	= АмортизацияНУ;
			НоваяСтрокаРасходов.АмортизацияВР 	= АмортизацияВР;
			НоваяСтрокаРасходов.АмортизацияПР 	= АмортизацияПР;
			НоваяСтрокаРасходов.КорректировкаАмортизацииНУ = КорректировкаАмортизацииНУ;
		
		Иначе

			// Распределим вычисленную сумму расходов и амортизации между строками платежей.
			Для Каждого НайденнаяСтрокаПлатежа Из НайденныеСтрокиПлатежей Цикл
				МассивБазы.Добавить(НайденнаяСтрокаПлатежа.СуммаПлатежаБезНДС);
			КонецЦикла;
			
			МассивСуммаПлатежаНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СуммаПлатежаНУ, МассивБазы);
			МассивАмортизацияБУ	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(АмортизацияБУ, МассивБазы);
			МассивАмортизацияНУ	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(АмортизацияНУ, МассивБазы);
			МассивАмортизацияВР	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(АмортизацияВР, МассивБазы);
			МассивАмортизацияПР	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(АмортизацияПР, МассивБазы);
			МассивКорректировкаАмортизацииНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
				КорректировкаАмортизацииНУ, МассивБазы);

			Для Инд = 0 По НайденныеСтрокиПлатежей.ВГраница() Цикл
				НайденныеСтрокиПлатежей[Инд].СуммаПлатежаНУ = ?(МассивСуммаПлатежаНУ = Неопределено, 0, МассивСуммаПлатежаНУ[Инд]);
				НайденныеСтрокиПлатежей[Инд].АмортизацияБУ 	= ?(МассивАмортизацияБУ  = Неопределено, 0, МассивАмортизацияБУ[Инд]);
				НайденныеСтрокиПлатежей[Инд].АмортизацияНУ 	= ?(МассивАмортизацияНУ  = Неопределено, 0, МассивАмортизацияНУ[Инд]);
				НайденныеСтрокиПлатежей[Инд].АмортизацияВР 	= ?(МассивАмортизацияВР  = Неопределено, 0, МассивАмортизацияВР[Инд]);
				НайденныеСтрокиПлатежей[Инд].АмортизацияПР 	= ?(МассивАмортизацияПР  = Неопределено, 0, МассивАмортизацияПР[Инд]);
				НайденныеСтрокиПлатежей[Инд].КорректировкаАмортизацииНУ = 
					?(МассивКорректировкаАмортизацииНУ = Неопределено, 0, МассивКорректировкаАмортизацииНУ[Инд]);
			КонецЦикла;
		
			// Относим платежи на расходы пропорционально коэффициентам.
			Для Каждого НайденнаяСтрокаПлатежа Из НайденныеСтрокиПлатежей Цикл
				
				СтрокаСпособОтраженияРасходовБУ = СпособыОтраженияРасходовБУ.Найти(СтрокаТаблицыАрендныхПлатежейПоОС.ОсновноеСредство, "ОсновноеСредство");
				Если СтрокаСпособОтраженияРасходовБУ <> Неопределено 
					И СтрокаСпособОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом Тогда
					
					ТаблицаРаспределения = СоответствиеСпособовОтражения.Получить(СтрокаСпособОтраженияРасходовБУ.СпособОтраженияРасходов);
				
					МассивБазы.Очистить();
					Для Каждого СтрокаРаспределения Из ТаблицаРаспределения Цикл
						МассивБазы.Добавить(СтрокаРаспределения.Коэффициент);
					КонецЦикла;
					
					МассивСуммаПлатежаБезНДС = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.СуммаПлатежаБезНДС, МассивБазы);
						
					МассивСуммаПлатежаНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.СуммаПлатежаНУ, МассивБазы);
						
					МассивАмортизацияБУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.АмортизацияБУ, МассивБазы);
						
					МассивАмортизацияНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.АмортизацияНУ, МассивБазы);
						
					МассивАмортизацияВР = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.АмортизацияВР, МассивБазы);
						
					МассивАмортизацияПР = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.АмортизацияПР, МассивБазы);
						
					МассивКорректировкаАмортизацииНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.КорректировкаАмортизацииНУ, МассивБазы);
						
					Для Сч = 0 По ТаблицаРаспределения.Количество()-1 Цикл
						
						СтрокаРаспределения = ТаблицаРаспределения[Сч];
					
						НоваяСтрокаРасходов = ТаблицаРасходыПоАренднымПлатежамНУ.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаРасходов, НайденнаяСтрокаПлатежа);
						
						НоваяСтрокаРасходов.СуммаПлатежаБезНДС 	= ?(МассивСуммаПлатежаБезНДС <> Неопределено, МассивСуммаПлатежаБезНДС[Сч], 0);
						НоваяСтрокаРасходов.СуммаПлатежаНУ 	= ?(МассивСуммаПлатежаНУ <> Неопределено, МассивСуммаПлатежаНУ[Сч], 0);
						НоваяСтрокаРасходов.АмортизацияБУ 	= ?(МассивАмортизацияБУ <> Неопределено, МассивАмортизацияБУ[Сч], 0);
						НоваяСтрокаРасходов.АмортизацияНУ 	= ?(МассивАмортизацияНУ <> Неопределено, МассивАмортизацияНУ[Сч], 0);
						НоваяСтрокаРасходов.АмортизацияВР 	= ?(МассивАмортизацияВР <> Неопределено, МассивАмортизацияВР[Сч], 0);
						НоваяСтрокаРасходов.АмортизацияПР 	= ?(МассивАмортизацияПР <> Неопределено, МассивАмортизацияПР[Сч], 0);
						НоваяСтрокаРасходов.КорректировкаАмортизацииНУ = ?(МассивКорректировкаАмортизацииНУ <> Неопределено, МассивКорректировкаАмортизацииНУ[Сч], 0);
						
						НоваяСтрокаРасходов.ПодразделениеЗатрат = СтрокаРаспределения.Подразделение;
						НоваяСтрокаРасходов.СтатьяРасходов      = СтрокаРаспределения.СтатьяРасходов;
						НоваяСтрокаРасходов.АналитикаРасходов   = СтрокаРаспределения.АналитикаРасходов;
						НоваяСтрокаРасходов.НаправлениеДеятельностиЗатрат = СтрокаРаспределения.НаправлениеДеятельности;
						
					КонецЦикла; // Для Каждого НайденнаяСтрокаАмортизации Из НайденныеСтрокиАмортизации Цикл
				
				Иначе
					
					СтрокаСпособОтраженияРасходовБУ = СпособыОтраженияРасходовБУ.Найти(НайденнаяСтрокаПлатежа.ОсновноеСредство, "ОсновноеСредство");
					Если СтрокаСпособОтраженияРасходовБУ <> Неопределено Тогда
						НоваяСтрокаРасходов = ТаблицаРасходыПоАренднымПлатежамНУ.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаРасходов, НайденнаяСтрокаПлатежа);
						НоваяСтрокаРасходов.ПодразделениеЗатрат = СтрокаСпособОтраженияРасходовБУ.Подразделение;
						НоваяСтрокаРасходов.СтатьяРасходов      = СтрокаСпособОтраженияРасходовБУ.СтатьяРасходов;
						НоваяСтрокаРасходов.АналитикаРасходов   = СтрокаСпособОтраженияРасходовБУ.АналитикаРасходов;
						НоваяСтрокаРасходов.НаправлениеДеятельностиЗатрат = СтрокаСпособОтраженияРасходовБУ.НаправлениеДеятельности;
					КонецЕсли; 
					
				КонецЕсли;
				
			КонецЦикла; // Для Каждого НайденнаяСтрокаПлатежа Из НайденныеСтрокиПлатежей Цикл
		
		КонецЕсли; // Если НайденныеСтрокиПлатежей.Количество() = 0 Тогда
		
	КонецЦикла;	
	
	Возврат ПараметрыРасходовПоАренднымПлатежам;

КонецФункции

Функция ПодготовитьПараметрыРасчетРасходовПоАренде(ТаблицаРасходыПоАренднымПлатежамНУ, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      	// <Дата>
	+ "Организация," 	// <СправочникСсылка.Организации>
	+ "Регистратор," 	// <ДокументСсылка.*>
	+ "ДатаРасчета"; 	// <Дата>

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));


	// Подготовка таблицы Параметры.ТаблицаРасходыПоАренднымПлатежамНУ

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство,"      	// <СправочникСсылка.Контрагенты>
	+ "Контрагент,"      		// <СправочникСсылка.Контрагенты>
	+ "Договор,"            	// <СправочникСсылка.ДоговорыАренды>
	+ "АмортизацияБУ," 			// <Число(31, 2)>
	+ "АмортизацияНУ," 			// <Число(31, 2)>
	+ "АмортизацияВР," 			// <Число(31, 2)>
	+ "АмортизацияПР," 			// <Число(31, 2)>
	+ "СуммаПлатежаБезНДС," 	// <Число(31, 2)>
	+ "СуммаПлатежаНУ," 		// <Число(31, 2)>
	+ "КорректировкаАмортизацииНУ"; // <Число(31, 2)>

	Параметры.Вставить("ТаблицаРасходыПоАренднымПлатежамНУ",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРасходыПоАренднымПлатежамНУ, 
			СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ПодготовитьПараметрыТаблицыРасходовПоАренднымПлатежамНУ(ТаблицаОС, ТаблицаРеквизиты, ТаблицаЗатрат)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС
	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.ТаблицаЗатратПоАмортизации
	СписокОбязательныхКолонок = ""
	+ "ОбъектУчета,"         // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СчетАмортизации,"     // <ПланСчетовСсылка.Хозрасчетный>
	+ "Подразделение,"       // <СправочникСсылка.СтруктураПредприятия>
	+ "ПодразделениеЗатрат," // <СправочникСсылка.СтруктураПредприятия>
	+ "НаправлениеДеятельности,"       // <СправочникСсылка.НаправленияДеятельности>
	+ "НаправлениеДеятельностиЗатрат," // <СправочникСсылка.НаправленияДеятельности>
	+ "СтатьяРасходов,"      // <ПланВидовХарактеристикСсылка.СтатьиРасходов>
	+ "АналитикаРасходов,"   // <Характеристика.СтатьиРасходов>
	+ "Контрагент,"          // <СправочникСсылка.Контрагенты>
	+ "Договор,"             // <СправочникСсылка.ДоговорыАренды>
	+ "Коэффициент,"         // <Число>
	+ "СуммаБУ,"             // <Число(31, 2)>
	+ "СуммаНУ,"             // <Число(31, 2)>
	+ "СуммаВР,"             // <Число(31, 2)>
	+ "СуммаПР";             // <Число(31, 2)>
	
	Параметры.Вставить("ТаблицаЗатрат",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаЗатрат, СписокОбязательныхКолонок));
		
	Параметры.ТаблицаЗатрат.Колонки.ОбъектУчета.Имя = "ОсновноеСредство";
	Параметры.ТаблицаЗатрат.Колонки.Добавить("КорректировкаАмортизацииНУ", ОбщегоНазначения.ОписаниеТипаЧисло(31, 2));

	// Подготовка таблицы Параметры.Реквизиты
	СписокОбязательныхКолонок = ""
	+ "Период,"           // <Дата>
	+ "ИмяСписка,"        // <Строка, 0>
	+ "Организация,"      // <СправочникСсылка.Организации>
	+ "Регистратор,"      // <ДокументСсылка.*>
	+ "ДатаРасчета,"      // <Дата>
	+ "Содержание,"       // <Строка, 0>
	+ "ВыдаватьСообщения"; // <Булево>

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ПолучитьПустуюТаблицуРасходыПоАренднымПлатежамНУ()

	ОписаниеТиповЧисло15_2     = ОбщегоНазначения.ОписаниеТипаЧисло(31, 2);
	ОписаниеТиповСубконто      = Метаданные.ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Тип;
	ОписаниеТиповПодразделения = БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения();
	ОписаниеТиповХозрасчетный  = Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный");

	ТаблицаРасходыПоАренднымПлатежамНУ = Новый ТаблицаЗначений;
	
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("ОсновноеСредство",
		Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации"));
		
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("Контрагент",
		Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("Договор",
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры.ТипЗначения);
		
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("Подразделение", ОписаниеТиповПодразделения);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("ПодразделениеЗатрат", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
		
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("СчетАмортизации", ОписаниеТиповХозрасчетный);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("ДокументРасчетовСКонтрагентом", ОписаниеТиповСубконто);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("АмортизацияБУ", ОписаниеТиповЧисло15_2);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("АмортизацияНУ", ОписаниеТиповЧисло15_2);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("АмортизацияВР", ОписаниеТиповЧисло15_2);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("АмортизацияПР", ОписаниеТиповЧисло15_2);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("КорректировкаАмортизацииНУ", ОписаниеТиповЧисло15_2);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("СуммаПлатежаБезНДС", ОписаниеТиповЧисло15_2);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("СуммаПлатежаНУ", ОписаниеТиповЧисло15_2);
	
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("АналитикаРасходов", Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.Тип);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("НаправлениеДеятельности", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("НаправлениеДеятельностиЗатрат", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));
	
	Возврат ТаблицаРасходыПоАренднымПлатежамНУ;
	
КонецФункции

Функция ПодготовитьТаблицуАрендныхПлатежей(ТаблицаОС, Реквизиты, КоличествоОбработанныхДанных, Отказ)

	ТаблицаАрендныхПлатежей = ПолучитьПустуюТаблицуАрендныхПлатежей();
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	
	Запрос.УстановитьПараметр(
		"ИспользуетсяУчетАрендыПоФСБУ25_2018", 
		ВнеоборотныеАктивы.ИспользуетсяУчетАрендыПоФСБУ25_2018(Реквизиты.Организация, Реквизиты.Период));
	
	Если ТаблицаОС.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("Период", Реквизиты.Период);
		Запрос.УстановитьПараметр("ТаблицаОС", ТаблицаОС);
		Запрос.Текст = ПолучитьТекстЗапросаПринятыеКУчетуОСПоТаблице();
	Иначе
		Запрос.УстановитьПараметр("Период", КонецМесяца(Реквизиты.Период));
		Запрос.Текст = ПолучитьТекстЗапросаПринятыеКУчетуОСВсе();
	КонецЕсли;
	Запрос.Выполнить();

	// Определяем суммы арендных платежей без НДС из проводок вида Дт 76.07.1,76.27.1,76.37.1 - Кт 60,76 (с поставщиком)
	// по одному и тому же контрагенту и договору в Дт и Кт.
	
	МассивСчетовЛизинговыеПлатежи = Новый Массив;
	МассивСчетовЛизинговыеПлатежи.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);     // 60
	МассивСчетовЛизинговыеПлатежи.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами); // 76
	
	ВидыСубконтоКонтрагентыДоговоры = Новый Массив;
	ВидыСубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	Запрос.УстановитьПараметр("МассивСчетовЛизинговыеПлатежи", МассивСчетовЛизинговыеПлатежи);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Реквизиты.Период));
	
	Если ТаблицаОС.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("КонецПериода", Реквизиты.Период);
		Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(Реквизиты.Регистратор.МоментВремени(), ВидГраницы.Исключая));
	Иначе
		Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Реквизиты.Период));
		Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(КонецМесяца(Реквизиты.Период), ВидГраницы.Включая));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВидыСубконтоКонтрагентыДоговоры", ВидыСубконтоКонтрагентыДоговоры);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоговорыАренды.Ссылка КАК Договор,
	|	АналитикаПоПартнерам.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ВТ_ОтборРасчетов
	|ИЗ
	|	Справочник.ДоговорыАренды КАК ДоговорыАренды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО (АналитикаПоПартнерам.Организация = &Организация)
	|			И (АналитикаПоПартнерам.Партнер = ДоговорыАренды.Партнер)
	|			И (АналитикаПоПартнерам.Контрагент = ДоговорыАренды.Контрагент)
	|			И (АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|			И (АналитикаПоПартнерам.НаправлениеДеятельности = ДоговорыАренды.НаправлениеДеятельности)
	|ГДЕ
	|	ДоговорыАренды.Организация = &Организация
	|	И ДоговорыАренды.Балансодержатель = ЗНАЧЕНИЕ(Перечисление.БалансодержательПредметовАренды.Арендатор)
	|	И ДоговорыАренды.УчитыватьПредметыАрендыВРеглУчете
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючАналитики,
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыПоФинансовымИнструментам.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	РасчетыПоФинансовымИнструментам.Договор КАК Договор,
	|	-РасчетыПоФинансовымИнструментам.СуммаНачальныйОстаток КАК ВалютнаяСуммаНачальныйОстаток,
	|	РасчетыПоФинансовымИнструментам.СуммаРасход КАК ВалютнаяСуммаОборотКт
	|ПОМЕСТИТЬ ВТ_ЗадолженностьПоАренде
	|ИЗ
	|	РегистрНакопления.РасчетыПоФинансовымИнструментам.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			,
	|			(АналитикаУчетаПоПартнерам, Договор) В
	|				(ВЫБРАТЬ
	|					ВТ_ОтборРасчетов.КлючАналитики,
	|					ВТ_ОтборРасчетов.Договор
	|				ИЗ
	|					ВТ_ОтборРасчетов)
	|			И ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства)
	|			) КАК РасчетыПоФинансовымИнструментам
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеУслугПоАренде.Контрагент КАК Контрагент,
	|	ПоступлениеУслугПоАренде.Договор КАК Договор,
	|	ПоступлениеУслугПоАренде.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРасчетовСКонтрагентом,
	|	СУММА(ЕСТЬNULL(Суммы.СуммаБезНДСРегл, ТаблицаНачисления.СуммаСНДС - ТаблицаНачисления.СуммаНДС)) КАК СуммаПлатежаБезНДС
	|ПОМЕСТИТЬ ВТ_АрендныеПлатежи
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде КАК ПоступлениеУслугПоАренде
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеУслугПоАренде.Начисления КАК ТаблицаНачисления
	|		ПО ТаблицаНачисления.Ссылка = ПоступлениеУслугПоАренде.Ссылка
	|			И ТаблицаНачисления.ТипНачисления В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж))
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|		ПО Суммы.Регистратор = ТаблицаНачисления.Ссылка
	|			И Суммы.ИдентификаторСтроки = ТаблицаНачисления.ИдентификаторСтроки
	|			И Суммы.СуммаБезНДСРегл <> 0
	|ГДЕ
	|	ПоступлениеУслугПоАренде.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПоступлениеУслугПоАренде.Организация = &Организация
	|	И ПоступлениеУслугПоАренде.Проведен
	|	И ПоступлениеУслугПоАренде.Договор В (
	|		ВЫБРАТЬ
	|			ВТ_ОтборРасчетов.Договор
	|		ИЗ
	|			ВТ_ОтборРасчетов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеУслугПоАренде.Контрагент,
	|	ПоступлениеУслугПоАренде.Договор,
	|	ПоступлениеУслугПоАренде.Подразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АрендованныеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫРАЗИТЬ(АрендованныеОС.Договор КАК Справочник.ДоговорыАренды).Контрагент КАК Контрагент,
	|	АрендованныеОС.Договор КАК Договор,
	|	ВЫРАЗИТЬ(АрендованныеОС.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	АрендованныеОС.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	АрендованныеОС.Стоимость КАК ПервоначальнаяСтоимость
	|ПОМЕСТИТЬ ВТ_ОСвАренде
	|ИЗ
	|	РегистрСведений.АрендованныеОС.СрезПоследних(
	|			&КонецПериода,
	|			ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						НеСнятыеСУчета.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета)) КАК АрендованныеОС
	|ГДЕ
	|	АрендованныеОС.Договор В (
	|		ВЫБРАТЬ
	|			ВТ_ОтборРасчетов.Договор
	|		ИЗ
	|			ВТ_ОтборРасчетов КАК ВТ_ОтборРасчетов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение
	|ПОМЕСТИТЬ ВТ_МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&КонецПериода,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ВТ_ОСвАренде.ОсновноеСредство
	|					ИЗ
	|						ВТ_ОСвАренде)) КАК МестонахождениеОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗадолженностьПоАренде.Контрагент                                  КАК Контрагент,
	|	ВТ_ЗадолженностьПоАренде.Договор                                     КАК Договор,
	|	ЕСТЬNULL(ВТ_ЗадолженностьПоАренде.ВалютнаяСуммаНачальныйОстаток, 0)  КАК ВалютнаяСуммаНачальныйОстаток,
	|	ЕСТЬNULL(ВТ_ЗадолженностьПоАренде.ВалютнаяСуммаОборотКт, 0)          КАК ВалютнаяСуммаОборотКт,
	|	ЕСТЬNULL(ВТ_МестонахождениеОС.Местонахождение, НЕОПРЕДЕЛЕНО)         КАК Подразделение,
	|	ЕСТЬNULL(ВТ_АрендныеПлатежи.ДокументРасчетовСКонтрагентом, НЕОПРЕДЕЛЕНО) КАК ДокументРасчетовСКонтрагентом,
	|	ЕСТЬNULL(ВТ_ОСвАренде.ОсновноеСредство, НЕОПРЕДЕЛЕНО)                КАК ОсновноеСредство,
	|	ВТ_ОСвАренде.ИнвентарныйНомер                                        КАК ИнвентарныйНомер,
	|	ВТ_ОСвАренде.НаправлениеДеятельности                                 КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(ВТ_ОСвАренде.ПервоначальнаяСтоимость, 0)                    КАК ПервоначальнаяСтоимость,
	|	ЕСТЬNULL(ВТ_АрендныеПлатежи.СуммаПлатежаБезНДС, 0)                   КАК СуммаПлатежаБезНДС
	|ИЗ
	|	ВТ_ЗадолженностьПоАренде КАК ВТ_ЗадолженностьПоАренде
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АрендныеПлатежи КАК ВТ_АрендныеПлатежи
	|		ПО ВТ_ЗадолженностьПоАренде.Контрагент = ВТ_АрендныеПлатежи.Контрагент
	|			И ВТ_ЗадолженностьПоАренде.Договор = ВТ_АрендныеПлатежи.Договор
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОСвАренде КАК ВТ_ОСвАренде
	|		ПО ВТ_ЗадолженностьПоАренде.Контрагент = ВТ_ОСвАренде.Контрагент
	|			И ВТ_ЗадолженностьПоАренде.Договор = ВТ_ОСвАренде.Договор
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестонахождениеОС КАК ВТ_МестонахождениеОС
	|		ПО ВТ_МестонахождениеОС.ОсновноеСредство = ВТ_ОСвАренде.ОсновноеСредство
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент,
	|	Договор,
	|	Подразделение,
	|	ДокументРасчетовСКонтрагентом,
	|	ОсновноеСредство";

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ТаблицаАрендныхПлатежей;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	ЕстьДанные = Выборка.Следующий();
	
	КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + Выборка.Количество();
	
	ВременнаяТаблицаАрендныхПлатежей = ТаблицаАрендныхПлатежей.СкопироватьКолонки();

	Пока ЕстьДанные Цикл
		
		ТекущийКонтрагент                    = Выборка.Контрагент;
		ТекущийДоговор                       = Выборка.Договор;
		ТекущийДокументРасчетовСКонтрагентом = Выборка.ДокументРасчетовСКонтрагентом;
		СуммаПлатежаБезНДС                   = Выборка.СуммаПлатежаБезНДС;
		ВалютнаяСуммаНачальныйОстаток        = Выборка.ВалютнаяСуммаНачальныйОстаток;
		ВалютнаяСуммаОборотКт                = Выборка.ВалютнаяСуммаОборотКт;
	
		// Проверка заполнения таблицы
		Если НЕ ЗначениеЗаполнено(Выборка.ОсновноеСредство) Тогда
			
			Если ТаблицаОС.Количество() = 0 Тогда
			
				ШаблонСообщения = НСтр("ru = 'Не определен предмет аренды для отражения расходов по арендным платежам в налоговом учете для ""%1"" по ""%2"". Расходы не будут отражены в налоговом учете.'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, 
					Выборка.Контрагент, 
					Выборка.Договор);
					
				РасшифровкаПредупреждения = Новый Структура;
				РасшифровкаПредупреждения.Вставить("Контрагент", Выборка.Контрагент);
				РасшифровкаПредупреждения.Вставить("Договор", Выборка.Договор);

				// Выводим сообщение пользователю по текущему объекту, 
				// но не прерываем выполнение всей процедуры.
				ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПредупреждениеВыполненияРасчета(
					Перечисления.ОперацииЗакрытияМесяца.ПризнаниеВНалоговомУчетеАрендныхПлатежей,
					Реквизиты.Период,
					Реквизиты.Организация,
					ТекстСообщения,,
					РасшифровкаПредупреждения);
					
			КонецЕсли;
				
			ЕстьДанные = Выборка.Следующий();
			Продолжить;
		КонецЕсли;
		
		Если (ВалютнаяСуммаНачальныйОстаток + ВалютнаяСуммаОборотКт = 0)
			И СуммаПлатежаБезНДС <> 0 Тогда
			
			ШаблонСообщения = НСтр("ru = 'По договору ""%1"" c ""%2"" отражено начисление арендного платежа в сумме %3 руб., но кредиторской задолженности на начало месяца и кредитового оборота в течение месяца нет. Расходы по арендному платежу не будут отражены в налоговом учете.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, 
				Выборка.Договор, 
				Выборка.Контрагент,
				Выборка.СуммаПлатежаБезНДС);

			// Выводим сообщение пользователю по текущему объекту, 
			// но не прерываем выполнение всей процедуры.
			БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстСообщения, 
				Выборка.ДокументРасчетовСКонтрагентом, , Неопределено);
				
			ЕстьДанные = Выборка.Следующий();
			Продолжить;
			
		КонецЕсли;
		
		// Распределим сумму платежа между предметами аренды по договору 
		// пропорционально их первоначальной стоимости.
		ВременнаяТаблицаАрендныхПлатежей.Очистить();
		
		Пока ЕстьДанные
			И Выборка.Контрагент                    = ТекущийКонтрагент
			И Выборка.Договор                       = ТекущийДоговор
			И Выборка.ДокументРасчетовСКонтрагентом = ТекущийДокументРасчетовСКонтрагентом Цикл
			
			СтрокаТаблицы = ВременнаяТаблицаАрендныхПлатежей.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
			
			ЕстьДанные = Выборка.Следующий();
		КонецЦикла;
		
		Если ВременнаяТаблицаАрендныхПлатежей.Количество() > 1 Тогда
			
			МассивПервоначальныхСтоимостей = ВременнаяТаблицаАрендныхПлатежей.ВыгрузитьКолонку("ПервоначальнаяСтоимость");
			
			МассивСуммаПлатежаБезНДС = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
												СуммаПлатежаБезНДС, МассивПервоначальныхСтоимостей);
												
			МассивВалютнаяСуммаНачальныйОстаток = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
														ВалютнаяСуммаНачальныйОстаток, МассивПервоначальныхСтоимостей);
														
			МассивВалютнаяСуммаОборотКт = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
												ВалютнаяСуммаОборотКт, МассивПервоначальныхСтоимостей);

			Для Инд = 0 По ВременнаяТаблицаАрендныхПлатежей.Количество() - 1 Цикл

				СтрокаТаблицы = ВременнаяТаблицаАрендныхПлатежей[Инд];
				СтрокаТаблицы.СуммаПлатежаБезНДС = 
					?(МассивСуммаПлатежаБезНДС = Неопределено, 0, МассивСуммаПлатежаБезНДС[Инд]);
					
				СтрокаТаблицы.ВалютнаяСуммаНачальныйОстаток = 
					?(МассивВалютнаяСуммаНачальныйОстаток = Неопределено, 0, МассивВалютнаяСуммаНачальныйОстаток[Инд]);
					
				СтрокаТаблицы.ВалютнаяСуммаОборотКт = 
					?(МассивВалютнаяСуммаОборотКт = Неопределено, 0, МассивВалютнаяСуммаОборотКт[Инд]);
					
			КонецЦикла;

		КонецЕсли;
		
		Для Каждого СтрокаТаблицы Из ВременнаяТаблицаАрендныхПлатежей Цикл
			НоваяСтрока = ТаблицаАрендныхПлатежей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		КонецЦикла;
		
	КонецЦикла; 

	Возврат ТаблицаАрендныхПлатежей;

КонецФункции

Функция ПолучитьПустуюТаблицуАрендныхПлатежей()

	ТаблицаАрендныхПлатежей = Новый ТаблицаЗначений;

	ОписаниеТиповЧисло15_2 = ОбщегоНазначения.ОписаниеТипаЧисло(31, 2);

	ТаблицаАрендныхПлатежей.Колонки.Добавить("Контрагент",
		Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		
	ТаблицаАрендныхПлатежей.Колонки.Добавить("Договор",
		Новый ОписаниеТипов("СправочникСсылка.ДоговорыАренды"));
		
	ТаблицаАрендныхПлатежей.Колонки.Добавить("ОсновноеСредство",
		Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации"));
		
	ТаблицаАрендныхПлатежей.Колонки.Добавить("Подразделение",
		БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
		
	ТаблицаАрендныхПлатежей.Колонки.Добавить("ДокументРасчетовСКонтрагентом",
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами.ТипЗначения);
		
	ТаблицаАрендныхПлатежей.Колонки.Добавить("ПервоначальнаяСтоимость", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("ВалютнаяСуммаНачальныйОстаток", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("ВалютнаяСуммаОборотКт", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("СуммаПлатежаБезНДС", ОписаниеТиповЧисло15_2);
	
	ТаблицаАрендныхПлатежей.Колонки.Добавить("СуммаПлатежаНУ", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("АмортизацияБУ", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("АмортизацияНУ", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("АмортизацияВР", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("АмортизацияПР", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("КорректировкаАмортизацииНУ", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("НаправлениеДеятельности", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));

	Возврат ТаблицаАрендныхПлатежей;

КонецФункции

Функция ПолучитьТекстЗапросаПринятыеКУчетуОСВсе()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	МАКСИМУМ(ПорядокУчетаОСБУ.Период) КАК Период
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ДокВводОстатков
	|		ПО (ДокВводОстатков.Ссылка = ПорядокУчетаОСБУ.Регистратор)
	|ГДЕ
	|	(ПорядокУчетаОСБУ.Период < НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|				И НЕ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|			ИЛИ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|				И КОНЕЦПЕРИОДА(ДокВводОстатков.Дата, МЕСЯЦ) < НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ))
	|	И ПорядокУчетаОСБУ.Организация = &Организация
	|	И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|	И ПорядокУчетаОСБУ.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСБУ.ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|	ИЗ
	|		ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО ДатыПоследнихСостояний.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|				И ДатыПоследнихСостояний.Организация = ПорядокУчетаОСБУ.Организация
	|				И ДатыПоследнихСостояний.Период = ПорядокУчетаОСБУ.Период
	|				И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ПорядокУчетаОСБУ.Активность
	|	ГДЕ
	|		ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.ОсновноеСредство
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|	ГДЕ
	|		ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		И ПорядокУчетаОСБУ.Организация = &Организация
	|		И ПорядокУчетаОСБУ.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И &Период
	|		И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|		И ПорядокУчетаОСБУ.Активность
	|
	|	) КАК ПорядокУчетаОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаПринятыеКУчетуОСПоТаблице()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	МАКСИМУМ(ПорядокУчетаОСБУ.Период) КАК Период
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО ПорядокУчетаОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|			И ПорядокУчетаОСБУ.Организация = &Организация
	|			И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|			И ПорядокУчетаОСБУ.Активность
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ДокВводОстатков
	|		ПО (ДокВводОстатков.Ссылка = ПорядокУчетаОСБУ.Регистратор)
	|ГДЕ
	|	(ПорядокУчетаОСБУ.Период < НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|				И НЕ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|			ИЛИ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|				И КОНЕЦПЕРИОДА(ДокВводОстатков.Дата, МЕСЯЦ) < НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСБУ.ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|	ИЗ
	|		ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО ДатыПоследнихСостояний.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|				И ДатыПоследнихСостояний.Организация = ПорядокУчетаОСБУ.Организация
	|				И ДатыПоследнихСостояний.Период = ПорядокУчетаОСБУ.Период
	|				И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ПорядокУчетаОСБУ.Активность
	|	ГДЕ
	|		ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.ОсновноеСредство
	|	ИЗ
	|		ТаблицаОС КАК ТаблицаОС
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО ПорядокУчетаОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|				И ПорядокУчетаОСБУ.Организация = &Организация
	|				И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ПорядокУчетаОСБУ.Активность
	|	ГДЕ
	|		ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		И ПорядокУчетаОСБУ.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И &Период) КАК ПорядокУчетаОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#Область РасчетДвиженийПоКомпонентамАмортизации

Процедура ТекстЗапросаПорядокУчетаОСБУПоКомпонентамАмортизации(Запрос, ТекстыЗапроса, Ссылка)

	ИмяРегистра = "ПорядокУчетаОСБУ";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеДокумента = Ссылка.Метаданные();
	Если Не МетаданныеДокумента.Движения.Содержит(Метаданные.РегистрыСведений.ПорядокУчетаОСБУ) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.Период,
	|	ПорядокУчетаОСБУ.Регистратор,
	|	ПорядокУчетаОСБУ.ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация,
	|	ПорядокУчетаОСБУ.СостояниеБУ,
	|	ПорядокУчетаОСБУ.СостояниеНУ,
	|	ПорядокУчетаОСБУ.НачислятьАмортизациюБУ,
	|	ПорядокУчетаОСБУ.НачислятьАмортизациюНУ,
	|	ПорядокУчетаОСБУ.СтатьяРасходовБУ,
	|	ПорядокУчетаОСБУ.АналитикаРасходовБУ,
	|	ПорядокУчетаОСБУ.СтатьяРасходовНУ,
	|	ПорядокУчетаОСБУ.АналитикаРасходовНУ,
	|	ПорядокУчетаОСБУ.СтатьяРасходовАмортизационнойПремии,
	|	ПорядокУчетаОСБУ.АналитикаРасходовАмортизационнойПремии,
	|	ПорядокУчетаОСБУ.ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчетаОСБУ.ОрганизацияПолучательРасходов,
	|	ПорядокУчетаОСБУ.СчетПередачиРасходов,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовНУ,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовАмортизационнойПремии,
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа,
	|	ПорядокУчетаОСБУ.НедвижимоеИмущество,
	|	ПорядокУчетаОСБУ.НалогообложениеНДС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|ГДЕ
	|	ПорядокУчетаОСБУ.Регистратор = &Ссылка
	|	И ПорядокУчетаОСБУ.ОсновноеСредство.ТипОС В (
	|		 ЗНАЧЕНИЕ(Перечисление.ТипыОС.ОбъектЭксплуатации),
	|		 ЗНАЧЕНИЕ(Перечисление.ТипыОС.ГрупповоеОС))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.Период,
	|	ПорядокУчетаОСБУ.Регистратор,
	|	ОбъектыВНА.УзелКомпонент,
	|	ПорядокУчетаОСБУ.Организация,
	|	ПорядокУчетаУзловКомпонентов.СостояниеБУ,
	|	НЕОПРЕДЕЛЕНО,
	|	ПорядокУчетаУзловКомпонентов.НачислятьАмортизациюБУ,
	|	ЛОЖЬ,
	|	ПорядокУчетаОСБУ.СтатьяРасходовБУ,
	|	ПорядокУчетаОСБУ.АналитикаРасходовБУ,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ПорядокУчетаОСБУ.ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчетаОСБУ.ОрганизацияПолучательРасходов,
	|	ПорядокУчетаОСБУ.СчетПередачиРасходов,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа,
	|	ПорядокУчетаОСБУ.НедвижимоеИмущество,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъектыВНА КАК ОбъектыВНА
	|		ПО ОбъектыВНА.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|		И ОбъектыВНА.Организация = ПорядокУчетаОСБУ.Организация
	|		И ОбъектыВНА.Ссылка = ПорядокУчетаОСБУ.Регистратор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&ГраницаДокумента,
	|			(ОсновноеСредство, Организация) В
	|			(ВЫБРАТЬ
	|				Т.УзелКомпонент,
	|				Т.Организация
	|			ИЗ
	|				ОбъектыВНА КАК Т
	|			ГДЕ
	|				Т.Ссылка = &Ссылка)) КАК ПорядокУчетаУзловКомпонентов
	|		ПО ОбъектыВНА.УзелКомпонент = ПорядокУчетаУзловКомпонентов.ОсновноеСредство
	|			И ОбъектыВНА.Организация = ПорядокУчетаУзловКомпонентов.Организация
	|ГДЕ
	|	ПорядокУчетаОСБУ.Регистратор = &Ссылка
	|	И ПорядокУчетаОСБУ.ОсновноеСредство.ТипОС В (
	|		 ЗНАЧЕНИЕ(Перечисление.ТипыОС.ОбъектЭксплуатации),
	|		 ЗНАЧЕНИЕ(Перечисление.ТипыОС.ГрупповоеОС))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	&Ссылка,
	|	ОбъектыВНА.УзелКомпонент,
	|	ПорядокУчетаОСБУ.Организация,
	|	ПорядокУчетаУзловКомпонентов.СостояниеБУ,
	|	НЕОПРЕДЕЛЕНО,
	|	ПорядокУчетаУзловКомпонентов.НачислятьАмортизациюБУ,
	|	ЛОЖЬ,
	|	ПорядокУчетаОСБУ.СтатьяРасходовБУ,
	|	ПорядокУчетаОСБУ.АналитикаРасходовБУ,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ПорядокУчетаОСБУ.ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчетаОСБУ.ОрганизацияПолучательРасходов,
	|	ПорядокУчетаОСБУ.СчетПередачиРасходов,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа,
	|	ПорядокУчетаОСБУ.НедвижимоеИмущество,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&ГраницаДокумента,
	|			(ОсновноеСредство, Организация) В
	|			(ВЫБРАТЬ
	|				Т.ОсновноеСредство,
	|				Т.Организация
	|			ИЗ
	|				ОбъектыВНА КАК Т
	|			ГДЕ
	|				Т.Ссылка = &Ссылка)) КАК ПорядокУчетаОСБУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъектыВНА КАК ОбъектыВНА
	|		ПО ОбъектыВНА.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|			И ОбъектыВНА.Организация = ПорядокУчетаОСБУ.Организация
	|			И ОбъектыВНА.Ссылка = &Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&ГраницаДокумента,
	|			(ОсновноеСредство, Организация) В
	|			(ВЫБРАТЬ
	|				Т.УзелКомпонент,
	|				Т.Организация
	|			ИЗ
	|				ОбъектыВНА КАК Т
	|			ГДЕ
	|				Т.Ссылка = &Ссылка)) КАК ПорядокУчетаУзловКомпонентов
	|		ПО ОбъектыВНА.УзелКомпонент = ПорядокУчетаУзловКомпонентов.ОсновноеСредство
	|			И ОбъектыВНА.Организация = ПорядокУчетаУзловКомпонентов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ТекущиеДвижения
	|		ПО ОбъектыВНА.ОсновноеСредство = ТекущиеДвижения.ОсновноеСредство
	|			И ОбъектыВНА.Организация = ТекущиеДвижения.Организация
	|			И ТекущиеДвижения.Регистратор = &Ссылка
	|ГДЕ
	|	ТекущиеДвижения.Регистратор ЕСТЬ NULL
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ПроводкиРегУчета

// 
// Параметры:
//  СписокЗапросов - Массив из Строка - 
Процедура ТекстОтраженияВРеглУчетеПринятияКУчету(СписокЗапросов) Экспорт
	
	#Область СписаниеНаРасходыНеПринимаяКУчетуУпр_Дт_СчетЗатрат__Кт_08_04_2_или_08_03
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Списание на расходы, не принимая к учету упр (Дт СчетЗатрат:: Кт 08.04.2, 08.03)
	|//
	|ВЫБРАТЬ
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	СтрокиДт.СуммаУпр КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	СтрокиДт.СтатьяРасходов КАК АналитикаУчетаДт,
	|	СтрокиДт.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	СтрокиДт.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	СтрокиДт.СтатьяРасходов КАК СубконтоДт1,
	|	СтрокиДт.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительстваДт.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ВЫБОР КОГДА ОбъектыСтроительстваДт.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|				ТОГДА ОбъектыСтроительстваДт.СпособСтроительства
	|			ИНАЧЕ 
	|				ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	СтрокиКт.СтатьяРасходов КАК АналитикаУчетаКт,
	|	СтрокиКт.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	СтрокиКт.Подразделение КАК ПодразделениеКт,
	|	СтрокиКт.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	СтрокиКт.СтатьяРасходов КАК СубконтоКт1,
	|	СтрокиКт.АналитикаРасходов КАК СубконтоКт2,
	|	ВЫБОР КОГДА СтатьиСтроительстваКт.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительстваКт.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительстваКт.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|
	|	""Списание на расходы, не принимая к учету"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиДт
	|		ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиКт
	|		ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|			И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|			И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|			И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			И СтрокиКт.СуммаУпр <> 0
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительстваДт
	|		ПО СтрокиДт.СтатьяРасходов = СтатьиСтроительстваДт.Ссылка
	|			И СтатьиСтроительстваДт.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительстваДт
	|		ПО ОбъектыСтроительстваДт.Ссылка = СтрокиДт.АналитикаРасходов
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительстваКт
	|		ПО СтрокиКт.СтатьяРасходов = СтатьиСтроительстваКт.Ссылка
	|			И СтатьиСтроительстваКт.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительстваКт
	|		ПО ОбъектыСтроительстваКт.Ссылка = СтрокиКт.АналитикаРасходов
	|
	|ГДЕ
	|	СтрокиДт.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыСтоимостиОСНеПринимаяКУчету),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыСтоимостиНМАНеПринимаяКУчету))
	|
	|	И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И СтрокиДт.СуммаУпр <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область СписаниеНаРасходыНеПринимаяКУчетуРегл_Дт_СчетЗатрат__Кт_08_04_2_или_08_03
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Списание на расходы, не принимая к учету регл (Дт СчетЗатрат:: Кт 08.04.2, 08.03)
	|//
	|ВЫБРАТЬ
	|	СтрокиДт.Регистратор КАК Ссылка,
	|	СтрокиДт.Период КАК Период,
	|	СтрокиДт.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	СтрокиДт.СуммаРегл КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	СтрокиДт.СтатьяРасходов КАК АналитикаУчетаДт,
	|	СтрокиДт.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	СтрокиДт.Подразделение КАК ПодразделениеДт,
	|	СтрокиДт.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	СтрокиДт.СтатьяРасходов КАК СубконтоДт1,
	|	СтрокиДт.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительстваДт.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ВЫБОР КОГДА ОбъектыСтроительстваДт.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|				ТОГДА ОбъектыСтроительстваДт.СпособСтроительства
	|			ИНАЧЕ 
	|				ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	СтрокиДт.СуммаРегл - СтрокиДт.ПостояннаяРазница - СтрокиДт.ВременнаяРазница КАК СуммаНУДт,
	|	СтрокиДт.ПостояннаяРазница КАК СуммаПРДт,
	|	СтрокиДт.ВременнаяРазница КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	СтрокиКт.СтатьяРасходов КАК АналитикаУчетаКт,
	|	СтрокиКт.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	СтрокиКт.Подразделение КАК ПодразделениеКт,
	|	СтрокиКт.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	СтрокиКт.СтатьяРасходов КАК СубконтоКт1,
	|	СтрокиКт.АналитикаРасходов КАК СубконтоКт2,
	|	ВЫБОР КОГДА СтатьиСтроительстваКт.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительстваКт.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительстваКт.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	СтрокиКт.СуммаРегл - СтрокиКт.ПостояннаяРазница - СтрокиКт.ВременнаяРазница КАК СуммаНУКт,
	|	СтрокиКт.ПостояннаяРазница КАК СуммаПРКт,
	|	СтрокиКт.ВременнаяРазница КАК СуммаВРКт,
	|
	|	""Списание на расходы, не принимая к учету"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиДт
	|		ПО СтрокиДт.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК СтрокиКт
	|		ПО СтрокиКт.Регистратор = СтрокиДт.Регистратор
	|			И СтрокиКт.НастройкаХозяйственнойОперации = СтрокиДт.НастройкаХозяйственнойОперации
	|			И СтрокиКт.ИдентификаторФинЗаписи = СтрокиДт.ИдентификаторФинЗаписи
	|			И СтрокиКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			И (СтрокиКт.СуммаРегл <> 0
	|				ИЛИ СтрокиКт.ПостояннаяРазница <> 0
	|				ИЛИ СтрокиКт.ВременнаяРазница <> 0)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительстваДт
	|		ПО СтрокиДт.СтатьяРасходов = СтатьиСтроительстваДт.Ссылка
	|			И СтатьиСтроительстваДт.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительстваДт
	|		ПО ОбъектыСтроительстваДт.Ссылка = СтрокиДт.АналитикаРасходов
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительстваКт
	|		ПО СтрокиКт.СтатьяРасходов = СтатьиСтроительстваКт.Ссылка
	|			И СтатьиСтроительстваКт.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительстваКт
	|		ПО ОбъектыСтроительстваКт.Ссылка = СтрокиКт.АналитикаРасходов
	|
	|ГДЕ
	|	СтрокиДт.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыСтоимостиОСНеПринимаяКУчету),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыСтоимостиНМАНеПринимаяКУчету))
	|
	|	И СтрокиДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И (СтрокиДт.СуммаРегл <> 0
	|		ИЛИ СтрокиДт.ПостояннаяРазница <> 0
	|		ИЛИ СтрокиДт.ВременнаяРазница <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ДобавитьВРегистрНовыеЗаписи(Регистратор, ИмяРегистра, НовыеЗаписи, ВидИсточника)

	НаборЗаписей = РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
	НаборЗаписей.Прочитать();
	
	Для Сч = -НаборЗаписей.Количество() + 1 По 0 Цикл
		Если НаборЗаписей[-Сч].ВидИсточника = ВидИсточника Тогда
			НаборЗаписей.Удалить(-Сч);
		КонецЕсли; 
	КонецЦикла; 
	
	Для Каждого СтрокаТаблицыИсточник Из НовыеЗаписи Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТаблицыИсточник);
		НоваяЗапись.ВидИсточника = ВидИсточника;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Функция ВедетсяУчетПлатежейВПлатон()

	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	Документ.ОтчетОператораСистемыПлатон КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК Таблица
	|ГДЕ
	|	Таблица.ЗарегистрированоВРеестреСистемыПлатон
	|	И НЕ Таблица.ПометкаУдаления";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Результат = НЕ Результат.Пустой();
	
	Возврат Результат;

КонецФункции

Функция МаксимальнаяДатаДокументовВерсии22()

	СписокДокументов = Новый Массив;
	СписокДокументов.Добавить("АмортизацияНМА");
	СписокДокументов.Добавить("АмортизацияОС");
	СписокДокументов.Добавить("ВводОстатковВнеоборотныхАктивов");
	СписокДокументов.Добавить("ИзменениеПараметровНМА");
	СписокДокументов.Добавить("ИзменениеПараметровОС");
	СписокДокументов.Добавить("ИзменениеСостоянияОС");
	СписокДокументов.Добавить("МодернизацияОС");
	СписокДокументов.Добавить("ПеремещениеОС");
	СписокДокументов.Добавить("ПереоценкаНМА");
	СписокДокументов.Добавить("ПереоценкаОС");
	СписокДокументов.Добавить("ПодготовкаКПередачеНМА");
	СписокДокументов.Добавить("ПодготовкаКПередачеОС");
	СписокДокументов.Добавить("ПринятиеКУчетуНМА");
	СписокДокументов.Добавить("ПринятиеКУчетуОС");
	СписокДокументов.Добавить("СписаниеНМА");
	СписокДокументов.Добавить("СписаниеОС");
	
	СписокИДДокументов = Новый Массив;
	Для каждого ИмяДокумента Из СписокДокументов Цикл
		СписокИДДокументов.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ." + ИмяДокумента));
	КонецЦикла; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(РеестрДокументов.ДатаДокументаИБ), ДАТАВРЕМЯ(1, 1, 1)) КАК Период
	|ИЗ
	|	РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|ГДЕ
	|	РеестрДокументов.ТипСсылки В(&СписокИДДокументов)
	|	И НЕ РеестрДокументов.ПометкаУдаления
	|	И (РеестрДокументов.ДатаДокументаИБ < &ДатаНачалаУчета
	|			ИЛИ &ДатаНачалаУчета = ДАТАВРЕМЯ(1, 1, 1))";

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокИДДокументов", СписокИДДокументов);
	Запрос.УстановитьПараметр("ДатаНачалаУчета", ДатаНачалаУчетаВнеоборотныхАктивов2_4());
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат '000101010000';
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();

	Возврат Выборка.Период;
	
КонецФункции

// Возвращает массив элементов справочника по заданному в параметрах отбору
//
// Параметры:
// 		Параметры - Структура - Структура в формате одноименного параметра процедуры "ОбработкаПолученияДанныхВыбора" модуля менеджера справочника.
//
// Возвращаемое значение:
// 		Массив - Массив ссылок
//
Функция ЭлементыНМАПоОтборуБУ(Параметры)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Активы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НематериальныеАктивы КАК Активы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестоУчетаНМА.СрезПоследних(&ДатаСведений, Регистратор <> &ТекущийРегистратор) КАК МестоУчетаНМА
	|		ПО Активы.Ссылка = МестоУчетаНМА.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(&ДатаСведений, Регистратор <> &ТекущийРегистратор) КАК ПорядокУчетаНМАБУ
	|		ПО МестоУчетаНМА.НематериальныйАктив = ПорядокУчетаНМАБУ.НематериальныйАктив
	|			И МестоУчетаНМА.Организация = ПорядокУчетаНМАБУ.Организация
	|ГДЕ
	|	ИСТИНА
	|	И (НЕ &ТребуетсяБУОрганизация
	|			ИЛИ ЕСТЬNULL(МестоУчетаНМА.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) В (&БУОрганизация))
	|	И (НЕ &ТребуетсяБУСостояние
	|			ИЛИ ЕСТЬNULL(ПорядокУчетаНМАБУ.СостояниеБУ, ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.НеПринятКУчету)) В (&БУСостояние))";
	
	ПоляОтбора = Новый Структура("БУОрганизация, БУСостояние, ТекущийРегистратор, ДатаСведений");
	ПоляОтбора.ДатаСведений = ТекущаяДатаСеанса();
	ЗаполнитьЗначенияСвойств(ПоляОтбора, Параметры);
	Если Параметры.Свойство("Отбор") Тогда
		ЗаполнитьЗначенияСвойств(ПоляОтбора, Параметры.Отбор);
	КонецЕсли;
	
	Для Каждого КлючИЗначение Из ПоляОтбора Цикл
		Запрос.УстановитьПараметр("Требуется"+КлючИЗначение.Ключ, ЗначениеЗаполнено(КлючИЗначение.Значение));
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.НематериальныеАктивы.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

// Возвращает массив элементов справочника по заданному в параметрах отбору
//
// Параметры:
// 		Параметры - Структура - Структура в формате одноименного параметра процедуры "ОбработкаПолученияДанныхВыбора" модуля менеджера справочника.
//
// Возвращаемое значение:
// 		Массив - Массив ссылок
//
Функция ЭлементыОСПоОтборуБУ(Параметры)
	
	ПоляОтбора = Новый Структура("БУОрганизация, БУПодразделение, БУСостояние, БУГруппаОС, БУАмортизационнаяГруппа, ТекущийРегистратор, ДатаСведений");
	ПоляОтбора.ДатаСведений = ТекущаяДатаСеанса();
	ЗаполнитьЗначенияСвойств(ПоляОтбора, Параметры);
	Если Параметры.Свойство("Отбор") Тогда
		ЗаполнитьЗначенияСвойств(ПоляОтбора, Параметры.Отбор);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Активы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК Активы
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|				&ДатаСведений, 
	|				Регистратор <> &ТекущийРегистратор
	|					И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)) КАК ПорядокУчетаОСБУ
	|		ПО Активы.Ссылка = ПорядокУчетаОСБУ.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(
	|				&ДатаСведений, 
	|				Регистратор <> &ТекущийРегистратор
	|					И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)) КАК МестонахождениеОС
	|		ПО Активы.Ссылка = МестонахождениеОС.ОсновноеСредство
	|ГДЕ
	|	ИСТИНА
	|	И (НЕ &ТребуетсяБУОрганизация
	|			ИЛИ ЕСТЬNULL(МестонахождениеОС.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) В (&БУОрганизация))
	|	И (НЕ &ТребуетсяБУПодразделение
	|			ИЛИ ЕСТЬNULL(МестонахождениеОС.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) В (&БУПодразделение))
	|	И (НЕ &ТребуетсяБУСостояние
	|			ИЛИ ЕСТЬNULL(ПорядокУчетаОСБУ.СостояниеБУ, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) В (&БУСостояние))
	|	И (НЕ &ТребуетсяБУГруппаОС
	|			ИЛИ Активы.ГруппаОС В (&БУГруппаОС))
	|	И (НЕ &ТребуетсяБУАмортизационнаяГруппа
	|			ИЛИ ПорядокУчетаОСБУ.АмортизационнаяГруппа В (&БУАмортизационнаяГруппа))";
	
	Если Параметры.Свойство("Отбор")
		И Параметры.Отбор.Свойство("ВидНалога") Тогда
		
		ТекстУсловияОтбораПоВидуНалога = УсловияОтбораПоВидуНалога(
				"Активы", 
				"ЕСТЬNULL(ПорядокУчетаОСБУ.АмортизационнаяГруппа, НЕОПРЕДЕЛЕНО)",
				"ПорядокУчетаОСБУ.НедвижимоеИмущество");
		
		ТекстЗапроса = ТекстЗапроса 
			+ " И " + ТекстУсловияОтбораПоВидуНалога;
			
		ПоляОтбора.Вставить("ВидНалога", Параметры.Отбор.ВидНалога);
	КонецЕсли; 
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Для Каждого КлючИЗначение Из ПоляОтбора Цикл
		Запрос.УстановитьПараметр("Требуется"+КлючИЗначение.Ключ, ЗначениеЗаполнено(КлючИЗначение.Значение));
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.ОбъектыЭксплуатации.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Новый ФиксированныйМассив(Результат.Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецФункции


Функция ЕстьНедвижимоеИмущество(Организация, Дата, СписокОС, ГруппаОС)

	// Если в справочнике не установлен признак НедвижимоеИмущество и пустая группа ОС,
	// то ОС является недвижимым, если в документе выбрана группа недвижимого имущества,
	// т.к. при проведении документа этот признак будет установлен 
	// (сценарий когда в справочнике не заполняют реквизиты, а указывают их при принятии к учету).
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОбъектыЭксплуатации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|				&Дата,
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация = &Организация
	|					И ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаОСБУ
	|		ПО (ПорядокУчетаОСБУ.ОсновноеСредство В (&СписокОС))
	|			И (ПорядокУчетаОСБУ.Организация = &Организация)
	|ГДЕ
	|	ОбъектыЭксплуатации.Ссылка В(&СписокОС)
	|	И (ПорядокУчетаОСБУ.НедвижимоеИмущество
	|		ИЛИ ОбъектыЭксплуатации.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка)
	|			И &ЭтоНедвижимоеИмущество
	|		ИЛИ ПорядокУчетаОСБУ.ОсновноеСредство ЕСТЬ NULL
	|			И &ЭтоНедвижимоеИмущество)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("ЭтоНедвижимоеИмущество", ВнеоборотныеАктивыКлиентСерверЛокализация.ГруппыНедвижимогоИмущества().Найти(ГруппаОС) <> Неопределено);
	
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();

КонецФункции

Процедура ДобавитьСоответствиеДокументов(НовыйДокумент, СтарыйДокумент, СоответствиеДокументов)

	НовоеСоответствие = СоответствиеДокументов.Добавить();
	НовоеСоответствие.НовыйДокумент  = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ." + НовыйДокумент);
	НовоеСоответствие.СтарыйДокумент = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ." + СтарыйДокумент);
	НовоеСоответствие.СтарыйДокументИмя = СтарыйДокумент;

КонецПроцедуры

Процедура СформироватьЗаданиеПризнаниеВНУАрендныхПлатежей(Документ, ДанныеТаблиц, ОпределитьПериод = Ложь, ЭтоИзменениеУчетнойПолитики = Ложь)

	Если ВнеоборотныеАктивы.ДвиженияЗаписываютсяПриОтложенномФормированииДвижений(Документ)
		ИЛИ ЗакрытиеРасходовОтВыбытияОС.ДвиженияЗаписываютсяПриВыполненииОперации(Документ) Тогда
		Возврат;
	КонецЕсли; 

	ИспользуемыеВременныеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(ДанныеТаблиц.МенеджерВременныхТаблиц);

	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("СтоимостьОС");
	СписокТаблиц.Добавить("АмортизацияОС");
	СписокТаблиц.Добавить("АрендованныеОС_Лизинг");
	СписокТаблиц.Добавить("УчетнаяПолитикаОрганизаций_Лизинг");
	СписокТаблиц.Добавить("ПоступлениеУслугПоАренде");
	
	ОпределитьИзмененияВРегистреАрендованныеОС(ДанныеТаблиц);
	
	ТекстОбъединенияДанных = ВнеоборотныеАктивы.СформироватьТекстОбъединенияДанныхДляФормированияЗадания(СписокТаблиц, ДанныеТаблиц);
	
	Если ТекстОбъединенияДанных = "" Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация КАК Организация,
	|	ИзмененныеДанные.Документ КАК Документ,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ИзмененныеДанные.Период < &ДатаНачалаВеденияРеглУчета
	|						И &ДатаНачалаВеденияРеглУчета <> ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА &ДатаНачалаВеденияРеглУчета
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов)
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВводОстатковВнеоборотныхАктивов.Дата, МЕСЯЦ), МЕСЯЦ, 1)
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4)
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВводОстатковВнеоборотныхАктивов24.Дата, МЕСЯЦ), МЕСЯЦ, 1)
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ПринятиеКУчетуОС)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ИзмененныеДанные.Период, МЕСЯЦ, 1)
	|				ИНАЧЕ ИзмененныеДанные.Период
	|			КОНЕЦ) КАК Месяц
	|ИЗ
	|	(" + ТекстОбъединенияДанных + ") КАК ИзмененныеДанные
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ВводОстатковВнеоборотныхАктивов
	|	ПО ВводОстатковВнеоборотныхАктивов.Ссылка = ИзмененныеДанные.Документ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ВводОстатковВнеоборотныхАктивов24
	|	ПО ВводОстатковВнеоборотныхАктивов24.Ссылка = ИзмененныеДанные.Документ
	|
	|ГДЕ
	|	НЕ &ДвиженияЗаписываютсяПриРасчетеСтоимостиВНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаНачалаВеденияРеглУчета", Константы.ДатаНачалаВеденияРеглУчета.Получить());
	Запрос.УстановитьПараметр("ДвиженияЗаписываютсяПриРасчетеСтоимостиВНА", ВнеоборотныеАктивы.ДвиженияЗаписываютсяПриРасчетеСтоимостиВНА(Документ));
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЭтоИзменениеУчетнойПолитики Тогда
			
			ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитикПовтИсп.ДействующиеПараметрыНалоговУчетныхПолитик(
				"НастройкиУчетаНалогаНаПрибыль",
				Выборка.Организация,
				Выборка.Месяц);
				
			Если ПараметрыУчетнойПолитики = Неопределено 
				ИЛИ НЕ ПараметрыУчетнойПолитики.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи Тогда
				Продолжить;
			КонецЕсли;
			
		КонецЕсли; 
			
		Если ОпределитьПериод Тогда
			ПериодЗадания = СледующийПериодПризнанияВНУАрендныхПлатежей(Выборка.Организация, Выборка.Месяц);
		Иначе
			ПериодЗадания = Выборка.Месяц;
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ПериодЗадания) Тогда
			
			РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьЗаписьРегистра(
				НачалоМесяца(ПериодЗадания), 
				Выборка.Документ, 
				Выборка.Организация, 
				Перечисления.ОперацииЗакрытияМесяца.ПризнаниеВНалоговомУчетеАрендныхПлатежей);
				
		КонецЕсли; 
				
	КонецЦикла; 
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ДанныеТаблиц.МенеджерВременныхТаблиц,, ИспользуемыеВременныеТаблицы);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ОпределитьИзмененияВРегистреАрендованныеОС(ДанныеТаблиц)
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("АрендованныеОСИзменение") = Неопределено Тогда
		Возврат;	
	КонецЕсли;
		
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Период КАК Период,
	|	ВЫРАЗИТЬ(Таблица.Договор КАК Справочник.ДоговорыАренды).Организация КАК Организация,
	|	Таблица.ОсновноеСредство КАК ОсновноеСредство,
	|	Таблица.Документ КАК Документ
	|ПОМЕСТИТЬ АрендованныеОС_ЛизингИзменение
	|ИЗ
	|	АрендованныеОСИзменение КАК Таблица
	|ГДЕ
	|	Таблица.Договор ССЫЛКА Справочник.ДоговорыАренды
	|	И Таблица.Договор <> ЗНАЧЕНИЕ(Справочник.ДоговорыАренды.ПустаяСсылка)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
		
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	ДанныеТаблиц.Вставить("АрендованныеОС_ЛизингИзменение", Выборка.Количество > 0);
	
КонецПроцедуры

#КонецОбласти

//-- Локализация

// Дата прекращения действия льгот введенных законом №249-ФЗ.
// 
// Возвращаемое значение:
//  Дата - Дата прекращения льгот.
//
Функция ДатаПрекращенияДействияЛьготПлатон() Экспорт

	Возврат '201901010000';

КонецФункции

Процедура СформироватьЗаданияПриЗаписиДвиженийРаспределенияВзаиморасчетов(МенеджерВременныхТаблиц) Экспорт
	
	//++ Локализация
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПлатежейВПлатон") Тогда
		Возврат;
	КонецЕсли;

	ИспользуемыеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);
	
	ДанныеТаблиц = Новый Структура;
	ДанныеТаблиц.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);

	РасчетИмущественныхНалоговУП.СформироватьЗаданиеКРасчетуТранспортногоНалога(Неопределено, ДанныеТаблиц, Истина);

	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);

	//-- Локализация	
	
КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию_ПараметрыАмортизацииОСБУ(Параметры) Экспорт

	//++ Локализация
	
	ПолноеИмяОбъекта = "РегистрСведений.ПараметрыАмортизацииОСБУ";

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегистрПриемник.Регистратор КАК Регистратор,
	|	РегистрПриемник.Период КАК Период,
	|	РегистрПриемник.Организация КАК Организация,
	|	РегистрПриемник.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втРегистрПриемник
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБУ КАК РегистрПриемник
	|ГДЕ
	|	РегистрПриемник.СпециальныйКоэффициент = 0
	|	И РегистрПриемник.Активность
	|
	|	И (РегистрПриемник.Регистратор ССЫЛКА Документ.ИзменениеПараметровОС2_4
	|		ИЛИ РегистрПриемник.Регистратор ССЫЛКА Документ.КорректировкаСтоимостиИАмортизацииОС
	|		ИЛИ РегистрПриемник.Регистратор ССЫЛКА Документ.СписаниеОС2_4
	|		ИЛИ РегистрПриемник.Регистратор ССЫЛКА Документ.ПереоценкаОС2_4
	|		ИЛИ РегистрПриемник.Регистратор ССЫЛКА Документ.МодернизацияОС2_4
	|		ИЛИ РегистрПриемник.Регистратор ССЫЛКА Документ.РазукомплектацияОС
	|		ИЛИ РегистрПриемник.Регистратор ССЫЛКА Документ.ПеремещениеОС2_4)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Срез_Период.Регистратор КАК Регистратор
	|ИЗ
	|	(ВЫБРАТЬ
	|		втРегистрПриемник.Регистратор КАК Регистратор,
	|		втРегистрПриемник.Организация КАК Организация,
	|		втРегистрПриемник.ОсновноеСредство КАК ОсновноеСредство,
	|		МАКСИМУМ(ИсходныйРегистр.Период) КАК ИсходныйРегистр_Период
	|	ИЗ
	|		втРегистрПриемник КАК втРегистрПриемник
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УдалитьНачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет КАК ИсходныйРегистр
	|			ПО (ИсходныйРегистр.Организация = втРегистрПриемник.Организация)
	|				И (ИсходныйРегистр.ОсновноеСредство = втРегистрПриемник.ОсновноеСредство)
	|				И (ИсходныйРегистр.Период < втРегистрПриемник.Период)
	|				И (ИсходныйРегистр.Активность)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		втРегистрПриемник.Регистратор,
	|		втРегистрПриемник.Организация,
	|		втРегистрПриемник.ОсновноеСредство
	|
	|	) КАК Срез_Период
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УдалитьНачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет КАК ИсходныйРегистр
	|		ПО (ИсходныйРегистр.Организация = Срез_Период.Организация)
	|			И (ИсходныйРегистр.ОсновноеСредство = Срез_Период.ОсновноеСредство)
	|			И (ИсходныйРегистр.Период = Срез_Период.ИсходныйРегистр_Период)
	|			И (ИсходныйРегистр.Активность)
	|
	|ГДЕ
	|	ИсходныйРегистр.СпециальныйКоэффициент <> 0
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяОбъекта);
	
	//-- Локализация
	
КонецПроцедуры

//++ Локализация

Функция УсловияОтбораПоВидуНалога(ИмяТаблицыОС, ПутьКПолюАмортизационнаяГруппа, ПутьКПолюНедвижимоеИмущество) Экспорт

	ТекстУсловия =
	"			(&ВидНалога В (ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.НалогНаИмущество),
	|					ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ПустаяСсылка))
	|				И НЕ СправочникОбъектыЭксплуатации.ГруппаОС В (
	|						ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки),
	|						ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования))
	|				И ((&ДатаСведений < ДАТАВРЕМЯ(2019, 1, 1)
	|						И НЕ &АмортизационнаяГруппа В (
	|									ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПерваяГруппа),
	|									ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ВтораяГруппа)))
	|					ИЛИ &ДатаСведений >= ДАТАВРЕМЯ(2019, 1, 1)
	|						И (&НедвижимоеИмущество
	|								И НЕ &НедвижимоеИмущество ЕСТЬ NULL
	|							ИЛИ СправочникОбъектыЭксплуатации.ГруппаОС В (
	|									ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Здания),
	|									ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Сооружения),
	|									ЗНАЧЕНИЕ(Перечисление.ГруппыОС.МноголетниеНасаждения),
	|									ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПрочееИмуществоТребующееГосударственнойРегистрации))
	|								И &НедвижимоеИмущество ЕСТЬ NULL))
	|
	|			ИЛИ &ВидНалога В (ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог),
	|								ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ПустаяСсылка))
	|				И СправочникОбъектыЭксплуатации.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ТранспортныеСредства), 
	|															ЗНАЧЕНИЕ(Перечисление.ГруппыОС.МашиныИОборудование))
	|
	|			ИЛИ &ВидНалога В (ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог),
	|								ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ПустаяСсылка))
	|				И СправочникОбъектыЭксплуатации.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки)))";
	
	ТекстУсловия = СтрЗаменить(ТекстУсловия, "СправочникОбъектыЭксплуатации", ИмяТаблицыОС);
	ТекстУсловия = СтрЗаменить(ТекстУсловия, "&АмортизационнаяГруппа", ПутьКПолюАмортизационнаяГруппа);
	ТекстУсловия = СтрЗаменить(ТекстУсловия, "&НедвижимоеИмущество", ПутьКПолюНедвижимоеИмущество);
	
	Возврат ТекстУсловия;

КонецФункции

//-- Локализация

#КонецОбласти
