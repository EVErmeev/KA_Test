#Область СлужебныйПрограммныйИнтерфейс

#Область ФункцииИспользующиеПереопределение

// Возвращает ИНН и КПП переданной организации и торгового объекта, структурой со свойствами:
//   * КПП - Строка - КПП организации,
//   * ИНН - Строка - ИНН организации.
//
// Параметры:
//   ОрганизацияКонтрагент - ОпределяемыйТип.ОрганизацияКонтрагентГосИС, ОпределяемыйТип.КонтрагентГосИС - 
//     ссылка на организацию, реквизиты которой нужно определить,
//   ТорговыйОбъект - ОпределяемыйТип.ТорговыйОбъектЕГАИС - ссылка на торговый объект для определения КПП.
// 
// Возвращаемое значение:
//   Структура - структура со свойствами ИНН, КПП
//
Функция ИННКПППоОрганизацииКонтрагенту(ОрганизацияКонтрагент, ТорговыйОбъект = Неопределено) Экспорт
	
	ИННиКПП = Новый Структура("ИНН, КПП", "", "");
	ИнтеграцияИСПереопределяемый.ЗаполнитьИННКПППоОрганизацииКонтрагенту(ИННиКПП, ОрганизацияКонтрагент, ТорговыйОбъект);
	Возврат ИННиКПП;
	
КонецФункции

Функция НалоговыйНомерКонтрагента(Контрагент) Экспорт
	
	МассивКонтрагентов = Новый Массив;
	МассивКонтрагентов.Добавить(Контрагент);
	
	СоответствиеНалоговыхНомеров = Новый Соответствие;
	ИнтеграцияИСПереопределяемый.ПриОпределенииИНННалоговыхНомеровКонтрагентов(СоответствиеНалоговыхНомеров, МассивКонтрагентов);
	
	Возврат СоответствиеНалоговыхНомеров[Контрагент];
	
КонецФункции

#КонецОбласти

// см. ОбщегоНазначения.ЗначениеРеквизитаОбъекта
Функция ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита, ВыбратьРазрешенные = Ложь, КодЯзыка = Неопределено) Экспорт
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита, ВыбратьРазрешенные, КодЯзыка);
КонецФункции

// Коэффициент упаковки.
// 
// Параметры:
//  Упаковка - ОпределяемыйТип.Упаковка - Упаковка
//  Номенклатура - Неопределено, ОпределяемыйТип.Номенклатура - Номенклатура
//  КэшированныеЗначения - Неопределено, Структура -
// Возвращаемое значение:
//  Число - Коэффициент упаковки
Функция КоэффициентУпаковки(Упаковка, Номенклатура = Неопределено, КэшированныеЗначения = Неопределено) Экспорт
	
	Коэффициент = 1;
	Если ЗначениеЗаполнено(Упаковка) Тогда
		ИнтеграцияИСПереопределяемый.КоэффициентУпаковки(Коэффициент, Упаковка, Номенклатура, КэшированныеЗначения);
	КонецЕсли;
	
	Возврат Коэффициент;
	
КонецФункции

// Объем упаковки в литрах.
// 
// Параметры:
//  Номенклатура - Неопределено, ОпределяемыйТип.Номенклатура - Номенклатура
//  Упаковка - ОпределяемыйТип.Упаковка, ОпределяемыйТип.ЕдиницаИзмерения, Неопределено - Упаковка
//  КэшированныеЗначения - Неопределено, Структура -
// Возвращаемое значение:
//  Число - Объем упаковки в литрах
Функция ОбъемУпаковки(Номенклатура, Упаковка = Неопределено, КэшированныеЗначения = Неопределено) Экспорт
	
	Объем = 0;
	ИнтеграцияИСПереопределяемый.ОбъемУпаковки(Объем, Номенклатура, Упаковка, КэшированныеЗначения);
	
	Возврат Объем;
	
КонецФункции

// Возвращает единицу измерения, указанную в константе ЕдиницаИзмеренияКилограммИС.
//
// Возвращаемое значение:
// 	ОпределяемыйТип.Упаковка
// 
Функция ЕдиницаИзмеренияКилограмм() Экспорт
	
	Возврат Константы.ЕдиницаИзмеренияКилограммИС.Получить();
	
КонецФункции

// Возвращает единицу измерения, указанную в константе ЕдиницаИзмеренияЛитрИС.
//
// Возвращаемое значение:
// 	ОпределяемыйТип.Упаковка
// 
Функция ЕдиницаИзмеренияЛитр() Экспорт
	
	Возврат Константы.ЕдиницаИзмеренияЛитрИС.Получить();
	
КонецФункции

#Область ЧастичноеВыбытие

// Возвращает признак возможности для вида продукции участвовать в частичном выбытии.
// 
// Параметры:
//  ВидПродукции    - ПеречислениеСсылка.ВидыПродукцииИС                - вид маркируемой продукции.
//  ВидОперацииИСМП - ПеречислениеСсылка.ВидыОперацийИСМП, Неопределено - вид операции ИСМП.
// Возвращаемое значение:
//  Булево - Вид продукци может выбывать частично.
Функция ПоддерживаетсяЧастичноеВыбытие(ВидПродукции, ВидОперацииИСМП = Неопределено) Экспорт
	
	Если Не ИнтеграцияИСПовтИсп.ЭтоПродукцияИСМП(ВидПродукции, Истина)
		Или Не ОбщегоНазначения.ПодсистемаСуществует("ГосИС.ИСМП") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	МодульИнтеграцияИСМПКлиентСерверПовтИсп = ОбщегоНазначения.ОбщийМодуль("ИнтеграцияИСМПКлиентСерверПовтИсп");
	
	Возврат МодульИнтеграцияИСМПКлиентСерверПовтИсп.ПоддерживаетсяЧастичноеВыбытие(
		ВидПродукции,
		ВидОперацииИСМП);
	
КонецФункции

#КонецОбласти

// Классифицирует текущий сеанс, как сеанс, запущенный в фоновом задании в клиент-серверном варианте, в остальных
// случаях, сеанс имеет ту же файловую систему на стороне сервера, что и основной сеанс.
//	
// Возвращаемое значение:
// 	Булево - Описание
Функция ЭтоФоновоеЗаданиеНаСервере() Экспорт
	
	Если ПолучитьТекущийСеансИнформационнойБазы().ПолучитьФоновоеЗадание() <> Неопределено
		И Не ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#Область ОбработкаОшибок

// Выполняет запись ошибки в журнал регистрации, добавляя имя события ГосИС если оно не задано.
//
// Параметры:
//  ТекстОшибки      - Строка           - текст ошибки.
//  ИмяСобытия       - Строка           - имя события.
//  ОбъектМетаданных - ОбъектМетаданных - объект метаданных с ошибкой.
//  Данные           - Произвольный     - объект данных с ошибкой.
//
Процедура ЗаписатьОшибкуВЖурналРегистрации(ТекстОшибки, ИмяСобытия = Неопределено, ОбъектМетаданных = Неопределено, Данные = Неопределено) Экспорт
	
	Если ИмяСобытия = Неопределено Тогда
		ИмяСобытия = НСтр("ru='ГосИС'", ОбщегоНазначения.КодОсновногоЯзыка());
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации(
		ИмяСобытия,
		УровеньЖурналаРегистрации.Ошибка,
		ОбъектМетаданных,
		Данные,
		ТекстОшибки);
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСПолямимСоставногоТипа

Функция СписокАвтоподбораПолеСоставногоТипа(ОписаниеТипов, ТекстДляАвтоПодбора,
	ДобавлятьСлужебныеЭлементы = Истина, МинимальнаяДлинаСтрокиПоиска = 1) Экспорт
	
	Возврат СобытияФормИС.СписокАвтоподбораПолеСоставногоТипа(
		ОписаниеТипов, ТекстДляАвтоПодбора, ДобавлятьСлужебныеЭлементы, МинимальнаяДлинаСтрокиПоиска);
	
КонецФункции

#КонецОбласти

#КонецОбласти