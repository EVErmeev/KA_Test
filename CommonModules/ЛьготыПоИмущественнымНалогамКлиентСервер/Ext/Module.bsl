
#Область ПрограммныйИнтерфейс

// Формирует наименование для региональной льготы.
// 
// Параметры:
//  Объект - СправочникОбъект.ОснованияЛьготПоИмущественнымНалогам, ДанныеФормыСтруктура - объект справочника льгот,
//		для которого нужно сформировать наименование. 
//  СведенияОПунктеРегЗакона - Структура - описание конкретного пункта регионального закона, по которому предоставлена льгота.
//		См. НовыйСведенияОПунктеРегиональногоЗакона()
//  НаименованиеРегиона - Строка - наименование субъекта РФ из адресного классификатора
// 
// Возвращаемое значение:
//  Строка - наименование региональной льготы
//
Функция НаименованиеРегиональнойЛьготы(Объект, СведенияОПунктеРегЗакона = Неопределено, НаименованиеРегиона = Неопределено) Экспорт
		
	Если Не ЗначениеЗаполнено(Объект.ВидЛьготы) Тогда	
	    Возврат "";
	КонецЕсли; 
	
	Наименование = Новый Массив;
	
	Если Объект.ВидЛьготы = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение") Тогда
		Наименование.Добавить(Нстр("ru='Освобождение'"));
	ИначеЕсли Объект.ВидЛьготы = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСтавкиНаПроцент") 
		 Или Объект.ВидЛьготы = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСтавкиДоУказанной") Тогда
		Наименование.Добавить(Нстр("ru='Снижение ставки'"));
	ИначеЕсли Объект.ВидЛьготы = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент") 
		 Или Объект.ВидЛьготы = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаСумму") Тогда
		Наименование.Добавить(Нстр("ru='Снижение суммы'"));
	ИначеЕсли Объект.ВидЛьготы = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеНалоговойБазыНаСумму") Тогда
		Наименование.Добавить(Нстр("ru='Снижение налоговой базы'"));
	КонецЕсли;	
	
	Если (Объект.ВидЛьготы = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСтавкиНаПроцент")
		 Или Объект.ВидЛьготы = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент"))
		 И ЗначениеЗаполнено(Объект.ПроцентУменьшения) Тогда
		Наименование.Добавить(СтрШаблон(Нстр("ru='на %1%%'"), Объект.ПроцентУменьшения));
	КонецЕсли;	 
	
	Если СведенияОПунктеРегЗакона = Неопределено И ЗначениеЗаполнено(Объект.ОснованиеРегиональнойЛьготы) Тогда
		СведенияОПунктеРегЗакона = НормативныеДанныеОснованияЛьготы(Объект.ОснованиеРегиональнойЛьготы);
	КонецЕсли;	
	
	Если СведенияОПунктеРегЗакона <> Неопределено И ЗначениеЗаполнено(СведенияОПунктеРегЗакона.Статья) Тогда
		ОснованиеЛьготы = Новый Массив;
		СсылкаВЗаконе = Новый Массив;
		СсылкаВЗаконе.Добавить(СтрШаблон(Нстр("ru='ст.%1'"), СокрЛП(СведенияОПунктеРегЗакона.Статья)));
		Если ЗначениеЗаполнено(СведенияОПунктеРегЗакона.Часть) Тогда
			СсылкаВЗаконе.Добавить(СтрШаблон(Нстр("ru='ч.%1'"), СокрЛП(СведенияОПунктеРегЗакона.Часть)));
		КонецЕсли;	
		Если ЗначениеЗаполнено(СведенияОПунктеРегЗакона.Пункт) Тогда
			СсылкаВЗаконе.Добавить(СтрШаблон(Нстр("ru='п.%1'"), СокрЛП(СведенияОПунктеРегЗакона.Пункт)));
		КонецЕсли;	
		Если ЗначениеЗаполнено(СведенияОПунктеРегЗакона.Подпункт) Тогда
			СсылкаВЗаконе.Добавить(СтрШаблон(Нстр("ru='пп.%1'"), СокрЛП(СведенияОПунктеРегЗакона.Подпункт)));
		КонецЕсли;	
		Если ЗначениеЗаполнено(СведенияОПунктеРегЗакона.Абзац) Тогда
			СсылкаВЗаконе.Добавить(СтрШаблон(Нстр("ru='абз.%1'"), СокрЛП(СведенияОПунктеРегЗакона.Абзац)));
		КонецЕсли;
		Если ЗначениеЗаполнено(СведенияОПунктеРегЗакона.Иное) Тогда
			СсылкаВЗаконе.Добавить(СокрЛП(СведенияОПунктеРегЗакона.Иное));
		КонецЕсли;
		ОснованиеЛьготы.Добавить(СтрСоединить(СсылкаВЗаконе, ", "));
		Если ЗначениеЗаполнено(НаименованиеРегиона) Тогда
			ОснованиеЛьготы.Добавить(СтрШаблон(Нстр("ru='рег. закона, %1'"), НаименованиеРегиона));
		Иначе
			ОснованиеЛьготы.Добавить(Нстр("ru='рег. закона'"));
		КонецЕсли;	
		Наименование.Добавить("(" + СтрСоединить(ОснованиеЛьготы, " ") + ")");		
	Иначе
		Если ЗначениеЗаполнено(НаименованиеРегиона) Тогда
			Наименование.Добавить("(" + НаименованиеРегиона + ")");
		Иначе
			Наименование.Добавить(Нстр("ru='по рег. закону'"));
		КонецЕсли;	
	КонецЕсли;	
	
	Возврат СтрСоединить(Наименование, " ");
	
КонецФункции

// Возвращает строковый код основания применения льготной налоговой ставки в формате декларации
// на основании номеров статьи, части, пункта, подпункта, абзаца (или иной единицы деления текста) нормативного акта.
//
// Параметры:
//  Статья    - Строка - номер статьи нормативного акта.
//  Часть     - Строка - номер части статьи нормативного акта.
//  Пункт     - Строка - номер пункта статьи или части статьи нормативного акта.
//  Подпункт  - Строка - номер подпункта статьи нормативного акта.
//  Абзац     - Строка - номер абзаца пункта или подпункта статьи нормативного акта.
//  Иное      - Строка - номер прочей единицы деления текста нормативного акта.
//
// Возвращаемое значение:
//  Строка - код основания применения льготной ставки налога (длина - 24).
//
Функция ПолныйКодОснованияЛьготы(Знач Статья, Знач Часть, Знач Пункт, Знач Подпункт, Знач Абзац, Знач Иное) Экспорт
	
	Статья   = ЗначащиеДанныеНормативногоПункта(Статья);
	Часть    = ЗначащиеДанныеНормативногоПункта(Часть);
	Пункт    = ЗначащиеДанныеНормативногоПункта(Пункт);
	Подпункт = ЗначащиеДанныеНормативногоПункта(Подпункт);
	Абзац    = ЗначащиеДанныеНормативногоПункта(Абзац);
	Иное     = ЗначащиеДанныеНормативногоПункта(Иное);
	
	Если ПустаяСтрока(Статья) И ПустаяСтрока(Часть) И ПустаяСтрока(Пункт) 
		 И ПустаяСтрока(Подпункт) И ПустаяСтрока(Абзац) И ПустаяСтрока(Иное) Тогда
		Возврат "";
	КонецЕсли;
	
	ДлинаРазряда = ДлинаРазрядаОснованияЛьготы();
		
	СтатьяПоФормату   = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Статья, ДлинаРазряда);
	ЧастьПоФормату    = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Часть, ДлинаРазряда);
	ПунктПоФормату    = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Пункт, ДлинаРазряда);
	ПодпунктПоФормату = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Подпункт, ДлинаРазряда);
	АбзацПоФормату    = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Абзац, ДлинаРазряда);
	ИноеПоФормату     = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Иное, ДлинаРазряда);
		
	Возврат (СтатьяПоФормату + ЧастьПоФормату + ПунктПоФормату + ПодпунктПоФормату + АбзацПоФормату + ИноеПоФормату);
	
КонецФункции

// Формирует по переданному коду основания льготы развернутые сведения о норме регионального закона -
// номере статьи, части, пункте, подпункте, абзаце (или иное), на основании которых применяется льготная ставка налога.
//
// Параметры:
//  КодОснованияЛьготы - Строка	- код основания применения льготной ставки налога в формате заявления о льготе (длина - 24).
//                                См. также ПолныйКодОснованияЛьготы().
//  БезЛидирующихНолей - Булево - если Истина, то значения структурных единиц закона возвращаются без лидирующих нолей.			 - 
// 
// Возвращаемое значение:
//  Структура - разобранный код основания льготы:
//  * Статья      - Строка
//  * Часть       - Строка
//  * Пункт       - Строка
//  * Подпункт    - Строка
//  * Абзац       - Строка
//  * Иное        - Строка
//
Функция НормативныеДанныеОснованияЛьготы(Знач КодОснованияЛьготы, БезЛидирующихНолей = Истина) Экспорт
	
	Результат = НовыйСведенияОПунктеРегиональногоЗакона();
		
	Если ПустаяСтрока(КодОснованияЛьготы) Тогда
		Возврат Результат;
	КонецЕсли;
	
	КодОснованияЛьготы = СокрЛП(КодОснованияЛьготы);
	
	Если СтрДлина(КодОснованияЛьготы) <> ДлинаОснованияЛьготы() Тогда
		ВызватьИсключение НСтр("ru = 'Неверный формат кода основания льготы по налогу на имущество'");
	КонецЕсли;
	
	ДлинаРазряда = ДлинаРазрядаОснованияЛьготы();
	
	СтатьяПоФормату   = Сред(КодОснованияЛьготы, 1, ДлинаРазряда);
	ЧастьПоФормату    = Сред(КодОснованияЛьготы, 1 + ДлинаРазряда, ДлинаРазряда);
	ПунктПоФормату    = Сред(КодОснованияЛьготы, 1 + 2 * ДлинаРазряда, ДлинаРазряда);
	ПодпунктПоФормату = Сред(КодОснованияЛьготы, 1 + 3 * ДлинаРазряда, ДлинаРазряда);
	АбзацПоФормату    = Сред(КодОснованияЛьготы, 1 + 4 * ДлинаРазряда, ДлинаРазряда);
	ИноеПоФормату     = Сред(КодОснованияЛьготы, 1 + 5 * ДлинаРазряда, ДлинаРазряда);
	
	Если БезЛидирующихНолей Тогда
		Результат.Статья   = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(СтатьяПоФормату, "0");
		Результат.Часть    = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(ЧастьПоФормату, "0");
		Результат.Пункт    = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(ПунктПоФормату, "0");
		Результат.Подпункт = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(ПодпунктПоФормату, "0");
		Результат.Абзац    = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(АбзацПоФормату, "0");
		Результат.Иное     = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(ИноеПоФормату, "0");
	Иначе
		Результат.Статья   = СтатьяПоФормату;
		Результат.Часть    = ЧастьПоФормату;
		Результат.Пункт    = ПунктПоФормату;
		Результат.Подпункт = ПодпунктПоФормату;
		Результат.Абзац    = АбзацПоФормату;
		Результат.Иное     = ИноеПоФормату;
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции

Функция НовыйСведенияОПунктеРегиональногоЗакона() Экспорт 

	Результат = Новый Структура;
	
	Результат.Вставить("Статья",   "");
	Результат.Вставить("Часть",    "");
	Результат.Вставить("Пункт",    "");
	Результат.Вставить("Подпункт", "");
	Результат.Вставить("Абзац",    "");
	Результат.Вставить("Иное",     "");

	Возврат Результат;
	
КонецФункции

// Формирует по переданному полному коду основания льготы (24 символа) сокращенный код (12 символом) - оставляет только
// номер статьи, пункта и подпункта. Часть, абзац и иное игнорируются.
// Данный формат используется в декларации по налогу на имущество.
//
// Параметры:
//  КодОснованияЛьготы  - Строка - код основания применения льготной ставки налога в формате заявления о льготе (длина - 24).
//                                 См. также ПолныйКодОснованияЛьготы().
//
// Возвращаемое значение:
//  Строка - сокращенный код основания применения льготной ставки налога (длина - 12).
//
Функция СокращенныйКодОснованияЛьготы(Знач КодОснованияЛьготы) Экспорт 

	СведенияОПунктеРегЗакона = НормативныеДанныеОснованияЛьготы(КодОснованияЛьготы, Ложь);

	Возврат СведенияОПунктеРегЗакона.Статья + СведенияОПунктеРегЗакона.Пункт + СведенияОПунктеРегЗакона.Подпункт;
	
КонецФункции

Функция КодРегиональнойЛьготыСнижениеНалоговойСтавки() Экспорт

	Возврат "2012400";	

КонецФункции

Функция КодРегиональнойЛьготыСнижениеСуммыНалога() Экспорт

	Возврат "2012500";	

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗначащиеДанныеНормативногоПункта(Знач НормативныйПункт)
	
	НезначащиеСимволы = Новый Массив;
	НезначащиеСимволы.Добавить("0");
	НезначащиеСимволы.Добавить("-");
	
	НормативныйПункт = СокрЛП(НормативныйПункт);
	
	Для Каждого НезначащийСимвол Из НезначащиеСимволы Цикл
		НормативныйПункт = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(НормативныйПункт, НезначащийСимвол);
	КонецЦикла;
	
	Возврат НормативныйПункт;
	
КонецФункции

Функция ДлинаРазрядаОснованияЛьготы()
	
	Возврат 4;
	
КонецФункции

Функция ДлинаОснованияЛьготы()
	
	Возврат 24;
	
КонецФункции

#КонецОбласти
