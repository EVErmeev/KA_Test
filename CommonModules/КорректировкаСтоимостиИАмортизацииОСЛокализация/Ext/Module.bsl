////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Корректировка стоимости и амортизации ОС".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
// 
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения - Строка - 
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ПоступлениеАрендованныхОС") Тогда
		
		ЗаполнитьНаОснованииПоступленияАрендованныхОС(Объект, ДанныеЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДополнитьВспомогательныеРеквизиты(Объект, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	
	ДатаДок = ?(Объект.Дата <> '000101010000', Объект.Дата, ТекущаяДатаСеанса());
	
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, ДатаДок));
	ВспомогательныеРеквизиты.Вставить("ПоддержкаПБУ18", УчетнаяПолитика.ПоддержкаПБУ18(Объект.Организация, ДатаДок));
	ВспомогательныеРеквизиты.Вставить("ВедетсяУчетПостоянныхИВременныхРазниц", УчетнаяПолитика.ВедетсяУчетПостоянныхИВременныхРазниц(Объект.Организация, ДатаДок));
	
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ВалютаУпрПредставление = Строка(Форма.СлужебныеПараметрыФормы.ВалютаУпр);
	ВалютаРеглПредставление = Строка(Форма.СлужебныеПараметрыФормы.ВалютаРегл);
	
	Если ОбновитьВсе Тогда
		Элементы.ПараметрыЗаПериодАмортизацияРегл.Видимость = Ложь;
		Элементы.ПараметрыЗаПериодАмортизация.Заголовок = СтрШаблон(НСтр("ru = 'Амортизация (%1)'"), ВалютаУпрПредставление);
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"ПлательщикНалогаНаПрибыль",
			УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, Объект.Дата),
			Форма.СлужебныеПараметрыФормы);
			
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"ВедетсяУчетПостоянныхИВременныхРазниц",
			УчетнаяПолитика.ВедетсяУчетПостоянныхИВременныхРазниц(Объект.Организация, Объект.Дата),
			Форма.СлужебныеПараметрыФормы);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		Если НЕ Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль 
			И Объект.ОтражатьВУпрУчете 
			И Объект.ОтражатьВРеглУчете Тогда
			
			Элементы.ОССтоимостьБУ_Отдельно.Заголовок = 
				СтрШаблон(НСтр("ru = 'Стоимость (БУ, %1)'"), ВалютаРеглПредставление);
			
			Элементы.ОССтоимостьУУ_Отдельно.Заголовок = 
				СтрШаблон(НСтр("ru = 'Стоимость (УУ, %1)'"), ВалютаУпрПредставление);
			
			Элементы.ОСАмортизацияБУ_Отдельно.Заголовок = 
				СтрШаблон(НСтр("ru = 'Амортизация (БУ, %1)'"), ВалютаРеглПредставление);
			
			Элементы.ОСАмортизацияУУ_Отдельно.Заголовок = 
				СтрШаблон(НСтр("ru = 'Амортизация (УУ, %1)'"), ВалютаУпрПредставление);
			
			Элементы.ОСПервоначальнаяСтоимостьБУ_Отдельно.Заголовок = 
				СтрШаблон(НСтр("ru = 'Первоначальная стоимость (БУ, %1)'"), ВалютаРеглПредставление);
				
			Элементы.ОСПервоначальнаяСтоимостьУУ_Отдельно.Заголовок = 
				СтрШаблон(НСтр("ru = 'Первоначальная стоимость (УУ, %1)'"), ВалютаУпрПредставление);
			
		Иначе
			
			Элементы.ОССтоимостьБУ_Отдельно.Заголовок = 
				СтрШаблон(НСтр("ru = 'Стоимость (%1)'"), ВалютаРеглПредставление);
			
			Элементы.ОССтоимостьУУ_Отдельно.Заголовок = 
				СтрШаблон(НСтр("ru = 'Стоимость (%1)'"), ВалютаУпрПредставление);
			
			Элементы.ОСАмортизацияБУ_Отдельно.Заголовок = 
				СтрШаблон(НСтр("ru = 'Амортизация (%1)'"), ВалютаРеглПредставление);
			
			Элементы.ОСАмортизацияУУ_Отдельно.Заголовок = 
				СтрШаблон(НСтр("ru = 'Амортизация (%1)'"), ВалютаУпрПредставление);
			
			Элементы.ОСПервоначальнаяСтоимостьБУ_Отдельно.Заголовок = 
				СтрШаблон(НСтр("ru = 'Первоначальная стоимость (%1)'"), ВалютаРеглПредставление);
				
			Элементы.ОСПервоначальнаяСтоимостьУУ_Отдельно.Заголовок = 
				СтрШаблон(НСтр("ru = 'Первоначальная стоимость (%1)'"), ВалютаУпрПредставление);
			
		КонецЕсли; 
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидИмущества") 
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ОСЗаполнитьПоУчету.РасширеннаяПодсказка.Заголовок = 
			?(Объект.ВидИмущества = Перечисления.ВидыИмущества.Арендованное,
				НСтр("ru = 'Заполнить залоговую стоимость по данным учета в выбранных строках'"),
				НСтр("ru = 'Заполнить стоимость и амортизацию по данным учета в выбранных строках'"));
				
		Элементы.ОСЗаполнитьПоУчету.Заголовок = 
			?(Объект.ВидИмущества = Перечисления.ВидыИмущества.Арендованное,
				НСтр("ru = 'Залоговую стоимость по данным учета'"),
				НСтр("ru = 'Стоимость и амортизацию по данным учета'"));
				
		//				
		СписокПараметровВыбора = Новый Массив;
		ПараметрВыбора = Новый ПараметрВыбора("Контекст", "БУ,УУ");
		СписокПараметровВыбора.Добавить(ПараметрВыбора);
		ПараметрВыбора = Новый ПараметрВыбора("РеквизитыКоторыеДолжныСовпадать", "Организация,Подразделение");
		СписокПараметровВыбора.Добавить(ПараметрВыбора);
		
		Если Объект.ВидИмущества = Перечисления.ВидыИмущества.Арендованное Тогда
			ПараметрВыбора = Новый ПараметрВыбора("Отбор.Состояние", Перечисления.СостоянияОС.ПринятоКЗабалансовомуУчету);
		Иначе
			ПараметрВыбора = Новый ПараметрВыбора("Отбор.Состояние", Перечисления.СостоянияОС.ПринятоКУчету);
		КонецЕсли; 
		СписокПараметровВыбора.Добавить(ПараметрВыбора);
		
		Элементы.ОСОсновноеСредство.ПараметрыВыбора = Новый ФиксированныйМассив(СписокПараметровВыбора);
				
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ ОбновитьВсе Тогда
		
		Если ЗначениеЗаполнено(Форма.СлужебныеПараметрыФормы.ВалютаРегл) Тогда
			
			ВалютаРеглПредставление = Строка(Форма.СлужебныеПараметрыФормы.ВалютаРегл);
			
			Элементы.ОССтоимостьНУ.Заголовок = СтрШаблон(НСтр("ru = 'НУ (%1)'"), ВалютаРеглПредставление);
			Элементы.ОССтоимостьПР.Заголовок = СтрШаблон(НСтр("ru = 'ПР (%1)'"), ВалютаРеглПредставление);
			Элементы.ОССтоимостьЦФ.Заголовок = СтрШаблон(НСтр("ru = 'Стоимость (целевое финансирование, %1)'"), ВалютаРеглПредставление);
			
			Элементы.ОСАмортизацияНУ.Заголовок = СтрШаблон(НСтр("ru = 'НУ (%1)'"), ВалютаРеглПредставление);
			Элементы.ОСАмортизацияПР.Заголовок = СтрШаблон(НСтр("ru = 'ПР (%1)'"), ВалютаРеглПредставление);
			Элементы.ОСАмортизацияЦФ.Заголовок = СтрШаблон(НСтр("ru = 'Амортизация (целевое финансирование, %1)'"), ВалютаРеглПредставление);
	
			Элементы.ОСПервоначальнаяСтоимостьНУ.Заголовок = СтрШаблон(НСтр("ru = 'НУ (%1)'"), ВалютаРеглПредставление);
			
			Элементы.ОСЗалоговаяСтоимость.Заголовок = СтрШаблон(НСтр("ru = 'Залоговая стоимость (%1)'"), ВалютаРеглПредставление);
			
			Элементы.ОСПРДляВычисленияАмортизации.Заголовок = СтрШаблон(НСтр("ru = 'Постоянные разницы (%1)'"), ВалютаРеглПредставление);
			Элементы.ОСПРДляВычисленияАмортизации_Отдельно.Заголовок = СтрШаблон(НСтр("ru = 'Постоянные разницы для вычисления амортизации (%1)'"), ВалютаРеглПредставление);
		
		Иначе
			
			Элементы.ОССтоимостьНУ.Заголовок = НСтр("ru = 'НУ'");
			Элементы.ОССтоимостьПР.Заголовок = НСтр("ru = 'ПР'");
			Элементы.ОССтоимостьЦФ.Заголовок = НСтр("ru = 'Стоимость (целевое финансирование)'");
			
			Элементы.ОСАмортизацияНУ.Заголовок = НСтр("ru = 'НУ'");
			Элементы.ОСАмортизацияПР.Заголовок = НСтр("ru = 'ПР'");
			Элементы.ОСАмортизацияЦФ.Заголовок = НСтр("ru = 'Амортизация (целевое финансирование)'");
	
			Элементы.ОСПервоначальнаяСтоимостьНУ.Заголовок = НСтр("ru = 'НУ'");
			
			Элементы.ОСЗалоговаяСтоимость.Заголовок = НСтр("ru = 'Залоговая стоимость'");
			
			Элементы.ОСПРДляВычисленияАмортизации.Заголовок = НСтр("ru = 'Постоянные разницы'");
			Элементы.ОСПРДляВычисленияАмортизации_Отдельно.Заголовок = НСтр("ru = 'Постоянные разницы для вычисления амортизации'");
		
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НачалоПериода") 
		ИЛИ ОбновитьВсе Тогда
	
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			НЕ Форма.СлужебныеПараметрыФормы.ПрименяетсяФСБУ6_ЗаПериод, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			НЕ Форма.СлужебныеПараметрыФормы.ПрименяетсяФСБУ6_ЗаПериод, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			НЕ Форма.СлужебныеПараметрыФормы.ПрименяетсяФСБУ6_ЗаПериод, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега"));
			
		//
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПараметрыЗаПериодБУМетодНачисленияАмортизацииБУ.СписокВыбора, 
			НЕ Форма.СлужебныеПараметрыФормы.ПрименяетсяФСБУ6_ЗаПериод, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПараметрыЗаПериодБУМетодНачисленияАмортизацииБУ.СписокВыбора, 
			НЕ Форма.СлужебныеПараметрыФормы.ПрименяетсяФСБУ6_ЗаПериод, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПараметрыЗаПериодБУМетодНачисленияАмортизацииБУ.СписокВыбора, 
			НЕ Форма.СлужебныеПараметрыФормы.ПрименяетсяФСБУ6_ЗаПериод, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега"));
		
	КонецЕсли;

	//-- Локализация
	
КонецПроцедуры

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	
	ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаИсправлениеПараметровНалогаНаИмущество(ТекстыЗапроса, Регистры);
	
	РеглУчетПроведениеСервер.ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	
	//-- Локализация
	
КонецПроцедуры

Процедура УстановитьУсловноеОформление(Форма) Экспорт

	//++ Локализация
	
	УсловноеОформление = Форма.УсловноеОформление;
	Элементы = Форма.Элементы;
	
	#Область ОССтоимостьБУ_ОтметкаНезаполненного
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОССтоимостьБУ.Имя);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	#КонецОбласти
		
	//-- Локализация
	
КонецПроцедуры

Функция ТекстЗапросаЗаполнитьПоДаннымУчета() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтоимостьИАмортизация.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(СтоимостьИАмортизация.СтоимостьУУ) КАК СтоимостьУУ,
	|	СУММА(СтоимостьИАмортизация.СтоимостьБУ) КАК СтоимостьБУ,
	|	СУММА(СтоимостьИАмортизация.СтоимостьНУ) КАК СтоимостьНУ,
	|	СУММА(СтоимостьИАмортизация.СтоимостьПР) КАК СтоимостьПР,
	|	СУММА(СтоимостьИАмортизация.СтоимостьЦФ) КАК СтоимостьЦФ,
	|	СУММА(СтоимостьИАмортизация.ЗалоговаяСтоимость) КАК ЗалоговаяСтоимость,
	|	СУММА(СтоимостьИАмортизация.АмортизацияБУ) КАК АмортизацияБУ,
	|	СУММА(СтоимостьИАмортизация.АмортизацияНУ) КАК АмортизацияНУ,
	|	СУММА(СтоимостьИАмортизация.АмортизацияПР) КАК АмортизацияПР,
	|	СУММА(СтоимостьИАмортизация.АмортизацияУУ) КАК АмортизацияУУ,
	|	СУММА(СтоимостьИАмортизация.АмортизацияЦФ) КАК АмортизацияЦФ
	|
	|ПОМЕСТИТЬ СтоимостьИАмортизация
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтоимостьОСОстатки.ОсновноеСредство КАК ОсновноеСредство,
	|		СтоимостьОСОстатки.СтоимостьОстаток КАК СтоимостьУУ,
	|		СтоимостьОСОстатки.СтоимостьРеглОстаток КАК СтоимостьБУ,
	|		СтоимостьОСОстатки.СтоимостьНУОстаток КАК СтоимостьНУ,
	|		СтоимостьОСОстатки.СтоимостьПРОстаток КАК СтоимостьПР,
	|		СтоимостьОСОстатки.СтоимостьЦФОстаток КАК СтоимостьЦФ,
	|		СтоимостьОСОстатки.ЗалоговаяСтоимостьОстаток КАК ЗалоговаяСтоимость,
	|		0 КАК АмортизацияБУ,
	|		0 КАК АмортизацияНУ,
	|		0 КАК АмортизацияПР,
	|		0 КАК АмортизацияУУ,
	|		0 КАК АмортизацияЦФ
	|	ИЗ
	|		РегистрНакопления.СтоимостьОС.Остатки(
	|			&ПериодГраница, 
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК СтоимостьОСОстатки
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		СтоимостьОС.ОсновноеСредство,
	|		СтоимостьОС.Стоимость,
	|		ВЫБОР
	|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -СтоимостьОС.СтоимостьРегл
	|			ИНАЧЕ СтоимостьОС.СтоимостьРегл
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -СтоимостьОС.СтоимостьНУ
	|			ИНАЧЕ СтоимостьОС.СтоимостьНУ
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -СтоимостьОС.СтоимостьПР
	|			ИНАЧЕ СтоимостьОС.СтоимостьПР
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -СтоимостьОС.СтоимостьЦФ
	|			ИНАЧЕ СтоимостьОС.СтоимостьЦФ
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -СтоимостьОС.ЗалоговаяСтоимость
	|			ИНАЧЕ СтоимостьОС.ЗалоговаяСтоимость
	|		КОНЕЦ,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|	ГДЕ
	|		СтоимостьОС.Регистратор = &Ссылка
	|		И СтоимостьОС.Организация = &Организация
	|		И СтоимостьОС.Период < &Период
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		АмортизацияОСОстатки.ОсновноеСредство,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		-АмортизацияОСОстатки.АмортизацияРеглОстаток,
	|		-АмортизацияОСОстатки.АмортизацияНУОстаток,
	|		-АмортизацияОСОстатки.АмортизацияПРОстаток,
	|		-АмортизацияОСОстатки.АмортизацияОстаток,
	|		-АмортизацияОСОстатки.АмортизацияЦФОстаток
	|	ИЗ
	|		РегистрНакопления.АмортизацияОС.Остатки(
	|			&ПериодГраница, 
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК АмортизацияОСОстатки
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		АмортизацияОС.ОсновноеСредство,
	|		АмортизацияОС.Амортизация,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -АмортизацияОС.АмортизацияРегл
	|			ИНАЧЕ АмортизацияОС.АмортизацияРегл
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -АмортизацияОС.АмортизацияНУ
	|			ИНАЧЕ АмортизацияОС.АмортизацияНУ
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -АмортизацияОС.АмортизацияПР
	|			ИНАЧЕ АмортизацияОС.АмортизацияПР
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -АмортизацияОС.Амортизация
	|			ИНАЧЕ АмортизацияОС.Амортизация
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -АмортизацияОС.АмортизацияЦФ
	|			ИНАЧЕ АмортизацияОС.АмортизацияЦФ
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.АмортизацияОС КАК АмортизацияОС
	|	ГДЕ
	|		АмортизацияОС.Регистратор = &Ссылка
	|		И АмортизацияОС.Организация = &Организация
	|		И АмортизацияОС.Период < &Период
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		АмортизацияОС.ОсновноеСредство,
	|		АмортизацияОС.Амортизация,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -АмортизацияОС.АмортизацияРегл
	|			ИНАЧЕ АмортизацияОС.АмортизацияРегл
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -АмортизацияОС.АмортизацияНУ
	|			ИНАЧЕ АмортизацияОС.АмортизацияНУ
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -АмортизацияОС.АмортизацияПР
	|			ИНАЧЕ АмортизацияОС.АмортизацияПР
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -АмортизацияОС.Амортизация
	|			ИНАЧЕ АмортизацияОС.Амортизация
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -АмортизацияОС.АмортизацияЦФ
	|			ИНАЧЕ АмортизацияОС.АмортизацияЦФ
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.АмортизацияОС КАК АмортизацияОС
	|	ГДЕ
	|		АмортизацияОС.Регистратор ССЫЛКА Документ.АмортизацияОС2_4
	|		И АмортизацияОС.Организация = &Организация
	|		И АмортизацияОС.Период < &Период
	|		И АмортизацияОС.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|
	|	) КАК СтоимостьИАмортизация
	|
	|СГРУППИРОВАТЬ ПО
	|	СтоимостьИАмортизация.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтоимостьИАмортизация.ОсновноеСредство КАК ОсновноеСредство,
	|	СтоимостьИАмортизация.СтоимостьУУ КАК СтоимостьУУ,
	|	СтоимостьИАмортизация.СтоимостьБУ КАК СтоимостьБУ,
	|	СтоимостьИАмортизация.СтоимостьНУ КАК СтоимостьНУ,
	|	СтоимостьИАмортизация.СтоимостьПР КАК СтоимостьПР,
	|	СтоимостьИАмортизация.СтоимостьЦФ КАК СтоимостьЦФ,
	|	СтоимостьИАмортизация.ЗалоговаяСтоимость КАК ЗалоговаяСтоимость,
	|
	|	ВЫБОР
	|		КОГДА &ВидСобытияОС = ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Прочее)
	|		И ЕСТЬNULL(УчетнаяПолитика.ПрименяетсяФСБУ6, ЛОЖЬ)
	|			ТОГДА ВЫБОР
	|				КОГДА ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияБУ, 0) <> 0
	|				И СтоимостьИАмортизация.СтоимостьБУ + СтоимостьИАмортизация.СтоимостьЦФ <> 0
	|					ТОГДА (СтоимостьИАмортизация.СтоимостьБУ + СтоимостьИАмортизация.СтоимостьЦФ -
	|						ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ЛиквидационнаяСтоимость, 0)) /
	|						ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияБУ, 0) *
	|						РАЗНОСТЬДАТ(ЕСТЬNULL(ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ, ДАТАВРЕМЯ(1, 1, 1)), &Период, МЕСЯЦ) *
	|						СтоимостьИАмортизация.СтоимостьБУ / (СтоимостьИАмортизация.СтоимостьБУ + СтоимостьИАмортизация.СтоимостьЦФ)
	|				ИНАЧЕ СтоимостьИАмортизация.АмортизацияБУ
	|			КОНЕЦ
	|		ИНАЧЕ СтоимостьИАмортизация.АмортизацияБУ
	|	КОНЕЦ КАК АмортизацияБУ,
	|
	|	СтоимостьИАмортизация.АмортизацияНУ КАК АмортизацияНУ,
	|	СтоимостьИАмортизация.АмортизацияПР КАК АмортизацияПР,
	|	СтоимостьИАмортизация.АмортизацияУУ КАК АмортизацияУУ,
	|
	|	ВЫБОР
	|		КОГДА &ВидСобытияОС = ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Прочее)
	|		И ЕСТЬNULL(УчетнаяПолитика.ПрименяетсяФСБУ6, ЛОЖЬ)
	|			ТОГДА ВЫБОР
	|				КОГДА ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияБУ, 0) <> 0
	|				И СтоимостьИАмортизация.СтоимостьБУ + СтоимостьИАмортизация.СтоимостьЦФ <> 0
	|					ТОГДА (СтоимостьИАмортизация.СтоимостьБУ + СтоимостьИАмортизация.СтоимостьЦФ -
	|						ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ЛиквидационнаяСтоимость, 0)) /
	|						ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияБУ, 0) *
	|						РАЗНОСТЬДАТ(ЕСТЬNULL(ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ, ДАТАВРЕМЯ(1, 1, 1)), &Период, МЕСЯЦ) *
	|						СтоимостьИАмортизация.СтоимостьЦФ / (СтоимостьИАмортизация.СтоимостьБУ + СтоимостьИАмортизация.СтоимостьЦФ)
	|				ИНАЧЕ СтоимостьИАмортизация.АмортизацияЦФ
	|			КОНЕЦ
	|		ИНАЧЕ СтоимостьИАмортизация.АмортизацияЦФ
	|	КОНЕЦ КАК АмортизацияЦФ,
	|
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ,
	|
	|	ПараметрыАмортизацииОСУУ.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизацииУУ,
	|	ПараметрыАмортизацииОСБУ.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизацииБУ,
	|
	|	ПараметрыАмортизацииОСБУ.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации
	|
	|ИЗ
	|	СтоимостьИАмортизация КАК СтоимостьИАмортизация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&Период, 
	|			Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК ПервоначальныеСведенияОС
	|		ПО (ПервоначальныеСведенияОС.ОсновноеСредство = СтоимостьИАмортизация.ОсновноеСредство)
	|			И (ПервоначальныеСведенияОС.Организация = &Организация)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСУУ.СрезПоследних(
	|			&Период, 
	|			Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК ПараметрыАмортизацииОСУУ
	|		ПО (ПараметрыАмортизацииОСУУ.ОсновноеСредство = СтоимостьИАмортизация.ОсновноеСредство)
	|			И (ПараметрыАмортизацииОСУУ.Организация = &Организация)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ.СрезПоследних(
	|			&Период, 
	|			Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК ПараметрыАмортизацииОСБУ
	|		ПО (ПараметрыАмортизацииОСБУ.ОсновноеСредство = СтоимостьИАмортизация.ОсновноеСредство)
	|			И (ПараметрыАмортизацииОСБУ.Организация = &Организация)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаБухУчета.СрезПоследних(&ПериодУП, Организация = &ГоловнаяОрганизация) КАК УчетнаяПолитика
	|		ПО (ИСТИНА)";
	
	//-- Локализация

	Возврат ТекстЗапроса;

КонецФункции
 
// 
// Параметры:
//  Объект - ДокументОбъект.КорректировкаСтоимостиИАмортизацииОС - 
//  СлужебныеПараметрыФормы - Структура - 
// 
// Возвращаемое значение:
//  Булево - 
Функция ПолучитьПараметрыУчетныхПолитикЗаПериод(Объект, СлужебныеПараметрыФормы) Экспорт
	
	ПараметрыРеглПолучены = Ложь;
	
	//++ Локализация
	
	ПараметрыРеглПолучены = Истина;
	
	ПорядокНачисленияАмортизацииРегл = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
	ПорядокНачисленияАмортизацииАрендаРегл = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
	РеглУчетВНАВедетсяНезависимо = Истина;
	ПрименяетсяФСБУ6 = Истина;
	
	Если Объект.КорректировкаСПрошлойДаты
		И ЗначениеЗаполнено(Объект.НачалоПериода)
		И ЗначениеЗаполнено(Объект.Организация) Тогда
			
		ДатаДокумента = ?(Объект.Дата <> '000101010000', Объект.Дата, ТекущаяДатаСеанса());
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР 
		|		КОГДА УчетнаяПолитика.ПорядокНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету) 
		|			ТОГДА ИСТИНА 
		|		ИНАЧЕ ЛОЖЬ 
		|	КОНЕЦ), ИСТИНА) КАК СДатыПринятияКУчетуРегл,
		|
		|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР 
		|		КОГДА УчетнаяПолитика.ПорядокНачисленияАмортизацииАренда = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету) 
		|			ТОГДА ИСТИНА 
		|		ИНАЧЕ ЛОЖЬ 
		|	КОНЕЦ), ИСТИНА) КАК СДатыПринятияКУчетуРеглАренда,
		|
		|	ЕСТЬNULL(МАКСИМУМ(УчетнаяПолитика.ПрименяетсяФСБУ6), ИСТИНА) КАК ПрименяетсяФСБУ6
		|
		|ИЗ
		|	(ВЫБРАТЬ
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииОС КАК ПорядокНачисленияАмортизации,
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииАренда КАК ПорядокНачисленияАмортизацииАренда,
		|		УчетнаяПолитика.ПрименяетсяФСБУ6 КАК ПрименяетсяФСБУ6
		|	ИЗ
		|		РегистрСведений.УчетнаяПолитикаБухУчета КАК УчетнаяПолитика
		|	ГДЕ
		|		УчетнаяПолитика.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|		И УчетнаяПолитика.Организация = &ГоловнаяОрганизация
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииОС КАК ПорядокНачисленияАмортизации,
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииАренда КАК ПорядокНачисленияАмортизацииАренда,
		|		УчетнаяПолитика.ПрименяетсяФСБУ6 КАК ПорядокУчетаВНАРегл
		|	ИЗ
		|		РегистрСведений.УчетнаяПолитикаБухУчета.СрезПоследних(&НачалоПериода, Организация = &ГоловнаяОрганизация) КАК УчетнаяПолитика
		|
		|	) КАК УчетнаяПолитика
		|";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Организация, "ГоловнаяОрганизация"));
		Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);
		Запрос.УстановитьПараметр("КонецПериода", НачалоДня(ДатаДокумента) - 1);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			Если Выборка.СДатыПринятияКУчетуРегл Тогда
				ПорядокНачисленияАмортизацииРегл = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
			Иначе
				ПорядокНачисленияАмортизацииРегл = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца;
			КонецЕсли;
			
			Если Выборка.СДатыПринятияКУчетуРеглАренда Тогда
				ПорядокНачисленияАмортизацииАрендаРегл = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
			Иначе
				ПорядокНачисленияАмортизацииАрендаРегл = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца;
			КонецЕсли;
			
			ПрименяетсяФСБУ6 = Выборка.ПрименяетсяФСБУ6;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
		"ПорядокНачисленияАмортизацииРегл_ЗаПериод",
		ПорядокНачисленияАмортизацииРегл,
		СлужебныеПараметрыФормы);

	ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
		"ПорядокНачисленияАмортизацииРеглАренда_ЗаПериод",
		ПорядокНачисленияАмортизацииАрендаРегл,
		СлужебныеПараметрыФормы);

	ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
		"РеглУчетВНАВедетсяНезависимо_ЗаПериод",
		Истина,
		СлужебныеПараметрыФормы);
		
	ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
		"ПрименяетсяФСБУ6_ЗаПериод",
		ПрименяетсяФСБУ6,
		СлужебныеПараметрыФормы);
			
	//-- Локализация
	
	Возврат ПараметрыРеглПолучены;
	
КонецФункции

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	МеханизмыДокумента.Добавить("ИмущественныеНалоги");
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	//-- Локализация
	
КонецПроцедуры

Процедура ТаблицыОтложенногоФормированияДвижений(ТекстыЗапроса) Экспорт

	//++ Локализация
	ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(ТекстыЗапроса, Неопределено);
	//-- Локализация
	
КонецПроцедуры
 
Функция ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПервоначальныеСведенияОС(
		ТекстыЗапроса, "Документ.КорректировкаСтоимостиИАмортизацииОС");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	втПервоначальныеСведенияОС.СпособПоступления КАК СпособПоступления,
	|	втПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
	|	втПервоначальныеСведенияОС.ПорядокУчетаНУ КАК ПорядокУчетаНУ,
	|	втПервоначальныеСведенияОС.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
	|	втПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	втПервоначальныеСведенияОС.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	втПервоначальныеСведенияОС.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	втПервоначальныеСведенияОС.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	втПервоначальныеСведенияОС.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	втПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|	втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
	|	втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюНУ КАК ДатаВводаВЭксплуатациюНУ,
	|	втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ,
	|	втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ,
	|	втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюНУ КАК ДокументВводаВЭксплуатациюНУ,
	|	втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ КАК ДокументВводаВЭксплуатациюУУ,
	|	втПервоначальныеСведенияОС.ДокументСнятияСУчетаБУ КАК ДокументСнятияСУчетаБУ,
	|	втПервоначальныеСведенияОС.ДокументСнятияСУчетаНУ КАК ДокументСнятияСУчетаНУ,
	|	втПервоначальныеСведенияОС.ДокументСнятияСУчетаУУ КАК ДокументСнятияСУчетаУУ,
	|	втПервоначальныеСведенияОС.Контрагент КАК Контрагент,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВРеглУчете
	|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьБУ
	|		ИНАЧЕ втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьБУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВРеглУчете
	|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьНУ
	|		ИНАЧЕ втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьНУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВУпрУчете
	|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьУУ
	|		ИНАЧЕ втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьУУ
	|
	|ИЗ
	|	Документ.КорректировкаСтоимостиИАмортизацииОС.ОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК втПервоначальныеСведенияОС
	|		ПО (втПервоначальныеСведенияОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И (&ОтражатьВРеглУчете
	|				И втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ <> ТаблицаОС.ПервоначальнаяСтоимостьБУ
	|			ИЛИ &ОтражатьВРеглУчете
	|				И втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ <> ТаблицаОС.ПервоначальнаяСтоимостьНУ
	|			ИЛИ &ОтражатьВУпрУчете
	|				И втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ <> ТаблицаОС.ПервоначальнаяСтоимостьУУ)";

	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ДополнитьТекстЗапросаВтКорректировкаАмортизации(ТекстЗапроса) Экспорт

	ТекстНачислятьИзнос = "ЛОЖЬ";
	
	//++ Локализация
	ТекстНачислятьИзнос = 
		"ВЫБОР
		|	КОГДА ПервоначальныеСведенияОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
		|		ТОГДА ИСТИНА
		|	ИНАЧЕ ЛОЖЬ
		|КОНЕЦ";
	//-- Локализация
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НачислятьИзнос", ТекстНачислятьИзнос);
	
КонецПроцедуры
 
//++ Локализация

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПараметрыАмортизацииОСБУ";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПараметрыАмортизацииОСБУ(
		ТекстыЗапроса, "Документ.КорректировкаСтоимостиИАмортизацииОС");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	втПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияБУ КАК СрокПолезногоИспользованияБУ,
	|	втПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
	|	втПараметрыАмортизацииОСБУ.КоэффициентАмортизацииБУ КАК КоэффициентАмортизацииБУ,
	|	втПараметрыАмортизацииОСБУ.КоэффициентУскорения КАК КоэффициентУскорения,
	|	втПараметрыАмортизацииОСБУ.ГрафикАмортизации КАК ГрафикАмортизации,
	|	втПараметрыАмортизацииОСБУ.СпециальныйКоэффициент КАК СпециальныйКоэффициент,
	|	втПараметрыАмортизацииОСБУ.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	втПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	втПараметрыАмортизацииОСБУ.ДатаПоследнегоИзменения КАК ДатаПоследнегоИзменения,
	|	втПараметрыАмортизацииОСБУ.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	ТаблицаОС.СтоимостьДляВычисленияАмортизацииБУ КАК СтоимостьДляВычисленияАмортизации,
	|	ТаблицаОС.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации
	|ИЗ
	|	Документ.КорректировкаСтоимостиИАмортизацииОС.ОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыАмортизацииОСБУ КАК втПараметрыАмортизацииОСБУ
	|		ПО (втПараметрыАмортизацииОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|	И (втПараметрыАмортизацииОСБУ.СтоимостьДляВычисленияАмортизации <> ТаблицаОС.СтоимостьДляВычисленияАмортизацииБУ
	|			ИЛИ втПараметрыАмортизацииОСБУ.ПРДляВычисленияАмортизации <> ТаблицаОС.ПРДляВычисленияАмортизации)";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СобытияОСОрганизаций";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&СобытиеОС КАК Событие,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	&НазваниеДокумента КАК НазваниеДокумента,
	|	&НомерНаПечать КАК НомерДокумента
	|ИЗ
	|	Документ.КорректировкаСтоимостиИАмортизацииОС.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаИсправлениеПараметровНалогаНаИмущество(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ИсправлениеПараметровНалогаНаИмущество";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтСтоимостьОС(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК ДатаИсправления,
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ПараметрыЗаПериод.Дата, ДЕНЬ, 1), ДЕНЬ) КАК ДатаДействия,
	|
	|	ЕСТЬNULL(втСтоимостьОС.Стоимость, 0) КАК Стоимость,
	|
	|	ПараметрыЗаПериод.АмортизацияБУ
	|		+ ПараметрыЗаПериод.АмортизацияЦФ
	|		+ СУММА(ЕСТЬNULL(ПараметрыЗаПериодПредыдущие.АмортизацияБУ, 0))
	|		+ СУММА(ЕСТЬNULL(ПараметрыЗаПериодПредыдущие.АмортизацияЦФ, 0))
	|		+ СУММА(ЕСТЬNULL(ПараметрыЗаПериодПредыдущие.АмортизацияРеглИзменение, 0))
	|		+ СУММА(ЕСТЬNULL(ПараметрыЗаПериодПредыдущие.АмортизацияЦФИзменение, 0)) КАК Амортизация
	|ИЗ
	|	Документ.КорректировкаСтоимостиИАмортизацииОС.ОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС.ПараметрыЗаПериодБУ КАК ПараметрыЗаПериод
	|		ПО ПараметрыЗаПериод.Ссылка = ТаблицаОС.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС.ПараметрыЗаПериодБУ КАК ПараметрыЗаПериодПредыдущие
	|		ПО ПараметрыЗаПериодПредыдущие.Ссылка = ПараметрыЗаПериод.Ссылка
	|			И ПараметрыЗаПериодПредыдущие.Дата < ПараметрыЗаПериод.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостьОС КАК втСтоимостьОС
	|		ПО втСтоимостьОС.Дата = ПараметрыЗаПериод.Дата
	|
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &КорректировкаСПрошлойДаты
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОС.ОсновноеСредство,
	|	ПараметрыЗаПериод.Дата,
	|	ЕСТЬNULL(втСтоимостьОС.Стоимость, 0),
	|	ПараметрыЗаПериод.АмортизацияБУ,
	|	ПараметрыЗаПериод.АмортизацияЦФ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтСтоимостьОС(ТекстыЗапроса)
	
	ИмяРегистра = "втСтоимостьОС";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтАрендованныеОС(ТекстыЗапроса);
	ТекстЗапросаТаблицаВтДатаСледующихПараметров(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПараметрыЗаПериод.Дата КАК Дата,
	|	                      
	|	ВЫБОР
	|		КОГДА (ЕСТЬNULL(втАрендованныеОС.ЭтоАрендованныеОС, ЛОЖЬ)
	|						И &ПорядокНачисленияАмортизацииАрендаРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца)
	|					ИЛИ НЕ ЕСТЬNULL(втАрендованныеОС.ЭтоАрендованныеОС, ЛОЖЬ)
	|						И &ПорядокНачисленияАмортизацииРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца))
	|				И НЕ СледующиеПараметрыЗаПериод.СтоимостьБУ ЕСТЬ NULL
	|			ТОГДА СледующиеПараметрыЗаПериод.СтоимостьБУ + СледующиеПараметрыЗаПериод.СтоимостьЦФ
	|		ИНАЧЕ ПараметрыЗаПериод.СтоимостьБУ + ПараметрыЗаПериод.СтоимостьЦФ
	|	КОНЕЦ КАК Стоимость
	|
	|ПОМЕСТИТЬ втСтоимостьОС
	|
	|ИЗ
	|	Документ.КорректировкаСтоимостиИАмортизацииОС.ПараметрыЗаПериодБУ КАК ПараметрыЗаПериод
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАрендованныеОС КАК втАрендованныеОС
	|		ПО ИСТИНА
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДатаСледующихПараметров КАК втДатаСледующихПараметров
	|		ПО втДатаСледующихПараметров.Дата = ПараметрыЗаПериод.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС.ПараметрыЗаПериодБУ КАК СледующиеПараметрыЗаПериод
	|		ПО СледующиеПараметрыЗаПериод.Ссылка = ПараметрыЗаПериод.Ссылка
	|			И СледующиеПараметрыЗаПериод.Дата = втДатаСледующихПараметров.ДатаСледующихПараметров
	|
	|ГДЕ
	|	ПараметрыЗаПериод.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Ложь);

КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтДатаСледующихПараметров(ТекстыЗапроса)
	
	ИмяРегистра = "втДатаСледующихПараметров";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПараметрыЗаПериод.Дата КАК Дата,
	|	МИНИМУМ(СледующиеПараметрыЗаПериод.Дата) КАК ДатаСледующихПараметров
	|	
	|ПОМЕСТИТЬ втДатаСледующихПараметров
	|
	|ИЗ
	|	Документ.КорректировкаСтоимостиИАмортизацииОС.ПараметрыЗаПериодБУ КАК ПараметрыЗаПериод
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС.ПараметрыЗаПериодБУ КАК СледующиеПараметрыЗаПериод
	|		ПО СледующиеПараметрыЗаПериод.Ссылка = ПараметрыЗаПериод.Ссылка
	|			И СледующиеПараметрыЗаПериод.Дата > ПараметрыЗаПериод.Дата
	|
	|ГДЕ
	|	ПараметрыЗаПериод.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПараметрыЗаПериод.Дата";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Ложь);

КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтАрендованныеОС(ТекстыЗапроса)
	
	ИмяРегистра = "втАрендованныеОС";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, "КорректировкаСтоимостиИАмортизацииОС");
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЭтоАрендованныеОС
	|ПОМЕСТИТЬ втАрендованныеОС
	|ИЗ
	|	РегистрСведений.АрендованныеОС.СрезПоследних(&Период, ОсновноеСредство В (ВЫБРАТЬ втСписокОС.ОсновноеСредство ИЗ втСписокОС КАК втСписокОС)) КАК АрендованныеОС
	|ГДЕ
	|	АрендованныеОС.Состояние В (
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ВАренде),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Ложь);

КонецПроцедуры

//-- Локализация

#КонецОбласти

#Область ПроводкиРегУчета

Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "";
	
	//++ Локализация
	
	ТекстыЗапроса = Новый Массив;
	
	#Область Стоимость
	
	// СТОИМОСТЬ (УВЕЛИЧЕНИЕ НА СТАТЬЮ ДОХОДОВ)
	
	#Область УвеличениеСтоимости_Дт_СчетУчета__Кт_СчетДоходов
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Увеличение стоимости (Дт СчетУчета :: Кт СчетДоходов)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	ДанныеДокумента.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ДанныеДокумента.СтатьяДоходов КАК СубконтоКт1,
	|	ДанныеДокумента.АналитикаДоходов КАК СубконтоКт2,
	|	Строки.ОсновноеСредство КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	Строки.СтоимостьПР КАК СуммаПРКт,
	|	Строки.СтоимостьВР КАК СуммаВРКт,
	|	
	|	""Увеличение стоимости"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДанныеДокумента.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиДоходов
	|	И (Строки.Стоимость <> 0 
	|		ИЛИ Строки.СтоимостьРегл <> 0 
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УвеличениеСтоимостиЦФ_Дт_СчетУчета_ЦФ__Кт_СчетДоходов
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Увеличение стоимости ЦФ (Дт СчетУчета_ЦФ :: Кт СчетДоходов)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	ДанныеДокумента.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ДанныеДокумента.СтатьяДоходов КАК СубконтоКт1,
	|	ДанныеДокумента.АналитикаДоходов КАК СубконтоКт2,
	|	Строки.ОсновноеСредство КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУКт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРКт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРКт,
	|	
	|	""Увеличение стоимости"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДанныеДокумента.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиДоходов
	|	И (Строки.СтоимостьЦФ <> 0 
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	// СТОИМОСТЬ (УВЕЛИЧЕНИЕ НА СТАТЬЮ ПАССИВОВ)
	
	#Область УвеличениеСтоимости_Дт_СчетУчета__Кт_Счет
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Увеличение стоимости (Дт СчетУчета :: Кт Счет)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.СчетУчета КАК СчетКт,
	|
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.Субконто1 КАК СубконтоКт1,
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.Субконто2 КАК СубконтоКт2,
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.Субконто3 КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	Строки.СтоимостьПР КАК СуммаПРКт,
	|	Строки.СтоимостьВР КАК СуммаВРКт,
	|	
	|	""Увеличение стоимости"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДанныеДокумента.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И (Строки.Стоимость <> 0 
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УвеличениеСтоимостиЦФ_Дт_СчетУчета_ЦФ__Кт_Счет
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Увеличение стоимости ЦФ (Дт СчетУчета_ЦФ :: Кт Счет)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.СчетУчета КАК СчетКт,
	|
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.Субконто1 КАК СубконтоКт1,
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.Субконто2 КАК СубконтоКт2,
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.Субконто3 КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУКт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРКт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРКт,
	|	
	|	""Увеличение стоимости"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДанныеДокумента.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И (Строки.СтоимостьЦФ <> 0 
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	// СТОИМОСТЬ (УМЕНЬШЕНИЕ НА СТАТЬЮ РАСХОДОВ)
	
	#Область УменьшениеСтоимости_Дт_СчетРасходов__Кт_СчетУчета
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Уменьшение стоимости (Дт СчетРасходов :: Кт СчетУчета)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ВЫБОР КОГДА СтатьиСтроительства.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		Строки.КорАналитикаРасходов // Объект строительства
	|	ИНАЧЕ
	|		Строки.КорСтатьяРасходов
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		Строки.КорСтатьяРасходов
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|				ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|						ТОГДА ОбъектыСтроительства.СпособСтроительства
	|					ИНАЧЕ 
	|						ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) 
	|				КОНЕЦ
	|	ИНАЧЕ
	|		Строки.ОсновноеСредство
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	Строки.СтоимостьПР КАК СуммаПРКт,
	|	Строки.СтоимостьВР КАК СуммаВРКт,
	|	
	|	""Уменьшение стоимости"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Строки.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И (Строки.Стоимость <> 0 
	|		ИЛИ Строки.СтоимостьРегл <> 0 
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УменьшениеСтоимостиЦФ_Дт_СчетРасходов__Кт_СчетУчета_ЦФ
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Уменьшение стоимости ЦФ (Дт СчетРасходов :: Кт СчетУчета_ЦФ)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ВЫБОР КОГДА СтатьиСтроительства.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		Строки.КорАналитикаРасходов // Объект строительства
	|	ИНАЧЕ
	|		Строки.КорСтатьяРасходов
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		Строки.КорСтатьяРасходов
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|				ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|						ТОГДА ОбъектыСтроительства.СпособСтроительства
	|					ИНАЧЕ 
	|						ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) 
	|				КОНЕЦ
	|	ИНАЧЕ
	|		Строки.ОсновноеСредство
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУКт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРКт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРКт,
	|	
	|	""Уменьшение стоимости"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Строки.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И (Строки.СтоимостьЦФ <> 0 
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	// СТОИМОСТЬ (УМЕНЬШЕНИЕ НА СТАТЬЮ АКТИВОВ)
	
	#Область УменьшениеСтоимости_Дт_Счет__Кт_СчетУчета
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Уменьшение стоимости (Дт Счет :: Кт СчетУчета)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.СчетУчета КАК СчетДт,
	|
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.Субконто1 КАК СубконтоДт1,
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.Субконто2 КАК СубконтоДт2,
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.Субконто3 КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	Строки.СтоимостьПР КАК СуммаПРКт,
	|	Строки.СтоимостьВР КАК СуммаВРКт,
	|	
	|	""Уменьшение стоимости"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДанныеДокумента.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И (Строки.Стоимость <> 0 
	|		ИЛИ Строки.СтоимостьРегл <> 0 
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УменьшениеСтоимостиЦФ_Дт_Счет__Кт_СчетУчета_ЦФ
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Уменьшение стоимости ЦФ (Дт Счет :: Кт СчетУчета_ЦФ)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.СчетУчета КАК СчетДт,
	|
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.Субконто1 КАК СубконтоДт1,
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.Субконто2 КАК СубконтоДт2,
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.Субконто3 КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУКт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРКт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРКт,
	|	
	|	""Уменьшение стоимости"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДанныеДокумента.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И (Строки.СтоимостьЦФ <> 0 
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#КонецОбласти
	
	#Область Амортизация
	
	// АМОРТИЗАЦИЯ (УВЕЛИЧЕНИЕ НА СТАТЬЮ РАСХОДОВ)
	
	#Область УвеличениеАмортизации_Дт_СчетРасходов__Кт_СчетАмортизации
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Увеличение амортизации (Дт СчетРасходов :: Кт СчетАмортизации)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ВЫБОР КОГДА СтатьиСтроительства.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		Строки.КорАналитикаРасходов // Объект строительства
	|	ИНАЧЕ
	|		Строки.КорСтатьяРасходов
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		Строки.КорСтатьяРасходов
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|				ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|						ТОГДА ОбъектыСтроительства.СпособСтроительства
	|					ИНАЧЕ 
	|						ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) 
	|				КОНЕЦ
	|	ИНАЧЕ
	|		Строки.ОсновноеСредство
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУ КАК СуммаНУДт,
	|	Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	
	|	""Увеличение амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Строки.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И (Строки.Амортизация <> 0 
	|		ИЛИ Строки.АмортизацияРегл <> 0 
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УвеличениеАмортизацииЦФ_Дт_СчетРасходов__Кт_СчетАмортизации_ЦФ
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Увеличение амортизации (Дт СчетРасходов :: Кт СчетАмортизации_ЦФ)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ВЫБОР КОГДА СтатьиСтроительства.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		Строки.КорАналитикаРасходов // Объект строительства
	|	ИНАЧЕ
	|		Строки.КорСтатьяРасходов
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		Строки.КорСтатьяРасходов
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|				ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|						ТОГДА ОбъектыСтроительства.СпособСтроительства
	|					ИНАЧЕ 
	|						ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) 
	|				КОНЕЦ
	|	ИНАЧЕ
	|		Строки.ОсновноеСредство
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУДт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРДт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	
	|	""Увеличение амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Строки.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И (Строки.АмортизацияЦФ <> 0 
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	// АМОРТИЗАЦИЯ (УВЕЛИЧЕНИЕ НА СТАТЬЮ АКТИВОВ)
	
	#Область УвеличениеАмортизации_Дт_Счет__Кт_СчетАмортизации
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Увеличение амортизации (Дт Счет :: Кт СчетАмортизации)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.СчетУчета КАК СчетДт,
	|
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.Субконто1 КАК СубконтоДт1,
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.Субконто2 КАК СубконтоДт2,
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.Субконто3 КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУ КАК СуммаНУДт,
	|	Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	
	|	""Увеличение амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДанныеДокумента.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И (Строки.Амортизация <> 0 
	|		ИЛИ Строки.АмортизацияРегл <> 0 
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УвеличениеАмортизацииЦФ_Дт_Счет__Кт_СчетАмортизации_ЦФ
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Увеличение амортизации (Дт Счет :: Кт СчетАмортизации_ЦФ)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.СчетУчета КАК СчетДт,
	|
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.Субконто1 КАК СубконтоДт1,
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.Субконто2 КАК СубконтоДт2,
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.Субконто3 КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУДт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРДт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	
	|	""Увеличение амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДанныеДокумента.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И (Строки.АмортизацияЦФ <> 0 
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	// АМОРТИЗАЦИЯ (УМЕНЬШЕНИЕ НА СТАТЬЮ ДОХОДОВ)
	
	#Область УменьшениеАмортизации_Дт_СчетАмортизации__Кт_СчетДоходов
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Уменьшение амортизации (Дт СчетАмортизации :: Кт СчетДоходов)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУ КАК СуммаНУДт,
	|	Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	ДанныеДокумента.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ДанныеДокумента.СтатьяДоходов КАК СубконтоКт1,
	|	ДанныеДокумента.АналитикаДоходов КАК СубконтоКт2,
	|	Строки.ОсновноеСредство КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	
	|	""Уменьшение амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДанныеДокумента.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиДоходов
	|	И (Строки.Амортизация <> 0 
	|		ИЛИ Строки.АмортизацияРегл <> 0 
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УменьшениеАмортизацииЦФ_Дт_СчетАмортизации_ЦФ__Кт_СчетДоходов
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Уменьшение амортизации (Дт СчетАмортизации_ЦФ :: Кт СчетДоходов)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУДт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРДт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	ДанныеДокумента.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ДанныеДокумента.СтатьяДоходов КАК СубконтоКт1,
	|	ДанныеДокумента.АналитикаДоходов КАК СубконтоКт2,
	|	Строки.ОсновноеСредство КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	
	|	""Уменьшение амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДанныеДокумента.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиДоходов
	|	И (Строки.АмортизацияЦФ <> 0 
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	// АМОРТИЗАЦИЯ (УМЕНЬШЕНИЕ НА СТАТЬЮ ПАССИВОВ)
	
	#Область УменьшениеАмортизации_Дт_СчетАмортизации__Кт_Счет
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Уменьшение амортизации (Дт СчетАмортизации :: Кт Счет)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУ КАК СуммаНУДт,
	|	Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.СчетУчета КАК СчетКт,
	|
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.Субконто1 КАК СубконтоКт1,
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.Субконто2 КАК СубконтоКт2,
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.Субконто3 КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	
	|	""Уменьшение амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДанныеДокумента.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И (Строки.Амортизация <> 0 
	|		ИЛИ Строки.АмортизацияРегл <> 0 
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УменьшениеАмортизацииЦФ_Дт_СчетАмортизации_ЦФ__Кт_Счет
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Уменьшение амортизации (Дт СчетАмортизации_ЦФ :: Кт Счет)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУДт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРДт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.СчетУчета КАК СчетКт,
	|
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.Субконто1 КАК СубконтоКт1,
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.Субконто2 КАК СубконтоКт2,
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.Субконто3 КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	
	|	""Уменьшение амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДанныеДокумента.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И (Строки.АмортизацияЦФ <> 0 
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#КонецОбласти
	
	#Область ЗалоговаяСтоимость
	
	#Область УвеличениеЗалоговойСтоимости_Дт_СчетЗабалансовогоУчета
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Увеличение залоговой стоимости (Дт СчетЗабалансовогоУчета:: Кт ---)
	|ВЫБРАТЬ
	|
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.ЗалоговаяСтоимость КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗабалансовыйУчетВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.КорКонтрагент КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|
	|	""Увеличение залоговой стоимости"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ЗалоговаяСтоимость <> 0";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УменьшениеЗалоговойСтоимости_Кт_СчетЗабалансовогоУчета
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Уменьшение залоговой стоимости (Дт --- :: Кт СчетЗабалансовогоУчета)
	|ВЫБРАТЬ
	|
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.ЗалоговаяСтоимость КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗабалансовыйУчетВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	Строки.КорКонтрагент КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|
	|	""Уменьшение залоговой стоимости"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|		ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Строки.ЗалоговаяСтоимость <> 0";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#КонецОбласти
	
	#Область ЦелевыеСредства
	
	// ЦЕЛЕВЫЕ СРЕДСТВА (УМЕНЬШЕНИЕ НА СТАТЬЮ ДОХОДОВ)
	
	#Область УменьшениеЦФ_Дт_98__Кт_СчетДоходов
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Уменьшение целевых средств (Дт 98 :: Кт СчетДоходов)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьЦФ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	ДанныеДокумента.СтатьяДоходов КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ДанныеДокумента.СтатьяДоходов КАК СубконтоКт1,
	|	ДанныеДокумента.АналитикаДоходов КАК СубконтоКт2,
	|	Строки.ОсновноеСредство КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьЦФ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Уменьшение целевых средств в стоимости ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДанныеДокумента.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиДоходов
	|	И Строки.СтоимостьЦФ <> 0";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УменьшениеЦФ_Дт_98__Кт_Счет
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Уменьшение целевых средств (Дт 98 :: Кт Счет)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьЦФ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.СчетУчета КАК СчетКт,
	|
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.Субконто1 КАК СубконтоКт1,
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.Субконто2 КАК СубконтоКт2,
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов.Субконто3 КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьЦФ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Уменьшение целевых средств в стоимости ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДанныеДокумента.СтатьяДоходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И Строки.СтоимостьЦФ <> 0";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
		
	// ЦЕЛЕВЫЕ СРЕДСТВА (УВЕЛИЧЕНИЕ НА СТАТЬЮ РАСХОДОВ)
	
	#Область УвеличениеЦФ_Дт_СчетРасходов__Кт_98
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Увеличение ЦФ (Дт СчетРасходов :: Кт 98)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ВЫБОР КОГДА СтатьиСтроительства.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		Строки.КорАналитикаРасходов // Объект строительства
	|	ИНАЧЕ
	|		Строки.КорСтатьяРасходов
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		Строки.КорСтатьяРасходов
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|				ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|						ТОГДА ОбъектыСтроительства.СпособСтроительства
	|					ИНАЧЕ 
	|						ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) 
	|				КОНЕЦ
	|	ИНАЧЕ
	|		Строки.ОсновноеСредство
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьЦФ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьЦФ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Увеличение целевых средств в стоимости ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И Строки.СтоимостьЦФ <> 0";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	// ЦЕЛЕВЫЕ СРЕДСТВА (УВЕЛИЧЕНИЕ НА СТАТЬЮ АКТИВОВ)
	
	#Область УвеличениеЦФ_Дт_Счет__Кт_98
	ТекстЗапроса =	
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Увеличение ЦФ на статью активов (Дт Счет :: Кт 98)
	|ВЫБРАТЬ 
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.СчетУчета КАК СчетДт,
	|
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.Субконто1 КАК СубконтоДт1,
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.Субконто2 КАК СубконтоДт2,
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов.Субконто3 КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьЦФ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьЦФ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Увеличение целевых средств в стоимости ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДанныеДокумента.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И Строки.СтоимостьЦФ <> 0";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти

#Область ФормаДокумента

Процедура ПриВыполненииКоманды(ИмяКоманды, Форма) Экспорт
	
	//++ Локализация
	
	Объект = Форма.Объект; // ДокументОбъект.КорректировкаСтоимостиИАмортизацииОС
	
	Если ИмяКоманды = Форма.Команды.ЗаполнитьПараметрыНУ.Имя Тогда
		
		Документы.КорректировкаСтоимостиИАмортизацииОС.ЗаполнитьПараметрыПоУмолчанию(Форма.Объект, "НУ");
		НачатьРасчетАмортизацииПоЗаданнымПараметрам(Объект, "НУ");
	
	ИначеЕсли ИмяКоманды = Форма.Команды.РассчитатьАмортизациюНУ.Имя Тогда
		
		НачатьРасчетАмортизацииПоЗаданнымПараметрам(Объект, "НУ");
	
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
// 	Объект - ДокументОбъект.КорректировкаСтоимостиИАмортизацииОС
// 	РазделУчета - Строка, Неопределено -
Процедура НачатьРасчетАмортизацииПоЗаданнымПараметрам(Объект, РазделУчета = Неопределено) Экспорт
	
	//++ Локализация
	
	Если РазделУчета <> Неопределено Тогда
		СписокРазделовУчета = СтрРазделить(РазделУчета, ",");
	Иначе
		СписокРазделовУчета = Новый Массив;
		СписокРазделовУчета.Добавить("НУ");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.НачалоПериода)
		ИЛИ СписокРазделовУчета.Найти("НУ") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РассчитатьАмортизациюПоЗаданнымПараметрамНУ(Объект);
	
	//-- Локализация

КонецПроцедуры

// 
// Параметры:
// 	Объект - ДокументОбъект.КорректировкаСтоимостиИАмортизацииОС
// 	РазделУчета - Строка, Неопределено -
Процедура ЗаполнитьПараметрыПоУмолчанию(Объект, РазделУчета = Неопределено) Экспорт
	
	//++ Локализация
	
	Если РазделУчета <> Неопределено Тогда
		СписокРазделовУчета = СтрРазделить(РазделУчета, ",");
	Иначе
		СписокРазделовУчета = Новый Массив;
		СписокРазделовУчета.Добавить("НУ");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.НачалоПериода)
		ИЛИ СписокРазделовУчета.Найти("НУ") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПараметрыЗаПериодНУ(Объект);
	
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
// 	Объект - ДокументОбъект.КорректировкаСтоимостиИАмортизацииОС
// 	Параметры - Структура -
// 
// Возвращаемое значение:
//  Булево - Истина, если параметры заполнены
Функция ЗаполнитьПараметрыЗаПериодБУ(Объект, Параметры) Экспорт
	
	ПараметрыЗаполнены = Ложь;
	
	//++ Локализация
	
	ПараметрыЗаполнены = Истина;
	
	ПрименяетсяФСБУ6 = НастройкиНалоговУчетныхПолитикПовтИсп.ПрименяетсяФСБУ6(Параметры.Организация, КонецМесяца(Параметры.ДатаДокумента));
		
	СписокЗапросов = Новый Массив;
	
	#Область ПервоначальныеСведенияОС_Записи
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК ЭтоИзменения,
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ДанныеРегистра.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ
	|
	|ПОМЕСТИТЬ ПервоначальныеСведенияОС_Записи
	|
	|ИЗ
	|	ПервоначальныеСведенияОС_СрезПоследнихСУчетомИсправлений КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	(&ПорядокНачисленияАмортизацииРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуУзловКомпонентовАмортизации
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4) КАК ЭтоИзменения,
	|
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ДанныеРегистра.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ
	|ИЗ
	|	ПервоначальныеСведенияОС_ЗаписиСУчетомИсправлений КАК ДанныеРегистра
	|ГДЕ
	|	&РеглУчетВНАВедетсяНезависимо
	|	И ДанныеРегистра.Период МЕЖДУ &НачалоПериода И &КонецПериодаРегл
	|	И ДанныеРегистра.ОсновноеСредство = &ОсновноеСредство";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаОС_Записи_БУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК ЭтоИзменения,
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ПоказательНаработки КАК ПоказательНаработки,
	|	ДанныеРегистра.ОбъемНаработки КАК ОбъемНаработки
	|
	|ПОМЕСТИТЬ ПорядокУчетаОС_Записи_БУ
	|
	|ИЗ
	|	ПорядокУчетаОС_СрезПоследнихСУчетомИсправлений КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	(&ПорядокНачисленияАмортизацииРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуУзловКомпонентовАмортизации
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4) КАК ЭтоИзменения,
	|
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ПоказательНаработки КАК ПоказательНаработки,
	|	ДанныеРегистра.ОбъемНаработки КАК ОбъемНаработки
	|ИЗ
	|	ПорядокУчетаОС_ЗаписиСУчетомИсправлений КАК ДанныеРегистра
	|ГДЕ
	|	&РеглУчетВНАВедетсяНезависимо
	|	И ДанныеРегистра.Период МЕЖДУ &НачалоПериода И &КонецПериодаРегл
	|	И ДанныеРегистра.ОсновноеСредство = &ОсновноеСредство";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаОСБУ_Записи
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК ЭтоИзменения,
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ
	|
	|ПОМЕСТИТЬ ПорядокУчетаОСБУ_Записи
	|
	|ИЗ
	|	ПорядокУчетаОСБУ_СрезПоследнихСУчетомИсправлений КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	(&ПорядокНачисленияАмортизацииРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуУзловКомпонентовАмортизации
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4) КАК ЭтоИзменения,
	|
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ
	|ИЗ
	|	ПорядокУчетаОСБУ_ЗаписиСУчетомИсправлений КАК ДанныеРегистра
	|ГДЕ
	|	&РеглУчетВНАВедетсяНезависимо
	|	И ДанныеРегистра.Период МЕЖДУ &НачалоПериода И &КонецПериодаРегл
	|	И ДанныеРегистра.ОсновноеСредство = &ОсновноеСредство";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПараметрыАмортизацииОСБУ_Записи
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК ЭтоИзменения,
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ДанныеРегистра.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ДанныеРегистра.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ДанныеРегистра.КоэффициентАмортизацииБУ КАК КоэффициентАмортизацииБУ,
	|	ДанныеРегистра.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации,
	|	ДанныеРегистра.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ДанныеРегистра.ГрафикАмортизации КАК ГрафикАмортизации,
	|	ДанныеРегистра.СтоимостьДляВычисленияАмортизацииЦФ КАК СтоимостьДляВычисленияАмортизацииЦФ,
	|	ДанныеРегистра.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость
	|
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСБУ_Записи
	|
	|ИЗ
	|	ПараметрыАмортизацииОСБУ_СрезПоследнихСУчетомИсправлений КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	(&ПорядокНачисленияАмортизацииРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуУзловКомпонентовАмортизации
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4) КАК ЭтоИзменения,
	|
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ДанныеРегистра.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ДанныеРегистра.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ДанныеРегистра.КоэффициентАмортизацииБУ КАК КоэффициентАмортизацииБУ,
	|	ДанныеРегистра.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации,
	|	ДанныеРегистра.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ДанныеРегистра.ГрафикАмортизации КАК ГрафикАмортизации,
	|	ДанныеРегистра.СтоимостьДляВычисленияАмортизацииЦФ КАК СтоимостьДляВычисленияАмортизацииЦФ,
	|	ДанныеРегистра.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость
	|
	|ИЗ
	|	ПараметрыАмортизацииОСБУ_ЗаписиСУчетомИсправлений КАК ДанныеРегистра
	|ГДЕ
	|	&РеглУчетВНАВедетсяНезависимо
	|	И ДанныеРегистра.Период МЕЖДУ &НачалоПериода И &КонецПериодаРегл
	|	И ДанныеРегистра.ОсновноеСредство = &ОсновноеСредство";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ТаблицаДатБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтандартныеДаты.Дата КАК Дата,
	|
	|	ВЫБОР 
	|		КОГДА &ПорядокНачисленияАмортизацииРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|			ТОГДА СтандартныеДаты.Дата
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(СтандартныеДаты.Дата, МЕСЯЦ), СЕКУНДА, -1)
	|	КОНЕЦ КАК ДатаПараметров
	|
	|ПОМЕСТИТЬ ТаблицаИзмененийБУ
	|
	|ИЗ
	|	СтандартныеДаты КАК СтандартныеДаты
	|ГДЕ
	|	&РеглУчетВНАВедетсяНезависимо
	|	И СтандартныеДаты.Дата <= &КонецПериодаРегл
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК Дата,
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК ДатаПараметров
	|ИЗ
	|	ПервоначальныеСведенияОС_Записи КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.ЭтоИзменения
	|	И НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) <> НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК Дата,
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК ДатаПараметров
	|ИЗ
	|	ПорядокУчетаОСБУ_Записи КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.ЭтоИзменения
	|	И НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) <> НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК Дата,
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК ДатаПараметров
	|ИЗ
	|	ПараметрыАмортизацииОСБУ_Записи КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.ЭтоИзменения
	|	И НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) <> НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК Дата,
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК ДатаПараметров
	|ИЗ
	|	ПорядокУчетаОС_Записи_БУ КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.ЭтоИзменения
	|	И НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) <> НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ДанныеРегистраРегистраторЗаписи.ДатаПараметров КАК ДатаПараметров,
	|	МестонахождениеОС_Записи.Организация КАК Организация
	|
	|ПОМЕСТИТЬ ТаблицаДатБУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.ДатаПараметров КАК ДатаПараметров,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаИзменений.Дата КАК Дата,
	|			ТаблицаИзменений.ДатаПараметров КАК ДатаПараметров,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаИзмененийБУ КАК ТаблицаИзменений
	|				ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= ТаблицаИзменений.ДатаПараметров
	|				
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаИзменений.Дата,
	|			ТаблицаИзменений.ДатаПараметров
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|				
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи,
	|		ДанныеРегистраПериодЗаписи.ДатаПараметров
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК МестонахождениеОС_Записи
	|	ПО МестонахождениеОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И МестонахождениеОС_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область МестонахождениеОСБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ДанныеРегистраРегистраторЗаписи.ДатаПараметров КАК ДатаПараметров,
	|	МестонахождениеОС_Записи.Организация КАК Организация
	|
	|ПОМЕСТИТЬ МестонахождениеОСБУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.ДатаПараметров КАК ДатаПараметров,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДатБУ.Дата КАК Дата,
	|			ТаблицаДатБУ.ДатаПараметров КАК ДатаПараметров,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаДатБУ КАК ТаблицаДатБУ
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= ТаблицаДатБУ.ДатаПараметров
	|				
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДатБУ.Дата,
	|			ТаблицаДатБУ.ДатаПараметров
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|				
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи,
	|		ДанныеРегистраПериодЗаписи.ДатаПараметров
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК МестонахождениеОС_Записи
	|	ПО МестонахождениеОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И МестонахождениеОС_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПервоначальныеСведенияОС
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ПервоначальныеСведенияОС_Записи.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведенияОС_Записи.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ
	|
	|ПОМЕСТИТЬ ПервоначальныеСведенияОС
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.Организация КАК Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МестонахождениеОСБУ.Дата КАК Дата,
	|			МестонахождениеОСБУ.Организация КАК Организация,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			МестонахождениеОСБУ КАК МестонахождениеОСБУ
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= МестонахождениеОСБУ.ДатаПараметров
	|					И ДанныеРегистраПериодЗаписи.Организация = МестонахождениеОСБУ.Организация
	|				
	|		СГРУППИРОВАТЬ ПО
	|			МестонахождениеОСБУ.Дата,
	|			МестонахождениеОСБУ.Организация
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.Организация = ДанныеРегистраПериодЗаписи.Организация
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи,
	|		ДанныеРегистраПериодЗаписи.Организация
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС_Записи КАК ПервоначальныеСведенияОС_Записи
	|	ПО ПервоначальныеСведенияОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ПервоначальныеСведенияОС_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи
	|		И ПервоначальныеСведенияОС_Записи.Организация = ДанныеРегистраРегистраторЗаписи.Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаОСБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ПорядокУчетаОСБУ_Записи.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ
	|
	|ПОМЕСТИТЬ ПорядокУчетаОСБУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.Организация КАК Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МестонахождениеОСБУ.Дата КАК Дата,
	|			МестонахождениеОСБУ.Организация КАК Организация,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			МестонахождениеОСБУ КАК МестонахождениеОСБУ
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= МестонахождениеОСБУ.ДатаПараметров
	|					И ДанныеРегистраПериодЗаписи.Организация = МестонахождениеОСБУ.Организация
	|				
	|		СГРУППИРОВАТЬ ПО
	|			МестонахождениеОСБУ.Дата,
	|			МестонахождениеОСБУ.Организация
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.Организация = ДанныеРегистраПериодЗаписи.Организация
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи,
	|		ДанныеРегистраПериодЗаписи.Организация
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ_Записи КАК ПорядокУчетаОСБУ_Записи
	|	ПО ПорядокУчетаОСБУ_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ПорядокУчетаОСБУ_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи
	|		И ПорядокУчетаОСБУ_Записи.Организация = ДанныеРегистраРегистраторЗаписи.Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПараметрыАмортизацииОСБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ПараметрыАмортизацииОСБУ_Записи.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ПараметрыАмортизацииОСБУ_Записи.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ_Записи.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ_Записи.КоэффициентАмортизацииБУ КАК КоэффициентАмортизацииБУ,
	|	ПараметрыАмортизацииОСБУ_Записи.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ_Записи.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ_Записи.ГрафикАмортизации КАК ГрафикАмортизации,
	|	ПараметрыАмортизацииОСБУ_Записи.СтоимостьДляВычисленияАмортизацииЦФ КАК СтоимостьДляВычисленияАмортизацииЦФ,
	|	ПараметрыАмортизацииОСБУ_Записи.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость
	|
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСБУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.Организация КАК Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МестонахождениеОСБУ.Дата КАК Дата,
	|			МестонахождениеОСБУ.Организация КАК Организация,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			МестонахождениеОСБУ КАК МестонахождениеОСБУ
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУ_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= МестонахождениеОСБУ.ДатаПараметров
	|					И ДанныеРегистраПериодЗаписи.Организация = МестонахождениеОСБУ.Организация
	|				
	|		СГРУППИРОВАТЬ ПО
	|			МестонахождениеОСБУ.Дата,
	|			МестонахождениеОСБУ.Организация
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУ_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.Организация = ДанныеРегистраПериодЗаписи.Организация
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи,
	|		ДанныеРегистраПериодЗаписи.Организация
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУ_Записи КАК ПараметрыАмортизацииОСБУ_Записи
	|	ПО ПараметрыАмортизацииОСБУ_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ПараметрыАмортизацииОСБУ_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи
	|		И ПараметрыАмортизацииОСБУ_Записи.Организация = ДанныеРегистраРегистраторЗаписи.Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаОС_БУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ПорядокУчетаОС_Записи_БУ.ПоказательНаработки КАК ПоказательНаработки,
	|	ПорядокУчетаОС_Записи_БУ.ОбъемНаработки КАК ОбъемНаработки
	|
	|ПОМЕСТИТЬ ПорядокУчетаОС_БУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДатБУ.Дата КАК Дата,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаДатБУ КАК ТаблицаДатБУ
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОС_Записи_БУ КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= ТаблицаДатБУ.ДатаПараметров
	|				
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДатБУ.Дата
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОС_Записи_БУ КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОС_Записи_БУ КАК ПорядокУчетаОС_Записи_БУ
	|	ПО ПорядокУчетаОС_Записи_БУ.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ПорядокУчетаОС_Записи_БУ.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВыработкаБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ВыработкаОС_Записи.ПоказательНаработки КАК ПоказательНаработки,
	|	ВыработкаОС_Записи.ОбъемВыработки КАК ОбъемВыработки
	|
	|ПОМЕСТИТЬ ВыработкаОС_НаНачалоМесяцаБУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.ПоказательНаработки КАК ПоказательНаработки,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДатБУ.Дата КАК Дата,
	|			ДанныеРегистраПериодЗаписи.ПоказательНаработки КАК ПоказательНаработки,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаДатБУ КАК ТаблицаДатБУ
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыработкаОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период < НАЧАЛОПЕРИОДА(ТаблицаДатБУ.Дата, МЕСЯЦ)
	|				
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДатБУ.Дата,
	|			ДанныеРегистраПериодЗаписи.ПоказательНаработки
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыработкаОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.ПоказательНаработки = ДанныеРегистраПериодЗаписи.ПоказательНаработки
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПоказательНаработки
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыработкаОС_Записи КАК ВыработкаОС_Записи
	|	ПО ВыработкаОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ВыработкаОС_Записи.ПоказательНаработки = ДанныеРегистраРегистраторЗаписи.ПоказательНаработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ДанныеРегистраРегистраторЗаписи.ПоказательНаработки КАК ПоказательНаработки,
	|	ВыработкаОС_Записи.ОбъемВыработки КАК ОбъемВыработки
	|
	|ПОМЕСТИТЬ ВыработкаОС_НаКонецМесяцаБУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.ПоказательНаработки КАК ПоказательНаработки,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДатБУ.Дата КАК Дата,
	|			ДанныеРегистраПериодЗаписи.ПоказательНаработки КАК ПоказательНаработки,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаДатБУ КАК ТаблицаДатБУ
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыработкаОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= КОНЕЦПЕРИОДА(ТаблицаДатБУ.Дата, МЕСЯЦ)
	|			
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДатБУ.Дата,
	|			ДанныеРегистраПериодЗаписи.ПоказательНаработки
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыработкаОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.ПоказательНаработки = ДанныеРегистраПериодЗаписи.ПоказательНаработки
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПоказательНаработки
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыработкаОС_Записи КАК ВыработкаОС_Записи
	|	ПО ВыработкаОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ВыработкаОС_Записи.ПоказательНаработки = ДанныеРегистраРегистраторЗаписи.ПоказательНаработки";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СтоимостьОСБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	СтоимостьОС_Записи.Стоимость КАК Стоимость,
	|	СтоимостьОС_Записи.СтоимостьРегл КАК СтоимостьРегл,
	|	СтоимостьОС_Записи.СтоимостьНУ КАК СтоимостьНУ,
	|	СтоимостьОС_Записи.СтоимостьПР КАК СтоимостьПР,
	|	СтоимостьОС_Записи.СтоимостьЦФ КАК СтоимостьЦФ,
	|	СтоимостьОС_Записи.СтоимостьПРЦФ КАК СтоимостьПРЦФ
	|
	|ПОМЕСТИТЬ СтоимостьОСБУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.Организация КАК Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДатБУ.Дата КАК Дата,
	|			ТаблицаДатБУ.Организация КАК Организация,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаДатБУ КАК ТаблицаДатБУ
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтоимостьОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= ТаблицаДатБУ.ДатаПараметров
	|					И ДанныеРегистраПериодЗаписи.Организация = ТаблицаДатБУ.Организация
	|				
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДатБУ.Дата,
	|			ТаблицаДатБУ.Организация
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтоимостьОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.Организация = ДанныеРегистраПериодЗаписи.Организация
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтоимостьОС_Записи КАК СтоимостьОС_Записи
	|	ПО СтоимостьОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И СтоимостьОС_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи
	|		И СтоимостьОС_Записи.Организация = ДанныеРегистраРегистраторЗаписи.Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СтоимостьНаНачалоГода
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтоимостьОС.СтоимостьОстаток КАК Стоимость,
	|	СтоимостьОС.СтоимостьРеглОстаток КАК СтоимостьРегл
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.Остатки(&КонецПредыдущегоГодаГраница, ОсновноеСредство = &ОсновноеСредство) КАК СтоимостьОС";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область АмортизацияНаНачалоГода
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	-АмортизацияОС.АмортизацияРеглОстаток КАК АмортизацияРегл
	|ИЗ
	|	РегистрНакопления.АмортизацияОС.Остатки(&КонецПредыдущегоГодаГраница, ОсновноеСредство = &ОсновноеСредство) КАК АмортизацияОС";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область АмортизацияНаНачалоПериода
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	-АмортизацияОС.АмортизацияРеглОстаток КАК АмортизацияРегл,
	|	-АмортизацияОС.АмортизацияПРОстаток КАК АмортизацияПР,
	|	-АмортизацияОС.АмортизацияЦФОстаток КАК АмортизацияЦФ,
	|	-АмортизацияОС.АмортизацияПРЦФОстаток КАК АмортизацияПРЦФ
	|ИЗ
	|	РегистрНакопления.АмортизацияОС.Остатки(&КонецПредыдущегоМесяцаГраница, ОсновноеСредство = &ОсновноеСредство) КАК АмортизацияОС";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ДатаВводаВЭксплуатациюБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&Дата,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация = &Организация
	|				И ОсновноеСредство = &ОсновноеСредство) КАК ПервоначальныеСведенияОС";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВыборкаПараметровБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ТаблицаДатБУ.Дата, ДЕНЬ) КАК Дата,
	|
	|	ЕСТЬNULL(СтоимостьОСБУ.СтоимостьРегл, ЕСТЬNULL(ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ, 0)) КАК СтоимостьБУ,
	|	ЕСТЬNULL(СтоимостьОСБУ.СтоимостьПР, 0) КАК СтоимостьПР,
	|	ЕСТЬNULL(СтоимостьОСБУ.СтоимостьЦФ, 0) КАК СтоимостьЦФ,
	|	ЕСТЬNULL(СтоимостьОСБУ.СтоимостьПРЦФ, 0) КАК СтоимостьПРЦФ,
	|
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ГрафикАмортизации, ЗНАЧЕНИЕ(Справочник.ГодовыеГрафикиАмортизацииОС.ПустаяСсылка)) КАК ГрафикАмортизации,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.КоэффициентАмортизацииБУ, 0) КАК ГодоваяНормаАмортизацииБУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.КоэффициентУскорения, 0) КАК КоэффициентУскоренияБУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ЛиквидационнаяСтоимость, 0) КАК ЛиквидационнаяСтоимость,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ, ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПустаяСсылка)) КАК МетодНачисленияАмортизацииБУ,
	|
	|	ЕСТЬNULL(ПорядокУчетаОСБУ.НачислятьАмортизациюБУ, ЛОЖЬ) КАК НачислятьАмортизациюБУ,
	|
	|	ЕСТЬNULL(ВыработкаОС_НаКонецМесяцаБУ.ОбъемВыработки, 0)
	|		-ЕСТЬNULL(ВыработкаОС_НаНачалоМесяцаБУ.ОбъемВыработки, 0) КАК ОбъемВыработки,
	|
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ОбъемПродукцииРаботДляВычисленияАмортизации, 0) КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|
	|	ЕСТЬNULL(ПорядокУчетаОС.ПоказательНаработки, ЗНАЧЕНИЕ(Справочник.ПоказателиНаработки.ПустаяСсылка)) КАК ПоказательНаработки,
	|
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ПРДляВычисленияАмортизации, 0) КАК ПРДляВычисленияАмортизации,
	|	
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизации, 0) КАК СрокИспользованияДляВычисленияАмортизации,
	|
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СтоимостьДляВычисленияАмортизации, 0) КАК СтоимостьДляВычисленияАмортизацииБУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СтоимостьДляВычисленияАмортизацииЦФ, 0) КАК СтоимостьДляВычисленияАмортизацииЦФ
	|
	|ИЗ
	|	ТаблицаДатБУ КАК ТаблицаДатБУ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО ПервоначальныеСведенияОС.Дата = ТаблицаДатБУ.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО ПорядокУчетаОСБУ.Дата = ТаблицаДатБУ.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ
	|		ПО ПараметрыАмортизацииОСБУ.Дата = ТаблицаДатБУ.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС_БУ КАК ПорядокУчетаОС
	|		ПО ПорядокУчетаОС.Дата = ТаблицаДатБУ.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьОСБУ КАК СтоимостьОСБУ
	|		ПО СтоимостьОСБУ.Дата = ТаблицаДатБУ.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыработкаОС_НаНачалоМесяцаБУ КАК ВыработкаОС_НаНачалоМесяцаБУ
	|		ПО ВыработкаОС_НаНачалоМесяцаБУ.Дата = ПорядокУчетаОС.Дата
	|			И ВыработкаОС_НаНачалоМесяцаБУ.ПоказательНаработки = ПорядокУчетаОС.ПоказательНаработки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыработкаОС_НаКонецМесяцаБУ КАК ВыработкаОС_НаКонецМесяцаБУ
	|		ПО ВыработкаОС_НаКонецМесяцаБУ.Дата = ПорядокУчетаОС.Дата
	|			И ВыработкаОС_НаКонецМесяцаБУ.ПоказательНаработки = ПорядокУчетаОС.ПоказательНаработки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = Параметры.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Дата", Параметры.ДатаДокумента);
	Запрос.УстановитьПараметр("Организация", Параметры.Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", Параметры.ОсновноеСредство);
	Запрос.УстановитьПараметр("НачалоПериода", Параметры.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", Параметры.КонецПериода);
	Запрос.УстановитьПараметр("КонецПериодаУпр", Параметры.КонецПериодаУпр);
	Запрос.УстановитьПараметр("КонецПериодаРегл", Параметры.КонецПериодаРегл);
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяца", Параметры.НачалоПериода-1);
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяцаГраница", Новый Граница(Параметры.НачалоПериода-1, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПредыдущегоГодаГраница", Новый Граница(НачалоГода(Параметры.НачалоПериода)-1, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПоСтандартамМУ", ПрименяетсяФСБУ6);
	Запрос.УстановитьПараметр("ПорядокНачисленияАмортизацииРегл", Параметры.ПорядокНачисленияАмортизацииРегл);
	Запрос.УстановитьПараметр("РеглУчетВНАВедетсяНезависимо", Истина);
	Запрос.УстановитьПараметр("ПериодСреза", Параметры.ПериодСреза);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Выборка = Результат[Результат.ВГраница()-4].Выбрать();
	Если Выборка.Следующий() Тогда
		Объект.СтоимостьРеглНаНачалоГода = Выборка.СтоимостьРегл;
	Иначе
		Объект.СтоимостьРеглНаНачалоГода = 0;
	КонецЕсли;

	Выборка = Результат[Результат.ВГраница()-3].Выбрать();
	Если Выборка.Следующий() Тогда
		Объект.АмортизацияРеглНаНачалоГода = Выборка.АмортизацияРегл;
	Иначе
		Объект.АмортизацияРеглНаНачалоГода = 0;
	КонецЕсли;

	Выборка = Результат[Результат.ВГраница()-2].Выбрать();
	Если Выборка.Следующий() Тогда
		
		Объект.АмортизацияРеглНаНачалоПериода = Выборка.АмортизацияРегл;
		Объект.АмортизацияПРНаНачалоПериода = Выборка.АмортизацияПР;
		Объект.АмортизацияЦФНаНачалоПериода = Выборка.АмортизацияЦФ;
		Объект.АмортизацияПРЦФНаНачалоПериода = Выборка.АмортизацияПРЦФ;
		
	Иначе
		
		Объект.АмортизацияРеглНаНачалоПериода = 0;
		Объект.АмортизацияПРНаНачалоПериода = 0;
		Объект.АмортизацияЦФНаНачалоПериода = 0;
		Объект.АмортизацияПРЦФНаНачалоПериода = 0;
		
	КонецЕсли;
	
	Выборка = Результат[Результат.ВГраница()-1].Выбрать();
	Если Выборка.Следующий() Тогда
		
		Объект.ДатаВводаВЭксплуатациюБУ = Выборка.ДатаВводаВЭксплуатациюБУ;
		
	КонецЕсли;
	
	ВыборкаПоДатам = Результат[Результат.ВГраница()].Выбрать();
	Пока ВыборкаПоДатам.Следующий() Цикл
	
		СтрокаПараметры = Объект.ПараметрыЗаПериодБУ.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПараметры, ВыборкаПоДатам);
		
	КонецЦикла;
	
	//-- Локализация
	
	Возврат ПараметрыЗаполнены;
	
КонецФункции

// 
// Возвращаемое значение:
//  Булево - Истина, если амортизация рассчитана.
Функция НачатьРасчетАмортизацииПоЗаданнымПараметрамБУ(Объект, СлужебныеПараметрыФормы) Экспорт
	
	АмортизацияРассчитана = Ложь;
	
	//++ Локализация
	
	АмортизацияРассчитана = Истина;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПараметрыЗаПериод.Дата КАК Период,
	|	ПараметрыЗаПериод.НеРассчитыватьАмортизациюБУ КАК НеРассчитыватьАмортизациюБУ,
	|
	|	ПараметрыЗаПериод.АмортизацияБУ КАК АмортизацияБУ,
	|	ПараметрыЗаПериод.АмортизацияПР КАК АмортизацияПР,
	|	ПараметрыЗаПериод.АмортизацияЦФ КАК АмортизацияЦФ,
	|
	|	ПараметрыЗаПериод.АмортизацияРеглИзменение КАК АмортизацияРеглИзменение,
	|	ПараметрыЗаПериод.АмортизацияПРИзменение КАК АмортизацияПРИзменение,
	|	ПараметрыЗаПериод.АмортизацияЦФИзменение КАК АмортизацияЦФИзменение,
	|	ПараметрыЗаПериод.АмортизацияПРЦФИзменение КАК АмортизацияПРЦФИзменение,
	|
	|	ПараметрыЗаПериод.СтоимостьБУ КАК СтоимостьБУ,
	|	ПараметрыЗаПериод.СтоимостьПР КАК СтоимостьПР,
	|	ПараметрыЗаПериод.СтоимостьЦФ КАК СтоимостьЦФ,
	|	ПараметрыЗаПериод.СтоимостьПРЦФ КАК СтоимостьПРЦФ,
	|
	|	ПараметрыЗаПериод.ГрафикАмортизации КАК ГрафикАмортизации,
	|	ПараметрыЗаПериод.ГодоваяНормаАмортизацииБУ КАК КоэффициентАмортизацииБУ,
	|	ПараметрыЗаПериод.КоэффициентУскоренияБУ КАК КоэффициентУскоренияБУ,
	|	ПараметрыЗаПериод.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ПараметрыЗаПериод.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ,
	|	ПараметрыЗаПериод.ОбъемВыработки КАК ОбъемВыработки,
	|	ПараметрыЗаПериод.ОбъемВыработкиНаНачалоМесяца КАК ОбъемВыработкиНаНачалоМесяца,
	|	ПараметрыЗаПериод.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыЗаПериод.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации,
	|	ПараметрыЗаПериод.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыЗаПериод.СтоимостьДляВычисленияАмортизацииБУ КАК СтоимостьДляВычисленияАмортизации,
	|	ПараметрыЗаПериод.СтоимостьДляВычисленияАмортизацииЦФ КАК СтоимостьДляВычисленияАмортизацииЦФ,
	|	ПараметрыЗаПериод.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|
	|	&ЭтоАрендованныеОС КАК ЭтоАрендованныеОС,
	|	&Организация КАК Организация,
	|	&ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
	|	&ДатаВводаВЭксплуатациюБУ КАК ДатаПоследнегоИзменения,
	|	&СтоимостьРеглНаНачалоГода КАК СтоимостьНаНачалоГода,
	|	&АмортизацияРеглНаНачалоГода КАК АмортизацияНаНачалоГода,
	|	&АмортизацияРеглНаНачалоПериода КАК АмортизацияРеглНаНачалоПериода,
	|	&АмортизацияПРНаНачалоПериода КАК АмортизацияПРНаНачалоПериода,
	|	&АмортизацияЦФНаНачалоПериода КАК АмортизацияЦФНаНачалоПериода,
	|	&АмортизацияПРЦФНаНачалоПериода КАК АмортизацияПРЦФНаНачалоПериода
	|
	|ПОМЕСТИТЬ ЗначенияПараметров
	|
	|ИЗ
	|	&ПараметрыЗаПериодБУ КАК ПараметрыЗаПериод";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПараметрыЗаПериодБУ", Объект.ПараметрыЗаПериодБУ.Выгрузить());
	Запрос.УстановитьПараметр("ПараметрыЗаПериодНУ", Объект.ПараметрыЗаПериодНУ.Выгрузить());
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ДатаВводаВЭксплуатациюБУ", Объект.ДатаВводаВЭксплуатациюБУ);
	Запрос.УстановитьПараметр("ДатаВводаВЭксплуатациюНУ", Объект.ДатаВводаВЭксплуатациюНУ);
	Запрос.УстановитьПараметр("СтоимостьРеглНаНачалоГода", Объект.СтоимостьРеглНаНачалоГода);
	Запрос.УстановитьПараметр("АмортизацияРеглНаНачалоГода", Объект.АмортизацияРеглНаНачалоГода);
	Запрос.УстановитьПараметр("АмортизацияРеглНаНачалоПериода", Объект.АмортизацияРеглНаНачалоПериода);
	Запрос.УстановитьПараметр("АмортизацияНУНаНачалоПериода", Объект.АмортизацияНУНаНачалоПериода);
	Запрос.УстановитьПараметр("АмортизацияПРНаНачалоПериода", Объект.АмортизацияПРНаНачалоПериода);
	Запрос.УстановитьПараметр("АмортизацияЦФНаНачалоПериода", Объект.АмортизацияЦФНаНачалоПериода);
	Запрос.УстановитьПараметр("АмортизацияПРЦФНаНачалоПериода", Объект.АмортизацияПРЦФНаНачалоПериода);
	Запрос.УстановитьПараметр("АмортизацияДо2009", Объект.АмортизацияДо2009);
	Запрос.УстановитьПараметр("ФактическийСрокИспользованияДо2009", Объект.ФактическийСрокИспользованияДо2009);
	Запрос.УстановитьПараметр("ЭтоАрендованныеОС", СлужебныеПараметрыФормы.ЭтоАрендованныеОС);

	Запрос.Выполнить();
		
	РезультатРасчетаБУ = РассчитатьАмортизациюПоЗаданнымПараметрамБУ(
		Объект.НачалоПериода, НачалоМесяца(Объект.Дата)-1, МенеджерВременныхТаблиц);
		
	Для Каждого СтрокаПараметры Из Объект.ПараметрыЗаПериодБУ Цикл
		
		СтрокаАмортизация = РезультатРасчетаБУ.Найти(СтрокаПараметры.Дата, "Период");
		
		Если СтрокаАмортизация <> Неопределено Тогда
			СтрокаПараметры.АмортизацияБУ = СтрокаАмортизация.АмортизацияБУ;
			СтрокаПараметры.АмортизацияПР = СтрокаАмортизация.АмортизацияПР;
			СтрокаПараметры.АмортизацияЦФ = СтрокаАмортизация.АмортизацияЦФ;
		Иначе
			СтрокаПараметры.АмортизацияБУ = 0;
			СтрокаПараметры.АмортизацияПР = 0;
			СтрокаПараметры.АмортизацияЦФ = 0;
		КонецЕсли;
		
	КонецЦикла;
	
	//-- Локализация
	
	Возврат АмортизацияРассчитана;
	
КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.КорректировкаСтоимостиИАмортизацииОС -
//  Запрос - Запрос -
Процедура УстановитьПараметрыРасчетаАмортизации(Объект, Запрос) Экспорт

	//++ Локализация
	Запрос.УстановитьПараметр("ДатаВводаВЭксплуатациюНУ", Объект.ДатаВводаВЭксплуатациюНУ);
	Запрос.УстановитьПараметр("АмортизацияНУНаНачалоПериода", Объект.АмортизацияНУНаНачалоПериода);
	Запрос.УстановитьПараметр("АмортизацияПРНаНачалоПериода", Объект.АмортизацияПРНаНачалоПериода);
	Запрос.УстановитьПараметр("АмортизацияЦФНаНачалоПериода", Объект.АмортизацияЦФНаНачалоПериода);
	Запрос.УстановитьПараметр("АмортизацияПРЦФНаНачалоПериода", Объект.АмортизацияПРЦФНаНачалоПериода);
	Запрос.УстановитьПараметр("АмортизацияДо2009", Объект.АмортизацияДо2009);
	Запрос.УстановитьПараметр("ФактическийСрокИспользованияДо2009", Объект.ФактическийСрокИспользованияДо2009);
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

//++ Локализация

#Область Локализация

Процедура ЗаполнитьНаОснованииПоступленияАрендованныхОС(Объект, Основание, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Объект.ДокументОснование = Основание;
	Объект.ВидИмущества = Перечисления.ВидыИмущества.Арендованное;
	Объект.ОтражатьВРеглУчете = Истина;
	Объект.ОтражатьВУпрУчете = Ложь;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	Документ.ПоступлениеАрендованныхОС.ОС КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Основание
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.НомерСтроки";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Основание", Основание);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Объект.ОС.Загрузить(РезультатЗапроса.Выгрузить());
		
		ПервоначальныеСведения = Справочники.ОбъектыЭксплуатации.ПервоначальныеСведения(Объект.ОС[0].ОсновноеСредство);
		Объект.Организация = ПервоначальныеСведения.Организация;
		Объект.Подразделение = ПервоначальныеСведения.Местонахождение;
		
		Документы.КорректировкаСтоимостиИАмортизацииОС.ЗаполнитьПоДаннымУчета(Объект);
		
	КонецЕсли; 
	
КонецПроцедуры

Функция РассчитатьАмортизациюПоЗаданнымПараметрамБУ(НачалоПериода, КонецПериода, МенеджерВременныхТаблиц)
	
	РезультатРасчета = Новый ТаблицаЗначений();
	РезультатРасчета.Колонки.Добавить("Период", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	РезультатРасчета.Колонки.Добавить("АмортизацияБУ", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	РезультатРасчета.Колонки.Добавить("АмортизацияПР", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	РезультатРасчета.Колонки.Добавить("АмортизацияЦФ", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());

	ИспользуемыеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	УчетнаяПолитика_Период.Период КАК Период,
	|	УчетнаяПолитика_Период.Организация КАК Организация,
	|
	|	УчетнаяПолитика.ПрименяетсяФСБУ6 КАК ПрименяетсяФСБУ6,
	|
	|	ВЫБОР
	|		КОГДА УчетнаяПолитика_Период.ЭтоАрендованныеОС
	|			ТОГДА УчетнаяПолитика.ПорядокНачисленияАмортизацииАренда 
	|		ИНАЧЕ УчетнаяПолитика.ПорядокНачисленияАмортизацииОС
	|	КОНЕЦ КАК ПорядокНачисленияАмортизации
	|
	|ПОМЕСТИТЬ УчетнаяПолитикаБУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗначенияПараметров.Период КАК Период,
	|		ЗначенияПараметров.Организация КАК Организация,
	|		ЗначенияПараметров.ЭтоАрендованныеОС КАК ЭтоАрендованныеОС,
	|		Организации.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|		МАКСИМУМ(УчетнаяПолитика.Период) КАК ПериодУчетнаяПолитика
	|	ИЗ
	|		ЗначенияПараметров КАК ЗначенияПараметров
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|			ПО Организации.Ссылка = ЗначенияПараметров.Организация
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаБухУчета КАК УчетнаяПолитика
	|			ПО УчетнаяПолитика.Организация = Организации.ГоловнаяОрганизация
	|				И УчетнаяПолитика.Период <= ЗначенияПараметров.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		ЗначенияПараметров.Период,
	|		ЗначенияПараметров.Организация,
	|		ЗначенияПараметров.ЭтоАрендованныеОС,
	|		Организации.ГоловнаяОрганизация
	|
	|	) КАК УчетнаяПолитика_Период
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаБухУчета КАК УчетнаяПолитика
	|		ПО УчетнаяПолитика.Организация = УчетнаяПолитика_Период.ГоловнаяОрганизация
	|			И УчетнаяПолитика.Период = УчетнаяПолитика_Период.ПериодУчетнаяПолитика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетнаяПолитика_Период.Период КАК Период,
	|	УчетнаяПолитика_Период.Организация КАК Организация,
	|
	|	УчетнаяПолитика.МесяцНачалаФинансовогоГода КАК МесяцНачалаФинансовогоГода
	|
	|ПОМЕСТИТЬ УчетнаяПолитикаУУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗначенияПараметров.Период КАК Период,
	|		ЗначенияПараметров.Организация КАК Организация,
	|		Организации.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|		МАКСИМУМ(УчетнаяПолитика.Период) КАК ПериодУчетнаяПолитика
	|	ИЗ
	|		ЗначенияПараметров КАК ЗначенияПараметров
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|			ПО Организации.Ссылка = ЗначенияПараметров.Организация
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК УчетнаяПолитика
	|			ПО УчетнаяПолитика.Организация = Организации.ГоловнаяОрганизация
	|				И УчетнаяПолитика.Период <= ЗначенияПараметров.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		ЗначенияПараметров.Период,
	|		ЗначенияПараметров.Организация,
	|		Организации.ГоловнаяОрганизация
	|
	|	) КАК УчетнаяПолитика_Период
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК УчетнаяПолитика
	|		ПО УчетнаяПолитика.Организация = УчетнаяПолитика_Период.ГоловнаяОрганизация
	|			И УчетнаяПолитика.Период = УчетнаяПолитика_Период.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияПараметров.Период КАК Период,
	|	ЕСТЬNULL(УчетнаяПолитикаБУ.ПрименяетсяФСБУ6, ИСТИНА) КАК ПрименяетсяФСБУ6,
	|	ЕСТЬNULL(УчетнаяПолитикаБУ.ПорядокНачисленияАмортизации, ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)) КАК ПорядокНачисленияАмортизации,
	|
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(ЗначенияПараметров.Период) < ЕСТЬNULL(УчетнаяПолитикаУУ.МесяцНачалаФинансовогоГода, 1)
	|			ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ЗначенияПараметров.Период, ГОД), МЕСЯЦ, ЕСТЬNULL(УчетнаяПолитикаУУ.МесяцНачалаФинансовогоГода, 1) - 13)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ЗначенияПараметров.Период, ГОД), МЕСЯЦ, ЕСТЬNULL(УчетнаяПолитикаУУ.МесяцНачалаФинансовогоГода, 1) - 1) 
	|	КОНЕЦ КАК НачалоФинансовогоГода,
	|	
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(ЗначенияПараметров.Период) < ЕСТЬNULL(УчетнаяПолитикаУУ.МесяцНачалаФинансовогоГода, 1)
	|			ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ЗначенияПараметров.Период, ГОД), МЕСЯЦ, ЕСТЬNULL(УчетнаяПолитикаУУ.МесяцНачалаФинансовогоГода, 1) - 1)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ЗначенияПараметров.Период, ГОД), МЕСЯЦ, ЕСТЬNULL(УчетнаяПолитикаУУ.МесяцНачалаФинансовогоГода, 1) + 11) 
	|	КОНЕЦ КАК КонецФинансовогоГода
	|
	|ИЗ	
	|	ЗначенияПараметров КАК ЗначенияПараметров
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаБУ КАК УчетнаяПолитикаБУ
	|		ПО УчетнаяПолитикаБУ.Период = ЗначенияПараметров.Период
	|			И УчетнаяПолитикаБУ.Организация = ЗначенияПараметров.Организация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаУУ КАК УчетнаяПолитикаУУ
	|		ПО УчетнаяПолитикаУУ.Период = ЗначенияПараметров.Период
	|			И УчетнаяПолитикаУУ.Организация = ЗначенияПараметров.Организация
	|
	|ГДЕ
	|	(ЕСТЬNULL(УчетнаяПолитикаБУ.ПрименяетсяФСБУ6, ИСТИНА)
	|			И ЕСТЬNULL(УчетнаяПолитикаБУ.ПорядокНачисленияАмортизации, ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)) = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|		ИЛИ КОНЕЦПЕРИОДА(ЗначенияПараметров.Период, ДЕНЬ) = КОНЕЦПЕРИОДА(ЗначенияПараметров.Период, МЕСЯЦ))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ВнеоборотныеАктивы.УстановитьПараметрыЗапросаДляРасчетаАмортизации(Запрос);
	
	АмортизацияРеглЗаПериод = 0;
	АмортизацияПРЗаПериод = 0;
	АмортизацияЦФЗаПериод = 0;
	АмортизацияПРЦФЗаПериод = 0;

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Запрос.УстановитьПараметр("Период", КонецДня(Выборка.Период));
		Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Выборка.Период));
		Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Выборка.Период));
		Запрос.УстановитьПараметр("АмортизацияРеглЗаПериод", АмортизацияРеглЗаПериод);
		Запрос.УстановитьПараметр("АмортизацияПРЗаПериод", АмортизацияПРЗаПериод);
		Запрос.УстановитьПараметр("АмортизацияЦФЗаПериод", АмортизацияЦФЗаПериод);
		Запрос.УстановитьПараметр("АмортизацияПРЦФЗаПериод", АмортизацияПРЦФЗаПериод);
		Запрос.УстановитьПараметр("ПрименяетсяФСБУ6", Выборка.ПрименяетсяФСБУ6);
		Запрос.УстановитьПараметр("ПорядокНачисленияАмортизации", Выборка.ПорядокНачисленияАмортизации);
		Запрос.УстановитьПараметр("НачалоФинансовогоГода", Выборка.НачалоФинансовогоГода);
		Запрос.УстановитьПараметр("КонецФинансовогоГода", Выборка.КонецФинансовогоГода);
		
		ДатаПереходаКЛинейномуМетоду = УправлениеВнеоборотнымиАктивамиПереопределяемый.ПолучитьДатуПереходаКЛинейномуМетоду(КонецМесяца(Выборка.Период), Неопределено);
		Запрос.УстановитьПараметр("ДатаПереходаКЛинейномуМетоду", ДатаПереходаКЛинейномуМетоду);

		ПодготовитьПараметрыДляРасчетаАмортизацииБУ(Запрос);
		РассчитатьАмортизациюБУ(РезультатРасчета, Запрос, АмортизацияРеглЗаПериод, АмортизацияПРЗаПериод, АмортизацияЦФЗаПериод, АмортизацияПРЦФЗаПериод);

		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);
		
	КонецЦикла;
	
	Возврат РезультатРасчета;
	
КонецФункции

Процедура ПодготовитьПараметрыДляРасчетаАмортизацииБУ(Запрос)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ЗначенияПараметров.Период, МЕСЯЦ) КАК НачалоМесяца,
	|	КОНЕЦПЕРИОДА(ЗначенияПараметров.Период, МЕСЯЦ) КАК КонецМесяца,
	|
	|	КОНЕЦПЕРИОДА(ЗначенияПараметров.Период, ДЕНЬ) КАК Период,
	|	ЗначенияПараметров.Организация КАК Организация,
	|
	|	ЗначенияПараметров.НеРассчитыватьАмортизациюБУ КАК НеРассчитыватьАмортизациюБУ,
	|
	|	ЗначенияПараметров.АмортизацияБУ КАК АмортизацияБУ,
	|	ЗначенияПараметров.АмортизацияПР КАК АмортизацияПР,
	|	ЗначенияПараметров.АмортизацияЦФ КАК АмортизацияЦФ,
	|
	|	ЗначенияПараметров.ГрафикАмортизации КАК ГрафикАмортизации,
	|
	|	ВЫБОР
	|		КОГДА &ПрименяетсяФСБУ6 И &ПорядокНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|			ТОГДА ЗначенияПараметров.ДатаПоследнегоИзменения
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ЗначенияПараметров.ДатаПоследнегоИзменения, МЕСЯЦ, 1), МЕСЯЦ)
	|	КОНЕЦ КАК ДатаПоследнегоИзменения,
	|
	|	ЗначенияПараметров.КоэффициентАмортизацииБУ КАК КоэффициентАмортизацииБУ,
	|	ЗначенияПараметров.КоэффициентУскоренияБУ КАК КоэффициентУскоренияБУ,
	|	ЗначенияПараметров.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ЗначенияПараметров.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|
	|	ЗначенияПараметров.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ,
	|
	|	ЗначенияПараметров.ОбъемВыработки КАК ОбъемВыработки,
	|	ЗначенияПараметров.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ЗначенияПараметров.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации,
	|	ЗначенияПараметров.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ЗначенияПараметров.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ЗначенияПараметров.СтоимостьДляВычисленияАмортизацииЦФ КАК СтоимостьДляВычисленияАмортизацииЦФ,
	|	ЗначенияПараметров.СтоимостьБУ КАК СтоимостьБУ,
	|	ЗначенияПараметров.СтоимостьПР КАК СтоимостьПР,
	|	ЗначенияПараметров.СтоимостьЦФ КАК СтоимостьЦФ,
	|	ЗначенияПараметров.СтоимостьПРЦФ КАК СтоимостьПРЦФ,
	|
	|	ЗначенияПараметров.СтоимостьНаНачалоГода КАК СтоимостьНаНачалоГода,
	|
	|	ЗначенияПараметров.АмортизацияРеглНаНачалоПериода КАК АмортизацияРеглНаНачалоПериода,
	|	ЗначенияПараметров.АмортизацияПРНаНачалоПериода КАК АмортизацияПРНаНачалоПериода,
	|	ЗначенияПараметров.АмортизацияЦФНаНачалоПериода КАК АмортизацияЦФНаНачалоПериода,
	|	ЗначенияПараметров.АмортизацияПРЦФНаНачалоПериода КАК АмортизацияПРЦФНаНачалоПериода,
	|
	|	ЗначенияПараметров.ОбъемВыработкиНаНачалоМесяца КАК ОбъемВыработкиНаНачалоМесяца,
	|
	|	ЗначенияПараметров.АмортизацияРеглИзменение КАК АмортизацияРеглИзменение,
	|	ЗначенияПараметров.АмортизацияПРИзменение КАК АмортизацияПРИзменение,
	|	ЗначенияПараметров.АмортизацияЦФИзменение КАК АмортизацияЦФИзменение,
	|	ЗначенияПараметров.АмортизацияПРЦФИзменение КАК АмортизацияПРЦФИзменение
	|
	|ПОМЕСТИТЬ ЗначенияПараметровЗаМесяц
	|
	|ИЗ
	|	ЗначенияПараметров КАК ЗначенияПараметров
	|ГДЕ
	|	(&ПрименяетсяФСБУ6
	|			И &ПорядокНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|			И ЗначенияПараметров.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|
	|		ИЛИ (НЕ &ПрименяетсяФСБУ6
	|				ИЛИ &ПорядокНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца))
	|			И КОНЕЦПЕРИОДА(ЗначенияПараметров.Период, ДЕНЬ) = &Период)
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияПараметров.НачалоМесяца КАК НачалоМесяца,
	|	ЗначенияПараметров.Период КАК Период,
	|	ЕСТЬNULL(МАКСИМУМ(ЗначенияПараметровПредыдущее.Период), ДАТАВРЕМЯ(1,1,1)) КАК ПериодПредыдущее
	|
	|ПОМЕСТИТЬ ЗначенияПараметровПредыдущее
	|
	|ИЗ
	|	ЗначенияПараметровЗаМесяц КАК ЗначенияПараметров
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначенияПараметровЗаМесяц КАК ЗначенияПараметровПредыдущее
	|		ПО (ЗначенияПараметровПредыдущее.НачалоМесяца = ЗначенияПараметров.НачалоМесяца)
	|			И (ЗначенияПараметровПредыдущее.Период < ЗначенияПараметров.Период)
	|			И (&ПрименяетсяФСБУ6)
	|			И (&ПорядокНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету))
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗначенияПараметров.НачалоМесяца,
	|	ЗначенияПараметров.Период
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияПараметров.НачалоМесяца КАК НачалоМесяца,
	|	ЗначенияПараметров.Период КАК Период,
	|
	|	ВЫБОР
	|		КОГДА ЗначенияПараметровПредыдущее.ПериодПредыдущее <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА РАЗНОСТЬДАТ(ЗначенияПараметровПредыдущее.ПериодПредыдущее, ЗначенияПараметров.Период, ДЕНЬ)
	|		КОГДА НАЧАЛОПЕРИОДА(ЗначенияПараметров.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ЗначенияПараметров.ДатаПоследнегоИзменения, МЕСЯЦ)
	|			ТОГДА РАЗНОСТЬДАТ(ЗначенияПараметров.ДатаПоследнегоИзменения, ЗначенияПараметров.Период, ДЕНЬ)
	|		ИНАЧЕ РАЗНОСТЬДАТ(ЗначенияПараметров.НачалоМесяца, ЗначенияПараметров.Период, ДЕНЬ)
	|	КОНЕЦ 
	|		+ ВЫБОР
	|			КОГДА ЗначенияПараметров.Период = ЗначенияПараметров.КонецМесяца
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Количество
	|
	|ПОМЕСТИТЬ КоличествоДнейИспользования
	|
	|ИЗ
	|	ЗначенияПараметровЗаМесяц КАК ЗначенияПараметров
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначенияПараметровПредыдущее КАК ЗначенияПараметровПредыдущее
	|		ПО (ЗначенияПараметровПредыдущее.Период = ЗначенияПараметров.Период)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияПараметров.Период КАК Период,
	|
	|	ЗначенияПараметров.НеРассчитыватьАмортизациюБУ КАК НеРассчитыватьАмортизациюБУ,
	|
	|	&ПрименяетсяФСБУ6 КАК АмортизацияНачисляетсяПоСтандартамМУ,
	|	НЕОПРЕДЕЛЕНО КАК ВариантПроводокПоОбесценениюВНА,
	|
	|	ЗначенияПараметров.АмортизацияБУ КАК АмортизацияБУ,
	|	ЗначенияПараметров.АмортизацияПР КАК АмортизацияПР,
	|	ЗначенияПараметров.АмортизацияЦФ КАК АмортизацияЦФ,
	|
	|	ЗначенияПараметров.АмортизацияРеглИзменение КАК АмортизацияРеглИзменение,
	|	ЗначенияПараметров.АмортизацияПРИзменение КАК АмортизацияПРИзменение,
	|	ЗначенияПараметров.АмортизацияЦФИзменение КАК АмортизацияЦФИзменение,
	|	ЗначенияПараметров.АмортизацияПРЦФИзменение КАК АмортизацияПРЦФИзменение,
	|
	// Для бухгалтерского учета
	|	ЗначенияПараметров.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ,
	|	ЗначенияПараметров.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ЗначенияПараметров.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|
	|	ЗначенияПараметров.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации,
	|	ЗначенияПараметров.СтоимостьНаНачалоГода КАК СтоимостьНаНачалоГода,
	|	ЗначенияПараметров.ГрафикАмортизации КАК ГрафикАмортизации,
	|	ЗначенияПараметров.ОбъемВыработки КАК ОбъемВыработки,
	|	ЗначенияПараметров.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ЗначенияПараметров.КоэффициентАмортизацииБУ КАК КоэффициентАмортизацииБУ,
	|	ЗначенияПараметров.КоэффициентУскоренияБУ КАК КоэффициентУскоренияБУ,
	|	ЗначенияПараметров.ДатаПоследнегоИзменения КАК ДатаПоследнегоИзменения,
	|	ЗначенияПараметров.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|
	// РесурсНазначенный
	|	ВЫБОР 
	|		КОГДА ЗначенияПараметров.МетодНачисленияАмортизацииБУ = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции)
	|			ТОГДА ЗначенияПараметров.ОбъемПродукцииРаботДляВычисленияАмортизации
	|		ИНАЧЕ ЗначенияПараметров.СрокИспользованияДляВычисленияАмортизации
	|	КОНЕЦ КАК РесурсНазначенный,
	|
	// РесурсВыработанныйЗаТекущийПериод
	|	ВЫБОР 
	|		КОГДА ЗначенияПараметров.МетодНачисленияАмортизацииБУ = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции)
	|			ТОГДА ВЫРАЗИТЬ(КоличествоДнейИспользования.Количество / ДЕНЬ(ЗначенияПараметров.КонецМесяца) * ЗначенияПараметров.ОбъемВыработки КАК ЧИСЛО(20,8)) 
	|	
	|		ИНАЧЕ ВЫРАЗИТЬ(КоличествоДнейИспользования.Количество / ДЕНЬ(ЗначенияПараметров.КонецМесяца) КАК ЧИСЛО(20,8)) 
	|
	|	КОНЕЦ КАК РесурсВыработанныйЗаТекущийПериод,
	|
	// РесурсВыработанныйЗаПрошлыйПериод
	|	ВЫРАЗИТЬ(ВЫБОР 
	|		КОГДА ЗначенияПараметров.МетодНачисленияАмортизацииБУ = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции)
	|			ТОГДА ЗначенияПараметров.ОбъемВыработкиНаНачалоМесяца
	|
			// В месяце принятия к учету
	|		КОГДА НАЧАЛОПЕРИОДА(ЗначенияПараметров.ДатаПоследнегоИзменения, МЕСЯЦ) = ЗначенияПараметров.НачалоМесяца
	|			ТОГДА 0
	|
			// В следующем месяце после принятия к учету
	|		КОГДА КОНЕЦПЕРИОДА(ЗначенияПараметров.ДатаПоследнегоИзменения, МЕСЯЦ) = КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(ЗначенияПараметров.НачалоМесяца, МЕСЯЦ, -1), МЕСЯЦ)
	|			ТОГДА (РАЗНОСТЬДАТ(ЗначенияПараметров.ДатаПоследнегоИзменения, КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(ЗначенияПараметров.НачалоМесяца, МЕСЯЦ, -1), МЕСЯЦ), ДЕНЬ) + 1)
	|					/ ДЕНЬ(КОНЕЦПЕРИОДА(ЗначенияПараметров.ДатаПоследнегоИзменения, МЕСЯЦ))
	|	
			// Расшифровка формулы: [кол-во отработанных дней в мес принятия] / [всего дней в мес принятия] + [кол-во месяцев после принятия до начала месяца]
	|		ИНАЧЕ
	|			(РАЗНОСТЬДАТ(ЗначенияПараметров.ДатаПоследнегоИзменения, КОНЕЦПЕРИОДА(ЗначенияПараметров.ДатаПоследнегоИзменения, МЕСЯЦ), ДЕНЬ) + 1)
	|					/ ДЕНЬ(КОНЕЦПЕРИОДА(ЗначенияПараметров.ДатаПоследнегоИзменения, МЕСЯЦ))
	|				+ РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ЗначенияПараметров.ДатаПоследнегоИзменения, МЕСЯЦ, 1), МЕСЯЦ), ЗначенияПараметров.КонецМесяца, МЕСЯЦ)
	|	КОНЕЦ КАК ЧИСЛО(20,8)) КАК РесурсВыработанныйЗаПрошлыйПериод,
	|
	// СтоимостьДляВычисленияАмортизации
	|	ВЫБОР 
	|		КОГДА НЕ &ПрименяетсяФСБУ6
	|			ТОГДА ЗначенияПараметров.СтоимостьДляВычисленияАмортизации
	|
	|		ИНАЧЕ ЗначенияПараметров.СтоимостьБУ 
	|				+ ЗначенияПараметров.СтоимостьЦФ 
	|				- ЗначенияПараметров.АмортизацияРеглНаНачалоПериода 
	|				- ЗначенияПараметров.АмортизацияЦФНаНачалоПериода 
	|				- &АмортизацияРеглЗаПериод
	|				- &АмортизацияЦФЗаПериод
	|
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизации,
	|
	|
	// ОтработанныхМесяцевПолныхЛет
	|	ВЫБОР
	|		КОГДА ГОД(ЗначенияПараметров.ДатаПоследнегоИзменения) <> ГОД(ЗначенияПараметров.НачалоМесяца) ТОГДА
	|			13 - МЕСЯЦ(ЗначенияПараметров.ДатаПоследнегоИзменения)
	|				+ 12 * (ГОД(ЗначенияПараметров.НачалоМесяца) - Год(ЗначенияПараметров.ДатаПоследнегоИзменения) - 1)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОтработанныхМесяцевПолныхЛет,
	|
	|	ЛОЖЬ КАК ЭтоДоначисление,
	|	
	// ОстаточнаяСтоимостьРегл
	|	ЗначенияПараметров.СтоимостьБУ
	|		+ ЗначенияПараметров.СтоимостьЦФ
	|		- ЗначенияПараметров.АмортизацияРеглНаНачалоПериода
	|		- ЗначенияПараметров.АмортизацияЦФНаНачалоПериода
	|		- &АмортизацияРеглЗаПериод
	|		- &АмортизацияЦФЗаПериод КАК ОстаточнаяСтоимостьРегл,
	|
	// ОстаточнаяСтоимостьПР
	|	ЗначенияПараметров.СтоимостьПР
	|		+ ЗначенияПараметров.СтоимостьПРЦФ
	|		- ЗначенияПараметров.АмортизацияПРНаНачалоПериода
	|		- ЗначенияПараметров.АмортизацияПРЦФНаНачалоПериода
	|		- &АмортизацияПРЗаПериод КАК ОстаточнаяСтоимостьПР,
	|
	// ОстаточнаяСтоимостьЦФ
	|	ЗначенияПараметров.СтоимостьЦФ
	|		- ЗначенияПараметров.АмортизацияЦФНаНачалоПериода
	|		- &АмортизацияЦФЗаПериод КАК ОстаточнаяСтоимостьЦФ,
	|
	// ОстаточнаяСтоимостьПРЦФ
	|	ЗначенияПараметров.СтоимостьПРЦФ
	|		- ЗначенияПараметров.АмортизацияПРЦФНаНачалоПериода
	|		- &АмортизацияПРЦФЗаПериод КАК ОстаточнаяСтоимостьПРЦФ,
	|
	// КоэффициентПериода
	|	ВЫБОР 
	|		КОГДА ГодовыеГрафикиАмортизацииОС.Коэффициент1 
	|			+ ГодовыеГрафикиАмортизацииОС.Коэффициент2 
	|			+ ГодовыеГрафикиАмортизацииОС.Коэффициент3 
	|			+ ГодовыеГрафикиАмортизацииОС.Коэффициент4 
	|			+ ГодовыеГрафикиАмортизацииОС.Коэффициент5 
	|			+ ГодовыеГрафикиАмортизацииОС.Коэффициент6 
	|			+ ГодовыеГрафикиАмортизацииОС.Коэффициент7 
	|			+ ГодовыеГрафикиАмортизацииОС.Коэффициент8 
	|			+ ГодовыеГрафикиАмортизацииОС.Коэффициент9 
	|			+ ГодовыеГрафикиАмортизацииОС.Коэффициент10 
	|			+ ГодовыеГрафикиАмортизацииОС.Коэффициент11 
	|			+ ГодовыеГрафикиАмортизацииОС.Коэффициент12 <> 0
	|		ТОГДА 
	|			ВЫБОР МЕСЯЦ(&НачалоМесяца)
	|				КОГДА 1 ТОГДА ЕСТЬNULL(ГодовыеГрафикиАмортизацииОС.Коэффициент1, 0)
	|				КОГДА 2 ТОГДА ЕСТЬNULL(ГодовыеГрафикиАмортизацииОС.Коэффициент2, 0) 
	|				КОГДА 3 ТОГДА ЕСТЬNULL(ГодовыеГрафикиАмортизацииОС.Коэффициент3, 0)
	|				КОГДА 4 ТОГДА ЕСТЬNULL(ГодовыеГрафикиАмортизацииОС.Коэффициент4, 0) 
	|				КОГДА 5 ТОГДА ЕСТЬNULL(ГодовыеГрафикиАмортизацииОС.Коэффициент5, 0)
	|				КОГДА 6 ТОГДА ЕСТЬNULL(ГодовыеГрафикиАмортизацииОС.Коэффициент6, 0)
	|				КОГДА 7 ТОГДА ЕСТЬNULL(ГодовыеГрафикиАмортизацииОС.Коэффициент7, 0)
	|				КОГДА 8 ТОГДА ЕСТЬNULL(ГодовыеГрафикиАмортизацииОС.Коэффициент8, 0)
	|				КОГДА 9 ТОГДА ЕСТЬNULL(ГодовыеГрафикиАмортизацииОС.Коэффициент9, 0)
	|				КОГДА 10 ТОГДА ЕСТЬNULL(ГодовыеГрафикиАмортизацииОС.Коэффициент10, 0)
	|				КОГДА 11 ТОГДА ЕСТЬNULL(ГодовыеГрафикиАмортизацииОС.Коэффициент11, 0)
	|				КОГДА 12 ТОГДА ЕСТЬNULL(ГодовыеГрафикиАмортизацииОС.Коэффициент12, 0)
	|			КОНЕЦ / (ГодовыеГрафикиАмортизацииОС.Коэффициент1 
	|						+ ГодовыеГрафикиАмортизацииОС.Коэффициент2 
	|						+ ГодовыеГрафикиАмортизацииОС.Коэффициент3 
	|						+ ГодовыеГрафикиАмортизацииОС.Коэффициент4 
	|						+ ГодовыеГрафикиАмортизацииОС.Коэффициент5 
	|						+ ГодовыеГрафикиАмортизацииОС.Коэффициент6 
	|						+ ГодовыеГрафикиАмортизацииОС.Коэффициент7 
	|						+ ГодовыеГрафикиАмортизацииОС.Коэффициент8 
	|						+ ГодовыеГрафикиАмортизацииОС.Коэффициент9 
	|						+ ГодовыеГрафикиАмортизацииОС.Коэффициент10 
	|						+ ГодовыеГрафикиАмортизацииОС.Коэффициент11 
	|						+ ГодовыеГрафикиАмортизацииОС.Коэффициент12)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоэффициентПериода,
	|
	// ЧислоПрошедшихЛет
	|	ВЫБОР
	|		КОГДА (&ЧислоПрошедшихЛет / 12) < 1
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(&ЧислоПрошедшихЛет / 12 - 0.5 КАК ЧИСЛО(4,0))
	|	КОНЕЦ КАК ЧислоПрошедшихЛет,
	|
	// ЧислоЛетПользования
	|	ВЫБОР
	|		КОГДА ЗначенияПараметров.СрокИспользованияДляВычисленияАмортизации / 12 < 1
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ЗначенияПараметров.СрокИспользованияДляВычисленияАмортизации / 12 - 0.5 КАК ЧИСЛО(4,0))
	|	КОНЕЦ
	|		+ ВЫБОР 
	|			КОГДА (ЗначенияПараметров.СрокИспользованияДляВычисленияАмортизации / 12 
	|					- ВЫБОР
	|							КОГДА ЗначенияПараметров.СрокИспользованияДляВычисленияАмортизации / 12 < 1
	|								ТОГДА 0
	|							ИНАЧЕ ВЫРАЗИТЬ(ЗначенияПараметров.СрокИспользованияДляВычисленияАмортизации / 12 - 0.5 КАК ЧИСЛО(4,0))
	|						КОНЕЦ) > 0 
	|				ТОГДА 1 
	|			ИНАЧЕ 0 
	|		КОНЕЦ КАК ЧислоЛетПользования,
	|
	// КоэффициентЦФБУ
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ЗначенияПараметров.СтоимостьЦФ, 0) = 0
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ЗначенияПараметров.СтоимостьДляВычисленияАмортизацииЦФ, 0) <> 0
	|				И ЕСТЬNULL(ЗначенияПараметров.СтоимостьДляВычисленияАмортизации, 0) <> 0
	|			ТОГДА ЕСТЬNULL(ЗначенияПараметров.СтоимостьДляВычисленияАмортизацииЦФ, 0) / ЕСТЬNULL(ЗначенияПараметров.СтоимостьДляВычисленияАмортизации, 0)
	|		КОГДА (ЕСТЬNULL(ЗначенияПараметров.СтоимостьБУ, 0) + ЕСТЬNULL(ЗначенияПараметров.СтоимостьЦФ, 0)) <> 0
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ЗначенияПараметров.СтоимостьЦФ, 0) / (ЕСТЬNULL(ЗначенияПараметров.СтоимостьБУ, 0) + ЕСТЬNULL(ЗначенияПараметров.СтоимостьЦФ, 0)) КАК ЧИСЛО (23, 10))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоэффициентЦФБУ,
	|
	// КоэффициентЦФПР
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ЗначенияПараметров.СтоимостьПРЦФ, 0) = 0
	|			ТОГДА 0
	|		КОГДА (ЕСТЬNULL(ЗначенияПараметров.СтоимостьПР, 0) + ЕСТЬNULL(ЗначенияПараметров.СтоимостьПРЦФ, 0)) <> 0
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ЗначенияПараметров.СтоимостьПРЦФ, 0) / (ЕСТЬNULL(ЗначенияПараметров.СтоимостьПР, 0) + ЕСТЬNULL(ЗначенияПараметров.СтоимостьПРЦФ, 0)) КАК ЧИСЛО (23, 10))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоэффициентЦФПР,
	|
	|	ЛОЖЬ КАК ЭтоАмортизационнаяПремия,
	|	ЛОЖЬ КАК НачислятьИзнос
	|
	|ПОМЕСТИТЬ ВТ_СписокОССПараметрами_БУ
	|ИЗ
	|	ЗначенияПараметровЗаМесяц КАК ЗначенияПараметров
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КоличествоДнейИспользования КАК КоличествоДнейИспользования
	|		ПО (КоличествоДнейИспользования.Период = ЗначенияПараметров.Период)
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГодовыеГрафикиАмортизацииОС КАК ГодовыеГрафикиАмортизацииОС
	|		ПО ГодовыеГрафикиАмортизацииОС.Ссылка = ЗначенияПараметров.ГрафикАмортизации";
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, 
		"&ЧислоПрошедшихЛет", 
		ВнеоборотныеАктивыСлужебный.ТекстПоляФактическийСрокИспользования("ДОБАВИТЬКДАТЕ(ЗначенияПараметров.ДатаПоследнегоИзменения, МЕСЯЦ, 1)"));
		
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьАмортизациюБУ(РезультатРасчета, Запрос, АмортизацияРеглЗаПериод, АмортизацияПРЗаПериод, АмортизацияЦФЗаПериод, АмортизацияПРЦФЗаПериод)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СписокОС.Период КАК Период,
	|
	|	СписокОС.АмортизацияРеглИзменение КАК АмортизацияРеглИзменение,
	|	СписокОС.АмортизацияПРИзменение КАК АмортизацияПРИзменение,
	|	СписокОС.АмортизацияЦФИзменение КАК АмортизацияЦФИзменение,
	|	СписокОС.АмортизацияПРЦФИзменение КАК АмортизацияПРЦФИзменение,
	|
	|	&РасчетСуммыБУ_БезЦФ КАК СуммаБУ,
	|	&РасчетСуммыПР_БезЦФ КАК СуммаПР,
	|	&РасчетСуммыЦФ КАК СуммаЦФ,
	|	&РасчетСуммыПРЦФ КАК СуммаПРЦФ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		СписокОС.Период КАК Период,
	|
	|		СписокОС.АмортизацияРеглИзменение КАК АмортизацияРеглИзменение,
	|		0 КАК АмортизацияНУИзменение,
	|		СписокОС.АмортизацияПРИзменение КАК АмортизацияПРИзменение,
	|		СписокОС.АмортизацияЦФИзменение КАК АмортизацияЦФИзменение,
	|		СписокОС.АмортизацияПРЦФИзменение КАК АмортизацияПРЦФИзменение,
	|
	|		СписокОС.ОстаточнаяСтоимостьРегл КАК ОстаточнаяСтоимостьРегл,
	|		СписокОС.ОстаточнаяСтоимостьПР КАК ОстаточнаяСтоимостьПР,
	|		СписокОС.ОстаточнаяСтоимостьЦФ КАК ОстаточнаяСтоимостьЦФ,
	|		СписокОС.ОстаточнаяСтоимостьПРЦФ КАК ОстаточнаяСтоимостьПРЦФ,
	|
	|		СписокОС.КоэффициентЦФБУ КАК КоэффициентЦФБУ,
	|		СписокОС.КоэффициентЦФПР КАК КоэффициентЦФПР,
	|
	|		СписокОС.НачислятьИзнос КАК НачислятьИзнос,
	|		ЛОЖЬ КАК ЭтоАмортизационнаяПремия,
	|
	|		ВЫБОР
	|			КОГДА СписокОС.НеРассчитыватьАмортизациюБУ
	|					ТОГДА СписокОС.АмортизацияБУ + СписокОС.АмортизацияЦФ
	|				ИНАЧЕ &СуммаАмортизацииБУ 
	|		КОНЕЦ КАК СуммаБУ,
	|
	|		ВЫБОР
	|			КОГДА СписокОС.НеРассчитыватьАмортизациюБУ
	|				ТОГДА СписокОС.АмортизацияПР
	|			КОГДА СписокОС.СтоимостьДляВычисленияАмортизации <> 0
	|				ТОГДА ВЫРАЗИТЬ(СписокОС.ПРДляВычисленияАмортизации 
	|								* (&СуммаАмортизацииБУ) 
	|								/ СписокОС.СтоимостьДляВычисленияАмортизации КАК ЧИСЛО(31,2))
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаПР
	|	ИЗ
	|		ВТ_СписокОССПараметрами_БУ КАК СписокОС
	|
	|	) КАК СписокОС
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокОС.Период,
	|	СписокОС.АмортизацияРеглИзменение,
	|	СписокОС.АмортизацияПРИзменение,
	|	СписокОС.АмортизацияЦФИзменение,
	|	СписокОС.АмортизацияПРЦФИзменение,
	|	СписокОС.НачислятьИзнос,
	|	СписокОС.ЭтоАмортизационнаяПремия,
	|	СписокОС.ОстаточнаяСтоимостьРегл,
	|	СписокОС.ОстаточнаяСтоимостьПР,
	|	СписокОС.ОстаточнаяСтоимостьЦФ,
	|	СписокОС.ОстаточнаяСтоимостьПРЦФ";
	
	ЗаменитьПараметрыТекстаЗапросаДляРасчетаАмортизацииБУ(ТекстЗапроса);
	
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаАмортизация = РезультатРасчета.Добавить();
		СтрокаАмортизация.Период = Выборка.Период;
		
		СтрокаАмортизация.АмортизацияБУ = Выборка.СуммаБУ;
		СтрокаАмортизация.АмортизацияПР = Выборка.СуммаПР;
		СтрокаАмортизация.АмортизацияЦФ = Выборка.СуммаЦФ;
		
		АмортизацияРеглЗаПериод = АмортизацияРеглЗаПериод + Выборка.СуммаБУ + Выборка.АмортизацияРеглИзменение;
		АмортизацияПРЗаПериод = АмортизацияПРЗаПериод + Выборка.СуммаПР + Выборка.АмортизацияПРИзменение;
		АмортизацияЦФЗаПериод = АмортизацияЦФЗаПериод + Выборка.СуммаЦФ + Выборка.АмортизацияЦФИзменение;
		АмортизацияПРЦФЗаПериод = АмортизацияПРЦФЗаПериод + Выборка.СуммаПРЦФ + Выборка.АмортизацияПРЦФИзменение;

	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьАмортизациюПоЗаданнымПараметрамНУ(Объект)
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПараметрыЗаПериод.Дата КАК Период,
	|	ПараметрыЗаПериод.НеРассчитыватьАмортизациюНУ КАК НеРассчитыватьАмортизациюНУ,
	|
	|	ПараметрыЗаПериод.АмортизацияНУ КАК АмортизацияНУ,
	|
	|	ПараметрыЗаПериод.АмортизацияНУИзменение КАК АмортизацияНУИзменение,
	|
	|	ПараметрыЗаПериод.СтоимостьНУ КАК СтоимостьНУ,
	|
	|	ПараметрыЗаПериод.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	ПараметрыЗаПериод.АмортизационнаяПремия КАК АмортизационнаяПремия,
	|	ПараметрыЗаПериод.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	ПараметрыЗаПериод.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ,
	|	ПараметрыЗаПериод.СпециальныйКоэффициентНУ КАК СпециальныйКоэффициентНУ,
	|	ПараметрыЗаПериод.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
	|
	|	&ДатаВводаВЭксплуатациюНУ КАК ДатаВводаВЭксплуатациюНУ,
	|	&АмортизацияНУНаНачалоПериода КАК АмортизацияНУНаНачалоПериода,
	|	&АмортизацияДо2009 КАК АмортизацияДо2009,
	|	&ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009
	|
	|ПОМЕСТИТЬ ЗначенияПараметровНУ
	|
	|ИЗ
	|	&ПараметрыЗаПериодНУ КАК ПараметрыЗаПериод";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПараметрыЗаПериодНУ", Объект.ПараметрыЗаПериодНУ.Выгрузить());
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ДатаВводаВЭксплуатациюНУ", Объект.ДатаВводаВЭксплуатациюНУ);
	Запрос.УстановитьПараметр("АмортизацияНУНаНачалоПериода", Объект.АмортизацияНУНаНачалоПериода);
	Запрос.УстановитьПараметр("АмортизацияДо2009", Объект.АмортизацияДо2009);
	Запрос.УстановитьПараметр("ФактическийСрокИспользованияДо2009", Объект.ФактическийСрокИспользованияДо2009);

	Запрос.Выполнить();
		
	РезультатРасчетаНУ = РассчитатьАмортизациюНУ(
		Объект.НачалоПериода, НачалоМесяца(Объект.Дата)-1, МенеджерВременныхТаблиц);
		
	Для Каждого СтрокаПараметры Из Объект.ПараметрыЗаПериодНУ Цикл
		
		СтрокаАмортизация = РезультатРасчетаНУ.Найти(СтрокаПараметры.Дата, "Период");
		
		СтрокаПараметры.АмортизацияНУ = СтрокаАмортизация.АмортизацияНУ;
		
	КонецЦикла;
	
КонецПроцедуры

Функция РассчитатьАмортизациюНУ(НачалоПериода, КонецПериода, МенеджерВременныхТаблиц)
	
	ИспользуемыеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);

	РезультатРасчетаНУ = Новый ТаблицаЗначений();
	РезультатРасчетаНУ.Колонки.Добавить("Период", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	РезультатРасчетаНУ.Колонки.Добавить("АмортизацияНУ", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());

	ТекстЗапроса =
	
	"ВЫБРАТЬ
	|	ЗначенияПараметров.Период КАК Период,
	|
	|	ЗначенияПараметров.НеРассчитыватьАмортизациюНУ КАК НеРассчитыватьАмортизациюНУ,
	|
	|	ЗначенияПараметров.АмортизацияНУ КАК АмортизацияНУ,
	|
	|	ЗначенияПараметров.ДатаВводаВЭксплуатациюНУ КАК ДатаВводаВЭксплуатациюНУ,
	|	ЗначенияПараметров.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	ЗначенияПараметров.АмортизационнаяПремия КАК АмортизационнаяПремия,
	|	ЗначенияПараметров.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ЗначенияПараметров.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ЗначенияПараметров.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ЗначенияПараметров.ДатаВводаВЭксплуатациюНУ, МЕСЯЦ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ЗначенияПараметров.НачислятьАмортизациюНУ
	|	КОНЕЦ КАК НачислятьАмортизациюНУ,
	|
	|	ЗначенияПараметров.СпециальныйКоэффициентНУ КАК СпециальныйКоэффициентНУ,
	|	ЗначенияПараметров.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
	|	ЗначенияПараметров.СтоимостьНУ КАК СтоимостьНУ,
	|	ЗначенияПараметров.СтоимостьНУ КАК СтоимостьНУНачальныйОстаток,
	|	ЗначенияПараметров.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|
	|	ЗначенияПараметров.АмортизацияНУНаНачалоПериода КАК АмортизацияНУНаНачалоПериода,
	|
	|	ЗначенияПараметров.АмортизацияНУИзменение КАК АмортизацияНУИзменение
	|
	|ПОМЕСТИТЬ ЗначенияПараметров_НУ
	|
	|ИЗ
	|	ЗначенияПараметровНУ КАК ЗначенияПараметров
	|ГДЕ
	|	КОНЕЦПЕРИОДА(ЗначенияПараметров.Период, ДЕНЬ) = &КонецМесяца
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияПараметров.Период КАК Период,
	|
	|	ЗначенияПараметров.НеРассчитыватьАмортизациюНУ КАК НеРассчитыватьАмортизациюНУ,
	|
	|	ЗначенияПараметров.АмортизацияНУ КАК АмортизацияНУ,
	|	ЗначенияПараметров.АмортизацияНУИзменение КАК АмортизацияНУИзменение,
	|
	// Для налогового учета
	|	ЗначенияПараметров.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ,
	|	ЗначенияПараметров.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	ЗначенияПараметров.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
	|	ЗначенияПараметров.СтоимостьНУНачальныйОстаток КАК СтоимостьНУНачальныйОстаток,
	|	ЗначенияПараметров.АмортизационнаяПремия КАК АмортизационнаяПремия,
	|	ЗначенияПараметров.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	ЗначенияПараметров.СпециальныйКоэффициентНУ КАК СпециальныйКоэффициентНУ,
	|
	|	&НормаАмортизации КАК НормаАмортизации,
	|
	// ФактическийСрокПриПереходеКЛинейномуМетоду
	|	ВЫБОР
	|		КОГДА ГОД(&ДатаПереходаКЛинейномуМетоду) = 2009
	|			ТОГДА ЕСТЬNULL(ЗначенияПараметров.ФактическийСрокИспользованияДо2009, 0)
	|		ИНАЧЕ (ГОД(&ДатаПереходаКЛинейномуМетоду) 
	|					- ГОД(ЗначенияПараметров.ДатаВводаВЭксплуатациюНУ)) * 12 
	|				+ (МЕСЯЦ(&ДатаПереходаКЛинейномуМетоду) - МЕСЯЦ(ЗначенияПараметров.ДатаВводаВЭксплуатациюНУ)) - 1
	|	КОНЕЦ КАК ФактическийСрокПриПереходеКЛинейномуМетоду,
	|
	// АмортизацияПриПереходеКЛинейномуМетоду
	|	ВЫБОР
	|		КОГДА ГОД(&ДатаПереходаКЛинейномуМетоду) = 2009
	|			ТОГДА ЕСТЬNULL(ЗначенияПараметров.АмортизацияДо2009, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияПриПереходеКЛинейномуМетоду,
	|
	// ОстаточнаяСтоимостьНУ
	|	ЗначенияПараметров.СтоимостьНУ
	|		- ЗначенияПараметров.АмортизацияНУНаНачалоПериода
	|		- &АмортизацияНУЗаПериод КАК ОстаточнаяСтоимостьНУ,
	|
	// АмортизацияНУНачальныйОстаток
	|	ЗначенияПараметров.АмортизацияНУНаНачалоПериода 
	|		+ &АмортизацияНУЗаПериод КАК АмортизацияНУНачальныйОстаток,
	|
	// КоэффициентЦФНУ
	|	0 КАК КоэффициентЦФНУ,
	|
	|	ЛОЖЬ КАК НачислятьИзнос
	|
	|ПОМЕСТИТЬ ВТ_СписокОССПараметрами_НУ
	|ИЗ
	|	ЗначенияПараметров_НУ КАК ЗначенияПараметров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокОС.Период КАК Период,
	|
	|	СписокОС.АмортизацияНУИзменение КАК АмортизацияНУИзменение,
	|
	|	&РасчетСуммыНУ_БезЦФ КАК СуммаНУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		СписокОС.Период КАК Период,
	|
	|		СписокОС.АмортизацияНУИзменение КАК АмортизацияНУИзменение,
	|		СписокОС.ОстаточнаяСтоимостьНУ КАК ОстаточнаяСтоимостьНУ,
	|
	|		СписокОС.КоэффициентЦФНУ КАК КоэффициентЦФНУ,
	|		СписокОС.НачислятьИзнос КАК НачислятьИзнос,
	|		ЛОЖЬ КАК ЭтоАмортизационнаяПремия,
	|
	|		ВЫБОР
	|			КОГДА СписокОС.НеРассчитыватьАмортизациюНУ
	|					ТОГДА СписокОС.АмортизацияНУ
	|				ИНАЧЕ &СуммаАмортизацииНУ 
	|		КОНЕЦ КАК СуммаНУ
	|	ИЗ
	|		ВТ_СписокОССПараметрами_НУ КАК СписокОС
	|
	|	) КАК СписокОС
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокОС.Период,
	|	СписокОС.АмортизацияНУИзменение,
	|	СписокОС.НачислятьИзнос,
	|	СписокОС.ЭтоАмортизационнаяПремия,
	|	СписокОС.ОстаточнаяСтоимостьНУ";
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, 
		"&НормаАмортизации", 
		ВнеоборотныеАктивыЛокализация.ТекстПоляНормаАмортизации("ЗначенияПараметров.АмортизационнаяГруппа"));
		
	ЗаменитьПараметрыТекстаЗапросаДляРасчетаАмортизацииНУ(ТекстЗапроса);

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ВнеоборотныеАктивы.УстановитьПараметрыЗапросаДляРасчетаАмортизации(Запрос);
	
	АмортизацияНУЗаПериод = 0;

	Период = НачалоМесяца(НачалоПериода);
	Пока Период <= КонецПериода Цикл
		
		Запрос.УстановитьПараметр("НачалоМесяца", Период);
		Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Период));
		Запрос.УстановитьПараметр("АмортизацияНУЗаПериод", АмортизацияНУЗаПериод);
		
		ДатаПереходаКЛинейномуМетоду = УправлениеВнеоборотнымиАктивамиПереопределяемый.ПолучитьДатуПереходаКЛинейномуМетоду(КонецМесяца(Период), Неопределено);
		Запрос.УстановитьПараметр("ДатаПереходаКЛинейномуМетоду", ДатаПереходаКЛинейномуМетоду);

		Результат = Запрос.Выполнить();
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			СтрокаАмортизация = РезультатРасчетаНУ.Добавить();
			СтрокаАмортизация.Период = Выборка.Период;
			
			СтрокаАмортизация.АмортизацияНУ = Выборка.СуммаНУ;
			
			АмортизацияНУЗаПериод = АмортизацияНУЗаПериод + Выборка.СуммаНУ + Выборка.АмортизацияНУИзменение;

		КонецЦикла;
		
		Период = ДобавитьМесяц(Период, 1);
		
		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);
		
	КонецЦикла;
	
	Возврат РезультатРасчетаНУ;
	
КонецФункции

Процедура СформироватьТаблицыСрезаПоследнихРегистровСУчетомИсправлений(Объект, Дата, ОсновноеСредство, МенеджерВременныхТаблиц)

	СписокЗапросов = Новый Массив;
	
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений("ПорядокУчетаОС"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений("ПорядокУчетаОСБУ"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений("ПараметрыАмортизацииОСБУ"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений("ПервоначальныеСведенияОС"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений("МестонахождениеОС"));

	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", КонецДня(Объект.Дата));
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("СписокОС", ОсновноеСредство);
	Запрос.УстановитьПараметр("БезОтбораОС", Ложь);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьТаблицыЗаписейРегистровСУчетомИсправлений(Объект, НачалоПериода, КонецПериода, ОсновноеСредство, МенеджерВременныхТаблиц)
	
	СписокЗапросов = Новый Массив;
	
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаЗаписиРегистраСУчетомИсправлений("ПорядокУчетаОС"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаЗаписиРегистраСУчетомИсправлений("ПорядокУчетаОСБУ"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаЗаписиРегистраСУчетомИсправлений("ПараметрыАмортизацииОСБУ"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаЗаписиРегистраСУчетомИсправлений("ПервоначальныеСведенияОС"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаЗаписиРегистраСУчетомИсправлений("МестонахождениеОС"));

	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", Объект.Дата);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("СписокОС", ОсновноеСредство);
	Запрос.УстановитьПараметр("БезОтбораОС", Ложь);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаменитьПараметрыТекстаЗапросаДляРасчетаАмортизацииБУ(ТекстЗапроса)

	ПараметрыТекстаЗапроса = АмортизацияОСЛокализация.ПараметрыТекстаЗапросаСуммаАмортизацииБУ();
	ПараметрыТекстаЗапроса.ТекстСтоимостьДляВычисленияАмортизации = "СписокОС.СтоимостьДляВычисленияАмортизации";
	ПараметрыТекстаЗапроса.ТекстОстаточнаяСтоимость = "СписокОС.ОстаточнаяСтоимостьРегл";
	ПараметрыТекстаЗапроса.ТекстЛиквидационнаяСтоимость = "СписокОС.ЛиквидационнаяСтоимость";
	ПараметрыТекстаЗапроса.ТекстСтоимостьНаНачалоГода = "СписокОС.СтоимостьНаНачалоГода";

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаАмортизацииБУ", АмортизацияОСЛокализация.ТекстЗапросаСуммаАмортизацииБУ(ПараметрыТекстаЗапроса));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаБУ",        ВнеоборотныеАктивыСлужебный.ТекстРаспределенияСуммы("Амортизация.СуммаБУ"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаПР_регл",   ВнеоборотныеАктивыСлужебный.ТекстРаспределенияСуммы("Амортизация.СуммаПР"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаЦФ",        ВнеоборотныеАктивыСлужебный.ТекстРаспределенияСуммы("Амортизация.СуммаЦФ"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаПРЦФ_регл", ВнеоборотныеАктивыСлужебный.ТекстРаспределенияСуммы("Амортизация.СуммаПРЦФ"));
	
	ТекстПоля =
	"		ВЫБОР 
	|			КОГДА СписокОС.ОстаточнаяСтоимостьРегл <= 0
	|				ТОГДА 0
	|			КОГДА &СуммаБУ > СписокОС.ОстаточнаяСтоимостьРегл
	|					ИЛИ СписокОС.ОстаточнаяСтоимостьРегл - &СуммаБУ < &МинимальнаяОстаточнаяСтоимостьРегл
	|				ТОГДА СписокОС.ОстаточнаяСтоимостьРегл
	|			ИНАЧЕ &СуммаБУ
	|		КОНЕЦ";
	ТекстПоля = СтрЗаменить(ТекстПоля, "&СуммаБУ", "СУММА(СписокОС.СуммаБУ - ВЫРАЗИТЬ(СписокОС.СуммаБУ * СписокОС.КоэффициентЦФБУ КАК ЧИСЛО(31,2)))");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&РасчетСуммыБУ_БезЦФ", ТекстПоля);
	
	ТекстПоля =
	"		ВЫБОР 
	|			КОГДА СписокОС.НачислятьИзнос ИЛИ СписокОС.ОстаточнаяСтоимостьПР = 0
	|				ТОГДА 0
	|			КОГДА (СписокОС.ОстаточнаяСтоимостьПР > 0
	|						И (&СуммаПР > СписокОС.ОстаточнаяСтоимостьПР
	|							ИЛИ СписокОС.ОстаточнаяСтоимостьПР - &СуммаПР < &МинимальнаяОстаточнаяСтоимостьРегл)
	|					ИЛИ СписокОС.ОстаточнаяСтоимостьПР < 0
	|						И (&СуммаПР > -СписокОС.ОстаточнаяСтоимостьПР
	|							ИЛИ -СписокОС.ОстаточнаяСтоимостьПР - &СуммаПР < &МинимальнаяОстаточнаяСтоимостьРегл))
	|					И НЕ СписокОС.ЭтоАмортизационнаяПремия
	|				ТОГДА СписокОС.ОстаточнаяСтоимостьПР
	|			ИНАЧЕ &СуммаПР
	|		КОНЕЦ";
	ТекстПоля = СтрЗаменить(ТекстПоля, "&СуммаПР", "СУММА(СписокОС.СуммаПР - ВЫРАЗИТЬ(СписокОС.СуммаПР * СписокОС.КоэффициентЦФПР КАК ЧИСЛО(31,2)))");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&РасчетСуммыПР_БезЦФ", ТекстПоля);
	
	ТекстПоля =
	"		ВЫБОР
	|			КОГДА СписокОС.ОстаточнаяСтоимостьЦФ = 0
	|				ТОГДА 0
	|			КОГДА &СуммаЦФ > СписокОС.ОстаточнаяСтоимостьЦФ
	|					ИЛИ СписокОС.ОстаточнаяСтоимостьЦФ - &СуммаЦФ < &МинимальнаяОстаточнаяСтоимостьРегл
	|				ТОГДА СписокОС.ОстаточнаяСтоимостьЦФ
	|			ИНАЧЕ &СуммаЦФ
	|		КОНЕЦ";
	ТекстПоля = СтрЗаменить(ТекстПоля, "&СуммаЦФ", "СУММА(ВЫРАЗИТЬ(СписокОС.СуммаБУ * СписокОС.КоэффициентЦФБУ КАК ЧИСЛО(31,2)))");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&РасчетСуммыЦФ", ТекстПоля);
	
	ТекстПоля =
	"		ВЫБОР 
	|			КОГДА СписокОС.НачислятьИзнос ИЛИ СписокОС.ОстаточнаяСтоимостьПРЦФ = 0
	|				ТОГДА 0
	|			КОГДА СписокОС.ОстаточнаяСтоимостьПРЦФ > 0
	|						И (&СуммаПРЦФ > СписокОС.ОстаточнаяСтоимостьПРЦФ
	|							ИЛИ СписокОС.ОстаточнаяСтоимостьПРЦФ - &СуммаПРЦФ < &МинимальнаяОстаточнаяСтоимостьРегл)
	|					ИЛИ СписокОС.ОстаточнаяСтоимостьПРЦФ < 0
	|						И (&СуммаПРЦФ > -СписокОС.ОстаточнаяСтоимостьПРЦФ
	|							ИЛИ -СписокОС.ОстаточнаяСтоимостьПРЦФ - &СуммаПРЦФ < &МинимальнаяОстаточнаяСтоимостьРегл)
	|				ТОГДА СписокОС.ОстаточнаяСтоимостьПРЦФ
	|			ИНАЧЕ &СуммаПРЦФ
	|		КОНЕЦ";
	ТекстПоля = СтрЗаменить(ТекстПоля, "&СуммаПРЦФ", "СУММА(ВЫРАЗИТЬ(СписокОС.СуммаПР * СписокОС.КоэффициентЦФПР КАК ЧИСЛО(31,2)))");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&РасчетСуммыПРЦФ", ТекстПоля);
	
КонецПроцедуры

Процедура ЗаменитьПараметрыТекстаЗапросаДляРасчетаАмортизацииНУ(ТекстЗапроса)

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаАмортизацииНУ", АмортизацияОСЛокализация.ТекстЗапросаСуммаАмортизацииНУ());
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаНУ_регл",   ВнеоборотныеАктивыСлужебный.ТекстРаспределенияСуммы("Амортизация.СуммаНУ"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаНУЦФ_регл", ВнеоборотныеАктивыСлужебный.ТекстРаспределенияСуммы("Амортизация.СуммаНУЦФ"));
	
	ТекстПоля =
	"		ВЫБОР 
	|			КОГДА СписокОС.ОстаточнаяСтоимостьНУ <= 0
	|				ТОГДА 0
	|			КОГДА (&СуммаНУ > СписокОС.ОстаточнаяСтоимостьНУ
	|						ИЛИ СписокОС.ОстаточнаяСтоимостьНУ - &СуммаНУ < &МинимальнаяОстаточнаяСтоимостьРегл)
	|					И НЕ СписокОС.ЭтоАмортизационнаяПремия
	|				ТОГДА СписокОС.ОстаточнаяСтоимостьНУ
	|			ИНАЧЕ &СуммаНУ
	|		КОНЕЦ";
	ТекстПоля = СтрЗаменить(ТекстПоля, "&СуммаНУ", "СУММА(СписокОС.СуммаНУ - ВЫРАЗИТЬ(СписокОС.СуммаНУ * СписокОС.КоэффициентЦФНУ КАК ЧИСЛО(31,2)))");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&РасчетСуммыНУ_БезЦФ", ТекстПоля);
	
	ТекстПоля =
	"		ВЫБОР 
	|			КОГДА СписокОС.ОстаточнаяСтоимостьНУЦФ = 0
	|				ТОГДА 0
	|			КОГДА &СуммаНУЦФ > СписокОС.ОстаточнаяСтоимостьНУЦФ
	|					ИЛИ СписокОС.ОстаточнаяСтоимостьНУЦФ - &СуммаНУЦФ < &МинимальнаяОстаточнаяСтоимостьРегл
	|				ТОГДА СписокОС.ОстаточнаяСтоимостьНУЦФ
	|			ИНАЧЕ &СуммаНУЦФ
	|		КОНЕЦ";
	ТекстПоля = СтрЗаменить(ТекстПоля, "&СуммаНУЦФ", "СУММА(ВЫРАЗИТЬ(СписокОС.СуммаНУ * СписокОС.КоэффициентЦФНУ КАК ЧИСЛО(31,2)))");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&РасчетСуммыНУЦФ", ТекстПоля);
		
КонецПроцедуры

Процедура ЗаполнитьПараметрыЗаПериодНУ(Объект)
	
	ДатаДокумента = ?(Объект.Дата <> '000101010000', Объект.Дата, ТекущаяДатаСеанса());
	
	ОсновноеСредство = Неопределено;
	Для Каждого ДанныеСтроки Из Объект.ОС Цикл
		Если ЗначениеЗаполнено(ДанныеСтроки.ОсновноеСредство) Тогда
			ОсновноеСредство = ДанныеСтроки.ОсновноеСредство;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Объект.ПараметрыЗаПериодНУ.Очистить();
	
	СтандартныеДаты = Новый ТаблицаЗначений();
	СтандартныеДаты.Колонки.Добавить("Дата", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Период = НачалоДня(КонецМесяца(Объект.НачалоПериода));
	КонецПериода = НачалоМесяца(ДатаДокумента)-1;
	Пока Период <= КонецПериода Цикл
		СтрокаПараметры = СтандартныеДаты.Добавить();
		СтрокаПараметры.Дата = Период;
		Период = НачалоДня(КонецМесяца(ДобавитьМесяц(Период, 1)));
	КонецЦикла;
	
	СписокЗапросов = Новый Массив;

	#Область ДатаВводаВЭксплуатацию
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюНУ КАК ДатаВводаВЭксплуатациюНУ
	|ПОМЕСТИТЬ ДатаВводаВЭксплуатацию
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&Дата,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация = &Организация
	|				И ОсновноеСредство = &ОсновноеСредство) КАК ПервоначальныеСведенияОС";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ТаблицаДат
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(СтандартныеДаты.Дата, ДЕНЬ) КАК Дата
	|ПОМЕСТИТЬ СтандартныеДаты
	|
	|ИЗ
	|	&СтандартныеДаты КАК СтандартныеДаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтандартныеДаты.Дата КАК Дата,
	|
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(СтандартныеДаты.Дата, МЕСЯЦ) <= КОНЕЦПЕРИОДА(ЕСТЬNULL(ДатаВводаВЭксплуатацию.ДатаВводаВЭксплуатациюНУ, ДАТАВРЕМЯ(1,1,1)), МЕСЯЦ)
	|				ИЛИ ДатаВводаВЭксплуатацию.ДатаВводаВЭксплуатациюНУ ЕСТЬ NULL
	|			ТОГДА ДАТАВРЕМЯ(1,1,1)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(СтандартныеДаты.Дата, МЕСЯЦ), СЕКУНДА, -1) 
	|	КОНЕЦ КАК ДатаПараметров
	|
	|ПОМЕСТИТЬ ТаблицаДат
	|
	|ИЗ
	|	СтандартныеДаты КАК СтандартныеДаты
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДатаВводаВЭксплуатацию КАК ДатаВводаВЭксплуатацию
	|		ПО ИСТИНА";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область МестонахождениеОС
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация
	|
	|ПОМЕСТИТЬ МестонахождениеОС_Записи
	|
	|ИЗ
	|	МестонахождениеОС_СрезПоследнихСУчетомИсправлений КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация
	|ИЗ
	|	МестонахождениеОС_ЗаписиСУчетомИсправлений КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ДанныеРегистра.ОсновноеСредство = &ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ДанныеРегистраРегистраторЗаписи.ДатаПараметров КАК ДатаПараметров,
	|	МестонахождениеОС_Записи.Организация КАК Организация
	|
	|ПОМЕСТИТЬ МестонахождениеОС
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.ДатаПараметров КАК ДатаПараметров,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДат.Дата КАК Дата,
	|			ТаблицаДат.ДатаПараметров КАК ДатаПараметров,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаДат КАК ТаблицаДат
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= ТаблицаДат.ДатаПараметров
	|				
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДат.Дата,
	|			ТаблицаДат.ДатаПараметров
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|				
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи,
	|		ДанныеРегистраПериодЗаписи.ДатаПараметров
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК МестонахождениеОС_Записи
	|	ПО МестонахождениеОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И МестонахождениеОС_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПервоначальныеСведенияОС
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ДанныеРегистра.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ДанныеРегистра.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ
	|
	|ПОМЕСТИТЬ ПервоначальныеСведенияОС_Записи
	|
	|ИЗ
	|	ПервоначальныеСведенияОС_СрезПоследнихСУчетомИсправлений КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ДанныеРегистра.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ДанныеРегистра.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ
	|ИЗ
	|	ПервоначальныеСведенияОС_ЗаписиСУчетомИсправлений КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ДанныеРегистра.ОсновноеСредство = &ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ПервоначальныеСведенияОС_Записи.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС_Записи.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ПервоначальныеСведенияОС_Записи.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ
	|
	|ПОМЕСТИТЬ ПервоначальныеСведенияОС
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.Организация КАК Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МестонахождениеОС.Дата КАК Дата,
	|			МестонахождениеОС.Организация КАК Организация,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			МестонахождениеОС КАК МестонахождениеОС
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= МестонахождениеОС.ДатаПараметров
	|					И ДанныеРегистраПериодЗаписи.Организация = МестонахождениеОС.Организация
	|				
	|		СГРУППИРОВАТЬ ПО
	|			МестонахождениеОС.Дата,
	|			МестонахождениеОС.Организация
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.Организация = ДанныеРегистраПериодЗаписи.Организация
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС_Записи КАК ПервоначальныеСведенияОС_Записи
	|	ПО ПервоначальныеСведенияОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ПервоначальныеСведенияОС_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи
	|		И ПервоначальныеСведенияОС_Записи.Организация = ДанныеРегистраРегистраторЗаписи.Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаОСБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	ДанныеРегистра.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ,
	|	ДанныеРегистра.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ
	|
	|ПОМЕСТИТЬ ПорядокУчетаОСБУ_Записи
	|
	|ИЗ
	|	ПорядокУчетаОСБУ_СрезПоследнихСУчетомИсправлений КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	ДанныеРегистра.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ,
	|	ДанныеРегистра.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ
	|ИЗ
	|	ПорядокУчетаОСБУ_ЗаписиСУчетомИсправлений КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ДанныеРегистра.ОсновноеСредство = &ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ПорядокУчетаОСБУ_Записи.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	ПорядокУчетаОСБУ_Записи.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ,
	|	ПорядокУчетаОСБУ_Записи.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ
	|
	|ПОМЕСТИТЬ ПорядокУчетаОСБУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.Организация КАК Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МестонахождениеОС.Дата КАК Дата,
	|			МестонахождениеОС.Организация КАК Организация,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			МестонахождениеОС КАК МестонахождениеОС
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= МестонахождениеОС.ДатаПараметров
	|					И ДанныеРегистраПериодЗаписи.Организация = МестонахождениеОС.Организация
	|				
	|		СГРУППИРОВАТЬ ПО
	|			МестонахождениеОС.Дата,
	|			МестонахождениеОС.Организация
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.Организация = ДанныеРегистраПериодЗаписи.Организация
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи,
	|		ДанныеРегистраПериодЗаписи.Организация
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ_Записи КАК ПорядокУчетаОСБУ_Записи
	|	ПО ПорядокУчетаОСБУ_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ПорядокУчетаОСБУ_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи
	|		И ПорядокУчетаОСБУ_Записи.Организация = ДанныеРегистраРегистраторЗаписи.Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПараметрыАмортизацииОСБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
	|	ДанныеРегистра.КоэффициентАмортизацииБУ КАК КоэффициентАмортизацииБУ,
	|	ДанныеРегистра.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ДанныеРегистра.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ДанныеРегистра.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации,
	|	ДанныеРегистра.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ДанныеРегистра.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ДанныеРегистра.ГрафикАмортизации КАК ГрафикАмортизации,
	|	ДанныеРегистра.СпециальныйКоэффициент КАК СпециальныйКоэффициент,
	|	ДанныеРегистра.СтоимостьДляВычисленияАмортизацииЦФ КАК СтоимостьДляВычисленияАмортизацииЦФ
	|
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСБУ_Записи
	|
	|ИЗ
	|	ПараметрыАмортизацииОСБУ_СрезПоследнихСУчетомИсправлений КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
	|	ДанныеРегистра.КоэффициентАмортизацииБУ КАК КоэффициентАмортизацииБУ,
	|	ДанныеРегистра.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ДанныеРегистра.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ДанныеРегистра.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации,
	|	ДанныеРегистра.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ДанныеРегистра.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ДанныеРегистра.ГрафикАмортизации КАК ГрафикАмортизации,
	|	ДанныеРегистра.СпециальныйКоэффициент КАК СпециальныйКоэффициент,
	|	ДанныеРегистра.СтоимостьДляВычисленияАмортизацииЦФ КАК СтоимостьДляВычисленияАмортизацииЦФ
	|ИЗ
	|	ПараметрыАмортизацииОСБУ_ЗаписиСУчетомИсправлений КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ДанныеРегистра.ОсновноеСредство = &ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ПараметрыАмортизацииОСБУ_Записи.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
	|	ПараметрыАмортизацииОСБУ_Записи.КоэффициентАмортизацииБУ КАК КоэффициентАмортизацииБУ,
	|	ПараметрыАмортизацииОСБУ_Записи.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ПараметрыАмортизацииОСБУ_Записи.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ_Записи.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ_Записи.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ_Записи.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ_Записи.ГрафикАмортизации КАК ГрафикАмортизации,
	|	ПараметрыАмортизацииОСБУ_Записи.СпециальныйКоэффициент КАК СпециальныйКоэффициент,
	|	ПараметрыАмортизацииОСБУ_Записи.СтоимостьДляВычисленияАмортизацииЦФ КАК СтоимостьДляВычисленияАмортизацииЦФ
	|
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСБУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.Организация КАК Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МестонахождениеОС.Дата КАК Дата,
	|			МестонахождениеОС.Организация КАК Организация,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			МестонахождениеОС КАК МестонахождениеОС
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУ_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= МестонахождениеОС.ДатаПараметров
	|					И ДанныеРегистраПериодЗаписи.Организация = МестонахождениеОС.Организация
	|				
	|		СГРУППИРОВАТЬ ПО
	|			МестонахождениеОС.Дата,
	|			МестонахождениеОС.Организация
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУ_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.Организация = ДанныеРегистраПериодЗаписи.Организация
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи,
	|		ДанныеРегистраПериодЗаписи.Организация
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУ_Записи КАК ПараметрыАмортизацииОСБУ_Записи
	|	ПО ПараметрыАмортизацииОСБУ_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ПараметрыАмортизацииОСБУ_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи
	|		И ПараметрыАмортизацииОСБУ_Записи.Организация = ДанныеРегистраРегистраторЗаписи.Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаОС
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ПоказательНаработки КАК ПоказательНаработки,
	|	ДанныеРегистра.ОбъемНаработки КАК ОбъемНаработки
	|
	|ПОМЕСТИТЬ ПорядокУчетаОС_Записи
	|
	|ИЗ
	|	ПорядокУчетаОС_СрезПоследнихСУчетомИсправлений КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ПоказательНаработки КАК ПоказательНаработки,
	|	ДанныеРегистра.ОбъемНаработки КАК ОбъемНаработки
	|ИЗ
	|	ПорядокУчетаОС_ЗаписиСУчетомИсправлений КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ДанныеРегистра.ОсновноеСредство = &ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ПорядокУчетаОС_Записи.ПоказательНаработки КАК ПоказательНаработки,
	|	ПорядокУчетаОС_Записи.ОбъемНаработки КАК ОбъемНаработки
	|
	|ПОМЕСТИТЬ ПорядокУчетаОС
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МестонахождениеОС.Дата КАК Дата,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			МестонахождениеОС КАК МестонахождениеОС
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= МестонахождениеОС.ДатаПараметров
	|				
	|		СГРУППИРОВАТЬ ПО
	|			МестонахождениеОС.Дата
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОС_Записи КАК ПорядокУчетаОС_Записи
	|	ПО ПорядокУчетаОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ПорядокУчетаОС_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
		
	#Область СтоимостьОС
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтоимостьОС.Период,
	|	СтоимостьОС.Регистратор,
	|	СтоимостьОС.Организация,
	|	СтоимостьОС.СтоимостьРеглКонечныйОстаток КАК СтоимостьРегл,
	|	СтоимостьОС.СтоимостьНУКонечныйОстаток КАК СтоимостьНУ,
	|	СтоимостьОС.СтоимостьПРКонечныйОстаток КАК СтоимостьПР,
	|	СтоимостьОС.СтоимостьЦФКонечныйОстаток КАК СтоимостьЦФ,
	|	СтоимостьОС.СтоимостьПРЦФКонечныйОстаток КАК СтоимостьПРЦФ,
	|	СтоимостьОС.АмортизационнаяПремияКонечныйОстаток КАК АмортизационнаяПремия
	|
	|ПОМЕСТИТЬ СтоимостьОС_Записи
	|
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.ОстаткиИОбороты(
	|			&КонецПредыдущегоМесяцаГраница, 
	|			&КонецПериода, 
	|			Регистратор, 
	|			ДвиженияИГраницыПериода, 
	|			ОсновноеСредство = &ОсновноеСредство) КАК СтоимостьОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	СтоимостьОС_Записи.СтоимостьРегл КАК СтоимостьРегл,
	|	СтоимостьОС_Записи.СтоимостьНУ КАК СтоимостьНУ,
	|	СтоимостьОС_Записи.СтоимостьПР КАК СтоимостьПР,
	|	СтоимостьОС_Записи.СтоимостьЦФ КАК СтоимостьЦФ,
	|	СтоимостьОС_Записи.СтоимостьПРЦФ КАК СтоимостьПРЦФ,
	|	СтоимостьОС_Записи.АмортизационнаяПремия КАК АмортизационнаяПремия
	|
	|ПОМЕСТИТЬ СтоимостьОС
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.Организация КАК Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МестонахождениеОС.Дата КАК Дата,
	|			МестонахождениеОС.Организация КАК Организация,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			МестонахождениеОС КАК МестонахождениеОС
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтоимостьОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= МестонахождениеОС.ДатаПараметров
	|					И ДанныеРегистраПериодЗаписи.Организация = МестонахождениеОС.Организация
	|				
	|		СГРУППИРОВАТЬ ПО
	|			МестонахождениеОС.Дата,
	|			МестонахождениеОС.Организация
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтоимостьОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.Организация = ДанныеРегистраПериодЗаписи.Организация
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтоимостьОС_Записи КАК СтоимостьОС_Записи
	|	ПО СтоимостьОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И СтоимостьОС_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи
	|		И СтоимостьОС_Записи.Организация = ДанныеРегистраРегистраторЗаписи.Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
			
	#Область АмортизацияНаНачалоМесяца
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	-АмортизацияОС.АмортизацияРеглОстаток КАК АмортизацияРегл,
	|	-АмортизацияОС.АмортизацияНУОстаток КАК АмортизацияНУ,
	|	-АмортизацияОС.АмортизацияПРОстаток КАК АмортизацияПР,
	|	-АмортизацияОС.АмортизацияЦФОстаток КАК АмортизацияЦФ,
	|	-АмортизацияОС.АмортизацияПРЦФОстаток КАК АмортизацияПРЦФ
	|ИЗ
	|	РегистрНакопления.АмортизацияОС.Остатки(&КонецПредыдущегоМесяцаГраница, ОсновноеСредство = &ОсновноеСредство) КАК АмортизацияОС";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПервоначальныеСведенияОС
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДатаВводаВЭксплуатацию.ДатаВводаВЭксплуатациюНУ КАК ДатаВводаВЭксплуатациюНУ
	|ИЗ
	|	ДатаВводаВЭксплуатацию КАК ДатаВводаВЭксплуатацию";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВыборкаПараметровНУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ТаблицаДат.Дата, ДЕНЬ) КАК Дата,
	|
	|	ЕСТЬNULL(СтоимостьОС.СтоимостьНУ, ЕСТЬNULL(ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ, 0)) КАК СтоимостьНУ,
	|	ЕСТЬNULL(СтоимостьОС.СтоимостьПР, 0) КАК СтоимостьПР,
	|
	|	ЕСТЬNULL(ПорядокУчетаОСБУ.АмортизационнаяГруппа, ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПустаяСсылка)) КАК АмортизационнаяГруппа,
	|
	|	ЕСТЬNULL(СтоимостьОС.АмортизационнаяПремия, 0) АмортизационнаяПремия,
	|	
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.КоэффициентАмортизацииБУ, 0) КАК ГодоваяНормаАмортизацииБУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.КоэффициентУскорения, 0) КАК КоэффициентУскоренияБУ,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.МетодНачисленияАмортизацииНУ, ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияАмортизации.ПустаяСсылка)) КАК МетодНачисленияАмортизацииНУ,
	|
	|	ЕСТЬNULL(ПорядокУчетаОСБУ.НачислятьАмортизациюНУ, ЛОЖЬ) КАК НачислятьАмортизациюНУ,
	|
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ПРДляВычисленияАмортизации, 0) КАК ПРДляВычисленияАмортизации,
	|	
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СпециальныйКоэффициент, 0) КАК СпециальныйКоэффициентНУ,
	|	
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияНУ, 0) КАК СрокПолезногоИспользованияНУ
	|
	|ИЗ
	|	ТаблицаДат КАК ТаблицаДат
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО ПервоначальныеСведенияОС.Дата = ТаблицаДат.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО ПорядокУчетаОСБУ.Дата = ТаблицаДат.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ
	|		ПО ПараметрыАмортизацииОСБУ.Дата = ТаблицаДат.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьОС КАК СтоимостьОС
	|		ПО СтоимостьОС.Дата = ТаблицаДат.Дата";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	ПериодСреза = Объект.НачалоПериода - 1;
	
	СформироватьТаблицыСрезаПоследнихРегистровСУчетомИсправлений(
		Объект, 
		ПериодСреза, 
		ОсновноеСредство, 
		МенеджерВременныхТаблиц);
	
	СформироватьТаблицыЗаписейРегистровСУчетомИсправлений(
		Объект, 
		Объект.НачалоПериода, 
		НачалоМесяца(ДатаДокумента)-1, 
		ОсновноеСредство, 
		МенеджерВременныхТаблиц);
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Дата", ДатаДокумента);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
	Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", НачалоМесяца(ДатаДокумента)-1);
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяца", Объект.НачалоПериода-1);
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяцаГраница", Новый Граница(Объект.НачалоПериода-1, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПредыдущегоГодаГраница", Новый Граница(НачалоГода(Объект.НачалоПериода)-1, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодСреза", ПериодСреза);
	Запрос.УстановитьПараметр("СтандартныеДаты", СтандартныеДаты);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Выборка = Результат[Результат.ВГраница()-2].Выбрать();
	Если Выборка.Следующий() Тогда
		Объект.АмортизацияНУНаНачалоПериода = Выборка.АмортизацияНУ;
	Иначе
		Объект.АмортизацияНУНаНачалоПериода = 0;
	КонецЕсли;
	
	Выборка = Результат[Результат.ВГраница()-1].Выбрать();
	Если Выборка.Следующий() Тогда
		Объект.ДатаВводаВЭксплуатациюНУ = Выборка.ДатаВводаВЭксплуатациюНУ;
	КонецЕсли;
	
	Выборка = Результат[Результат.ВГраница()].Выбрать();
	Пока Выборка.Следующий() Цикл
	
		СтрокаПараметры = Объект.ПараметрыЗаПериодНУ.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПараметры, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

//-- Локализация

#КонецОбласти
