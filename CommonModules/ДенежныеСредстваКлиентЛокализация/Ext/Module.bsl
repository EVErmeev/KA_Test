#Область ПрограммныйИнтерфейс

//++ Локализация

//++ НЕ УТ

// Формирует список варианто заявлений на печать лицевых счетов. 
// Вызывается из УправлениеПечатьюСлужебныйКлиент.ВыполнитьПодключаемуюКомандуПечатиЗавершение
// 
// Параметры:
//  ПараметрыПечати - Структура - Параметры печати
// 
// Возвращаемое значение:
//  Неопределено
//
Функция ВыбратьВариантЗаявления(ПараметрыПечати) Экспорт

	ВидыЗаявлений = Новый СписокЗначений;
	ВидыЗаявлений.Вставить(0, "Открытие", НСтр("ru = 'Открытие'"));
	ВидыЗаявлений.Вставить(1, "Резервирование", НСтр("ru = 'Резервирование'"));
	ВидыЗаявлений.Вставить(2, "Закрытие", НСтр("ru = 'Закрытие'"));
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПараметрыПечати", ПараметрыПечати);
	ИмяМетода = "ВыбратьВариантЗаявленияЗавершение";
	ОповещениеПослеВыбораЗаявления = Новый ОписаниеОповещения(ИмяМетода, ЭтотОбъект, ДополнительныеПараметры);
	
	ВидыЗаявлений.ПоказатьВыборЭлемента(ОповещениеПослеВыбораЗаявления, НСтр("ru = 'Виды заявлений'"));
	
	Возврат Неопределено;

КонецФункции

//-- НЕ УТ

//-- Локализация

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ОткрытьРезультатОплатыСтрокГрафика(ЭлементФормы, Результат, Оповещение) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	Если Результат.ОткрыватьФормуПомощника И Результат.Свойство("ТребуетсяКонтрольГОЗ") Тогда
		
		СтруктураПараметры = Новый Структура;
		СтруктураПараметры.Вставить("ТребуетсяКонтрольГОЗ", Истина);
		СтруктураПараметры.Вставить("АдресСтрокГрафика", Результат.АдресСтрокГрафика);
		
		ОткрытьФорму("ОбщаяФорма.ПомощникФормированияПлатежныхДокументов",
			СтруктураПараметры,
			ЭлементФормы,,,,
			Оповещение,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
		Возврат Истина;
	КонецЕсли;
	//-- НЕ УТ

	//-- Локализация
	
	Возврат Ложь;
	
КонецФункции

//++ Локализация

#Область РаботаСФайлами

Процедура ОткрытьФормуСпискаФайловДляПередачиВБанк(Форма) Экспорт
	
	Обработчик = Новый ОписаниеОповещения("ОткрытьФормуСпискаФайловДляПередачиВБанкЗавершение", ЭтотОбъект, Форма);
	
	Если Форма.Объект.Ссылка.Пустая() Тогда
		ТекстВопроса = НСтр("ru = 'Данные еще не записаны.
			|Переход к файлам возможен только после записи данных.
			|Данные будут записаны.'");
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	Иначе
		ВыполнитьОбработкуОповещения(Обработчик, КодВозвратаДиалога.Пропустить);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуСпискаФайловДляПередачиВБанкЗавершение(Ответ, Форма) Экспорт
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		Форма.Записать();
	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВладелецФайла",  Форма.Объект.Ссылка);
	ПараметрыФормы.Вставить("ТолькоПросмотр", Форма.ТолькоПросмотр);
	
	Отбор = Новый Структура;
	Отбор.Вставить("ДляПередачиВБанк", Истина);
	ПараметрыФормы.Вставить("Отбор", Отбор);
	
	ОткрытьФорму("Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы",
		ПараметрыФормы,
		Форма,
		Истина,
		Форма.Окно);
	
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ

// Выбрать вариант заявления завершение.
// 
// Параметры:
//  ВыбранноеЗначение - ЭлементСпискаЗначений - выбранное значение.
//  ДополнительныеПараметры - Структура:
//   * ПараметрыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ВыбратьВариантЗаявленияЗавершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		
		Параметры = ДополнительныеПараметры.ПараметрыПечати; // Структура
		ПараметрыПечати = Новый Структура;
		ПараметрыПечати.Вставить("ВариантЗаявления", ВыбранноеЗначение.Значение);
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			Параметры.МенеджерПечати,
			Параметры.Идентификатор,
			Параметры.ОбъектыПечати,
			Параметры.Форма,
			ПараметрыПечати);
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает признак заполненности поля/колонки "Ведомость" в платежных документах с операцией на выплату зарплаты.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма платежного документа.
// 
// Возвращаемое значение:
//  Булево - признак заполненности ведомости на выплату зарплаты.
//
Функция ВедомостьНаВыплатуЗарплатыЗаполнена(Форма) Экспорт

	Заполнена = Истина;
	
	Для Каждого СтрокаТабличнойЧасти Из Форма.Объект.РасшифровкаПлатежа Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Ведомость) Тогда
			
			Если Форма.ПереключательРасшифровки = 1 Тогда
			
				ТекстСообщения = СтрШаблон(НСтр("ru = 'В строке %1 не заполнена ведомость на выплату зарплаты'"), СтрокаТабличнойЧасти.НомерСтроки);
				Поле = "РасшифровкаПлатежа[" + (СтрокаТабличнойЧасти.НомерСтроки - 1) + "].Ведомость";
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , Поле, "Объект");
			
			Иначе
			
				ТекстСообщения = НСтр("ru = 'Не заполнена ведомость на выплату зарплаты'");
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "РасшифровкаБезРазбиенияВедомость");
			
			КонецЕсли;
			
			Заполнена = Ложь;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Заполнена;

КонецФункции
//-- НЕ УТ

//-- Локализация

#КонецОбласти