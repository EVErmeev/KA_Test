////////////////////////////////////////////////////////////////////////////////
// Процедуры подсистемы "Имущественные налоги".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область НалогНаИмущество

// 
// Параметры:
//  Объект - ДокументОбъект.ВводПервоначальныхСведенийДляРасчетаНалогаНаИмущество, ДанныеФормыСтруктура - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция НастройкаРеквизитов_ВводПервоначальныхСведенийДляРасчетаНалогаНаИмущество(Объект, ИзмененныеРеквизиты = "") Экспорт
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;

	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда

		ЗначениеСвойства = (КонецМесяца(Объект.Дата) <> КонецГода(Объект.Дата));
										
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыРегистрацииДатаПараметров", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыНалогаДатаПараметров", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НалоговыйОрганДатаПараметров", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтоимостьИАмортизация", 
			"СтоимостьИАмортизация", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

#КонецОбласти

#Область ЗемельныйНалог

// Формирует представление льготы по земельному налогу.
// 
// Параметры:
//  ДанныеНастройки - ДокументОбъект.ПараметрыНачисленияЗемельногоНалога - Данные настройки
// 
// Возвращаемое значение:
//  Строка - Представление льготы по земельному налогу
Функция ПредставлениеЛьготыПоЗемельномуНалогу(ДанныеНастройки) Экспорт

	ТекстНалоговойЛьготы = "";
	
	Если ДанныеНастройки.НалоговаяЛьготаПоНалоговойБазе
			= ПредопределенноеЗначение("Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияПоСтатье395") Тогда
		
		ТекстНалоговойЛьготы = НСтр("ru = 'Освобождение от налогообложения по ст. 395 НК РФ'");
		
		Если НЕ ПустаяСтрока(ДанныеНастройки.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395) Тогда
			ШаблонТекста = НСтр("ru = '( %1 )'");
			ТекстНалоговойЛьготы = ТекстНалоговойЛьготы
				+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекста, ДанныеНастройки.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДанныеНастройки.НалоговаяЛьготаПоНалоговойБазе
			= ПредопределенноеЗначение("Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.УменьшениеНалоговойБазы") Тогда
		
		Если ДанныеНастройки.УменьшениеНалоговойБазыПоСтатье391 Тогда
		
			ТекстНалоговойЛьготы = ТекстНалоговойЛьготы + ?(ПустаяСтрока(ТекстНалоговойЛьготы), "", "; ")
				+ НСтр("ru = 'Не облагаемая налогом сумма 10 000 руб., установленная ст. 391 НК РФ'");
			
			Если НЕ ПустаяСтрока(ДанныеНастройки.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391) Тогда
				ШаблонТекста = НСтр("ru = '( %1 )'");
				ТекстНалоговойЛьготы = ТекстНалоговойЛьготы
					+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекста, ДанныеНастройки.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДанныеНастройки.УменьшениеНалоговойБазыНаСумму Тогда
			ШаблонТекста = НСтр("ru = 'Не облагаемая налогом сумма %1 руб., установленная местным нормативным актом'");
			ТекстНалоговойЛьготы = ТекстНалоговойЛьготы + ?(ПустаяСтрока(ТекстНалоговойЛьготы), "", "; ")
				+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекста, ДанныеНастройки.НеОблагаемаяНалогомСумма);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДанныеНастройки.НалоговаяЛьготаПоНалоговойБазе
			= ПредопределенноеЗначение("Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.ОсвобождениеОтНалогообложенияМестное") Тогда
		
		ТекстНалоговойЛьготы = ТекстНалоговойЛьготы + ?(ПустаяСтрока(ТекстНалоговойЛьготы), "", "; ")
			+ НСтр("ru = 'Освобождение от налогообложения, установленное местным нормативным актом'");
		
	КонецЕсли;
		
		
	Если ДанныеНастройки.НалоговаяЛьготаПоНалоговойБазе
			= ПредопределенноеЗначение("Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу.НеОблагаемаяНалогомПлощадь") Тогда
		
		ШаблонТекста = НСтр("ru = 'Доля не облагаемой налогом площади %1 / %2'");
		ТекстНалоговойЛьготы = ТекстНалоговойЛьготы + ?(ПустаяСтрока(ТекстНалоговойЛьготы), "", "; ")
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекста,
				ДанныеНастройки.ДоляНеОблагаемойНалогомПлощадиЧислитель, ДанныеНастройки.ДоляНеОблагаемойНалогомПлощадиЗнаменатель);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеНастройки.ПроцентУменьшенияСуммыНалога) Тогда
		
		ШаблонТекста = НСтр("ru = 'Уменьшение суммы налога на %1 %2'");
		ТекстНалоговойЛьготы = ТекстНалоговойЛьготы + ?(ПустаяСтрока(ТекстНалоговойЛьготы), "", "; ")
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекста, ДанныеНастройки.ПроцентУменьшенияСуммыНалога, "%");
		
	КонецЕсли;
		
	Если ЗначениеЗаполнено(ДанныеНастройки.СуммаУменьшенияСуммыНалога) Тогда
		
		ШаблонТекста = НСтр("ru = 'Уменьшение суммы налога в размере %1 руб.'");
		ТекстНалоговойЛьготы = ТекстНалоговойЛьготы + ?(ПустаяСтрока(ТекстНалоговойЛьготы), "", "; ")
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекста, ДанныеНастройки.СуммаУменьшенияСуммыНалога);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеНастройки.СниженнаяНалоговаяСтавка) Тогда
		
		ШаблонТекста = НСтр("ru = 'Снижение налоговой ставки до %1 %2'");
		ТекстНалоговойЛьготы = ТекстНалоговойЛьготы + ?(ПустаяСтрока(ТекстНалоговойЛьготы), "", "; ")
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекста, ДанныеНастройки.СниженнаяНалоговаяСтавка, "%");
		
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстНалоговойЛьготы) Тогда
		ТекстНалоговойЛьготы = НСтр("ru = 'Не применяется'");
	КонецЕсли;
	
	Возврат ТекстНалоговойЛьготы;
	
КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога, ДанныеФормыСтруктура - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция НастройкаРеквизитов_ВводПервоначальныхСведенийДляРасчетаЗемельногоНалога(Объект, ИзмененныеРеквизиты = "") Экспорт
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;

	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда

		ЗначениеСвойства = (КонецМесяца(Объект.Дата) <> КонецГода(Объект.Дата));
										
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПараметрыРегистрации.ДатаСнятияСРегистрации", 
			"ПараметрыРегистрацииДатаСнятияСРегистрации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыНалогаДатаПараметров", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НалоговыйОрганДатаПараметров", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

#КонецОбласти

#Область ТранспортныйНалог

// Представление базы транспортного налога.
// 
// Параметры:
//  ЕдиницаИзмеренияНалоговойБазы - Строка - 
// 
// Возвращаемое значение:
//  Строка - 
Функция ПредставлениеБазыТранспортногоНалога(ЕдиницаИзмеренияНалоговойБазы) Экспорт
	
	Если ПустаяСтрока(ЕдиницаИзмеренияНалоговойБазы) Тогда
		ПредставлениеНалоговойБазы = НСтр("ru = 'Налоговая база'");
	ИначеЕсли ЕдиницаИзмеренияНалоговойБазы = "251" Тогда
		ПредставлениеНалоговойБазы = НСтр("ru = 'Мощность двигателя'");
	ИначеЕсли ЕдиницаИзмеренияНалоговойБазы = "999" Тогда
		ПредставлениеНалоговойБазы = НСтр("ru = 'Сила тяги'");
	ИначеЕсли ЕдиницаИзмеренияНалоговойБазы = "181" Тогда
		ПредставлениеНалоговойБазы = НСтр("ru = 'Валовая вместимость'");
	ИначеЕсли ЕдиницаИзмеренияНалоговойБазы = "796" Тогда
		ПредставлениеНалоговойБазы = НСтр("ru = 'Налоговая база'");
	Иначе
		ПредставлениеНалоговойБазы = НСтр("ru = 'Налоговая база'");
	КонецЕсли;
	
	Возврат ПредставлениеНалоговойБазы;
	
КонецФункции

// Формирует представление льготы по транспортному налогу.
// 
// Параметры:
//  ДанныеНастройки - ДокументОбъект.ПараметрыНачисленияТранспортногоНалога - Данные настройки
// 
// Возвращаемое значение:
//  Строка - Представление льготы по транспортному налогу
Функция ПредставлениеЛьготыПоТранспортномуНалогу(ДанныеНастройки) Экспорт
	
	ТекстНалоговойЛьготы = "";
	
	Если ДанныеНастройки.НалоговаяЛьгота = ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.ОсвобождениеОтНалогообложения") Тогда
		
		ТекстНалоговойЛьготы = НСтр("ru = 'Освобождение от налогообложения'");
		
	ИначеЕсли ДанныеНастройки.НалоговаяЛьгота = ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.СнижениеНалоговойСтавки") Тогда
		
		ТекстНалоговойЛьготы = СтрШаблон(
			НСтр("ru = 'Пониженная налоговая ставка: %1'"), 
			ДанныеНастройки.ЛьготнаяСтавка);
		
	ИначеЕсли ДанныеНастройки.НалоговаяЛьгота = ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаВПроцентах") Тогда
		
		ТекстНалоговойЛьготы = СтрШаблон(
			НСтр("ru = 'Уменьшение суммы налога на: %1 %%'"),
			ДанныеНастройки.ПроцентУменьшения);
		
	ИначеЕсли ДанныеНастройки.НалоговаяЛьгота = ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.УменьшениеСуммыНалогаНаСумму") Тогда
		
		ТекстНалоговойЛьготы = СтрШаблон(
			НСтр("ru = 'Уменьшение суммы налога на %1'"),
			ДанныеНастройки.СуммаУменьшения);
		
	КонецЕсли;
	
	Если ДанныеНастройки.НалоговаяЛьгота <> ПредопределенноеЗначение("Перечисление.ВидыНалоговыхЛьготПоТранспортномуНалогу.НеПрименяется") Тогда
		
		Если ДанныеНастройки.КодНалоговойЛьготы = "30200" Тогда
			
			ТекстНалоговойЛьготы = СтрШаблон(
				НСтр("ru = '%1, код льготы %2'"),
				ТекстНалоговойЛьготы,
				ДанныеНастройки.КодНалоговойЛьготы);
			
		ИначеЕсли ЗначениеЗаполнено(ДанныеНастройки.КодНалоговойЛьготы)
			ИЛИ ЗначениеЗаполнено(ДанныеНастройки.РегиональныйКодЛьготы) Тогда
			
			ТекстНалоговойЛьготы = СтрШаблон(
				НСтр("ru = '%1, код льготы %2/%3'"),
				ТекстНалоговойЛьготы,
				?(ЗначениеЗаполнено(ДанныеНастройки.КодНалоговойЛьготы), ДанныеНастройки.КодНалоговойЛьготы, "<...>"),
				?(ЗначениеЗаполнено(ДанныеНастройки.РегиональныйКодЛьготы), ДанныеНастройки.РегиональныйКодЛьготы, "<...>"));
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстНалоговойЛьготы) Тогда
		ТекстНалоговойЛьготы = НСтр("ru = 'Не применяется'");
	КонецЕсли;

	Возврат ТекстНалоговойЛьготы;
	
КонецФункции

// 
// Параметры:
//  Объект - ДокументОбъект.ВводПервоначальныхСведенийДляРасчетаТранспортногоНалога, ДанныеФормыСтруктура - 
// 	ВспомогательныеРеквизиты - Структура - 
// 	ИзмененныеРеквизиты - Строка - список измененных реквизитов.
// 	
// Возвращаемое значение:
// 	Массив из см. ОбщегоНазначенияУТКлиентСервер.НовыйПараметрРеквизитаОбъекта 
Функция НастройкаРеквизитов_ВводПервоначальныхСведенийДляРасчетаТранспортногоНалога(Объект, ИзмененныеРеквизиты = "") Экспорт
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;

	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда

		ЗначениеСвойства = (КонецГода(Объект.Дата) <> КонецМесяца(Объект.Дата));
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыРегистрацииДатаСнятияСРегистрации", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПараметрыНалогаДатаПараметров", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
										
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НалоговыйОрганДатаПараметров", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
										
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АвансовыеПлатежи", 
			"АвансовыеПлатежи", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

#КонецОбласти

#КонецОбласти
