#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата              = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный     = Пользователи.ТекущийПользователь();
	Уведомление       = Документы.УведомлениеОСпецрежимахНалогообложения.ПустаяСсылка();
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Не ПлатежиВБюджет.ИспользуетсяЕдиныйНалоговыйПлатеж(Организация, Дата) Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Организация %1 не является плательщиком единого налогового платежа'"),
			Организация);
			
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, "Организация", "Объект", Отказ);
		
	КонецЕсли;
	
	ПроверятьОтчетныйНалоговыйПериод = Дата >= РеглУчетСервер.ДатаНачалаОбязательногоПримененияЕНП();
	
	Если ПроверятьОтчетныйНалоговыйПериод Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Налоги.СрокУплаты");
	КонецЕсли;
	
	Для Каждого СтрокаДокумента Из Налоги Цикл
		
		// С момента всеобщего перехода на ЕНС требуется проверять отчетный период
		Если ПроверятьОтчетныйНалоговыйПериод Тогда
			Если Не ЗначениеЗаполнено(СтрокаДокумента.НачалоПериода)
				Или Не ЗначениеЗаполнено(СтрокаДокумента.КонецПериода)
				Или СтрокаДокумента.НачалоПериода > СтрокаДокумента.КонецПериода Тогда
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Некорректно указан отчетный (налоговый) период в строке %1 списка ""Налоги""'"),
					СтрокаДокумента.НомерСтроки);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Налоги", "Объект");
			КонецЕсли;
		Иначе
			// Уведомления по налогам и взносам подается до наступления срока платежа.
			// Исключение - НДФЛ, по которому сведения подаются после уплаты.
			// В остальных случаях - сообщаем пользователю о возможной ошибке.
			Если ЗначениеЗаполнено(СтрокаДокумента.СрокУплаты)
				И (СтрокаДокумента.СрокУплаты < НачалоДня(Дата)
					И (СтрокаДокумента.ТипНалога <> Перечисления.ТипыНалогов.НДФЛ
					И СтрокаДокумента.ТипНалога <> Перечисления.ТипыНалогов.НДФЛСПревышения)) Тогда
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Вероятно, некорректно заполнена колонка ""Срок уплаты"" в строке %1 списка ""Налоги"": указанное значение меньше даты уведомления'"),
					СтрокаДокумента.НомерСтроки);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Налоги", "Объект");
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СуммаДокумента = Налоги.Итог("Сумма");
	
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("СинхронизацияСостоянийУведомлений") Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(Налоги) Тогда
		АктуализироватьУведомлениеОСпецрежимахНалогообложения(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьУП.СинхронизироватьСостояниеУведомлений(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьОбязательныеПоля(Отказ) Экспорт
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не указана организация.'"), ЭтотОбъект, "Организация", "Объект", Отказ);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьДанныеДокумента(Отказ) Экспорт
	
	Если Не ПроверитьЗаполнение() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Ошибки = Неопределено;
	ДополнительныеСвойства.Свойство("Ошибки", Ошибки);
	
КонецПроцедуры

Процедура АктуализироватьУведомлениеОСпецрежимахНалогообложения(ТекущийОбъект)
	
	ГоловнаяОрганизация         = БухгалтерскийУчетПереопределяемый.ГоловнаяОрганизация(ТекущийОбъект.Организация);
	РегистрацияВНалоговомОргане = Справочники.Организации.РегистрацияВНалоговомОргане(ГоловнаяОрганизация, ТекущийОбъект.Дата);
	ЭтоЮЛ                       = ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(ГоловнаяОрганизация);
	
	Если Не ЗначениеЗаполнено(ТекущийОбъект.Ссылка) Тогда
		СсылкаОбъекта = Документы.УведомлениеОбИсчисленныхСуммахНалогов.ПолучитьСсылку(Новый УникальныйИдентификатор);
		ТекущийОбъект.УстановитьСсылкуНового(СсылкаОбъекта);
	Иначе
		СсылкаОбъекта = ТекущийОбъект.Ссылка;
	КонецЕсли;
	
	// Титульный
	ДанныеУведомленияТитульный = Новый Структура;
	
	Если ЭтоЮЛ Тогда 
		СтрокаСведений = "ИННЮЛ,НаимЮЛПол,КППЮЛ,ТелОрганизации,ФамилияРук,ИмяРук,ОтчествоРук";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
			ГоловнаяОрганизация,
			ТекущийОбъект.Дата,
			СтрокаСведений);
		ДанныеУведомленияТитульный.Вставить("ИНН",     СведенияОбОрганизации.ИННЮЛ);
		ДанныеУведомленияТитульный.Вставить("НаимОрг", СведенияОбОрганизации.НаимЮЛПол);
		ДанныеУведомленияТитульный.Вставить("КПП",     СведенияОбОрганизации.КППЮЛ);
		ДанныеУведомленияТитульный.Вставить("Тлф",     СведенияОбОрганизации.ТелОрганизации);
	Иначе
		СтрокаСведений = "ФИО,ИННФЛ,ТелДом,ФамилияИП,ИмяИП,ОтчествоИП";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
			ГоловнаяОрганизация,
			ТекущийОбъект.Дата,
			СтрокаСведений);
		ДанныеУведомленияТитульный.Вставить("ИНН",     СведенияОбОрганизации.ИННФЛ);
		ДанныеУведомленияТитульный.Вставить("НаимОрг", СведенияОбОрганизации.ФИО);
		ДанныеУведомленияТитульный.Вставить("Тлф",     СведенияОбОрганизации.ТелДом);
		ДанныеУведомленияТитульный.Вставить("КПП",     "");
	КонецЕсли;
	ДанныеУведомленияТитульный.Вставить("ДАТА_ПОДПИСИ",     ТекущийОбъект.Дата);
	ДанныеУведомленияТитульный.Вставить("РегистрацияВИФНС", РегистрацияВНалоговомОргане);
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РегистрацияВНалоговомОргане, "Код,Представитель,КПП,ДокументПредставителя");
	ДанныеУведомленияТитульный.Вставить("КодНО", Реквизиты.Код);
	ДанныеУведомленияТитульный.Вставить("КПП",   Реквизиты.КПП);
	
	ПодписантФамилия  = "";
	ПодписантИмя      = "";
	ПодписантОтчество = "";
	Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
		СведенияОПредставителе = РегламентированнаяОтчетностьВызовСервера.ПолучитьПоКодамСведенияОПредставителе(
			ТекущийОбъект.Организация,
			ДанныеУведомленияТитульный["КодНО"], 
			ДанныеУведомленияТитульный["КПП"]);
		Если ЗначениеЗаполнено(СведенияОПредставителе.НаименованиеОрганизацииПредставителя) Тогда
			ПодписантСтр = СведенияОПредставителе.ФИОПредставителя;
			ФИО = РегламентированнаяОтчетность.РазложитьФИО(ПодписантСтр);
			ПодписантФамилия = СокрЛП(ФИО.Фамилия);
			ПодписантИмя = СокрЛП(ФИО.Имя);
			ПодписантОтчество = СокрЛП(ФИО.Отчество);
		Иначе
			ДанныеПредставителя = РегламентированнаяОтчетностьПереопределяемый.ПолучитьСведенияОФизЛице(
				Реквизиты.Представитель,
				,
				ТекущийОбъект.Дата);
			ПодписантФамилия  = СокрЛП(ДанныеПредставителя.Фамилия);
			ПодписантИмя      = СокрЛП(ДанныеПредставителя.Имя);
			ПодписантОтчество = СокрЛП(ДанныеПредставителя.Отчество);
			ПодписантСтр = СокрЛП(ПодписантФамилия + " " + ПодписантИмя + " " + ПодписантОтчество);
		КонецЕсли;
		ДанныеУведомленияТитульный.Вставить("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ", ПодписантСтр);
		ДанныеУведомленияТитульный.Вставить("НаимОргПред",                    СведенияОПредставителе.НаименованиеОрганизацииПредставителя);
		ДанныеУведомленияТитульный.Вставить("ПРИЗНАК_НП_ПОДВАЛ",              "2");
		ДанныеУведомленияТитульный.Вставить("НаимДок",                        Реквизиты.ДокументПредставителя);
	Иначе
		Если ЭтоЮЛ Тогда
			ПодписантФамилия  = СведенияОбОрганизации.ФамилияРук;
			ПодписантИмя      = СведенияОбОрганизации.ИмяРук;
			ПодписантОтчество = СведенияОбОрганизации.ОтчествоРук;
		Иначе
			ПодписантФамилия  = СведенияОбОрганизации.ФамилияИП;
			ПодписантИмя      = СведенияОбОрганизации.ИмяИП;
			ПодписантОтчество = СведенияОбОрганизации.ОтчествоИП;
		КонецЕсли;
		ПодписантСтр = СокрЛП(ПодписантФамилия + " " + ПодписантИмя + " " + ПодписантОтчество);
		ДанныеУведомленияТитульный.Вставить("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ", ПодписантСтр);
		ДанныеУведомленияТитульный.Вставить("ПРИЗНАК_НП_ПОДВАЛ",              "1");
		ДанныеУведомленияТитульный.Вставить("НаимДок",                        "");
	КонецЕсли;
	
	МассивРегистраций = ОбщегоНазначения.ВыгрузитьКолонку(ТекущийОбъект.Налоги, "РегистрацияВНалоговомОргане", Истина);
	РквизитыРегистраций = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивРегистраций, "КПП");
	
	// СумИсчНалог
	ДанныеУведомленияРезультат = Новый Массив;
	Для Каждого ТекущаяСтрока Из ТекущийОбъект.Налоги Цикл
		
		СтруктураДанныхНалог = Новый Структура;
		СтруктураДанныхНалог.Вставить("КППДекл",       РквизитыРегистраций[ТекущаяСтрока.РегистрацияВНалоговомОргане]);
		СтруктураДанныхНалог.Вставить("ОКТМО",         СокрЛП(ТекущаяСтрока.КодПоОКТМО));
		СтруктураДанныхНалог.Вставить("КБК",           ТекущаяСтрока.КодБК);
		СтруктураДанныхНалог.Вставить("СумНалогАванс", ТекущаяСтрока.Сумма);
		СтруктураДанныхНалог.Вставить("СрокУпл",       ТекущаяСтрока.СрокУплаты);
		
		СоставПериода = РазложитьПериод(ТекущаяСтрока.НачалоПериода, ТекущаяСтрока.КонецПериода);
		СтруктураДанныхНалог.Вставить("Период",        СоставПериода.Период);
		СтруктураДанныхНалог.Вставить("НомерМесКварт", СоставПериода.НомерМесКварт);
		СтруктураДанныхНалог.Вставить("Год",           СоставПериода.Год);
		
		ДанныеУведомленияРезультат.Добавить(СтруктураДанныхНалог);
		
	КонецЦикла;
	
	ПараметрыЗаявления = Новый Структура;
	ПараметрыЗаявления.Вставить("Организация",          ГоловнаяОрганизация);
	ПараметрыЗаявления.Вставить("РегистрацияВИФНС",     РегистрацияВНалоговомОргане);
	ПараметрыЗаявления.Вставить("Титульная",            ДанныеУведомленияТитульный);
	ПараметрыЗаявления.Вставить("СумИсчНалог",          ДанныеУведомленияРезультат);
	ПараметрыЗаявления.Вставить("ПодписантФамилия",     ПодписантФамилия);
	ПараметрыЗаявления.Вставить("ПодписантИмя",         ПодписантИмя);
	ПараметрыЗаявления.Вставить("ПодписантОтчество",    ПодписантОтчество);
	ПараметрыЗаявления.Вставить("ДокументОснование",    СсылкаОбъекта);
	ПараметрыЗаявления.Вставить("ДатаОснования",        Дата);
	ПараметрыЗаявления.Вставить("КомментарийОснования", Комментарий);
	Если ЗначениеЗаполнено(ТекущийОбъект.Уведомление) И ОбщегоНазначения.СсылкаСуществует(ТекущийОбъект.Уведомление) Тогда
		ПараметрыЗаявления.Вставить("СсылкаНаДокумент", ТекущийОбъект.Уведомление);
	КонецЕсли;
	
	ТекущийОбъект.Уведомление = Отчеты.РегламентированноеУведомлениеИсчисленныеСуммыНалогов.СформироватьНовоеУведомление(
			Отчеты.РегламентированноеУведомлениеИсчисленныеСуммыНалогов.ДействующаяРедакцияФормы(ТекущийОбъект.Дата),
			ПараметрыЗаявления);
	
КонецПроцедуры

Функция РазложитьПериод(НачалоПериода, КонецПериода)
	
	// Год:
	//    год отчетного периода
	// Период:
	//    21 - первый квартал
	//    31 - полугодие
	//    33 - 9 месяцев
	//    34 - год
	// НомерМесКварт:
	//    01 - первый месяц квартала/первый квартал (для 34)
	//    02 - второй месяц квартала/второй квартал (для 34)
	//    03 - третий месяц квартала/третий квартал (для 34)
	//    04 - конец декабря/четвертый квартал (для 34)
	
	
	СоставПериода = Новый Структура("Период, НомерМесКварт, Год");
	Если ЗначениеЗаполнено(НачалоПериода) И ЗначениеЗаполнено(КонецПериода) Тогда
		
		СоставПериода.Год = Формат(Год(НачалоПериода), "ЧГ=");
		
		НомерМесяца = Месяц(НачалоПериода);
		НомерКвартала = Цел((НомерМесяца - 1) / 3 + 1);
		Если НачалоМесяца(НачалоПериода) <> НачалоПериода
			И КонецМесяца(НачалоПериода) = КонецГода(НачалоПериода) Тогда
			// Особый период для декабря
			СоставПериода.НомерМесКварт = "04";
		ИначеЕсли НачалоМесяца(НачалоПериода) = НачалоМесяца(КонецПериода) Тогда 
			// Получим номер месяца
			НомерМесКварт = НомерМесяца - Цел((НомерМесяца - 1)/3) * 3;
			СоставПериода.НомерМесКварт = Формат(НомерМесКварт, "ЧЦ=2; ЧН=00; ЧВН=");
		Иначе
			// Получим номер квартала
			СоставПериода.НомерМесКварт = Формат(НомерКвартала, "ЧЦ=2; ЧН=00; ЧВН=");
			СоставПериода.Период = "34";
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СоставПериода.Период) Тогда
			Если НомерКвартала = 1 Тогда
				СоставПериода.Период = "21";
			ИначеЕсли НомерКвартала = 2 Тогда
				СоставПериода.Период = "31";
			ИначеЕсли НомерКвартала = 3 Тогда
				СоставПериода.Период = "33";
			Иначе
				СоставПериода.Период = "34";
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СоставПериода;
	
КонецФункции

#КонецОбласти

#КонецЕсли