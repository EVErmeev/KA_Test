#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли; 
	
	Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		ОбязательстваОтраженыВБухучете = Ложь;
	КонецЕсли;
	
	РезервыПоОплатеТрудаПереопределяемый.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли; 
	
	РезервыПоОплатеТрудаПереопределяемый.ПриЗаписи(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ОбязательстваОтраженыВБухучете = Ложь;
	Бухгалтер = Справочники.Пользователи.ПустаяСсылка();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ВидОперации = Перечисления.ВидыОперацийРезервовПоОплатеТруда.Корректировка
		Или ВидОперации = Перечисления.ВидыОперацийРезервовПоОплатеТруда.Списание Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Начисления");
		МассивНепроверяемыхРеквизитов.Добавить("Взносы");
		МассивНепроверяемыхРеквизитов.Добавить("РасчетРезервов");
	КонецЕсли;
	
	ПроверятьМестоВСтруктуреПредприятия = Ложь;
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда
		МодульОрганизационнаяСтруктура = ОбщегоНазначения.ОбщийМодуль("ОрганизационнаяСтруктура");
		ПроверятьМестоВСтруктуреПредприятия = МодульОрганизационнаяСтруктура.СтруктураПредприятияИспользуетсяДляОтраженияЗарплатыВРегламентированномУчете();
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов.Добавить("ОценочныеОбязательстваПоСотрудникам.МестоВСтруктуреПредприятия");
	Если НЕ ПроверятьМестоВСтруктуреПредприятия Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ОценочныеОбязательства.МестоВСтруктуреПредприятия");
	Иначе
		Для Каждого СтрокаТаблицы Из ОценочныеОбязательстваПоСотрудникам Цикл
			Если НЕ СтрокаТаблицы.КорректировкаОбязательств
				И НЕ ЗначениеЗаполнено(СтрокаТаблицы.МестоВСтруктуреПредприятия) Тогда
				
				Префикс = "ОценочныеОбязательстваПоСотрудникам[" + Формат(СтрокаТаблицы.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Не заполнена колонка ""Место в структуре предприятия"" в строке %1 списка "" Обязательства и резервы по сотрудникам""'"),
				СтрокаТаблицы.НомерСтроки);
				Поле = Префикс + "МестоВСтруктуреПредприятия";
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
				Отказ = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов.Добавить("СтатьяДоходов");
	МассивНепроверяемыхРеквизитов.Добавить("СтатьяРасходов");
	Если ВидОперации = Перечисления.ВидыОперацийРезервовПоОплатеТруда.Начисление
		ИЛИ ВидОперации = Перечисления.ВидыОперацийРезервовПоОплатеТруда.Инвентаризация Тогда
		
		ЕстьСписания = Ложь;
		ЕстьНачисления = Ложь;
		
		Для Каждого СтрокаТаблицы Из ОценочныеОбязательства Цикл
			
			ЕстьСписания = ЕстьСписания ИЛИ (Мин(СтрокаТаблицы.СуммаРезерва, СтрокаТаблицы.СуммаРезерваНУ,
				СтрокаТаблицы.СуммаРезерваСтраховыхВзносов, СтрокаТаблицы.СуммаРезерваСтраховыхВзносовНУ,
				СтрокаТаблицы.СуммаРезерваФССНесчастныеСлучаи, СтрокаТаблицы.СуммаРезерваФССНесчастныеСлучаиНУ) < 0);
			
			ЕстьНачисления = ЕстьНачисления ИЛИ (Макс(СтрокаТаблицы.СуммаРезерва, СтрокаТаблицы.СуммаРезерваНУ,
				СтрокаТаблицы.СуммаРезерваСтраховыхВзносов, СтрокаТаблицы.СуммаРезерваСтраховыхВзносовНУ,
				СтрокаТаблицы.СуммаРезерваФССНесчастныеСлучаи, СтрокаТаблицы.СуммаРезерваФССНесчастныеСлучаиНУ) > 0);
				
			Если ЕстьСписания И ЕстьНачисления Тогда
				Прервать; // Есть и списания и начисления проверять все строки не нужно
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЕстьСписания И НЕ ЗначениеЗаполнено(СтатьяДоходов) Тогда
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru='Не заполнено поле ""Статья доходов""'"), ЭтотОбъект, "СтатьяДоходов", "Объект", Отказ);
		КонецЕсли;
		
		Если ЕстьНачисления И НЕ ЗначениеЗаполнено(СтатьяРасходов)
			И ВидОперации = Перечисления.ВидыОперацийРезервовПоОплатеТруда.Инвентаризация Тогда
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru='Не заполнено поле ""Статья расходов""'"), ЭтотОбъект, "СтатьяРасходов", "Объект", Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ПараметрыВыбораСтатейИАналитик = РезервыПоОплатеТрудаУП.ПараметрыВыбораСтатейИАналитик();
	ДоходыИРасходыСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, ПараметрыВыбораСтатейИАналитик);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ТребуетсяУтверждениеДокумента = Документы.РезервыПоОплатеТруда.ТребуетсяУтверждениеДокументаБухгалтером(Организация);
	
	Если Не ТребуетсяУтверждениеДокумента Или ОбязательстваОтраженыВБухучете Тогда
		
		ДанныеДляОтражения = РезервыПоОплатеТруда.СтруктураДанныхДляОтраженияВУчете();
		Документы.РезервыПоОплатеТруда.ПодготовитьДанныеДляОтраженияВУчете(Ссылка, ДанныеДляОтражения);
		
		РезервыПоОплатеТруда.СформироватьДвиженияПоНачислениюОбязательств(Движения, Отказ, Организация, Дата, МесяцНачисления, ДанныеДляОтражения);
		
		ОтражениеЗарплатыВБухучетеПереопределяемый.СформироватьДвижения(Движения, Отказ, Организация, МесяцНачисления, ДанныеДляОтражения);
		
		РезервыПоОплатеТрудаПереопределяемый.СформироватьДвижения(ЭтотОбъект, Отказ, РежимПроведения);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	РезервыПоОплатеТрудаПереопределяемый.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли