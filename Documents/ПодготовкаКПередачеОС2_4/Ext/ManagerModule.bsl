
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("ОсновныеСредства");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("УчетДоходовРасходов");
	
	ПодготовкаКПередачеОСЛокализация.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура:
//     * Ключ - Строка - Имя таблицы.
//     * Значение - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда

		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		ЗаполнитьПараметрыИнициализации(Запрос, Документ);
		
		СформироватьРасширеннуюТаблицуОС(Запрос, ТекстыЗапроса);
		ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПорядокУчетаОСУУ(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПереданныеВАрендуОС(ТекстыЗапроса, Регистры);	
		
		
		ПодготовкаКПередачеОСЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);

	КонецЕсли;
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

// Формирует таблицы движений при отложенном проведении.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ПодготовкаКПередачеОС2_4 - Документ, для которого формируются движения
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Содержит вспомогательные временные таблицы, которые могут использоваться для формирования движений.
//
// Возвращаемое значение:
//  см. ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения
//
Функция ТаблицыОтложенногоФормированияДвижений(ДокументСсылка, МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
		
	СформироватьРасширеннуюТаблицуОС(Запрос, ТекстыЗапроса);
	
	ТекстЗапросаТаблицаСтоимостьОС(ТекстыЗапроса);
	ТекстЗапросаТаблицаАмортизацияОС(ТекстыЗапроса);
	ТекстЗапросаТаблицаОбесценениеВНА(ТекстыЗапроса);
	ТекстЗапросаТаблицаПереданныеВАрендуОС(ТекстыЗапроса, Неопределено);
	ТекстЗапросаТаблицаПрочиеРасходы(ТекстыЗапроса);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(ТекстыЗапроса);
	ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса);
	ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(ТекстыЗапроса);
	
	ТаблицыДляДвижений = ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, Неопределено);
	
	Возврат ТаблицыДляДвижений;
	
КонецФункции

#КонецОбласти

#Область Команды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.РеализацияУслугПрочихАктивов.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	ПодготовкаКПередачеОСЛокализация.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры);

КонецПроцедуры

// Добавляет команду создания документа "Подготовка к передаче ОС".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
// Возвращаемое значение:
//	СтрокаТаблицыЗначений - добавленная команда
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПодготовкаКПередачеОС2_4) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ПодготовкаКПередачеОС2_4.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ПодготовкаКПередачеОС2_4);
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьВнеоборотныеАктивы2_4";
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ПодготовкаКПередачеОСЛокализация.ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры);

КонецПроцедуры

#КонецОбласти

#Область УчетНДС

// Инициализирует параметры заполнения налогообложения НДС продажи
//
// Параметры:
//  Объект - ДокументОбъект.ПодготовкаКПередачеОС2_4, ДокументСсылка.ПодготовкаКПередачеОС2_4, ДанныеФормыСтруктура - документ, для которого необходимо получить параметры.
//
// Возвращаемое значение:
//  См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи
//
Функция ПараметрыЗаполненияНалогообложенияНДСПродажи(Объект) Экспорт

	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи();
	
	ПараметрыЗаполнения.Организация = Объект.Организация;
	ПараметрыЗаполнения.Дата = Объект.Дата;
	ПараметрыЗаполнения.РеализацияПрочихАктивов = Истина;

	Возврат ПараметрыЗаполнения;
	
КонецФункции

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	Возврат ИсточникиДанных;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ПодготовкаКПередачеОС2_4";
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать", """""");
	
	ВЗапросеЕстьИсточник = Истина;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "";
		ВЗапросеЕстьИсточник = Ложь;
		
	ИначеЕсли ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов"
		ИЛИ ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                 КАК Ссылка,
	|	ДанныеДокумента.Дата                   КАК Период,
	|	ДанныеДокумента.Номер                  КАК Номер,
	|	ДанныеДокумента.Организация            КАК Организация,
	|	ДанныеДокумента.Подразделение          КАК Подразделение,
	|	ДанныеДокумента.СобытиеОС              КАК СобытиеОС,
	|	ДанныеДокумента.Ответственный          КАК Ответственный,
	|	ДанныеДокумента.Комментарий            КАК Комментарий,
	|	ДанныеДокумента.Проведен               КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления        КАК ПометкаУдаления,
	|	ДанныеДокумента.ОтражатьВУпрУчете      КАК ОтражатьВУпрУчете,
	|	ДанныеДокумента.ОтражатьВРеглУчете     КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВБУ            КАК ОтражатьВБУ,
	|	ДанныеДокумента.ОтражатьВНУ            КАК ОтражатьВНУ
	|ИЗ
	|	Документ.ПодготовкаКПередачеОС2_4 КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)
	
	ЗначенияПараметровПроведения = Новый Структура;
	ВнеоборотныеАктивы.ДополнитьЗначенияПараметровПроведенияПриСписанииОС(ЗначенияПараметровПроведения);

	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПодготовкаКПередачеОС2_4"));
	ЗначенияПараметровПроведения.Вставить("НазваниеДокумента", НСтр("ru='Подготовка к передаче ОС'"));

	ЗначенияПараметровПроведения.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПодготовкаКПередачеОС);
	ЗначенияПараметровПроведения.Вставить("НастройкаХозяйственнойОперации", Справочники.НастройкиХозяйственныхОпераций.ПодготовкаКПередачеОС);
	
	ЗначенияПараметровПроведения.Вставить("СтатьяВыбытияОС", ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриПродажеОС);

	Если Реквизиты <> Неопределено Тогда
		ЗначенияПараметровПроведения.Вставить("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	КонецЕсли;
	
	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

// Определяет необходимость дополнять таблицу ОС принадлежащими им компонентами и узлами
//  и при необходимости формирует временную таблицу.
//
// Параметры:
//  Запрос - Запрос -
//  ТекстыЗапроса - СписокЗначений из Строка -
Процедура СформироватьРасширеннуюТаблицуОС(Запрос, ТекстыЗапроса)

	ТекстЗапросаТаблицаВтРасширеннаяТаблицаОС(ТекстыЗапроса);

КонецПроцедуры

Функция ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДокументыПоОС";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаОС.НомерСтроки-1, 0) КАК НомерЗаписи,
	|	&Ссылка                          КАК Ссылка,
	|	&Период                          КАК Дата,
	|	&Организация                     КАК Организация,
	|	&Подразделение                   КАК Подразделение,
	|	&ИдентификаторМетаданных         КАК ТипСсылки,
	|	&ХозяйственнаяОперация           КАК ХозяйственнаяОперация,
	|	&Проведен                        КАК Проведен,
	|	&ОтражатьВРеглУчете              КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете               КАК ОтражатьВУпрУчете,
	|	&СобытиеОС                       КАК СобытиеОС,
	|	ТаблицаОС.ОсновноеСредство       КАК ОсновноеСредство
	|ИЗ
	|	Документ.ПодготовкаКПередачеОС2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПодготовкаКПередачеОС2_4.ОС КАК ТаблицаОС
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОС.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                         КАК Ссылка,
	|	&Период                         КАК ДатаДокументаИБ,
	|	&Номер                          КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных        КАК ТипСсылки,
	|	&Организация                    КАК Организация,
	|	&ХозяйственнаяОперация          КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                    КАК НаправлениеДеятельности,
	|	&Подразделение                  КАК Подразделение,
	|	&Ответственный                  КАК Ответственный,
	|	&Комментарий                    КАК Комментарий,
	|	&Проведен                       КАК Проведен,
	|	&ПометкаУдаления                КАК ПометкаУдаления,
	|	ЛОЖЬ                            КАК ДополнительнаяЗапись,
	|	&Период                         КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                  КАК НомерПервичногоДокумента,
	|	ЛОЖЬ                            КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО                    КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО                    КАК ИсправляемыйДокумент,
	|	&Период                         КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО                    КАК Приоритет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПервоначальныеСведенияОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПервоначальныеСведенияОС(ТекстыЗапроса, ПолноеИмяОбъекта());
	
	ТекстЗапроса = ПодготовкаКПередачеОСЛокализация.ТекстЗапросаТаблицаПервоначальныеСведенияОС();
	
	Если ТекстЗапроса = Неопределено Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Период КАК Период,
		|	&Организация КАК Организация,
		|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
		|
		|	ПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
		|	ПервоначальныеСведенияОС.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
		|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
		|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ,
		|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
		|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
		|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ,
		|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ,
		|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ КАК ДокументВводаВЭксплуатациюУУ,
		|
		|	ВЫБОР
		|		КОГДА &ОтражатьВБУ
		|			ТОГДА &Ссылка 
		|		ИНАЧЕ ПервоначальныеСведенияОС.ДокументСнятияСУчетаБУ
		|
		|	КОНЕЦ КАК ДокументСнятияСУчетаБУ,
		|
		|	ВЫБОР
		|		КОГДА &ОтражатьВУпрУчете
		|			ТОГДА &Ссылка 
		|		ИНАЧЕ ПервоначальныеСведенияОС.ДокументСнятияСУчетаУУ
		|	КОНЕЦ КАК ДокументСнятияСУчетаУУ
		|
		|ИЗ
		|	втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС";
	
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОСБУ";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПорядокУчетаОСБУ(ТекстыЗапроса, "Документ.ПодготовкаКПередачеОС2_4");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                                        КАК Период,
	|	&Организация                                                   КАК Организация,
	|	ПорядокУчетаОСБУ.ОсновноеСредство                              КАК ОсновноеСредство,
	|
	|	ПорядокУчетаОСБУ.СтатьяРасходовБУ                              КАК СтатьяРасходовБУ,
	|	ПорядокУчетаОСБУ.АналитикаРасходовБУ                           КАК АналитикаРасходовБУ,
	|	ПорядокУчетаОСБУ.СтатьяРасходовНУ                              КАК СтатьяРасходовНУ,
	|	ПорядокУчетаОСБУ.АналитикаРасходовНУ                           КАК АналитикаРасходовНУ,
	|	ПорядокУчетаОСБУ.СтатьяРасходовАмортизационнойПремии           КАК СтатьяРасходовАмортизационнойПремии,
	|	ПорядокУчетаОСБУ.АналитикаРасходовАмортизационнойПремии        КАК АналитикаРасходовАмортизационнойПремии,
	|	ПорядокУчетаОСБУ.ПередаватьРасходыВДругуюОрганизацию           КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчетаОСБУ.ОрганизацияПолучательРасходов                 КАК ОрганизацияПолучательРасходов,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ                     КАК СпособОтраженияРасходовБУ,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовНУ                     КАК СпособОтраженияРасходовНУ,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовАмортизационнойПремии  КАК СпособОтраженияРасходовАмортизационнойПремии,
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа                         КАК АмортизационнаяГруппа,
	|	ПорядокУчетаОСБУ.НедвижимоеИмущество                           КАК НедвижимоеИмущество,
	|	ПорядокУчетаОСБУ.НалогообложениеНДС                            КАК НалогообложениеНДС,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|		ИНАЧЕ ПорядокУчетаОСБУ.СостояниеБУ
	|	КОНЕЦ КАК СостояниеБУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВНУ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|		ИНАЧЕ ПорядокУчетаОСБУ.СостояниеНУ
	|	КОНЕЦ КАК СостояниеНУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУ
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ПорядокУчетаОСБУ.НачислятьАмортизациюБУ
	|	КОНЕЦ КАК НачислятьАмортизациюБУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВНУ
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ПорядокУчетаОСБУ.НачислятьАмортизациюНУ
	|	КОНЕЦ КАК НачислятьАмортизациюНУ
	|
	|ИЗ
	|	втПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|
	|ГДЕ
	|	&ОтражатьВРеглУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаОСУУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОСУУ";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПорядокУчетаОСУУ(ТекстыЗапроса, ПолноеИмяОбъекта());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                    КАК Период,
	|	&Организация               КАК Организация,
	|	ПорядокУчетаОСУУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета) КАК Состояние,
	|	ЛОЖЬ                       КАК НачислятьАмортизациюУУ
	|ИЗ
	|	втПорядокУчетаОСУУ КАК ПорядокУчетаОСУУ
	|ГДЕ
	|	&ОтражатьВУпрУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПереданныеВАрендуОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПереданныеВАрендуОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПереданныеВАрендуОС(ТекстыЗапроса, ПолноеИмяОбъекта());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                               КАК Период,
	|	&Организация                          КАК Организация,
	|	ПереданныеВАрендуОС.ОсновноеСредство  КАК ОсновноеСредство
	|ИЗ
	|	втПереданныеВАрендуОС КАК ПереданныеВАрендуОС";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры	

Процедура ТекстЗапросаТаблицаАмортизацияОС(ТекстыЗапроса)

	ИмяРегистра = "АмортизацияОС";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса);

	ТекстЗапроса = ВнеоборотныеАктивыСлужебный.ТекстЗапросаСписанияАмортизацииОС(ТекстыЗапроса);
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаОбесценениеВНА(ТекстыЗапроса)

	ИмяРегистра = "ОбесценениеВНА";
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса);

	ТекстЗапроса = ВнеоборотныеАктивыСлужебный.ТекстЗапросаСписанияОбесцененияОС(ТекстыЗапроса);
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСтоимостьОС(ТекстыЗапроса)

	ИмяРегистра = "СтоимостьОС";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса);
	
	ТекстЗапроса = ВнеоборотныеАктивыСлужебный.ТекстЗапросаСписанияСтоимостиОС(ТекстыЗапроса);
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПрочиеРасходы(ТекстыЗапроса, Регистры = Неопределено)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаПрочиеАктивыПассивы(ТекстыЗапроса)

	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса);
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписаниеАмортизацииОС(ТекстыЗапроса);
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписаниеСтоимостиОС(ТекстыЗапроса);
	
	ТекстЗапроса =
	"// Резерв переоценки амортизации
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Период                                     КАК Период,
	|	&ХО_СписаниеРезерваПереоценкиАмортизацииОС  КАК ХозяйственнаяОперация,
	|	&Организация                                КАК Организация,
	|	&Подразделение                              КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности           КАК НаправлениеДеятельности,
	|
	|	&СтатьяАП_ОС                                КАК Статья,
	|	ТаблицаОС.ОсновноеСредство                  КАК Аналитика,
	|
	|	ТаблицаОС.РезервПереоценкиАмортизации       КАК Сумма
	|ИЗ
	|	втСписаниеАмортизацииОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.РезервПереоценкиАмортизации <> 0
	|	И &ОтражатьВУпрУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Резерв переоценки стоимости
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)      КАК ВидДвижения,
	|	&Период                                     КАК Период,
	|	&ХО_СписаниеРезерваПереоценкиСтоимостиОС    КАК ХозяйственнаяОперация,
	|	&Организация                                КАК Организация,
	|	&Подразделение                              КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности           КАК НаправлениеДеятельности,
	|
	|	&СтатьяАП_ОС                                КАК Статья,
	|	ТаблицаОС.ОсновноеСредство                  КАК Аналитика,
	|
	|	ТаблицаОС.РезервПереоценкиСтоимости         КАК Сумма
	|ИЗ
	|	втСписаниеСтоимостиОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.РезервПереоценкиСтоимости <> 0
	|	И &ОтражатьВУпрУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(ТекстыЗапроса)

	ИмяРегистра = "ДвиженияПоПрочимАктивамПассивам";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса);
		
	ТекстЗапроса = ВнеоборотныеАктивыСлужебный.ТекстЗапросаВыбытияОСДвиженияПоПрочимАктивамПассивам(ТекстыЗапроса);
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса)

	ИмяРегистра = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";

	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса);
	
	ТекстЗапроса = ВнеоборотныеАктивыСлужебный.ТекстЗапросаВыбытияОСДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса);
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);	
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса)
	
	ИмяТаблицы = "втТаблицаОС";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ПодготовкаКПередачеОСЛокализация.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса);
	
	Если ТекстЗапроса = Неопределено Тогда
		
		ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПервоначальныеСведенияОС(ТекстыЗапроса, ПолноеИмяОбъекта());
		ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПорядокУчетаОС(ТекстыЗапроса, ПолноеИмяОбъекта());
		ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтМестонахождениеОС(ТекстыЗапроса, ПолноеИмяОбъекта());
		ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтУзлыОсновныхСредств(ТекстыЗапроса, "Документ.ПодготовкаКПередачеОС2_4.ОС");
	
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаОС.ОсновноеСредство             КАК ОсновноеСредство,
		|	ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК ОСВладелец,
		|
		|	ПорядокУчета.ГруппаФинансовогоУчета    КАК ГруппаФинансовогоУчета,
		|	ПорядокУчета.НаправлениеДеятельности   КАК НаправлениеДеятельности,
		|	ПорядокУчета.ПоказательНаработки       КАК ПоказательНаработки,
		|	ПорядокУчета.ОбъемНаработки            КАК ОбъемНаработки,
		|
		|	МестонахождениеОС.Организация          КАК Организация,
		|	МестонахождениеОС.МОЛ                  КАК МОЛ,
		|	МестонахождениеОС.Местонахождение      КАК Местонахождение,
		|	МестонахождениеОС.АдресМестонахождения КАК АдресМестонахождения,
		|	МестонахождениеОС.Арендатор            КАК Арендатор,
		|
		|	ЛОЖЬ КАК НачислятьИзнос,
		|
		|	НЕОПРЕДЕЛЕНО КАК СтатьяДоходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|
		|	0 КАК СуммаСписанияУУ,
		|	0 КАК СуммаСписанияБУ,
		|	0 КАК СуммаСписанияНУ,
		|	0 КАК СуммаСписанияПР,
		|	0 КАК СуммаСписанияВР,
		|	
		|	ТаблицаОС.ИдентификаторСтроки          КАК ИдентификаторСтроки
		|	
		|ПОМЕСТИТЬ втТаблицаОС
		|ИЗ
		|	Документ.ПодготовкаКПередачеОС2_4.ОС КАК ТаблицаОС
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК ПорядокУчета
		|		ПО ТаблицаОС.ОсновноеСредство = ПорядокУчета.ОсновноеСредство
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождениеОС КАК МестонахождениеОС
		|		ПО ТаблицаОС.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УзлыКомпоненты.УзелКомпонент           КАК ОсновноеСредство,
		|	ТаблицаОС.ОсновноеСредство             КАК ОСВладелец,
		|
		|	ПорядокУчета.ГруппаФинансовогоУчета    КАК ГруппаФинансовогоУчета,
		|	ПорядокУчета.НаправлениеДеятельности   КАК НаправлениеДеятельности,
		|	ПорядокУчета.ПоказательНаработки       КАК ПоказательНаработки,
		|	ПорядокУчета.ОбъемНаработки            КАК ОбъемНаработки,
		|
		|	МестонахождениеОС.Организация          КАК Организация,
		|	МестонахождениеОС.МОЛ                  КАК МОЛ,
		|	МестонахождениеОС.Местонахождение      КАК Местонахождение,
		|	МестонахождениеОС.АдресМестонахождения КАК АдресМестонахождения,
		|	МестонахождениеОС.Арендатор            КАК Арендатор,
		|
		|	ЛОЖЬ                                   КАК НачислятьИзнос,
		|
		|	НЕОПРЕДЕЛЕНО                           КАК СтатьяДоходов,
		|	НЕОПРЕДЕЛЕНО                           КАК АналитикаДоходов,
		|
		|	0                                      КАК СуммаСписанияУУ,
		|	0                                      КАК СуммаСписанияБУ,
		|	0                                      КАК СуммаСписанияНУ,
		|	0                                      КАК СуммаСписанияПР,
		|	0                                      КАК СуммаСписанияВР,
		|	
		|	УзлыКомпоненты.ИдентификаторСтроки     КАК ИдентификаторСтроки
		|ИЗ
		|	Документ.ПодготовкаКПередачеОС2_4.ОС КАК ТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УзлыКомпонентыАмортизации.СрезПоследних(&Период, УзелКомпонент В
		|			(ВЫБРАТЬ
		|				ТаблицаУзлов.УзелКомпонент КАК УзелКомпонент
		|			ИЗ
		|				ВтУзлыОсновныхСредств КАК ТаблицаУзлов)) КАК УзлыКомпоненты
		|		ПО ТаблицаОС.ОсновноеСредство = УзлыКомпоненты.ОсновноеСредство
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК ПорядокУчета
		|		ПО УзлыКомпоненты.УзелКомпонент = ПорядокУчета.ОсновноеСредство
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождениеОС КАК МестонахождениеОС
		|		ПО УзлыКомпоненты.УзелКомпонент = МестонахождениеОС.ОсновноеСредство
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
		|		ПО УзлыКомпоненты.УзелКомпонент = ПервоначальныеСведенияОС.ОсновноеСредство
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка";
		
	КонецЕсли; 
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат "";
	КонецЕсли;
	
	СписокЗапросовОбъединение = Новый Массив;
	СписокЗапросовОбъединение.Добавить(РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы());

	ТекстЗапроса = ВнеоборотныеАктивыСлужебный.ТекстЗапросаВыбытияОСВтИсходныеПрочиеРасходы(ТекстыЗапроса);
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаВтРасширеннаяТаблицаОС(ТекстыЗапроса)
	
	ИмяРегистра = "ВтРасширеннаяТаблицаОС";
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтУзлыОсновныхСредств(ТекстыЗапроса, "Документ.ПодготовкаКПередачеОС2_4.ОС");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство    КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК ОСВладелец,
	|	ТаблицаОС.Ссылка              КАК Ссылка,
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ВтРасширеннаяТаблицаОС
	|ИЗ
	|	Документ.ПодготовкаКПередачеОС2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКомпоненты.УзелКомпонент       КАК ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство         КАК ОСВладелец,
	|	ТаблицаОС.Ссылка                   КАК Ссылка,
	|	УзлыКомпоненты.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ПодготовкаКПередачеОС2_4.ОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УзлыКомпонентыАмортизации.СрезПоследних(&Период, УзелКомпонент В
	|			(ВЫБРАТЬ
	|				ТаблицаУзлов.УзелКомпонент КАК УзелКомпонент
	|			ИЗ
	|				ВтУзлыОсновныхСредств КАК ТаблицаУзлов)) КАК УзлыКомпоненты
	|		ПО ТаблицаОС.ОсновноеСредство = УзлыКомпоненты.ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";	
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры


Функция ПолноеИмяОбъекта()

	Возврат "Документ.ПодготовкаКПередачеОС2_4";

КонецФункции

#КонецОбласти

#Область ПроведениеРеглУчет

Функция ТекстОтраженияВРеглУчете() Экспорт

	Возврат ПодготовкаКПередачеОСЛокализация.ТекстОтраженияВРеглУчете();

КонецФункции

Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт

	Возврат ПодготовкаКПередачеОСЛокализация.ТекстЗапросаВТОтраженияВРеглУчете();

КонецФункции

#КонецОбласти

#Область Печать

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	ПодготовкаКПередачеОСЛокализация.ДобавитьКомандыПечати(КомандыПечати);

КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыОС1(ПараметрыПечати, МассивОбъектов) Экспорт

	Возврат ПодготовкаКПередачеОСЛокализация.ПолучитьДанныеДляПечатнойФормыОС1(ПараметрыПечати, МассивОбъектов);

КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
