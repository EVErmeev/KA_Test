#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	
	МеханизмыДокумента.Добавить("ОсновныеСредства");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	
	КорректировкаСтоимостиИАмортизацииОСЛокализация.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура:
//     * Ключ - Строка - Имя таблицы.
//     * Значение - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		ЗаполнитьПараметрыИнициализации(Запрос, Документ);
		
		ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры);
		
		ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПараметрыАмортизацииОСУУ(ТекстыЗапроса, Регистры);
		
		
		КорректировкаСтоимостиИАмортизацииОСЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	
	КонецЕсли;
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

// Формирует таблицы движений при отложенном проведении.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.КорректировкаСтоимостиИАмортизацииОС - Документ, для которого формируются движения
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Содержит вспомогательные временные таблицы, которые могут использоваться для формирования движений.
//
// Возвращаемое значение:
//  см. ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения
//
Функция ТаблицыОтложенногоФормированияДвижений(ДокументСсылка, МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаСтоимостьОС(ТекстыЗапроса);
	ТекстЗапросаТаблицаАмортизацияОС(ТекстыЗапроса);
	
	ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Неопределено);
	ТекстЗапросаТаблицаПараметрыАмортизацииОСУУ(ТекстыЗапроса, Неопределено);
	
	ТекстЗапросаТаблицаПрочиеРасходы(ТекстыЗапроса);
	ТекстЗапросаТаблицаПартииПрочихРасходов(ТекстыЗапроса);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(ТекстыЗапроса);
	ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса);
	ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(ТекстыЗапроса);
	ТекстЗапросаТаблицаПрочиеДоходы(ТекстыЗапроса);
	
	КорректировкаСтоимостиИАмортизацииОСЛокализация.ТаблицыОтложенногоФормированияДвижений(ТекстыЗапроса);
	
	ТаблицыДляДвижений = ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, Неопределено);
	
	Возврат ТаблицыДляДвижений;
	
КонецФункции

#КонецОбласти

#Область Команды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.ИзменениеПараметровОС2_4.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);

КонецПроцедуры

// Добавляет команду создания документа "Корректировка стоимости и амортизации ОС".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
// Возвращаемое значение:
//	СтрокаТаблицыЗначений - добавленная команда
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.КорректировкаСтоимостиИАмортизацииОС) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.КорректировкаСтоимостиИАмортизацииОС.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.КорректировкаСтоимостиИАмортизацииОС);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьВнеоборотныеАктивы2_4";
	
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки	 - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.КорректировкаСтоимостиИАмортизацииОС";
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	
	ВЗапросеЕстьИсточник = Истина;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		ВЗапросеЕстьИсточник = Ложь;
		
	ИначеЕсли ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	КонецЕсли;
		
	Если ТекстЗапроса = Неопределено Тогда
		
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов"
		ИЛИ ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров,
										ТекстыЗапросаВременныхТаблиц);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.АналитикаДоходов КАК АналитикаДоходов,
	|	ДанныеДокумента.АналитикаРасходов КАК АналитикаРасходов,
	|	ДанныеДокумента.АналитикаАктивовПассивовРасходов КАК АналитикаАктивовПассивовРасходов,
	|	ДанныеДокумента.АналитикаАктивовПассивовДоходов КАК АналитикаАктивовПассивовДоходов,
	|	ДанныеДокумента.НастройкаСчетовУчетаРасходов КАК НастройкаСчетовУчетаРасходов,
	|	ДанныеДокумента.НастройкаСчетовУчетаДоходов КАК НастройкаСчетовУчетаДоходов,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете КАК ОтражатьВУпрУчете,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.СобытиеОС КАК СобытиеОС,
	|	ДанныеДокумента.СтатьяДоходов КАК СтатьяДоходов,
	|	ДанныеДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|	ДанныеДокумента.ВидИмущества КАК ВидИмущества,
	|	ДанныеДокумента.КорректировкаСПрошлойДаты КАК КорректировкаСПрошлойДаты,
	|	ДанныеДокумента.НачалоПериода КАК НачалоПериода,
	|	НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) КАК НачПериодаДокумента,
	|	КОНЕЦПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) КАК КонПериодаДокумента,
	|	ДанныеДокумента.СобытиеОС.ВидСобытияОС КАК ВидСобытияОС
	|ИЗ
	|	Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.КорректировкаСтоимостиИАмортизацииОС"));
	ЗначенияПараметровПроведения.Вставить("НазваниеДокумента", НСтр("ru='Корректировка стоимости и амортизации ОС'"));
	ЗначенияПараметровПроведения.Вставить("ВедетсяРегламентированныйУчетВНА", ВнеоборотныеАктивыСлужебный.ВедетсяРегламентированныйУчетВНА());
	
	ЗначенияПараметровПроведения.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КорректировкаСтоимостиИАмортизацииОС);
	
	ЗначенияПараметровПроведения.Вставить("НастройкаХозяйственнойОперации", Справочники.НастройкиХозяйственныхОпераций.КорректировкаСтоимостиИАмортизацииОС);
	ЗначенияПараметровПроведения.Вставить("СтатьяАП_ОС", ПланыВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства);
	ЗначенияПараметровПроведения.Вставить("СтатьяАП_ПрибыльУбыток", ПланыВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки);
	
	ЗначенияПараметровПроведения.Вставить("УвеличениеСтоимости", Перечисления.ХозяйственныеОперации.УвеличениеСтоимостиОС);
	ЗначенияПараметровПроведения.Вставить("УменьшениеСтоимости", Перечисления.ХозяйственныеОперации.УменьшениеСтоимостиОС);
	ЗначенияПараметровПроведения.Вставить("УвеличениеАмортизации", Перечисления.ХозяйственныеОперации.УвеличениеНакопленнойАмортизацииОС);
	ЗначенияПараметровПроведения.Вставить("УменьшениеАмортизации", Перечисления.ХозяйственныеОперации.УменьшениеНакопленнойАмортизацииОС);
	ЗначенияПараметровПроведения.Вставить("ИзменениеДоходовЦФ", Перечисления.ХозяйственныеОперации.ИзменениеДоходовБудущихПериодовОтЦелевогоФинансированияНМА);
	ЗначенияПараметровПроведения.Вставить("НастройкаХОУвеличениеСтоимости", Справочники.НастройкиХозяйственныхОпераций.УвеличениеСтоимостиОС);
	ЗначенияПараметровПроведения.Вставить("НастройкаХОУменьшениеСтоимости", Справочники.НастройкиХозяйственныхОпераций.УменьшениеСтоимостиОС);
	ЗначенияПараметровПроведения.Вставить("НастройкаХОУменьшениеНакопленнойАмортизации", Справочники.НастройкиХозяйственныхОпераций.УменьшениеНакопленнойАмортизацииОС);
	ЗначенияПараметровПроведения.Вставить("НастройкаХОУвеличениеНакопленнойАмортизации", Справочники.НастройкиХозяйственныхОпераций.УвеличениеНакопленнойАмортизацииОС);
	ЗначенияПараметровПроведения.Вставить("ИдентификаторНеиспользуемойФинЗаписи", ПроведениеДокументов.ИдентификаторНеиспользуемойФинЗаписи());
	
	Если Реквизиты <> Неопределено Тогда
		
		ЗначенияПараметровПроведения.Вставить("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
		
		НастройкиУчета = НастройкиНалоговУчетныхПолитикПовтИсп.НастройкиУчетаВнеоборотныхАктивов(Реквизиты.Организация, Реквизиты.Период);
		
		ЗначенияПараметровПроведения.Вставить("РеглУчетВНАВедетсяНезависимо", НастройкиУчета.ПорядокУчетаВНАРегл = Перечисления.ПорядокУчетаВНАРегл.Независимый);
		ЗначенияПараметровПроведения.Вставить("ПорядокУчетаВНА", НастройкиУчета.ПорядокУчетаВНА);
		ЗначенияПараметровПроведения.Вставить("ПрименяетсяФСБУ6", НастройкиУчета.ПрименяетсяФСБУ6);
		ЗначенияПараметровПроведения.Вставить("ПорядокНачисленияАмортизацииРегл", НастройкиУчета.ПорядокНачисленияАмортизацииОСРегл);
		ЗначенияПараметровПроведения.Вставить("ПорядокНачисленияАмортизацииАрендаРегл", НастройкиУчета.ПорядокНачисленияАмортизацииАрендаРегл);
		
	КонецЕсли; 
	
	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                                  КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Подразделение                          КАК Подразделение,
	|	&Ответственный                          КАК Ответственный,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	ЛОЖЬ                                    КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО                            КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО                            КАК ИсправляемыйДокумент,
	|	&Период                                 КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО                            КАК Приоритет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДокументыПоОС";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаОС.НомерСтроки-1, 0)    КАК НомерЗаписи,
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК Дата,
	|	&Организация                            КАК Организация,
	|	&Подразделение                          КАК Подразделение,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Проведен                               КАК Проведен,
	|	&ОтражатьВРеглУчете                     КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                      КАК ОтражатьВУпрУчете,
	|	&СобытиеОС                              КАК СобытиеОС,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство,
	|	&КорректировкаСПрошлойДаты              КАК ЭтоИсправление,
	|
	|	ВЫБОР
	|		КОГДА &КорректировкаСПрошлойДаты
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ                                   КАК НачалоПериодаИсправления,
	|
	|	ВЫБОР
	|		КОГДА &КорректировкаСПрошлойДаты
	|			ТОГДА КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ                                   КАК КонецПериодаИсправления
	|ИЗ
	|	Документ.КорректировкаСтоимостиИАмортизацииОС КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС.ОС КАК ТаблицаОС
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОС.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаСтоимостьОС(ТекстыЗапроса)

	ИмяРегистра = "СтоимостьОС";
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса, "Документ.КорректировкаСтоимостиИАмортизацииОС", "втСведенияОбУчете");
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтАрендованныеОС(ТекстыЗапроса, "Документ.КорректировкаСтоимостиИАмортизацииОС");

	ТекстЗапросаВтУвеличениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеСтоимости(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Ссылка                                     КАК Регистратор,
	|	&Период                                     КАК Период,
	|	&УвеличениеСтоимости                        КАК ХозяйственнаяОперация,
	|	&Организация                                КАК Организация,
	|	КорректировкаСтоимости.ОсновноеСредство     КАК ОсновноеСредство,
	|	&Подразделение                              КАК Подразделение,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК ГруппаФинансовогоУчета,
	|	СведенияОбУчете.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	СведенияОбУчете.Арендатор                   КАК Арендатор,
	|
	|	КорректировкаСтоимости.Стоимость            КАК Стоимость,
	|	КорректировкаСтоимости.СтоимостьРегл        КАК СтоимостьРегл,
	|	КорректировкаСтоимости.СтоимостьНУ          КАК СтоимостьНУ,
	|	КорректировкаСтоимости.СтоимостьПР          КАК СтоимостьПР,
	|
	|	КорректировкаСтоимости.СтоимостьРегл
	|		- КорректировкаСтоимости.СтоимостьНУ
	|		- КорректировкаСтоимости.СтоимостьПР    КАК СтоимостьВР,
	|
	|	КорректировкаСтоимости.СтоимостьЦФ          КАК СтоимостьЦФ,
	|	КорректировкаСтоимости.СтоимостьПРЦФ        КАК СтоимостьПРЦФ,
	|	КорректировкаСтоимости.ЗалоговаяСтоимость   КАК ЗалоговаяСтоимость,
	|
	|	&Организация                                КАК КорОрганизация,
	|	&Подразделение                              КАК КорПодразделение,
	|	ВЫБОР 
	|		КОГДА &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Арендованное)
	|			ТОГДА втАрендованныеОС.Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                       КАК КорКонтрагент,
	|	СведенияОбУчете.НаправлениеДеятельности     КАК КорНаправлениеДеятельности,
	|	&СтатьяРасходов                             КАК КорСтатьяРасходов,
	|	&АналитикаРасходов                          КАК КорАналитикаРасходов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК КорГруппаФинансовогоУчета,
	|	&ОтражатьВРеглУчете                         КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                          КАК ОтражатьВУпрУчете,
	|
	|	КорректировкаСтоимости.ИдентификаторФинЗаписи          КАК ИдентификаторФинЗаписи,
	|	КорректировкаСтоимости.НастройкаХозяйственнойОперации  КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтУвеличениеСтоимости КАК КорректировкаСтоимости
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.ОсновноеСредство = КорректировкаСтоимости.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАрендованныеОС КАК втАрендованныеОС
	|		ПО втАрендованныеОС.ОсновноеСредство = КорректировкаСтоимости.ОсновноеСредство
	|
	|ГДЕ
	|
	|	КорректировкаСтоимости.Стоимость <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьРегл <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьНУ <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьПР <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьЦФ <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьПРЦФ <> 0
	|		ИЛИ КорректировкаСтоимости.ЗалоговаяСтоимость <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)      КАК ВидДвижения,
	|	&Ссылка                                     КАК Регистратор,
	|	&Период                                     КАК Период,
	|	&УменьшениеСтоимости                        КАК ХозяйственнаяОперация,
	|	&Организация                                КАК Организация,
	|	КорректировкаСтоимости.ОсновноеСредство     КАК ОсновноеСредство,
	|	&Подразделение                              КАК Подразделение,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК ГруппаФинансовогоУчета,
	|	СведенияОбУчете.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	СведенияОбУчете.Арендатор                   КАК Арендатор,
	|
	|	КорректировкаСтоимости.Стоимость            КАК Стоимость,
	|	КорректировкаСтоимости.СтоимостьРегл        КАК СтоимостьРегл,
	|	КорректировкаСтоимости.СтоимостьНУ          КАК СтоимостьНУ,
	|	КорректировкаСтоимости.СтоимостьПР          КАК СтоимостьПР,
	|
	|	КорректировкаСтоимости.СтоимостьРегл
	|		- КорректировкаСтоимости.СтоимостьНУ
	|		- КорректировкаСтоимости.СтоимостьПР    КАК СтоимостьВР,
	|
	|	КорректировкаСтоимости.СтоимостьЦФ          КАК СтоимостьЦФ,
	|	КорректировкаСтоимости.СтоимостьПРЦФ        КАК СтоимостьПРЦФ,
	|	КорректировкаСтоимости.ЗалоговаяСтоимость   КАК ЗалоговаяСтоимость,
	|
	|	&Организация                                КАК КорОрганизация,
	|	&Подразделение                              КАК КорПодразделение,
	|	ВЫБОР 
	|		КОГДА &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Арендованное)
	|			ТОГДА втАрендованныеОС.Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                       КАК КорКонтрагент,
	|	СведенияОбУчете.НаправлениеДеятельности     КАК КорНаправлениеДеятельности,
	|	&СтатьяРасходов                             КАК КорСтатьяРасходов,
	|	&АналитикаРасходов                          КАК КорАналитикаРасходов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК КорГруппаФинансовогоУчета,
	|	&ОтражатьВРеглУчете                         КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                          КАК ОтражатьВУпрУчете,
	|
	|	КорректировкаСтоимости.ИдентификаторФинЗаписи          КАК ИдентификаторФинЗаписи,
	|	КорректировкаСтоимости.НастройкаХозяйственнойОперации  КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтУменьшениеСтоимости КАК КорректировкаСтоимости
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.ОсновноеСредство = КорректировкаСтоимости.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАрендованныеОС КАК втАрендованныеОС
	|		ПО втАрендованныеОС.ОсновноеСредство = КорректировкаСтоимости.ОсновноеСредство
	|
	|ГДЕ
	|	КорректировкаСтоимости.Стоимость <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьРегл <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьНУ <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьПР <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьЦФ <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьПРЦФ <> 0
	|		ИЛИ КорректировкаСтоимости.ЗалоговаяСтоимость <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаАмортизацияОС(ТекстыЗапроса)

	ИмяРегистра = "АмортизацияОС";
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса, "Документ.КорректировкаСтоимостиИАмортизацииОС", "втСведенияОбУчете");
	
	ТекстЗапросаВтУвеличениеАмортизации(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеАмортизации(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)      КАК ВидДвижения,
	|	&Ссылка                                     КАК Регистратор,
	|	&Период                                     КАК Период,
	|	&УвеличениеАмортизации                      КАК ХозяйственнаяОперация,
	|	&Организация                                КАК Организация,
	|	КорректировкаАмортизации.ОсновноеСредство   КАК ОсновноеСредство,
	|	&Подразделение                              КАК Подразделение,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК ГруппаФинансовогоУчета,
	|	СведенияОбУчете.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|
	|	КорректировкаАмортизации.Амортизация        КАК Амортизация,
	|	КорректировкаАмортизации.АмортизацияРегл    КАК АмортизацияРегл,
	|	КорректировкаАмортизации.АмортизацияНУ      КАК АмортизацияНУ,
	|	КорректировкаАмортизации.АмортизацияПР      КАК АмортизацияПР,
	|
	|	КорректировкаАмортизации.АмортизацияРегл
	|		- КорректировкаАмортизации.АмортизацияНУ
	|		- КорректировкаАмортизации.АмортизацияПР КАК АмортизацияВР,
	|
	|	КорректировкаАмортизации.АмортизацияЦФ      КАК АмортизацияЦФ,
	|	КорректировкаАмортизации.АмортизацияПРЦФ    КАК АмортизацияПРЦФ,
	|
	|	&Организация                                КАК КорОрганизация,
	|	&Подразделение                              КАК КорПодразделение,
	|	СведенияОбУчете.НаправлениеДеятельности     КАК КорНаправлениеДеятельности,
	|	&СтатьяРасходов                             КАК КорСтатьяРасходов,
	|	&АналитикаРасходов                          КАК КорАналитикаРасходов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК КорГруппаФинансовогоУчета,
	|	&ОтражатьВРеглУчете                         КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                          КАК ОтражатьВУпрУчете,
	|
	|	КорректировкаАмортизации.ИдентификаторФинЗаписи          КАК ИдентификаторФинЗаписи,
	|	КорректировкаАмортизации.НастройкаХозяйственнойОперации  КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтУвеличениеАмортизации КАК КорректировкаАмортизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.ОсновноеСредство = КорректировкаАмортизации.ОсновноеСредство
	|ГДЕ
	|	КорректировкаАмортизации.Амортизация <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияРегл <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияНУ <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияПР <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияЦФ <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияПРЦФ <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Ссылка                                     КАК Регистратор,
	|	&Период                                     КАК Период,
	|	&УменьшениеАмортизации                      КАК ХозяйственнаяОперация,
	|	&Организация                                КАК Организация,
	|	КорректировкаАмортизации.ОсновноеСредство   КАК ОсновноеСредство,
	|	&Подразделение                              КАК Подразделение,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК ГруппаФинансовогоУчета,
	|	СведенияОбУчете.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|
	|	КорректировкаАмортизации.Амортизация        КАК Амортизация,
	|	КорректировкаАмортизации.АмортизацияРегл    КАК АмортизацияРегл,
	|	КорректировкаАмортизации.АмортизацияНУ      КАК АмортизацияНУ,
	|	КорректировкаАмортизации.АмортизацияПР      КАК АмортизацияПР,
	|
	|	КорректировкаАмортизации.АмортизацияРегл
	|		- КорректировкаАмортизации.АмортизацияНУ
	|		- КорректировкаАмортизации.АмортизацияПР КАК АмортизацияВР,
	|
	|	КорректировкаАмортизации.АмортизацияЦФ      КАК АмортизацияЦФ,
	|	КорректировкаАмортизации.АмортизацияПРЦФ    КАК АмортизацияПРЦФ,
	|
	|	&Организация                                КАК КорОрганизация,
	|	&Подразделение                              КАК КорПодразделение,
	|	СведенияОбУчете.НаправлениеДеятельности     КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                КАК КорАналитикаРасходов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета      КАК КорГруппаФинансовогоУчета,
	|	&ОтражатьВРеглУчете                         КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                          КАК ОтражатьВУпрУчете,
	|
	|	КорректировкаАмортизации.ИдентификаторФинЗаписи          КАК ИдентификаторФинЗаписи,
	|	КорректировкаАмортизации.НастройкаХозяйственнойОперации  КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтУменьшениеАмортизации КАК КорректировкаАмортизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.ОсновноеСредство = КорректировкаАмортизации.ОсновноеСредство
	|ГДЕ
	|	КорректировкаАмортизации.Амортизация <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияРегл <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияНУ <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияПР <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияЦФ <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияПРЦФ <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПрочиеРасходы(ТекстыЗапроса, Регистры = Неопределено)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПрочихРасходов(ТекстыЗапроса, Регистры = Неопределено)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаПрочиеАктивыПассивы(ТекстыЗапроса)

	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса, "Документ.КорректировкаСтоимостиИАмортизацииОС", "втСведенияОбУчете");
	
	ТекстЗапросаВтУменьшениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУвеличениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУвеличениеАмортизации(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеАмортизации(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Период                                   КАК Период,
	|	&УменьшениеСтоимости                      КАК ХозяйственнаяОперация,
	|	&Организация                              КАК Организация,
	|	&Подразделение                            КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	&СтатьяРасходов                           КАК Статья,
	|	&АналитикаАктивовПассивовРасходов                 КАК Аналитика,
	|	КорректировкаСтоимости.Стоимость          КАК Сумма
	|ИЗ
	|	ВтУменьшениеСтоимости КАК КорректировкаСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО (СведенияОбУчете.ОсновноеСредство = КорректировкаСтоимости.ОсновноеСредство)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(&СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И &ОтражатьВУпрУчете
	|	И КорректировкаСтоимости.Стоимость <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
	|	&Период                                   КАК Период,
	|	&УвеличениеСтоимости                      КАК ХозяйственнаяОперация,
	|	&Организация                              КАК Организация,
	|	&Подразделение                            КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	&СтатьяДоходов                            КАК Статья,
	|	&АналитикаАктивовПассивовДоходов          КАК Аналитика,
	|	КорректировкаСтоимости.Стоимость          КАК Сумма
	|ИЗ
	|	ВтУвеличениеСтоимости КАК КорректировкаСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО (СведенияОбУчете.ОсновноеСредство = КорректировкаСтоимости.ОсновноеСредство)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(&СтатьяДоходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И &ОтражатьВУпрУчете
	|	И КорректировкаСтоимости.Стоимость <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Период                                   КАК Период,
	|	&УвеличениеАмортизации                    КАК ХозяйственнаяОперация,
	|	&Организация                              КАК Организация,
	|	&Подразделение                            КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	&СтатьяРасходов                           КАК Статья,
	|	&АналитикаАктивовПассивовРасходов         КАК Аналитика,
	|	КорректировкаАмортизации.Амортизация      КАК Сумма
	|ИЗ
	|	ВтУвеличениеАмортизации КАК КорректировкаАмортизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО (СведенияОбУчете.ОсновноеСредство = КорректировкаАмортизации.ОсновноеСредство)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(&СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И &ОтражатьВУпрУчете
	|	И КорректировкаАмортизации.Амортизация <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
	|	&Период                                   КАК Период,
	|	&УменьшениеАмортизации                    КАК ХозяйственнаяОперация,
	|	&Организация                              КАК Организация,
	|	&Подразделение                            КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	&СтатьяДоходов                            КАК Статья,
	|	&АналитикаАктивовПассивовДоходов          КАК Аналитика,
	|	КорректировкаАмортизации.Амортизация      КАК Сумма
	|ИЗ
	|	ВтУменьшениеАмортизации КАК КорректировкаАмортизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО (СведенияОбУчете.ОсновноеСредство = КорректировкаАмортизации.ОсновноеСредство)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(&СтатьяДоходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И &ОтражатьВУпрУчете
	|	И КорректировкаАмортизации.Амортизация <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(ТекстыЗапроса)

	ИмяРегистра = "ДвиженияПоПрочимАктивамПассивам";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса, "Документ.КорректировкаСтоимостиИАмортизацииОС", "втСведенияОбУчете");
	
	ТекстЗапросаВтУменьшениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУвеличениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУвеличениеАмортизации(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеАмортизации(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	&Подразделение                          КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&СтатьяРасходов                         КАК Статья,
	|	&АналитикаАктивовПассивовРасходов       КАК Аналитика,
	|	&НастройкаСчетовУчетаРасходов           КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	КорректировкаСтоимости.СтоимостьРегл
	|		+ КорректировкаСтоимости.СтоимостьЦФ   КАК СуммаРегл,
	|	КорректировкаСтоимости.СтоимостьПР
	|		+ КорректировкаСтоимости.СтоимостьПРЦФ КАК ПостояннаяРазница,
	|	КорректировкаСтоимости.СтоимостьРегл
	|		+ КорректировкаСтоимости.СтоимостьЦФ
	|		- КорректировкаСтоимости.СтоимостьНУ
	|		- КорректировкаСтоимости.СтоимостьПР
	|		- КорректировкаСтоимости.СтоимостьПРЦФ КАК ВременнаяРазница,
	|	КорректировкаСтоимости.Стоимость КАК СуммаУпр,
	|	КорректировкаСтоимости.Стоимость КАК СуммаСНДС,
	|	КорректировкаСтоимости.Стоимость КАК СуммаБезНДС,
	|
	|	КорректировкаСтоимости.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	КорректировкаСтоимости.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтУменьшениеСтоимости КАК КорректировкаСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО (СведенияОбУчете.ОсновноеСредство = КорректировкаСтоимости.ОсновноеСредство)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(&СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И (КорректировкаСтоимости.Стоимость <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьРегл <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьЦФ <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьНУ <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьПР <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьПРЦФ <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	&Подразделение                          КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&СтатьяДоходов                          КАК Статья,
	|	&АналитикаАктивовПассивовДоходов        КАК Аналитика,
	|	&НастройкаСчетовУчетаДоходов            КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|
	|	КорректировкаСтоимости.СтоимостьРегл
	|		+ КорректировкаСтоимости.СтоимостьЦФ   КАК СуммаРегл,
	|	КорректировкаСтоимости.СтоимостьПР
	|		+ КорректировкаСтоимости.СтоимостьПРЦФ КАК ПостояннаяРазница,
	|	КорректировкаСтоимости.СтоимостьРегл
	|		+ КорректировкаСтоимости.СтоимостьЦФ
	|		- КорректировкаСтоимости.СтоимостьНУ
	|		- КорректировкаСтоимости.СтоимостьПР
	|		- КорректировкаСтоимости.СтоимостьПРЦФ КАК ВременнаяРазница,
	|	КорректировкаСтоимости.Стоимость КАК СуммаУпр,
	|	КорректировкаСтоимости.Стоимость КАК СуммаСНДС,
	|	КорректировкаСтоимости.Стоимость КАК СуммаБезНДС,
	|
	|	КорректировкаСтоимости.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	КорректировкаСтоимости.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтУвеличениеСтоимости КАК КорректировкаСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО (СведенияОбУчете.ОсновноеСредство = КорректировкаСтоимости.ОсновноеСредство)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(&СтатьяДоходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И (КорректировкаСтоимости.Стоимость <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьРегл <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьЦФ <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьНУ <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьПР <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьПРЦФ <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	&Подразделение                          КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&СтатьяРасходов                         КАК Статья,
	|	&АналитикаАктивовПассивовРасходов       КАК Аналитика,
	|	&НастройкаСчетовУчетаРасходов           КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|
	|	КорректировкаАмортизации.АмортизацияРегл
	|		+ КорректировкаАмортизации.АмортизацияЦФ   КАК СуммаРегл,
	|	КорректировкаАмортизации.АмортизацияПР
	|		+ КорректировкаАмортизации.АмортизацияПРЦФ КАК ПостояннаяРазница,
	|	КорректировкаАмортизации.АмортизацияРегл
	|		+ КорректировкаАмортизации.АмортизацияЦФ
	|		- КорректировкаАмортизации.АмортизацияНУ
	|		- КорректировкаАмортизации.АмортизацияПР
	|		- КорректировкаАмортизации.АмортизацияПРЦФ КАК ВременнаяРазница,
	|	КорректировкаАмортизации.Амортизация КАК СуммаУпр,
	|	КорректировкаАмортизации.Амортизация КАК СуммаСНДС,
	|	КорректировкаАмортизации.Амортизация КАК СуммаБезНДС,
	|
	|	КорректировкаАмортизации.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	КорректировкаАмортизации.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтУвеличениеАмортизации КАК КорректировкаАмортизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО (СведенияОбУчете.ОсновноеСредство = КорректировкаАмортизации.ОсновноеСредство)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(&СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И (КорректировкаАмортизации.Амортизация <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияРегл <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияЦФ <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияНУ <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияПР <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияПРЦФ <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	&Подразделение                          КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&СтатьяДоходов                          КАК Статья,
	|	&АналитикаАктивовПассивовДоходов        КАК Аналитика,
	|	&НастройкаСчетовУчетаДоходов            КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	|
	|	КорректировкаАмортизации.АмортизацияРегл
	|		+ КорректировкаАмортизации.АмортизацияЦФ   КАК СуммаРегл,
	|	КорректировкаАмортизации.АмортизацияПР
	|		+ КорректировкаАмортизации.АмортизацияПРЦФ КАК ПостояннаяРазница,
	|	КорректировкаАмортизации.АмортизацияРегл
	|		+ КорректировкаАмортизации.АмортизацияЦФ
	|		- КорректировкаАмортизации.АмортизацияНУ
	|		- КорректировкаАмортизации.АмортизацияПР
	|		- КорректировкаАмортизации.АмортизацияПРЦФ КАК ВременнаяРазница,
	|	КорректировкаАмортизации.Амортизация КАК СуммаУпр,
	|	КорректировкаАмортизации.Амортизация КАК СуммаСНДС,
	|	КорректировкаАмортизации.Амортизация КАК СуммаБезНДС,
	|
	|	КорректировкаАмортизации.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	КорректировкаАмортизации.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	ВтУменьшениеАмортизации КАК КорректировкаАмортизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО (СведенияОбУчете.ОсновноеСредство = КорректировкаАмортизации.ОсновноеСредство)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(&СтатьяДоходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И (КорректировкаАмортизации.Амортизация <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияРегл <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияЦФ <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияНУ <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияПР <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияПРЦФ <> 0)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса)

	ИмяРегистра = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса, "Документ.КорректировкаСтоимостиИАмортизацииОС", "втСведенияОбУчете");
	
	ТекстЗапросаВтУвеличениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУвеличениеАмортизации(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеАмортизации(ТекстыЗапроса);
	
	ТекстыЗапросаОбъединение = Новый Массив;
	
	#Область УвеличениеСтоимости
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                    КАК Период,
	|	&УвеличениеСтоимости                       КАК ХозяйственнаяОперация,
	|	&Организация                               КАК Организация,
	|
	|	&Подразделение                             КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	&СтатьяАП_ПрибыльУбыток                    КАК Статья,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	КорректировкаСтоимости.ОсновноеСредство    КАК АналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                             КАК КорПодразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаРасходов,
	|	КорректировкаСтоимости.ОсновноеСредство    КАК КорАналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК КорГруппаФинансовогоУчета,
	|
	|	КорректировкаСтоимости.Стоимость           КАК Сумма,
	|	КорректировкаСтоимости.Стоимость           КАК СуммаУпр,
	|	КорректировкаСтоимости.СтоимостьРегл       КАК СуммаРегл
	|ИЗ
	|	ВтУвеличениеСтоимости КАК КорректировкаСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО (СведенияОбУчете.ОсновноеСредство = КорректировкаСтоимости.ОсновноеСредство)
	|ГДЕ
	|	(КорректировкаСтоимости.Стоимость <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьРегл <> 0)";
	ТекстыЗапросаОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УменьшениеСтоимости
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                    КАК Период,
	|	&УменьшениеСтоимости                       КАК ХозяйственнаяОперация,
	|	&Организация                               КАК Организация,
	|
	|	&Подразделение                             КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК Статья,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаДоходов,
	|	Неопределено                               КАК АналитикаРасходов,
	|	КорректировкаСтоимости.ОсновноеСредство    КАК АналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                             КАК КорПодразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	&СтатьяРасходов                            КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	&АналитикаРасходов                         КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК КорГруппаФинансовогоУчета,
	|
	|	КорректировкаСтоимости.Стоимость           КАК Сумма,
	|	КорректировкаСтоимости.Стоимость           КАК СуммаУпр,
	|	КорректировкаСтоимости.СтоимостьРегл       КАК СуммаРегл
	|ИЗ
	|	ВтУменьшениеСтоимости КАК КорректировкаСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО (СведенияОбУчете.ОсновноеСредство = КорректировкаСтоимости.ОсновноеСредство)
	|ГДЕ
	|	(КорректировкаСтоимости.Стоимость <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьРегл <> 0)";
	ТекстыЗапросаОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УвеличениеСтоимостиЦФ
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                    КАК Период,
	|	&УвеличениеСтоимости                       КАК ХозяйственнаяОперация,
	|	&Организация                               КАК Организация,
	|
	|	&Подразделение                             КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК Статья,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаДоходов,
	|	Неопределено                               КАК АналитикаРасходов,
	|	КорректировкаСтоимости.ОсновноеСредство    КАК АналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                             КАК КорПодразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	&СтатьяРасходов                            КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	&АналитикаРасходов                         КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК КорГруппаФинансовогоУчета,
	|
	|	0                                          КАК Сумма,
	|	0                                          КАК СуммаУпр,
	|	КорректировкаСтоимости.СтоимостьЦФ         КАК СуммаРегл
	|ИЗ
	|	ВтУвеличениеСтоимости КАК КорректировкаСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО (СведенияОбУчете.ОсновноеСредство = КорректировкаСтоимости.ОсновноеСредство)
	|ГДЕ
	|	КорректировкаСтоимости.СтоимостьЦФ <> 0";
	ТекстыЗапросаОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область УменьшениеСтоимостиЦФ
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                    КАК Период,
	|	&УменьшениеСтоимости                       КАК ХозяйственнаяОперация,
	|	&Организация                               КАК Организация,
	|
	|	&Подразделение                             КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	&СтатьяАП_ПрибыльУбыток                    КАК Статья,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	КорректировкаСтоимости.ОсновноеСредство    КАК АналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                             КАК КорПодразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаРасходов,
	|	КорректировкаСтоимости.ОсновноеСредство    КАК КорАналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК КорГруппаФинансовогоУчета,
	|
	|	0                                          КАК Сумма,
	|	0                                          КАК СуммаУпр,
	|	КорректировкаСтоимости.СтоимостьЦФ         КАК СуммаРегл
	|ИЗ
	|	ВтУменьшениеСтоимости КАК КорректировкаСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО (СведенияОбУчете.ОсновноеСредство = КорректировкаСтоимости.ОсновноеСредство)
	|ГДЕ
	|	КорректировкаСтоимости.СтоимостьЦФ <> 0";
	ТекстыЗапросаОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УменьшениеАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                    КАК Период,
	|	&УменьшениеАмортизации                     КАК ХозяйственнаяОперация,
	|	&Организация                               КАК Организация,
	|
	|	&Подразделение                             КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	&СтатьяДоходов                             КАК Статья,
	|	&АналитикаДоходов                          КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	&АналитикаАктивовПассивовДоходов           КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                               КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                             КАК КорПодразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаРасходов,
	|	КорректировкаАмортизации.ОсновноеСредство  КАК КорАналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК КорГруппаФинансовогоУчета,
	|
	|	КорректировкаАмортизации.Амортизация       КАК Сумма,
	|	КорректировкаАмортизации.Амортизация       КАК СуммаУпр,
	|
	|	КорректировкаАмортизации.АмортизацияРегл
	|		+ КорректировкаАмортизации.АмортизацияЦФ КАК СуммаРегл
	|ИЗ
	|	ВтУменьшениеАмортизации КАК КорректировкаАмортизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО (СведенияОбУчете.ОсновноеСредство = КорректировкаАмортизации.ОсновноеСредство)
	|ГДЕ
	|	(КорректировкаАмортизации.Амортизация <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияРегл <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияЦФ <> 0)";
	ТекстыЗапросаОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УвеличениеАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                    КАК Период,
	|	&УвеличениеАмортизации                     КАК ХозяйственнаяОперация,
	|	&Организация                               КАК Организация,
	|
	|	&Подразделение                             КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	&СтатьяАП_ОС                               КАК Статья,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	КорректировкаАмортизации.ОсновноеСредство  КАК АналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                             КАК КорПодразделение,
	|	СведенияОбУчете.НаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ПрибыльУбыток                    КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                               КАК КорАналитикаРасходов,
	|	КорректировкаАмортизации.ОсновноеСредство  КАК КорАналитикаАктивовПассивов,
	|	СведенияОбУчете.ГруппаФинансовогоУчета     КАК КорГруппаФинансовогоУчета,
	|
	|	КорректировкаАмортизации.Амортизация       КАК Сумма,
	|	КорректировкаАмортизации.Амортизация       КАК СуммаУпр,
	|
	|	КорректировкаАмортизации.АмортизацияРегл
	|		+ КорректировкаАмортизации.АмортизацияЦФ КАК СуммаРегл
	|ИЗ
	|	ВтУвеличениеАмортизации КАК КорректировкаАмортизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО (СведенияОбУчете.ОсновноеСредство = КорректировкаАмортизации.ОсновноеСредство)
	|ГДЕ
	|	(КорректировкаАмортизации.Амортизация <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияРегл <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияЦФ <> 0)";
	ТекстыЗапросаОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапросаОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПрочиеДоходы(ТекстыЗапроса)

	ИмяРегистра = "ПрочиеДоходы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат "";
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса, "Документ.КорректировкаСтоимостиИАмортизацииОС", "втСведенияОбУчете");
	
	ТекстЗапросаВтУвеличениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеАмортизации(ТекстыЗапроса);
	
	ТекстыЗапросаОбъединение = Новый Массив;
	
	#Область УвеличениеСтоимости
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	&Период                                        КАК Период,
	|	&Организация                                   КАК Организация,
	|	&Подразделение                                 КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности        КАК НаправлениеДеятельности,
	|	&УвеличениеСтоимости                           КАК ХозяйственнаяОперация,
	|	&СтатьяДоходов                                 КАК СтатьяДоходов,
	|	&АналитикаДоходов                              КАК АналитикаДоходов,
	|
	|	КорректировкаСтоимости.Стоимость               КАК Сумма,
	|	КорректировкаСтоимости.Стоимость               КАК СуммаУпр,
	|	КорректировкаСтоимости.СтоимостьРегл
	|		+ КорректировкаСтоимости.СтоимостьЦФ       КАК СуммаРегл,
	|
	|	КорректировкаСтоимости.ИдентификаторФинЗаписи          КАК ИдентификаторФинЗаписи,
	|	КорректировкаСтоимости.НастройкаХозяйственнойОперации  КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтУвеличениеСтоимости КАК КорректировкаСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО (СведенияОбУчете.ОсновноеСредство = КорректировкаСтоимости.ОсновноеСредство)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(&СтатьяДоходов) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|	И (КорректировкаСтоимости.Стоимость <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьРегл <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьЦФ <> 0)";
	ТекстыЗапросаОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область УменьшениеСтоимостиЦФ
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	&Период                                        КАК Период,
	|	&Организация                                   КАК Организация,
	|	&Подразделение                                 КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности        КАК НаправлениеДеятельности,
	|	&ИзменениеДоходовЦФ                            КАК ХозяйственнаяОперация,
	|	&СтатьяДоходов                                 КАК СтатьяДоходов,
	|	&АналитикаДоходов                              КАК АналитикаДоходов,
	|
	|	0                                              КАК Сумма,
	|	0                                              КАК СуммаУпр,
	|	КорректировкаСтоимости.СтоимостьЦФ             КАК СуммаРегл,
	|
	|	&ИдентификаторНеиспользуемойФинЗаписи          КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПустаяСсылка) КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтУменьшениеСтоимости КАК КорректировкаСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО (СведенияОбУчете.ОсновноеСредство = КорректировкаСтоимости.ОсновноеСредство)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(&СтатьяДоходов) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|	И КорректировкаСтоимости.СтоимостьЦФ <> 0";
	ТекстыЗапросаОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УменьшениеАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	&Период                                        КАК Период,
	|	&Организация                                   КАК Организация,
	|	&Подразделение                                 КАК Подразделение,
	|	СведенияОбУчете.НаправлениеДеятельности        КАК НаправлениеДеятельности,
	|	&УменьшениеАмортизации                         КАК ХозяйственнаяОперация,
	|	&СтатьяДоходов                                 КАК СтатьяДоходов,
	|	&АналитикаДоходов                              КАК АналитикаДоходов,
	|
	|	КорректировкаАмортизации.Амортизация           КАК Сумма,
	|
	|	ВЫБОР 
	|		КОГДА НЕ &УправленческийУчетОрганизаций
	|			ТОГДА 0
	|		ИНАЧЕ КорректировкаАмортизации.Амортизация
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР 
	|		КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл
	|			ТОГДА 0
	|		КОГДА КорректировкаАмортизации.НачислятьИзнос
	|			ТОГДА 0
	|		ИНАЧЕ КорректировкаАмортизации.АмортизацияРегл + КорректировкаАмортизации.АмортизацияЦФ
	|	КОНЕЦ КАК СуммаРегл,
	|
	|	КорректировкаАмортизации.ИдентификаторФинЗаписи          КАК ИдентификаторФинЗаписи,
	|	КорректировкаАмортизации.НастройкаХозяйственнойОперации  КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтУменьшениеАмортизации КАК КорректировкаАмортизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО (СведенияОбУчете.ОсновноеСредство = КорректировкаАмортизации.ОсновноеСредство)
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(&СтатьяДоходов) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|	И (КорректировкаАмортизации.Амортизация <> 0
	|		ИЛИ (КорректировкаАмортизации.АмортизацияРегл <> 0 ИЛИ КорректировкаАмортизации.АмортизацияЦФ <> 0)
	|				И НЕ КорректировкаАмортизации.НачислятьИзнос)";
	ТекстыЗапросаОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапросаОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = КорректировкаСтоимостиИАмортизацииОСЛокализация.ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса);
	
	Если ТекстЗапроса = Неопределено Тогда
		
		ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПервоначальныеСведенияОС(ТекстыЗапроса, "Документ.КорректировкаСтоимостиИАмортизацииОС");
	
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Период КАК Период,
		|	&Организация КАК Организация,
		|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	втПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
		|	втПервоначальныеСведенияОС.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
		|	втПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
		|	втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
		|	втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ,
		|	втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ,
		|	втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ КАК ДокументВводаВЭксплуатациюУУ,
		|	втПервоначальныеСведенияОС.ДокументСнятияСУчетаБУ КАК ДокументСнятияСУчетаБУ,
		|	втПервоначальныеСведенияОС.ДокументСнятияСУчетаУУ КАК ДокументСнятияСУчетаУУ,
		|	втПервоначальныеСведенияОС.Контрагент КАК Контрагент,
		|
		|	ВЫБОР
		|		КОГДА &ОтражатьВРеглУчете
		|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьБУ
		|		ИНАЧЕ втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ
		|	КОНЕЦ КАК ПервоначальнаяСтоимостьБУ,
		|
		|	ВЫБОР
		|		КОГДА &ОтражатьВУпрУчете
		|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьУУ
		|		ИНАЧЕ втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ
		|	КОНЕЦ КАК ПервоначальнаяСтоимостьУУ
		|
		|ИЗ
		|	Документ.КорректировкаСтоимостиИАмортизацииОС.ОС КАК ТаблицаОС
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК втПервоначальныеСведенияОС
		|		ПО (втПервоначальныеСведенияОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
		|
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|	И &РеглУчетВНАВедетсяНезависимо
		|	И (&ОтражатьВРеглУчете
		|				И втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ <> ТаблицаОС.ПервоначальнаяСтоимостьБУ
		|			ИЛИ &ОтражатьВУпрУчете
		|				И втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ <> ТаблицаОС.ПервоначальнаяСтоимостьУУ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	&Организация КАК Организация,
		|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	втПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
		|	втПервоначальныеСведенияОС.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
		|	втПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
		|	втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
		|	втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ,
		|	втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ,
		|	втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ КАК ДокументВводаВЭксплуатациюУУ,
		|	втПервоначальныеСведенияОС.ДокументСнятияСУчетаБУ КАК ДокументСнятияСУчетаБУ,
		|	втПервоначальныеСведенияОС.ДокументСнятияСУчетаУУ КАК ДокументСнятияСУчетаУУ,
		|	втПервоначальныеСведенияОС.Контрагент КАК Контрагент,
		|
		|	ТаблицаОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
		|	ТаблицаОС.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ
		|
		|ИЗ
		|	Документ.КорректировкаСтоимостиИАмортизацииОС.ОС КАК ТаблицаОС
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК втПервоначальныеСведенияОС
		|		ПО (втПервоначальныеСведенияОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
		|
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|	И НЕ &РеглУчетВНАВедетсяНезависимо
		|	И (втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ <> ТаблицаОС.ПервоначальнаяСтоимостьБУ
		|			ИЛИ втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ <> ТаблицаОС.ПервоначальнаяСтоимостьУУ)
		|";
		
	КонецЕсли; 
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПараметрыАмортизацииОСУУ(ТекстыЗапроса, Регистры) Экспорт

	ИмяРегистра = "ПараметрыАмортизацииОСУУ";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПараметрыАмортизацииОСУУ(
		ТекстыЗапроса, "Документ.КорректировкаСтоимостиИАмортизацииОС");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	втПараметрыАмортизацииОСУУ.СрокИспользования КАК СрокИспользования,
	|	втПараметрыАмортизацииОСУУ.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	втПараметрыАмортизацииОСУУ.КоэффициентУскорения КАК КоэффициентУскорения,
	|	втПараметрыАмортизацииОСУУ.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	втПараметрыАмортизацииОСУУ.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	втПараметрыАмортизацииОСУУ.ЛиквидационнаяСтоимостьРегл КАК ЛиквидационнаяСтоимостьРегл,
	|	втПараметрыАмортизацииОСУУ.ДатаПоследнегоИзменения КАК ДатаПоследнегоИзменения,
	|	втПараметрыАмортизацииОСУУ.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ТаблицаОС.СтоимостьДляВычисленияАмортизацииУУ КАК СтоимостьДляВычисленияАмортизации,
	|	ВЫБОР
	|		КОГДА НЕ &ВедетсяРегламентированныйУчетВНА
	|			ТОГДА ТаблицаОС.СтоимостьДляВычисленияАмортизацииБУ
	|		ИНАЧЕ втПараметрыАмортизацииОСУУ.СтоимостьДляВычисленияАмортизацииРегл
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизацииРегл
	|ИЗ
	|	Документ.КорректировкаСтоимостиИАмортизацииОС.ОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыАмортизацииОСУУ КАК втПараметрыАмортизацииОСУУ
	|		ПО (втПараметрыАмортизацииОСУУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВУпрУчете
	|	И втПараметрыАмортизацииОСУУ.СтоимостьДляВычисленияАмортизации <> ТаблицаОС.СтоимостьДляВычисленияАмортизацииУУ
	|	И &ПорядокУчетаВНА = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл)";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Процедура ТекстЗапросаВтУвеличениеСтоимости(ТекстыЗапроса)

	ИмяТаблицы = "ВтУвеличениеСтоимости";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаВтКорректировкаСтоимости(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КорректировкаСтоимости.ОсновноеСредство     КАК ОсновноеСредство,
	|
	// Стоимость
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.Стоимость > 0
	|			ТОГДА КорректировкаСтоимости.Стоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК Стоимость,
	|
	// СтоимостьРегл
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьРегл > 0
	|			ТОГДА КорректировкаСтоимости.СтоимостьРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьРегл,
	|
	// СтоимостьНУ
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьНУ > 0
	|			ТОГДА КорректировкаСтоимости.СтоимостьНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьНУ,
	|
	// СтоимостьПР
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьРегл = 0
	|				И КорректировкаСтоимости.СтоимостьНУ = 0
	|			ТОГДА 0
	|		КОГДА КорректировкаСтоимости.СтоимостьРегл > 0
	|			ТОГДА КорректировкаСтоимости.СтоимостьПР
	|		КОГДА КорректировкаСтоимости.СтоимостьРегл = 0
	|				И КорректировкаСтоимости.СтоимостьНУ > 0
	|			ТОГДА КорректировкаСтоимости.СтоимостьПР
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьПР,
	|
	// СтоимостьЦФ
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьЦФ > 0
	|			ТОГДА КорректировкаСтоимости.СтоимостьЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьЦФ,
	|
	// СтоимостьПРЦФ
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьПРЦФ > 0
	|			ТОГДА КорректировкаСтоимости.СтоимостьПРЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьПРЦФ,
	|
	// ЗалоговаяСтоимость
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.ЗалоговаяСтоимость > 0
	|			ТОГДА КорректировкаСтоимости.ЗалоговаяСтоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК ЗалоговаяСтоимость,
	|
	|	КорректировкаСтоимости.ИдентификаторСтроки  КАК ИдентификаторФинЗаписи,
	|	&НастройкаХОУвеличениеСтоимости             КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ ВтУвеличениеСтоимости
	|ИЗ
	|	ВтКорректировкаСтоимости КАК КорректировкаСтоимости
	|ГДЕ
	|	КорректировкаСтоимости.Стоимость > 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьРегл > 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьНУ > 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьЦФ > 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьПРЦФ > 0
	|		ИЛИ КорректировкаСтоимости.ЗалоговаяСтоимость > 0
	|		ИЛИ ВЫБОР 
	|				КОГДА КорректировкаСтоимости.СтоимостьРегл = 0
	|						И КорректировкаСтоимости.СтоимостьНУ = 0
	|					ТОГДА 0
	|				КОГДА КорректировкаСтоимости.СтоимостьРегл > 0
	|					ТОГДА КорректировкаСтоимости.СтоимостьПР
	|				КОГДА КорректировкаСтоимости.СтоимостьРегл = 0
	|						И КорректировкаСтоимости.СтоимостьНУ > 0
	|					ТОГДА КорректировкаСтоимости.СтоимостьПР
	|				ИНАЧЕ 0
	|			КОНЕЦ <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтУменьшениеСтоимости(ТекстыЗапроса)

	ИмяТаблицы = "ВтУменьшениеСтоимости";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаВтКорректировкаСтоимости(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КорректировкаСтоимости.ОсновноеСредство     КАК ОсновноеСредство,
	|
	// Стоимость
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.Стоимость < 0
	|			ТОГДА -КорректировкаСтоимости.Стоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК Стоимость,
	|
	// СтоимостьРегл
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьРегл < 0
	|			ТОГДА -КорректировкаСтоимости.СтоимостьРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьРегл,
	|
	// СтоимостьНУ
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьНУ < 0
	|			ТОГДА -КорректировкаСтоимости.СтоимостьНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьНУ,
	|
	// СтоимостьПР
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьРегл < 0
	|			ТОГДА -КорректировкаСтоимости.СтоимостьПР
	|		КОГДА КорректировкаСтоимости.СтоимостьРегл = 0
	|				И КорректировкаСтоимости.СтоимостьНУ < 0
	|			ТОГДА -КорректировкаСтоимости.СтоимостьПР
	|		КОГДА КорректировкаСтоимости.СтоимостьРегл = 0
	|				И КорректировкаСтоимости.СтоимостьНУ = 0
	|			ТОГДА -КорректировкаСтоимости.СтоимостьПР
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьПР,
	|
	// СтоимостьЦФ
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьЦФ < 0
	|			ТОГДА -КорректировкаСтоимости.СтоимостьЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьЦФ,
	|
	// СтоимостьПРЦФ
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.СтоимостьПРЦФ < 0
	|			ТОГДА -КорректировкаСтоимости.СтоимостьПРЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьПРЦФ,
	|
	// ЗалоговаяСтоимость
	|	ВЫБОР 
	|		КОГДА КорректировкаСтоимости.ЗалоговаяСтоимость < 0
	|			ТОГДА -КорректировкаСтоимости.ЗалоговаяСтоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК ЗалоговаяСтоимость,
	|
	|	КорректировкаСтоимости.ИдентификаторСтроки  КАК ИдентификаторФинЗаписи,
	|	&НастройкаХОУменьшениеСтоимости             КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ ВтУменьшениеСтоимости
	|ИЗ
	|	ВтКорректировкаСтоимости КАК КорректировкаСтоимости
	|ГДЕ
	|	КорректировкаСтоимости.Стоимость < 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьРегл < 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьНУ < 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьЦФ < 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьПРЦФ < 0
	|		ИЛИ КорректировкаСтоимости.ЗалоговаяСтоимость < 0
	|		ИЛИ ВЫБОР 
	|				КОГДА КорректировкаСтоимости.СтоимостьРегл < 0
	|					ТОГДА -КорректировкаСтоимости.СтоимостьПР
	|				КОГДА КорректировкаСтоимости.СтоимостьРегл = 0
	|						И КорректировкаСтоимости.СтоимостьНУ < 0
	|					ТОГДА -КорректировкаСтоимости.СтоимостьПР
	|				КОГДА КорректировкаСтоимости.СтоимостьРегл = 0
	|						И КорректировкаСтоимости.СтоимостьНУ = 0
	|					ТОГДА -КорректировкаСтоимости.СтоимостьПР
	|				ИНАЧЕ 0
	|			КОНЕЦ <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтУвеличениеАмортизации(ТекстыЗапроса)

	ИмяТаблицы = "втУвеличениеАмортизации";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаВтКорректировкаАмортизации(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КорректировкаАмортизации.ОсновноеСредство   КАК ОсновноеСредство,
	|	КорректировкаАмортизации.НачислятьИзнос     КАК НачислятьИзнос,
	|
	// Амортизация
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.Амортизация > 0
	|			ТОГДА КорректировкаАмортизации.Амортизация
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК Амортизация,
	|
	// АмортизацияРегл
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияРегл > 0
	|			ТОГДА КорректировкаАмортизации.АмортизацияРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК АмортизацияРегл,
	|
	// АмортизацияНУ
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияНУ > 0
	|			ТОГДА КорректировкаАмортизации.АмортизацияНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК АмортизацияНУ,
	|
	// АмортизацияПР
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияРегл > 0
	|			ТОГДА КорректировкаАмортизации.АмортизацияПР
	|		КОГДА КорректировкаАмортизации.АмортизацияРегл = 0
	|				И КорректировкаАмортизации.АмортизацияНУ > 0
	|			ТОГДА КорректировкаАмортизации.АмортизацияПР
	|		КОГДА КорректировкаАмортизации.АмортизацияРегл = 0
	|				И КорректировкаАмортизации.АмортизацияНУ = 0
	|			ТОГДА КорректировкаАмортизации.АмортизацияПР
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК АмортизацияПР,
	|
	// АмортизацияЦФ
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияЦФ > 0
	|			ТОГДА КорректировкаАмортизации.АмортизацияЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК АмортизацияЦФ,
	|
	// АмортизацияПРЦФ
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияПРЦФ > 0
	|			ТОГДА КорректировкаАмортизации.АмортизацияПРЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК АмортизацияПРЦФ,
	|
	|	КорректировкаАмортизации.ИдентификаторСтроки  КАК ИдентификаторФинЗаписи,
	|	&НастройкаХОУвеличениеНакопленнойАмортизации  КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ втУвеличениеАмортизации
	|ИЗ
	|	ВтКорректировкаАмортизации КАК КорректировкаАмортизации
	|ГДЕ
	|	КорректировкаАмортизации.Амортизация > 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияРегл > 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияНУ > 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияЦФ > 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияПРЦФ > 0
	|		ИЛИ ВЫБОР 
	|				КОГДА КорректировкаАмортизации.АмортизацияРегл > 0
	|					ТОГДА КорректировкаАмортизации.АмортизацияПР
	|				КОГДА КорректировкаАмортизации.АмортизацияРегл = 0
	|						И КорректировкаАмортизации.АмортизацияНУ > 0
	|					ТОГДА КорректировкаАмортизации.АмортизацияПР
	|				КОГДА КорректировкаАмортизации.АмортизацияРегл = 0
	|						И КорректировкаАмортизации.АмортизацияНУ = 0
	|					ТОГДА КорректировкаАмортизации.АмортизацияПР
	|				ИНАЧЕ 0
	|			КОНЕЦ <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтУменьшениеАмортизации(ТекстыЗапроса)

	ИмяТаблицы = "втУменьшениеАмортизации";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаВтКорректировкаАмортизации(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КорректировкаАмортизации.ОсновноеСредство   КАК ОсновноеСредство,
	|	КорректировкаАмортизации.НачислятьИзнос     КАК НачислятьИзнос,
	|
	// Амортизация
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.Амортизация < 0
	|			ТОГДА -КорректировкаАмортизации.Амортизация
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК Амортизация,
	|
	// АмортизацияРегл
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияРегл < 0
	|			ТОГДА -КорректировкаАмортизации.АмортизацияРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК АмортизацияРегл,
	|
	// АмортизацияНУ
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияНУ < 0
	|			ТОГДА -КорректировкаАмортизации.АмортизацияНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК АмортизацияНУ,
	|
	// АмортизацияПР
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияРегл = 0
	|				И КорректировкаАмортизации.АмортизацияНУ = 0
	|			ТОГДА 0
	|		КОГДА КорректировкаАмортизации.АмортизацияРегл < 0
	|			ТОГДА -КорректировкаАмортизации.АмортизацияПР
	|		КОГДА КорректировкаАмортизации.АмортизацияРегл = 0
	|				И КорректировкаАмортизации.АмортизацияНУ < 0
	|			ТОГДА -КорректировкаАмортизации.АмортизацияПР
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК АмортизацияПР,
	|
	// АмортизацияЦФ
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияЦФ < 0
	|			ТОГДА -КорректировкаАмортизации.АмортизацияЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК АмортизацияЦФ,
	|
	// АмортизацияПРЦФ
	|	ВЫБОР 
	|		КОГДА КорректировкаАмортизации.АмортизацияПРЦФ < 0
	|			ТОГДА -КорректировкаАмортизации.АмортизацияПРЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК АмортизацияПРЦФ,
	|
	|	КорректировкаАмортизации.ИдентификаторСтроки  КАК ИдентификаторФинЗаписи,
	|	&НастройкаХОУменьшениеНакопленнойАмортизации  КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ втУменьшениеАмортизации
	|ИЗ
	|	ВтКорректировкаАмортизации КАК КорректировкаАмортизации
	|ГДЕ
	|	КорректировкаАмортизации.Амортизация < 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияРегл < 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияНУ < 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияЦФ < 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияПРЦФ < 0
	|		ИЛИ ВЫБОР 
	|				КОГДА КорректировкаАмортизации.АмортизацияРегл = 0
	|						И КорректировкаАмортизации.АмортизацияНУ = 0
	|					ТОГДА 0
	|				КОГДА КорректировкаАмортизации.АмортизацияРегл < 0
	|					ТОГДА -КорректировкаАмортизации.АмортизацияПР
	|				КОГДА КорректировкаАмортизации.АмортизацияРегл = 0
	|						И КорректировкаАмортизации.АмортизацияНУ < 0
	|					ТОГДА -КорректировкаАмортизации.АмортизацияПР
	|				ИНАЧЕ 0
	|			КОНЕЦ <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтКорректировкаСтоимости(ТекстыЗапроса)

	ИмяТаблицы = "втКорректировкаСтоимости";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство                  КАК ОсновноеСредство,
	|
	// Стоимость
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СтоимостьОС.Стоимость, 0) <> ТаблицаОС.СтоимостьУУ 
	|				И &ОтражатьВУпрУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.СтоимостьУУ - ЕСТЬNULL(СтоимостьОС.Стоимость, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК Стоимость,
	|
	// СтоимостьРегл
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) <> ТаблицаОС.СтоимостьБУ 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.СтоимостьБУ - ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьРегл,
	|
	// СтоимостьНУ
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СтоимостьОС.СтоимостьНУ, 0) <> ТаблицаОС.СтоимостьНУ 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.СтоимостьНУ - ЕСТЬNULL(СтоимостьОС.СтоимостьНУ, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьНУ,
	|
	// СтоимостьПР
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СтоимостьОС.СтоимостьПР, 0) <> ТаблицаОС.СтоимостьПР 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.СтоимостьПР - ЕСТЬNULL(СтоимостьОС.СтоимостьПР, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьПР,
	|
	// СтоимостьЦФ
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0) <> ТаблицаОС.СтоимостьЦФ 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.СтоимостьЦФ - ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьЦФ,
	|
	// СтоимостьПРЦФ
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СтоимостьОС.СтоимостьПРЦФ, 0) <> ТаблицаОС.СтоимостьЦФ 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.СтоимостьЦФ - ЕСТЬNULL(СтоимостьОС.СтоимостьПРЦФ, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьПРЦФ,
	|
	// ЗалоговаяСтоимость
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СтоимостьОС.ЗалоговаяСтоимость, 0) <> ТаблицаОС.ЗалоговаяСтоимость 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Арендованное)
	|			ТОГДА ТаблицаОС.ЗалоговаяСтоимость - ЕСТЬNULL(СтоимостьОС.ЗалоговаяСтоимость, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК ЗалоговаяСтоимость,
	|
	|	ТаблицаОС.ИдентификаторСтроки               КАК ИдентификаторСтроки
	|
	|ПОМЕСТИТЬ втКорректировкаСтоимости
	|ИЗ
	|	Документ.КорректировкаСтоимостиИАмортизацииОС.ОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьОС
	|		ПО СтоимостьОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И СтоимостьОС.Ссылка = &Ссылка
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И (ЕСТЬNULL(СтоимостьОС.Стоимость, 0) <> ТаблицаОС.СтоимостьУУ 
	|				И &ОтражатьВУпрУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|
	|		ИЛИ ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) <> ТаблицаОС.СтоимостьБУ 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|
	|		ИЛИ ЕСТЬNULL(СтоимостьОС.СтоимостьНУ, 0) <> ТаблицаОС.СтоимостьНУ 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|
	|		ИЛИ ЕСТЬNULL(СтоимостьОС.СтоимостьПР, 0) <> ТаблицаОС.СтоимостьПР 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|
	|		ИЛИ ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0) <> ТаблицаОС.СтоимостьЦФ 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|
	|		ИЛИ ЕСТЬNULL(СтоимостьОС.ЗалоговаяСтоимость, 0) <> ТаблицаОС.ЗалоговаяСтоимость 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Арендованное))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтКорректировкаАмортизации(ТекстыЗапроса)

	ИмяТаблицы = "втКорректировкаАмортизации";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПервоначальныеСведенияОС(ТекстыЗапроса, "Документ.КорректировкаСтоимостиИАмортизацииОС");
	ТекстЗапросаТаблицаВтАмортизацияТекущегоМесяца(ТекстыЗапроса); 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство                  КАК ОсновноеСредство,
	|	&НачислятьИзнос                             КАК НачислятьИзнос,
	|
	// Амортизация
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(АмортизацияОС.Амортизация, 0) <> ТаблицаОС.АмортизацияУУ 
	|				И &ОтражатьВУпрУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.АмортизацияУУ - ЕСТЬNULL(АмортизацияОС.Амортизация, 0) + ЕСТЬNULL(ВтАмортизацияТекущегоМесяца.Амортизация, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК Амортизация,
	|
	// АмортизацияРегл
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(АмортизацияОС.АмортизацияРегл, 0) <> ТаблицаОС.АмортизацияБУ 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.АмортизацияБУ - ЕСТЬNULL(АмортизацияОС.АмортизацияРегл, 0) + ЕСТЬNULL(ВтАмортизацияТекущегоМесяца.АмортизацияРегл, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК АмортизацияРегл,
	|
	// АмортизацияНУ
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(АмортизацияОС.АмортизацияНУ, 0) <> ТаблицаОС.АмортизацияНУ 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.АмортизацияНУ - ЕСТЬNULL(АмортизацияОС.АмортизацияНУ, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК АмортизацияНУ,
	|
	// АмортизацияПР
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(АмортизацияОС.АмортизацияПР, 0) <> ТаблицаОС.АмортизацияПР 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.АмортизацияПР - ЕСТЬNULL(АмортизацияОС.АмортизацияПР, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК АмортизацияПР,
	|
	// АмортизацияЦФ
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(АмортизацияОС.АмортизацияЦФ, 0) <> ТаблицаОС.АмортизацияЦФ 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.АмортизацияЦФ - ЕСТЬNULL(АмортизацияОС.АмортизацияЦФ, 0) + ЕСТЬNULL(ВтАмортизацияТекущегоМесяца.АмортизацияЦФ, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК АмортизацияЦФ,
	|
	// АмортизацияПРЦФ
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(АмортизацияОС.АмортизацияПРЦФ, 0) <> ТаблицаОС.АмортизацияЦФ 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|			ТОГДА ТаблицаОС.АмортизацияЦФ - ЕСТЬNULL(АмортизацияОС.АмортизацияПРЦФ, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК АмортизацияПРЦФ,
	|
	|	ТаблицаОС.ИдентификаторСтроки               КАК ИдентификаторСтроки
	|
	|ПОМЕСТИТЬ втКорректировкаАмортизации
	|ИЗ
	|	Документ.КорректировкаСтоимостиИАмортизацииОС.ОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияВНА КАК АмортизацияОС
	|		ПО АмортизацияОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И АмортизацияОС.Ссылка = &Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО ПервоначальныеСведенияОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтАмортизацияТекущегоМесяца КАК ВтАмортизацияТекущегоМесяца
	|		ПО ВтАмортизацияТекущегоМесяца.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|	И (ЕСТЬNULL(АмортизацияОС.Амортизация, 0) <> ТаблицаОС.АмортизацияУУ 
	|				И &ОтражатьВУпрУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|
	|		ИЛИ ЕСТЬNULL(АмортизацияОС.АмортизацияРегл, 0) <> ТаблицаОС.АмортизацияБУ 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|
	|		ИЛИ ЕСТЬNULL(АмортизацияОС.АмортизацияНУ, 0) <> ТаблицаОС.АмортизацияНУ 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|
	|		ИЛИ ЕСТЬNULL(АмортизацияОС.АмортизацияПР, 0) <> ТаблицаОС.АмортизацияПР 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное)
	|
	|		ИЛИ ЕСТЬNULL(АмортизацияОС.АмортизацияЦФ, 0) <> ТаблицаОС.АмортизацияЦФ 
	|				И &ОтражатьВРеглУчете 
	|				И &ВидИмущества = ЗНАЧЕНИЕ(Перечисление.ВидыИмущества.Собственное))";
	
	КорректировкаСтоимостиИАмортизацииОСЛокализация.ДополнитьТекстЗапросаВтКорректировкаАмортизации(ТекстЗапроса);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтАмортизацияТекущегоМесяца(ТекстыЗапроса)
	
	ИмяТаблицы = "ВтАмортизацияТекущегоМесяца";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	АмортизацияОСОбороты.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(АмортизацияОСОбороты.АмортизацияОборот) КАК Амортизация,
	|	СУММА(АмортизацияОСОбороты.АмортизацияРеглОборот) КАК АмортизацияРегл,
	|	СУММА(АмортизацияОСОбороты.АмортизацияЦФОборот) КАК АмортизацияЦФ
	|ПОМЕСТИТЬ ВтАмортизацияТекущегоМесяца
	|ИЗ
	|	РегистрНакопления.АмортизацияОС.Обороты(
	|			&НачПериодаДокумента,
	|			&КонПериодаДокумента,
	|			Регистратор,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
	|					ИЗ
	|						Документ.КорректировкаСтоимостиИАмортизацииОС.ОС КАК ТаблицаОС
	|					ГДЕ
	|						ТаблицаОС.Ссылка = &Ссылка)) КАК АмортизацияОСОбороты
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(АмортизацияОСОбороты.Регистратор) = ТИП(Документ.АмортизацияОС2_4)
	|	И &ВидСобытияОС = ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Прочее)
	|				 
	|
	|СГРУППИРОВАТЬ ПО
	|	АмортизацияОСОбороты.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат "";
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса, "Документ.КорректировкаСтоимостиИАмортизацииОС", "втСведенияОбУчете");
	ТекстЗапросаВтУвеличениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУвеличениеАмортизации(ТекстыЗапроса);
	
	СписокЗапросовОбъединение = Новый Массив;
	СписокЗапросовОбъединение.Добавить(РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы());
	
	#Область УменьшениеСтоимости
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                         КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	&Организация                                    КАК Организация,
	|	&Подразделение                                  КАК Подразделение,
	|	&СтатьяРасходов                                 КАК СтатьяРасходов,
	|	&АналитикаРасходов                              КАК АналитикаРасходов,
	|	СведенияОбУчете.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК ВидДеятельностиНДС,
	|	
	|	КорректировкаСтоимости.Стоимость СуммаСНДС,
	|	КорректировкаСтоимости.Стоимость КАК СуммаБезНДС,
	|	КорректировкаСтоимости.Стоимость КАК СуммаБезНДСУпр,
	|
	|	КорректировкаСтоимости.СтоимостьРегл
	|		+ КорректировкаСтоимости.СтоимостьЦФ КАК СуммаСНДСРегл,
	|
	|	КорректировкаСтоимости.СтоимостьРегл
	|		+ КорректировкаСтоимости.СтоимостьЦФ КАК СуммаБезНДСРегл,
	|
	|	КорректировкаСтоимости.СтоимостьПР
	|		+ КорректировкаСтоимости.СтоимостьПРЦФ КАК ПостояннаяРазница,
	|
	|	КорректировкаСтоимости.СтоимостьРегл
	|		+ КорректировкаСтоимости.СтоимостьЦФ
	|		- КорректировкаСтоимости.СтоимостьНУ
	|		- КорректировкаСтоимости.СтоимостьПР
	|		- КорректировкаСтоимости.СтоимостьПРЦФ КАК ВременнаяРазница,
	|
	|	&УменьшениеСтоимости                            КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                    КАК АналитикаУчетаНоменклатуры,
	|
	|	КорректировкаСтоимости.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
	|	КорректировкаСтоимости.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтУменьшениеСтоимости КАК КорректировкаСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.ОсновноеСредство = КорректировкаСтоимости.ОсновноеСредство
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(&СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|	И (КорректировкаСтоимости.Стоимость <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьРегл <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьНУ <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьПР <> 0)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область УвеличениеСтоимостиЦФ
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                         КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	&Организация                                    КАК Организация,
	|	&Подразделение                                  КАК Подразделение,
	|	&СтатьяРасходов                                 КАК СтатьяРасходов,
	|	&АналитикаРасходов                              КАК АналитикаРасходов,
	|	СведенияОбУчете.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК ВидДеятельностиНДС,
	|	
	|	0 СуммаСНДС,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаБезНДСУпр,
	|
	|	КорректировкаСтоимости.СтоимостьЦФ КАК СуммаСНДСРегл,
	|
	|	КорректировкаСтоимости.СтоимостьЦФ КАК СуммаБезНДСРегл,
	|
	|	КорректировкаСтоимости.СтоимостьПРЦФ КАК ПостояннаяРазница,
	|
	|	КорректировкаСтоимости.СтоимостьЦФ
	|		- КорректировкаСтоимости.СтоимостьПРЦФ КАК ВременнаяРазница,
	|
	|	&ИзменениеДоходовЦФ                             КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                    КАК АналитикаУчетаНоменклатуры,
	|
	|	&ИдентификаторНеиспользуемойФинЗаписи           КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПустаяСсылка) КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтУвеличениеСтоимости КАК КорректировкаСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.ОсновноеСредство = КорректировкаСтоимости.ОсновноеСредство
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(&СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|	И (КорректировкаСтоимости.СтоимостьЦФ <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьПРЦФ <> 0)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область УвеличениеАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                         КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	&Организация                                    КАК Организация,
	|	&Подразделение                                  КАК Подразделение,
	|	&СтатьяРасходов                                 КАК СтатьяРасходов,
	|	&АналитикаРасходов                              КАК АналитикаРасходов,
	|	СведенияОбУчете.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК ВидДеятельностиНДС,
	|	
	|	КорректировкаАмортизации.Амортизация            КАК СуммаСНДС,
	|	КорректировкаАмортизации.Амортизация            КАК СуммаБезНДС,
	|	КорректировкаАмортизации.Амортизация            КАК СуммаБезНДСУпр,
	|
	|	КорректировкаАмортизации.АмортизацияРегл
	|		+ КорректировкаАмортизации.АмортизацияЦФ    КАК СуммаСНДСРегл,
	|
	|	КорректировкаАмортизации.АмортизацияРегл
	|		+ КорректировкаАмортизации.АмортизацияЦФ    КАК СуммаБезНДСРегл,
	|
	|	КорректировкаАмортизации.АмортизацияПР
	|		+ КорректировкаАмортизации.АмортизацияПРЦФ  КАК ПостояннаяРазница,
	|
	|	КорректировкаАмортизации.АмортизацияРегл
	|		+ КорректировкаАмортизации.АмортизацияЦФ
	|		- КорректировкаАмортизации.АмортизацияНУ
	|		- КорректировкаАмортизации.АмортизацияПР
	|		- КорректировкаАмортизации.АмортизацияПРЦФ  КАК ВременнаяРазница,
	|
	|	&УвеличениеАмортизации                          КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                    КАК АналитикаУчетаНоменклатуры,
	|
	|	КорректировкаАмортизации.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
	|	КорректировкаАмортизации.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтУвеличениеАмортизации КАК КорректировкаАмортизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.ОсновноеСредство = КорректировкаАмортизации.ОсновноеСредство
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(&СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|	И (КорректировкаАмортизации.Амортизация <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияРегл <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияНУ <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияПР <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияЦФ <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияПРЦФ <> 0)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПартииПрочихРасходов";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат "";
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса, "Документ.КорректировкаСтоимостиИАмортизацииОС", "втСведенияОбУчете");
	ТекстЗапросаВтУвеличениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУменьшениеСтоимости(ТекстыЗапроса);
	ТекстЗапросаВтУвеличениеАмортизации(ТекстыЗапроса);
	
	СписокЗапросовОбъединение = Новый Массив;
	СписокЗапросовОбъединение.Добавить(РегистрыНакопления.ПартииПрочихРасходов.ТекстОписаниеВтИсходныеПартииПрочихРасходов());
	
	#Область УменьшениеСтоимости
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	СведенияОбУчете.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	КорректировкаСтоимости.Стоимость КАК Стоимость,
	|	КорректировкаСтоимости.Стоимость КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|
	|	КорректировкаСтоимости.СтоимостьРегл КАК СтоимостьРегл,
	|
	|	0 КАК НДСРегл,
	|
	|	КорректировкаСтоимости.СтоимостьПР КАК ПостояннаяРазница,
	|
	|	КорректировкаСтоимости.СтоимостьРегл
	|		- КорректировкаСтоимости.СтоимостьНУ
	|		- КорректировкаСтоимости.СтоимостьПР КАК ВременнаяРазница,
	|
	|	&УменьшениеСтоимости КАК ХозяйственнаяОперация,
	|
	|	КорректировкаСтоимости.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
	|	КорректировкаСтоимости.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтУменьшениеСтоимости КАК КорректировкаСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.ОсновноеСредство = КорректировкаСтоимости.ОсновноеСредство
	|ГДЕ
	|	(КорректировкаСтоимости.Стоимость <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьРегл <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьНУ <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьПР <> 0)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область УвеличениеСтоимостиЦФ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	СведенияОбУчете.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|
	|	КорректировкаСтоимости.СтоимостьЦФ КАК СтоимостьРегл,
	|
	|	0 КАК НДСРегл,
	|
	|	КорректировкаСтоимости.СтоимостьПРЦФ КАК ПостояннаяРазница,
	|
	|	КорректировкаСтоимости.СтоимостьЦФ
	|		- КорректировкаСтоимости.СтоимостьПРЦФ КАК ВременнаяРазница,
	|
	|	&УвеличениеСтоимости КАК ХозяйственнаяОперация,
	|
	|	КорректировкаСтоимости.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
	|	КорректировкаСтоимости.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтУвеличениеСтоимости КАК КорректировкаСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.ОсновноеСредство = КорректировкаСтоимости.ОсновноеСредство
	|ГДЕ
	|	(КорректировкаСтоимости.СтоимостьЦФ <> 0
	|		ИЛИ КорректировкаСтоимости.СтоимостьПРЦФ <> 0)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область УвеличениеАмортизации
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	СведенияОбУчете.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	КорректировкаАмортизации.Амортизация КАК Стоимость,
	|	КорректировкаАмортизации.Амортизация КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|
	|	КорректировкаАмортизации.АмортизацияРегл
	|		+ КорректировкаАмортизации.АмортизацияЦФ КАК СтоимостьРегл,
	|
	|	0 КАК НДСРегл,
	|
	|	КорректировкаАмортизации.АмортизацияПР
	|		+ КорректировкаАмортизации.АмортизацияПРЦФ КАК ПостояннаяРазница,
	|
	|	КорректировкаАмортизации.АмортизацияРегл
	|		+ КорректировкаАмортизации.АмортизацияЦФ
	|		- КорректировкаАмортизации.АмортизацияНУ
	|		- КорректировкаАмортизации.АмортизацияПР
	|		- КорректировкаАмортизации.АмортизацияПРЦФ КАК ВременнаяРазница,
	|
	|	&УвеличениеАмортизации КАК ХозяйственнаяОперация,
	|
	|	КорректировкаАмортизации.ИдентификаторФинЗаписи         КАК ИдентификаторФинЗаписи,
	|	КорректировкаАмортизации.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ВтУвеличениеАмортизации КАК КорректировкаАмортизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСведенияОбУчете КАК СведенияОбУчете
	|		ПО СведенияОбУчете.ОсновноеСредство = КорректировкаАмортизации.ОсновноеСредство
	|ГДЕ
	|	(КорректировкаАмортизации.Амортизация <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияРегл <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияНУ <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияПР <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияЦФ <> 0
	|		ИЛИ КорректировкаАмортизации.АмортизацияПРЦФ <> 0)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПартииПрочихРасходов(ТекстыЗапроса)
	
	ИмяРегистра = "ВтПартииПрочихРасходов";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ПроведениеПоРеглУчету

Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт

	Возврат "";

КонецФункции

Функция ТекстОтраженияВРеглУчете() Экспорт

	Возврат КорректировкаСтоимостиИАмортизацииОСЛокализация.ТекстОтраженияВРеглУчете();

КонецФункции

#КонецОбласти

#Область УправлениеПараметрамиЗаПериод

// Заполняет параметры значениями по умолчанию.
// 
// Параметры:
// 	Объект - ДокументОбъект.КорректировкаСтоимостиИАмортизацииОС -
//  РазделУчета - Строка, Неопределено -
Процедура ЗаполнитьПараметрыПоУмолчанию(Объект, РазделУчета = Неопределено) Экспорт
	
	КорректировкаСтоимостиИАмортизацииОСЛокализация.ЗаполнитьПараметрыПоУмолчанию(Объект, РазделУчета);
	
	Если РазделУчета <> Неопределено Тогда
		СписокРазделовУчета = СтрРазделить(РазделУчета, ",");
	Иначе
		СписокРазделовУчета = Новый Массив;
		СписокРазделовУчета.Добавить("БУ");
		СписокРазделовУчета.Добавить("УУ");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.НачалоПериода)
		ИЛИ СписокРазделовУчета.Найти("УУ") = Неопределено
			И СписокРазделовУчета.Найти("БУ") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДатаДокумента = ?(Объект.Дата <> '000101010000', Объект.Дата, ТекущаяДатаСеанса());
			
	ОсновноеСредство = Неопределено;
	Для Каждого ДанныеСтроки Из Объект.ОС Цикл
		Если ЗначениеЗаполнено(ДанныеСтроки.ОсновноеСредство) Тогда
			ОсновноеСредство = ДанныеСтроки.ОсновноеСредство;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ПорядокУчетаВНА = НастройкиНалоговУчетныхПолитикПовтИсп.ПорядокУчетаВНА(Объект.Организация, КонецМесяца(ДатаДокумента));
	ПорядокНачисленияАмортизацииУпр = НастройкиНалоговУчетныхПолитикПовтИсп.ПорядокНачисленияАмортизацииОСУпр(Объект.Организация, КонецМесяца(ДатаДокумента));
	ПорядокНачисленияАмортизацииРегл = НастройкиНалоговУчетныхПолитикПовтИсп.ПорядокНачисленияАмортизацииРегл(Объект.Организация, КонецМесяца(ДатаДокумента));
	РеглУчетВНАВедетсяНезависимо = НастройкиНалоговУчетныхПолитикПовтИсп.РеглУчетВНАВедетсяНезависимо(Объект.Организация, КонецМесяца(ДатаДокумента));
	
	СтандартныеДаты = Новый ТаблицаЗначений();
	СтандартныеДаты.Колонки.Добавить("Дата", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Период = НачалоДня(КонецМесяца(Объект.НачалоПериода));
	КонецПериода = НачалоМесяца(ДатаДокумента)-1;
	Пока Период <= КонецПериода Цикл
		СтрокаПараметры = СтандартныеДаты.Добавить();
		СтрокаПараметры.Дата = Период;
		Период = НачалоДня(КонецМесяца(ДобавитьМесяц(Период, 1)));
	КонецЦикла;

	Если НачалоДня(НачалоДня(ДатаДокумента)-1) <> КонецПериода Тогда
		СтрокаПараметры = СтандартныеДаты.Добавить();
		СтрокаПараметры.Дата = НачалоДня(ДатаДокумента)-1;
	КонецЕсли;
	
	Если ПорядокУчетаВНА = Перечисления.ПорядокУчетаВНА.ПоСтандартамМУ
		И ПорядокНачисленияАмортизацииУпр = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету
		И (НачалоДня(ДатаДокумента)-1) <> КонецПериода Тогда
		
		КонецПериодаУпр = НачалоДня(ДатаДокумента)-1;
	Иначе
		КонецПериодаУпр = НачалоМесяца(ДатаДокумента)-1;
	КонецЕсли;
	
	Если ПорядокУчетаВНА = Перечисления.ПорядокУчетаВНА.ПоСтандартамМУ
		И ПорядокНачисленияАмортизацииРегл = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету
		И (НачалоДня(ДатаДокумента)-1) <> КонецПериода Тогда
		
		КонецПериодаРегл = НачалоДня(ДатаДокумента)-1;
	Иначе
		КонецПериодаРегл = НачалоМесяца(ДатаДокумента)-1;
	КонецЕсли;
	
	КонецПериода = Макс(КонецПериодаУпр, КонецПериодаРегл);
	ПериодСреза = Объект.НачалоПериода - 1;
	
	Параметры = Новый Структура;
	Параметры.Вставить("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц());
	Параметры.Вставить("Ссылка", Объект.Ссылка);
	Параметры.Вставить("ДатаДокумента", ДатаДокумента);
	Параметры.Вставить("Организация", Объект.Организация);
	Параметры.Вставить("ОсновноеСредство", ОсновноеСредство);
	Параметры.Вставить("НачалоПериода", Объект.НачалоПериода);
	Параметры.Вставить("КонецПериода", КонецПериода);
	Параметры.Вставить("КонецПериодаУпр", КонецПериодаУпр);
	Параметры.Вставить("КонецПериодаРегл", КонецПериодаРегл);
	Параметры.Вставить("ПериодСреза", ПериодСреза);
	Параметры.Вставить("ПоСтандартамМУ", ПорядокУчетаВНА = Перечисления.ПорядокУчетаВНА.ПоСтандартамМУ);
	Параметры.Вставить("ПорядокНачисленияАмортизацииУпр", ПорядокНачисленияАмортизацииУпр);
	Параметры.Вставить("ПорядокНачисленияАмортизацииРегл", ПорядокНачисленияАмортизацииРегл);
	Параметры.Вставить("РеглУчетВНАВедетсяНезависимо", РеглУчетВНАВедетсяНезависимо);
	Параметры.Вставить("ЗаполнитьУУ", СписокРазделовУчета.Найти("УУ") <> Неопределено);
	Параметры.Вставить("ЗаполнитьБУ", СписокРазделовУчета.Найти("БУ") <> Неопределено);
	Параметры.Вставить("СтандартныеДаты", СтандартныеДаты);
	
	СформироватьТаблицыСрезаПоследнихРегистровСУчетомИсправлений(
		Объект, 
		ПериодСреза, 
		ОсновноеСредство, 
		Параметры.МенеджерВременныхТаблиц);
	
	СформироватьТаблицыЗаписейРегистровСУчетомИсправлений(
		Объект, 
		Объект.НачалоПериода, 
		НачалоМесяца(ДатаДокумента)-1, 
		ОсновноеСредство, 
		Параметры.МенеджерВременныхТаблиц);
	
	СписокЗапросов = Новый Массив;
	
	#Область СтандартныеДаты
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(СтандартныеДаты.Дата, ДЕНЬ) КАК Дата
	|
	|ПОМЕСТИТЬ СтандартныеДаты
	|
	|ИЗ
	|	&СтандартныеДаты КАК СтандартныеДаты";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область МестонахождениеОС_Записи
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация
	|
	|ПОМЕСТИТЬ МестонахождениеОС_Записи
	|
	|ИЗ
	|	МестонахождениеОС_СрезПоследнихСУчетомИсправлений КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация
	|ИЗ
	|	МестонахождениеОС_ЗаписиСУчетомИсправлений КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ДанныеРегистра.ОсновноеСредство = &ОсновноеСредство";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВыработкаОС_Записи
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ПоказательНаработки КАК ПоказательНаработки,
	|	ДанныеРегистра.Значение КАК ОбъемВыработки
	|ПОМЕСТИТЬ ВыработкаОС_Записи
	|ИЗ
	|	РегистрСведений.НаработкиОбъектовЭксплуатации.СрезПоследних(
	|			&КонецПредыдущегоМесяца,
	|			ОбъектЭксплуатации = &ОсновноеСредство) КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ПоказательНаработки КАК ПоказательНаработки,
	|	ДанныеРегистра.Значение КАК ОбъемВыработки
	|ИЗ
	|	РегистрСведений.НаработкиОбъектовЭксплуатации КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ДанныеРегистра.ОбъектЭксплуатации = &ОсновноеСредство
	|	И ДанныеРегистра.Активность";	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СтоимостьОС_Записи
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтоимостьОС.Период,
	|	СтоимостьОС.Регистратор,
	|	СтоимостьОС.Организация,
	|	СтоимостьОС.СтоимостьКонечныйОстаток КАК Стоимость,
	|	СтоимостьОС.СтоимостьРеглКонечныйОстаток КАК СтоимостьРегл,
	|	СтоимостьОС.СтоимостьНУКонечныйОстаток КАК СтоимостьНУ,
	|	СтоимостьОС.СтоимостьПРКонечныйОстаток КАК СтоимостьПР,
	|	СтоимостьОС.СтоимостьЦФКонечныйОстаток КАК СтоимостьЦФ,
	|	СтоимостьОС.СтоимостьПРЦФКонечныйОстаток КАК СтоимостьПРЦФ
	|
	|ПОМЕСТИТЬ СтоимостьОС_Записи
	|
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.ОстаткиИОбороты(
	|			&КонецПредыдущегоМесяцаГраница, 
	|			&КонецПериода, 
	|			Регистратор, 
	|			ДвиженияИГраницыПериода, 
	|			ОсновноеСредство = &ОсновноеСредство) КАК СтоимостьОС";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
		
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = Параметры.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", Параметры.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", Параметры.КонецПериода);
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяца", Параметры.НачалоПериода-1);
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяцаГраница", Новый Граница(Параметры.НачалоПериода-1, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ОсновноеСредство", Параметры.ОсновноеСредство);
	Запрос.УстановитьПараметр("СтандартныеДаты", Параметры.СтандартныеДаты);
	Запрос.Выполнить();

	ЗаполнитьПараметрыЗаПериодУУ(Объект, Параметры);
	ЗаполнитьПараметрыЗаПериодБУ(Объект, Параметры);
	
КонецПроцедуры

Процедура СформироватьТаблицыСрезаПоследнихРегистровСУчетомИсправлений(Объект, Дата, ОсновноеСредство, МенеджерВременныхТаблиц)

	СписокЗапросов = Новый Массив;
	
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений("ПорядокУчетаОС"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений("ПорядокУчетаОСБУ"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений("ПорядокУчетаОСУУ"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений("ПараметрыАмортизацииОСБУ"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений("ПараметрыАмортизацииОСУУ"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений("МестонахождениеОС"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаСрезПоследнихРегистраСУчетомИсправлений("ПервоначальныеСведенияОС"));

	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", КонецДня(Объект.Дата));
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("СписокОС", ОсновноеСредство);
	Запрос.УстановитьПараметр("БезОтбораОС", Ложь);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьТаблицыЗаписейРегистровСУчетомИсправлений(Объект, НачалоПериода, КонецПериода, ОсновноеСредство, МенеджерВременныхТаблиц)
	
	СписокЗапросов = Новый Массив;
	
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаЗаписиРегистраСУчетомИсправлений("ПорядокУчетаОС"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаЗаписиРегистраСУчетомИсправлений("ПорядокУчетаОСБУ"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаЗаписиРегистраСУчетомИсправлений("ПорядокУчетаОСУУ"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаЗаписиРегистраСУчетомИсправлений("ПараметрыАмортизацииОСБУ"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаЗаписиРегистраСУчетомИсправлений("ПараметрыАмортизацииОСУУ"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаЗаписиРегистраСУчетомИсправлений("МестонахождениеОС"));
	СписокЗапросов.Добавить(ВнеоборотныеАктивы.ТекстЗапросаЗаписиРегистраСУчетомИсправлений("ПервоначальныеСведенияОС"));

	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", Объект.Дата);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("СписокОС", ОсновноеСредство);
	Запрос.УстановитьПараметр("БезОтбораОС", Ложь);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЗаПериодУУ(Объект, Параметры)
	
	Если НЕ Параметры.ЗаполнитьУУ Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ПараметрыЗаПериод.Очистить();
	
	СписокЗапросов = Новый Массив;
	
	#Область ПервоначальныеСведенияОСУУ_Записи
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК ЭтоИзменения,
	|
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ДанныеРегистра.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ
	|
	|ПОМЕСТИТЬ ПервоначальныеСведенияОСУУ_Записи
	|
	|ИЗ
	|	ПервоначальныеСведенияОС_СрезПоследнихСУчетомИсправлений КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	(&ПоСтандартамМУ
	|		И &ПорядокНачисленияАмортизацииУпр = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуУзловКомпонентовАмортизации
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4) КАК ЭтоИзменения,
	|
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ДанныеРегистра.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ
	|ИЗ
	|	ПервоначальныеСведенияОС_ЗаписиСУчетомИсправлений КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Период МЕЖДУ &НачалоПериода И &КонецПериодаРегл
	|	И ДанныеРегистра.ОсновноеСредство = &ОсновноеСредство";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаОС_Записи
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК ЭтоИзменения,
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ПоказательНаработки КАК ПоказательНаработки,
	|	ДанныеРегистра.ОбъемНаработки КАК ОбъемНаработки
	|
	|ПОМЕСТИТЬ ПорядокУчетаОС_Записи
	|
	|ИЗ
	|	ПорядокУчетаОС_СрезПоследнихСУчетомИсправлений КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	(&ПоСтандартамМУ
	|		И &ПорядокНачисленияАмортизацииУпр = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуУзловКомпонентовАмортизации
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4) КАК ЭтоИзменения,
	|
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ПоказательНаработки КАК ПоказательНаработки,
	|	ДанныеРегистра.ОбъемНаработки КАК ОбъемНаработки
	|ИЗ
	|	ПорядокУчетаОС_ЗаписиСУчетомИсправлений КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Период МЕЖДУ &НачалоПериода И &КонецПериодаУпр
	|	И ДанныеРегистра.ОсновноеСредство = &ОсновноеСредство";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
		
	#Область ПорядокУчетаОСУУ_Записи
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК ЭтоИзменения,
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.НачислятьАмортизациюУУ КАК НачислятьАмортизациюУУ
	|
	|ПОМЕСТИТЬ ПорядокУчетаОСУУ_Записи
	|
	|ИЗ
	|	ПорядокУчетаОСУУ_СрезПоследнихСУчетомИсправлений КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	(&ПоСтандартамМУ
	|		И &ПорядокНачисленияАмортизацииУпр = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуУзловКомпонентовАмортизации
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4) КАК ЭтоИзменения,
	|
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.НачислятьАмортизациюУУ КАК НачислятьАмортизациюУУ
	|ИЗ
	|	ПорядокУчетаОСУУ_ЗаписиСУчетомИсправлений КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Период МЕЖДУ &НачалоПериода И &КонецПериодаУпр
	|	И ДанныеРегистра.ОсновноеСредство = &ОсновноеСредство";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПараметрыАмортизацииОСУУ_Записи
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК ЭтоИзменения,
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ДанныеРегистра.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ДанныеРегистра.СтоимостьДляВычисленияАмортизацииРегл КАК СтоимостьДляВычисленияАмортизацииРегл,
	|	ДанныеРегистра.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ДанныеРегистра.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	ДанныеРегистра.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	ДанныеРегистра.ЛиквидационнаяСтоимостьРегл КАК ЛиквидационнаяСтоимостьРегл,
	|	ДанныеРегистра.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации
	|
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСУУ_Записи
	|
	|ИЗ
	|	ПараметрыАмортизацииОСУУ_СрезПоследнихСУчетомИсправлений КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	(&ПоСтандартамМУ
	|		И &ПорядокНачисленияАмортизацииУпр = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуУзловКомпонентовАмортизации
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4) КАК ЭтоИзменения,
	|
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ДанныеРегистра.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ДанныеРегистра.СтоимостьДляВычисленияАмортизацииРегл КАК СтоимостьДляВычисленияАмортизацииРегл,
	|	ДанныеРегистра.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ДанныеРегистра.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	ДанныеРегистра.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	ДанныеРегистра.ЛиквидационнаяСтоимостьРегл КАК ЛиквидационнаяСтоимостьРегл,
	|	ДанныеРегистра.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации
	|ИЗ
	|	ПараметрыАмортизацииОСУУ_ЗаписиСУчетомИсправлений КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Период МЕЖДУ &НачалоПериода И &КонецПериодаУпр
	|	И ДанныеРегистра.ОсновноеСредство = &ОсновноеСредство";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
		
	#Область ТаблицаДатУУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтандартныеДаты.Дата КАК Дата,
	|
	|	ВЫБОР 
	|		КОГДА &ПоСтандартамМУ И &ПорядокНачисленияАмортизацииУпр = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|			ТОГДА СтандартныеДаты.Дата
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(СтандартныеДаты.Дата, МЕСЯЦ), СЕКУНДА, -1)
	|	КОНЕЦ КАК ДатаПараметров
	|
	|ПОМЕСТИТЬ ТаблицаИзмененийУУ
	|
	|ИЗ
	|	СтандартныеДаты КАК СтандартныеДаты
	|ГДЕ
	|	СтандартныеДаты.Дата <= &КонецПериодаУпр
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК Дата,
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК ДатаПараметров
	|ИЗ
	|	ПорядокУчетаОСУУ_Записи КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.ЭтоИзменения
	|	И НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) <> НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК Дата,
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК ДатаПараметров
	|ИЗ
	|	ПараметрыАмортизацииОСУУ_Записи КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.ЭтоИзменения
	|	И НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) <> НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК Дата,
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК ДатаПараметров
	|ИЗ
	|	ПорядокУчетаОС_Записи КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.ЭтоИзменения
	|	И НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) <> НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ДанныеРегистраРегистраторЗаписи.ДатаПараметров КАК ДатаПараметров,
	|	МестонахождениеОС_Записи.Организация КАК Организация
	|
	|ПОМЕСТИТЬ ТаблицаДатУУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.ДатаПараметров КАК ДатаПараметров,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаИзменений.Дата КАК Дата,
	|			ТаблицаИзменений.ДатаПараметров КАК ДатаПараметров,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаИзмененийУУ КАК ТаблицаИзменений
	|
	|				ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= ТаблицаИзменений.ДатаПараметров
	|				
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаИзменений.Дата,
	|			ТаблицаИзменений.ДатаПараметров
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|				
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи,
	|		ДанныеРегистраПериодЗаписи.ДатаПараметров
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК МестонахождениеОС_Записи
	|	ПО МестонахождениеОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И МестонахождениеОС_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область МестонахождениеОСУУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ДанныеРегистраРегистраторЗаписи.ДатаПараметров КАК ДатаПараметров,
	|	МестонахождениеОС_Записи.Организация КАК Организация
	|
	|ПОМЕСТИТЬ МестонахождениеОСУУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.ДатаПараметров КАК ДатаПараметров,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДатУУ.Дата КАК Дата,
	|			ТаблицаДатУУ.ДатаПараметров КАК ДатаПараметров,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаДатУУ КАК ТаблицаДатУУ
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= ТаблицаДатУУ.ДатаПараметров
	|				
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДатУУ.Дата,
	|			ТаблицаДатУУ.ДатаПараметров
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|				
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи,
	|		ДанныеРегистраПериодЗаписи.ДатаПараметров
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК МестонахождениеОС_Записи
	|	ПО МестонахождениеОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И МестонахождениеОС_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПервоначальныеСведенияОСУУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ПервоначальныеСведенияОСУУ_Записи.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведенияОСУУ_Записи.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ
	|
	|ПОМЕСТИТЬ ПервоначальныеСведенияОСУУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.Организация КАК Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МестонахождениеОСУУ.Дата КАК Дата,
	|			МестонахождениеОСУУ.Организация КАК Организация,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			МестонахождениеОСУУ КАК МестонахождениеОСУУ
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОСУУ_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= МестонахождениеОСУУ.ДатаПараметров
	|					И ДанныеРегистраПериодЗаписи.Организация = МестонахождениеОСУУ.Организация
	|				
	|		СГРУППИРОВАТЬ ПО
	|			МестонахождениеОСУУ.Дата,
	|			МестонахождениеОСУУ.Организация
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОСУУ_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.Организация = ДанныеРегистраПериодЗаписи.Организация
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи,
	|		ДанныеРегистраПериодЗаписи.Организация
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОСУУ_Записи КАК ПервоначальныеСведенияОСУУ_Записи
	|	ПО ПервоначальныеСведенияОСУУ_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ПервоначальныеСведенияОСУУ_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи
	|		И ПервоначальныеСведенияОСУУ_Записи.Организация = ДанныеРегистраРегистраторЗаписи.Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаОСУУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ПорядокУчетаОСУУ_Записи.НачислятьАмортизациюУУ КАК НачислятьАмортизациюУУ
	|
	|ПОМЕСТИТЬ ПорядокУчетаОСУУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.Организация КАК Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДатУУ.Дата КАК Дата,
	|			ТаблицаДатУУ.Организация КАК Организация,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаДатУУ КАК ТаблицаДатУУ
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСУУ_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= ТаблицаДатУУ.ДатаПараметров
	|					И ДанныеРегистраПериодЗаписи.Организация = ТаблицаДатУУ.Организация
	|				
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДатУУ.Дата,
	|			ТаблицаДатУУ.Организация
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСУУ_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.Организация = ДанныеРегистраПериодЗаписи.Организация
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи,
	|		ДанныеРегистраПериодЗаписи.Организация
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСУУ_Записи КАК ПорядокУчетаОСУУ_Записи
	|	ПО ПорядокУчетаОСУУ_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ПорядокУчетаОСУУ_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи
	|		И ПорядокУчетаОСУУ_Записи.Организация = ДанныеРегистраРегистраторЗаписи.Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПараметрыАмортизацииОСУУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ПараметрыАмортизацииОСУУ_Записи.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСУУ_Записи.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСУУ_Записи.СтоимостьДляВычисленияАмортизацииРегл КАК СтоимостьДляВычисленияАмортизацииРегл,
	|	ПараметрыАмортизацииОСУУ_Записи.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ПараметрыАмортизацииОСУУ_Записи.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	ПараметрыАмортизацииОСУУ_Записи.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	ПараметрыАмортизацииОСУУ_Записи.ЛиквидационнаяСтоимостьРегл КАК ЛиквидационнаяСтоимостьРегл,
	|	ПараметрыАмортизацииОСУУ_Записи.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации
	|
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСУУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.Организация КАК Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДатУУ.Дата КАК Дата,
	|			ТаблицаДатУУ.Организация КАК Организация,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаДатУУ КАК ТаблицаДатУУ
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСУУ_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= ТаблицаДатУУ.ДатаПараметров
	|					И ДанныеРегистраПериодЗаписи.Организация = ТаблицаДатУУ.Организация
	|				
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДатУУ.Дата,
	|			ТаблицаДатУУ.Организация
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСУУ_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.Организация = ДанныеРегистраПериодЗаписи.Организация
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи,
	|		ДанныеРегистраПериодЗаписи.Организация
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСУУ_Записи КАК ПараметрыАмортизацииОСУУ_Записи
	|	ПО ПараметрыАмортизацииОСУУ_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ПараметрыАмортизацииОСУУ_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи
	|		И ПараметрыАмортизацииОСУУ_Записи.Организация = ДанныеРегистраРегистраторЗаписи.Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаОС
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ПорядокУчетаОС_Записи.ПоказательНаработки КАК ПоказательНаработки,
	|	ПорядокУчетаОС_Записи.ОбъемНаработки КАК ОбъемНаработки
	|
	|ПОМЕСТИТЬ ПорядокУчетаОС
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДатУУ.Дата КАК Дата,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаДатУУ КАК ТаблицаДатУУ
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= ТаблицаДатУУ.ДатаПараметров
	|				
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДатУУ.Дата
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОС_Записи КАК ПорядокУчетаОС_Записи
	|	ПО ПорядокУчетаОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ПорядокУчетаОС_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВыработкаУУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ВыработкаОС_Записи.ПоказательНаработки КАК ПоказательНаработки,
	|	ВыработкаОС_Записи.ОбъемВыработки КАК ОбъемВыработки
	|
	|ПОМЕСТИТЬ ВыработкаОС_НаНачалоМесяцаУУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.ПоказательНаработки КАК ПоказательНаработки,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДатУУ.Дата КАК Дата,
	|			ДанныеРегистраПериодЗаписи.ПоказательНаработки КАК ПоказательНаработки,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаДатУУ КАК ТаблицаДатУУ
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыработкаОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период < НАЧАЛОПЕРИОДА(ТаблицаДатУУ.Дата, МЕСЯЦ)
	|				
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДатУУ.Дата,
	|			ДанныеРегистраПериодЗаписи.ПоказательНаработки
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыработкаОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.ПоказательНаработки = ДанныеРегистраПериодЗаписи.ПоказательНаработки
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПоказательНаработки
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыработкаОС_Записи КАК ВыработкаОС_Записи
	|	ПО ВыработкаОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ВыработкаОС_Записи.ПоказательНаработки = ДанныеРегистраРегистраторЗаписи.ПоказательНаработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ДанныеРегистраРегистраторЗаписи.ПоказательНаработки КАК ПоказательНаработки,
	|	ВыработкаОС_Записи.ОбъемВыработки КАК ОбъемВыработки
	|
	|ПОМЕСТИТЬ ВыработкаОС_НаКонецМесяцаУУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.ПоказательНаработки КАК ПоказательНаработки,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДатУУ.Дата КАК Дата,
	|			ДанныеРегистраПериодЗаписи.ПоказательНаработки КАК ПоказательНаработки,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаДатУУ КАК ТаблицаДатУУ
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыработкаОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= КОНЕЦПЕРИОДА(ТаблицаДатУУ.Дата, МЕСЯЦ)
	|			
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДатУУ.Дата,
	|			ДанныеРегистраПериодЗаписи.ПоказательНаработки
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыработкаОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.ПоказательНаработки = ДанныеРегистраПериодЗаписи.ПоказательНаработки
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПоказательНаработки
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыработкаОС_Записи КАК ВыработкаОС_Записи
	|	ПО ВыработкаОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ВыработкаОС_Записи.ПоказательНаработки = ДанныеРегистраРегистраторЗаписи.ПоказательНаработки";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СтоимостьОСУУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	СтоимостьОС_Записи.Стоимость КАК Стоимость,
	|	СтоимостьОС_Записи.СтоимостьРегл КАК СтоимостьРегл
	|
	|ПОМЕСТИТЬ СтоимостьОСУУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.Организация КАК Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДатУУ.Дата КАК Дата,
	|			ТаблицаДатУУ.Организация КАК Организация,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаДатУУ КАК ТаблицаДатУУ
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтоимостьОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= ТаблицаДатУУ.ДатаПараметров
	|					И ДанныеРегистраПериодЗаписи.Организация = ТаблицаДатУУ.Организация
	|				
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДатУУ.Дата,
	|			ТаблицаДатУУ.Организация
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтоимостьОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.Организация = ДанныеРегистраПериодЗаписи.Организация
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтоимостьОС_Записи КАК СтоимостьОС_Записи
	|	ПО СтоимостьОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И СтоимостьОС_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи
	|		И СтоимостьОС_Записи.Организация = ДанныеРегистраРегистраторЗаписи.Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СтоимостьНаНачалоГода
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтоимостьОС.СтоимостьОстаток КАК Стоимость,
	|	СтоимостьОС.СтоимостьРеглОстаток КАК СтоимостьРегл
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.Остатки(&КонецПредыдущегоГодаГраница, ОсновноеСредство = &ОсновноеСредство) КАК СтоимостьОС";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область АмортизацияНаНачалоГода
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	-АмортизацияОС.АмортизацияОстаток КАК Амортизация,
	|	-АмортизацияОС.АмортизацияРеглОстаток КАК АмортизацияРегл
	|ИЗ
	|	РегистрНакопления.АмортизацияОС.Остатки(&КонецПредыдущегоГодаГраница, ОсновноеСредство = &ОсновноеСредство) КАК АмортизацияОС";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область АмортизацияНаНачалоПериода
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	-АмортизацияОС.АмортизацияОстаток КАК Амортизация,
	|	-АмортизацияОС.АмортизацияРеглОстаток КАК АмортизацияРегл
	|ИЗ
	|	РегистрНакопления.АмортизацияОС.Остатки(&КонецПредыдущегоМесяцаГраница, ОсновноеСредство = &ОсновноеСредство) КАК АмортизацияОС";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ДатаВводаВЭксплуатациюУУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&Дата,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство = &ОсновноеСредство) КАК ПервоначальныеСведенияОС";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВыборкаПараметровУУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ТаблицаДатУУ.Дата, ДЕНЬ) КАК Дата,
	|
	|	ЕСТЬNULL(СтоимостьОСУУ.Стоимость, ЕСТЬNULL(ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ, 0)) КАК Стоимость,
	|	ЕСТЬNULL(СтоимостьОСУУ.СтоимостьРегл, ЕСТЬNULL(ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ, 0)) КАК СтоимостьРегл,
	|
	|	ЕСТЬNULL(ПараметрыАмортизацииОСУУ.КоэффициентУскорения, 0) КАК КоэффициентУскорения,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСУУ.ЛиквидационнаяСтоимость, 0) КАК ЛиквидационнаяСтоимость,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСУУ.ЛиквидационнаяСтоимостьРегл, 0) КАК ЛиквидационнаяСтоимостьРегл,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСУУ.МетодНачисленияАмортизации, ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПустаяСсылка)) КАК МетодНачисленияАмортизацииУУ,
	|
	|	ЕСТЬNULL(ПорядокУчетаОСУУ.НачислятьАмортизациюУУ, ЛОЖЬ) КАК НачислятьАмортизациюУУ,
	|
	|	ЕСТЬNULL(ВыработкаОС_НаКонецМесяцаУУ.ОбъемВыработки, 0)
	|		-ЕСТЬNULL(ВыработкаОС_НаНачалоМесяцаУУ.ОбъемВыработки, 0) КАК ОбъемВыработки,
	|
	|	ЕСТЬNULL(ВыработкаОС_НаНачалоМесяцаУУ.ОбъемВыработки, 0) КАК ОбъемВыработкиНаНачалоМесяца,
	|
	|	ВЫБОР
	|		КОГДА &ПоСтандартамМУ И &ПорядокНачисленияАмортизацииУпр = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|			ТОГДА ЕСТЬNULL(ПорядокУчетаОС.ОбъемНаработки, 0)
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыАмортизацииОСУУ.ОбъемПродукцииРаботДляВычисленияАмортизации, 0)
	|	КОНЕЦ КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|
	|	ЕСТЬNULL(ПорядокУчетаОС.ПоказательНаработки, ЗНАЧЕНИЕ(Справочник.ПоказателиНаработки.ПустаяСсылка)) КАК ПоказательНаработки,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСУУ.СрокИспользованияДляВычисленияАмортизации, 0) КАК СрокИспользованияДляВычисленияАмортизации,
	|
	|	ВЫБОР
	|		КОГДА &ПоСтандартамМУ
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыАмортизацииОСУУ.СтоимостьДляВычисленияАмортизации, 0)
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизации,
	|
	|	ВЫБОР
	|		КОГДА &ПоСтандартамМУ
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыАмортизацииОСУУ.СтоимостьДляВычисленияАмортизацииРегл, 0)
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизацииРегл
	|	
	|ИЗ
	|	ТаблицаДатУУ КАК ТаблицаДатУУ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОСУУ КАК ПервоначальныеСведенияОС
	|		ПО ПервоначальныеСведенияОС.Дата = ТаблицаДатУУ.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОСУУ КАК ПорядокУчетаОСУУ
	|		ПО ПорядокУчетаОСУУ.Дата = ТаблицаДатУУ.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСУУ КАК ПараметрыАмортизацииОСУУ
	|		ПО ПараметрыАмортизацииОСУУ.Дата = ТаблицаДатУУ.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО ПорядокУчетаОС.Дата = ТаблицаДатУУ.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьОСУУ КАК СтоимостьОСУУ
	|		ПО СтоимостьОСУУ.Дата = ТаблицаДатУУ.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыработкаОС_НаНачалоМесяцаУУ КАК ВыработкаОС_НаНачалоМесяцаУУ
	|		ПО ВыработкаОС_НаНачалоМесяцаУУ.Дата = ПорядокУчетаОС.Дата
	|			И ВыработкаОС_НаНачалоМесяцаУУ.ПоказательНаработки = ПорядокУчетаОС.ПоказательНаработки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыработкаОС_НаКонецМесяцаУУ КАК ВыработкаОС_НаКонецМесяцаУУ
	|		ПО ВыработкаОС_НаКонецМесяцаУУ.Дата = ПорядокУчетаОС.Дата
	|			И ВыработкаОС_НаКонецМесяцаУУ.ПоказательНаработки = ПорядокУчетаОС.ПоказательНаработки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = Параметры.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Параметры.Ссылка);
	Запрос.УстановитьПараметр("Дата", Параметры.ДатаДокумента);
	Запрос.УстановитьПараметр("Организация", Параметры.Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", Параметры.ОсновноеСредство);
	Запрос.УстановитьПараметр("НачалоПериода", Параметры.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", Параметры.КонецПериода);
	Запрос.УстановитьПараметр("КонецПериодаУпр", Параметры.КонецПериодаУпр);
	Запрос.УстановитьПараметр("КонецПериодаРегл", Параметры.КонецПериодаРегл);
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяца", Параметры.НачалоПериода-1);
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяцаГраница", Новый Граница(Параметры.НачалоПериода-1, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПредыдущегоГодаГраница", Новый Граница(НачалоГода(Параметры.НачалоПериода)-1, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПоСтандартамМУ", Параметры.ПоСтандартамМУ);
	Запрос.УстановитьПараметр("ПорядокНачисленияАмортизацииУпр", Параметры.ПорядокНачисленияАмортизацииУпр);
	Запрос.УстановитьПараметр("ПериодСреза", Параметры.ПериодСреза);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Выборка = Результат[Результат.ВГраница()-4].Выбрать();
	Если Выборка.Следующий() Тогда
		
		Если НЕ Параметры.РеглУчетВНАВедетсяНезависимо Тогда
			Объект.СтоимостьРеглНаНачалоГода = Выборка.СтоимостьРегл;
		КонецЕсли;
		
		Объект.СтоимостьНаНачалоГода = Выборка.Стоимость;
		
	Иначе
		
		Если НЕ Параметры.РеглУчетВНАВедетсяНезависимо Тогда
			Объект.СтоимостьРеглНаНачалоГода = 0;
		КонецЕсли;
		
		Объект.СтоимостьНаНачалоГода = 0;
		
	КонецЕсли;

	Выборка = Результат[Результат.ВГраница()-3].Выбрать();
	Если Выборка.Следующий() Тогда
		
		Если НЕ Параметры.РеглУчетВНАВедетсяНезависимо Тогда
			Объект.АмортизацияРеглНаНачалоГода = Выборка.АмортизацияРегл;
		КонецЕсли;
		
		Объект.АмортизацияНаНачалоГода = Выборка.Амортизация;
		
	Иначе
		
		Если НЕ Параметры.РеглУчетВНАВедетсяНезависимо Тогда
			Объект.АмортизацияРеглНаНачалоГода = 0;
		КонецЕсли;
		
		Объект.АмортизацияНаНачалоГода = 0;
		
	КонецЕсли;

	Выборка = Результат[Результат.ВГраница()-2].Выбрать();
	Если Выборка.Следующий() Тогда
		
		Если НЕ Параметры.РеглУчетВНАВедетсяНезависимо Тогда
			Объект.АмортизацияРеглНаНачалоПериода = Выборка.АмортизацияРегл;
		КонецЕсли;
		
		Объект.АмортизацияНаНачалоПериода = Выборка.Амортизация;
		
	Иначе
		
		Если НЕ Параметры.РеглУчетВНАВедетсяНезависимо Тогда
			Объект.АмортизацияРеглНаНачалоПериода = 0;
		КонецЕсли;
		
		Объект.АмортизацияНаНачалоПериода = 0;
		
	КонецЕсли;
	
	Выборка = Результат[Результат.ВГраница()-1].Выбрать();
	Если Выборка.Следующий() Тогда
		
		Объект.ДатаВводаВЭксплуатациюУУ = Выборка.ДатаВводаВЭксплуатациюУУ;
		
	КонецЕсли;
	
	ВыборкаПоДатам = Результат[Результат.ВГраница()].Выбрать();
	Пока ВыборкаПоДатам.Следующий() Цикл
	
		СтрокаПараметры = Объект.ПараметрыЗаПериод.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПараметры, ВыборкаПоДатам);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЗаПериодБУ(Объект, Параметры)
	
	Если НЕ Параметры.ЗаполнитьБУ
		ИЛИ НЕ Параметры.РеглУчетВНАВедетсяНезависимо Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ПараметрыЗаПериодБУ.Очистить();
	
	ПараметрыЗаполнены = КорректировкаСтоимостиИАмортизацииОСЛокализация.ЗаполнитьПараметрыЗаПериодБУ(Объект, Параметры);
	
	Если ПараметрыЗаполнены Тогда
		Возврат;
	КонецЕсли;
	
	СписокЗапросов = Новый Массив;
	
	#Область ПервоначальныеСведенияОСБУ_Записи
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК ЭтоИзменения,
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ДанныеРегистра.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ
	|
	|ПОМЕСТИТЬ ПервоначальныеСведенияОСБУ_Записи
	|
	|ИЗ
	|	ПервоначальныеСведенияОС_СрезПоследнихСУчетомИсправлений КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	(&ПорядокНачисленияАмортизацииРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуУзловКомпонентовАмортизации
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4) КАК ЭтоИзменения,
	|
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ДанныеРегистра.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ
	|ИЗ
	|	ПервоначальныеСведенияОС_ЗаписиСУчетомИсправлений КАК ДанныеРегистра
	|ГДЕ
	|	&РеглУчетВНАВедетсяНезависимо
	|	И ДанныеРегистра.Период МЕЖДУ &НачалоПериода И &КонецПериодаРегл
	|	И ДанныеРегистра.ОсновноеСредство = &ОсновноеСредство";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаОС_Записи_БУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК ЭтоИзменения,
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ПоказательНаработки КАК ПоказательНаработки,
	|	ДанныеРегистра.ОбъемНаработки КАК ОбъемНаработки
	|
	|ПОМЕСТИТЬ ПорядокУчетаОС_Записи_БУ
	|
	|ИЗ
	|	ПорядокУчетаОС_СрезПоследнихСУчетомИсправлений КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	(&ПорядокНачисленияАмортизацииРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуУзловКомпонентовАмортизации
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4) КАК ЭтоИзменения,
	|
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ПоказательНаработки КАК ПоказательНаработки,
	|	ДанныеРегистра.ОбъемНаработки КАК ОбъемНаработки
	|ИЗ
	|	ПорядокУчетаОС_ЗаписиСУчетомИсправлений КАК ДанныеРегистра
	|ГДЕ
	|	&РеглУчетВНАВедетсяНезависимо
	|	И ДанныеРегистра.Период МЕЖДУ &НачалоПериода И &КонецПериодаРегл
	|	И ДанныеРегистра.ОсновноеСредство = &ОсновноеСредство";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаОСБУ_Записи
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК ЭтоИзменения,
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ
	|
	|ПОМЕСТИТЬ ПорядокУчетаОСБУ_Записи
	|
	|ИЗ
	|	ПорядокУчетаОСБУ_СрезПоследнихСУчетомИсправлений КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	(&ПорядокНачисленияАмортизацииРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуУзловКомпонентовАмортизации
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4) КАК ЭтоИзменения,
	|
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ
	|ИЗ
	|	ПорядокУчетаОСБУ_ЗаписиСУчетомИсправлений КАК ДанныеРегистра
	|ГДЕ
	|	&РеглУчетВНАВедетсяНезависимо
	|	И ДанныеРегистра.Период МЕЖДУ &НачалоПериода И &КонецПериодаРегл
	|	И ДанныеРегистра.ОсновноеСредство = &ОсновноеСредство";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПараметрыАмортизацииОСБУ_Записи
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК ЭтоИзменения,
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ДанныеРегистра.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ДанныеРегистра.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ДанныеРегистра.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость
	|
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСБУ_Записи
	|
	|ИЗ
	|	ПараметрыАмортизацииОСБУ_СрезПоследнихСУчетомИсправлений КАК ДанныеРегистра
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	(&ПорядокНачисленияАмортизацииРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПринятиеКУчетуУзловКомпонентовАмортизации
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4) КАК ЭтоИзменения,
	|
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ДанныеРегистра.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ДанныеРегистра.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ДанныеРегистра.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость
	|ИЗ
	|	ПараметрыАмортизацииОСБУ_ЗаписиСУчетомИсправлений КАК ДанныеРегистра
	|ГДЕ
	|	&РеглУчетВНАВедетсяНезависимо
	|	И ДанныеРегистра.Период МЕЖДУ &НачалоПериода И &КонецПериодаРегл
	|	И ДанныеРегистра.ОсновноеСредство = &ОсновноеСредство";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ТаблицаДатБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтандартныеДаты.Дата КАК Дата,
	|
	|	ВЫБОР 
	|		КОГДА &ПорядокНачисленияАмортизацииРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|			ТОГДА СтандартныеДаты.Дата
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(СтандартныеДаты.Дата, МЕСЯЦ), СЕКУНДА, -1)
	|	КОНЕЦ КАК ДатаПараметров
	|
	|ПОМЕСТИТЬ ТаблицаИзмененийБУ
	|
	|ИЗ
	|	СтандартныеДаты КАК СтандартныеДаты
	|ГДЕ
	|	&РеглУчетВНАВедетсяНезависимо
	|	И СтандартныеДаты.Дата <= &КонецПериодаРегл
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК Дата,
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК ДатаПараметров
	|ИЗ
	|	ПервоначальныеСведенияОС_Записи КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.ЭтоИзменения
	|	И НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) <> НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК Дата,
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК ДатаПараметров
	|ИЗ
	|	ПорядокУчетаОСБУ_Записи КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.ЭтоИзменения
	|	И НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) <> НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК Дата,
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК ДатаПараметров
	|ИЗ
	|	ПараметрыАмортизацииОСБУ_Записи КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.ЭтоИзменения
	|	И НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) <> НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК Дата,
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ), ДЕНЬ, -1) КАК ДатаПараметров
	|ИЗ
	|	ПорядокУчетаОС_Записи_БУ КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.ЭтоИзменения
	|	И НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) <> НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ДанныеРегистраРегистраторЗаписи.ДатаПараметров КАК ДатаПараметров,
	|	МестонахождениеОС_Записи.Организация КАК Организация
	|
	|ПОМЕСТИТЬ ТаблицаДатБУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.ДатаПараметров КАК ДатаПараметров,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаИзменений.Дата КАК Дата,
	|			ТаблицаИзменений.ДатаПараметров КАК ДатаПараметров,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаИзмененийБУ КАК ТаблицаИзменений
	|				ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= ТаблицаИзменений.ДатаПараметров
	|				
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаИзменений.Дата,
	|			ТаблицаИзменений.ДатаПараметров
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|				
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи,
	|		ДанныеРегистраПериодЗаписи.ДатаПараметров
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК МестонахождениеОС_Записи
	|	ПО МестонахождениеОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И МестонахождениеОС_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область МестонахождениеОСБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ДанныеРегистраРегистраторЗаписи.ДатаПараметров КАК ДатаПараметров,
	|	МестонахождениеОС_Записи.Организация КАК Организация
	|
	|ПОМЕСТИТЬ МестонахождениеОСБУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.ДатаПараметров КАК ДатаПараметров,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДатБУ.Дата КАК Дата,
	|			ТаблицаДатБУ.ДатаПараметров КАК ДатаПараметров,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаДатБУ КАК ТаблицаДатБУ
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= ТаблицаДатБУ.ДатаПараметров
	|				
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДатБУ.Дата,
	|			ТаблицаДатБУ.ДатаПараметров
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|				
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи,
	|		ДанныеРегистраПериодЗаписи.ДатаПараметров
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ МестонахождениеОС_Записи КАК МестонахождениеОС_Записи
	|	ПО МестонахождениеОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И МестонахождениеОС_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПервоначальныеСведенияОСБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ПервоначальныеСведенияОСБУ_Записи.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведенияОСБУ_Записи.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ
	|
	|ПОМЕСТИТЬ ПервоначальныеСведенияОСБУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.Организация КАК Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МестонахождениеОСБУ.Дата КАК Дата,
	|			МестонахождениеОСБУ.Организация КАК Организация,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			МестонахождениеОСБУ КАК МестонахождениеОСБУ
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОСБУ_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= МестонахождениеОСБУ.ДатаПараметров
	|					И ДанныеРегистраПериодЗаписи.Организация = МестонахождениеОСБУ.Организация
	|				
	|		СГРУППИРОВАТЬ ПО
	|			МестонахождениеОСБУ.Дата,
	|			МестонахождениеОСБУ.Организация
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОСБУ_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.Организация = ДанныеРегистраПериодЗаписи.Организация
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи,
	|		ДанныеРегистраПериодЗаписи.Организация
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОСБУ_Записи КАК ПервоначальныеСведенияОСБУ_Записи
	|	ПО ПервоначальныеСведенияОСБУ_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ПервоначальныеСведенияОСБУ_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи
	|		И ПервоначальныеСведенияОСБУ_Записи.Организация = ДанныеРегистраРегистраторЗаписи.Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаОСБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ПорядокУчетаОСБУ_Записи.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ
	|
	|ПОМЕСТИТЬ ПорядокУчетаОСБУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.Организация КАК Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МестонахождениеОСБУ.Дата КАК Дата,
	|			МестонахождениеОСБУ.Организация КАК Организация,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			МестонахождениеОСБУ КАК МестонахождениеОСБУ
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= МестонахождениеОСБУ.ДатаПараметров
	|					И ДанныеРегистраПериодЗаписи.Организация = МестонахождениеОСБУ.Организация
	|				
	|		СГРУППИРОВАТЬ ПО
	|			МестонахождениеОСБУ.Дата,
	|			МестонахождениеОСБУ.Организация
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.Организация = ДанныеРегистраПериодЗаписи.Организация
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи,
	|		ДанныеРегистраПериодЗаписи.Организация
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ_Записи КАК ПорядокУчетаОСБУ_Записи
	|	ПО ПорядокУчетаОСБУ_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ПорядокУчетаОСБУ_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи
	|		И ПорядокУчетаОСБУ_Записи.Организация = ДанныеРегистраРегистраторЗаписи.Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПараметрыАмортизацииОСБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ПараметрыАмортизацииОСБУ_Записи.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ПараметрыАмортизацииОСБУ_Записи.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ_Записи.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ_Записи.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость
	|
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСБУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.Организация КАК Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МестонахождениеОСБУ.Дата КАК Дата,
	|			МестонахождениеОСБУ.Организация КАК Организация,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			МестонахождениеОСБУ КАК МестонахождениеОСБУ
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУ_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= МестонахождениеОСБУ.ДатаПараметров
	|					И ДанныеРегистраПериодЗаписи.Организация = МестонахождениеОСБУ.Организация
	|				
	|		СГРУППИРОВАТЬ ПО
	|			МестонахождениеОСБУ.Дата,
	|			МестонахождениеОСБУ.Организация
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУ_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.Организация = ДанныеРегистраПериодЗаписи.Организация
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи,
	|		ДанныеРегистраПериодЗаписи.Организация
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУ_Записи КАК ПараметрыАмортизацииОСБУ_Записи
	|	ПО ПараметрыАмортизацииОСБУ_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ПараметрыАмортизацииОСБУ_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи
	|		И ПараметрыАмортизацииОСБУ_Записи.Организация = ДанныеРегистраРегистраторЗаписи.Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаОС_БУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ПорядокУчетаОС_Записи_БУ.ПоказательНаработки КАК ПоказательНаработки,
	|	ПорядокУчетаОС_Записи_БУ.ОбъемНаработки КАК ОбъемНаработки
	|
	|ПОМЕСТИТЬ ПорядокУчетаОС_БУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДатБУ.Дата КАК Дата,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаДатБУ КАК ТаблицаДатБУ
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОС_Записи_БУ КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= ТаблицаДатБУ.ДатаПараметров
	|				
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДатБУ.Дата
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОС_Записи_БУ КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОС_Записи_БУ КАК ПорядокУчетаОС_Записи_БУ
	|	ПО ПорядокУчетаОС_Записи_БУ.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ПорядокУчетаОС_Записи_БУ.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВыработкаБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ВыработкаОС_Записи.ПоказательНаработки КАК ПоказательНаработки,
	|	ВыработкаОС_Записи.ОбъемВыработки КАК ОбъемВыработки
	|
	|ПОМЕСТИТЬ ВыработкаОС_НаНачалоМесяцаБУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.ПоказательНаработки КАК ПоказательНаработки,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДатБУ.Дата КАК Дата,
	|			ДанныеРегистраПериодЗаписи.ПоказательНаработки КАК ПоказательНаработки,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаДатБУ КАК ТаблицаДатБУ
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыработкаОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период < НАЧАЛОПЕРИОДА(ТаблицаДатБУ.Дата, МЕСЯЦ)
	|				
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДатБУ.Дата,
	|			ДанныеРегистраПериодЗаписи.ПоказательНаработки
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыработкаОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.ПоказательНаработки = ДанныеРегистраПериодЗаписи.ПоказательНаработки
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПоказательНаработки
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыработкаОС_Записи КАК ВыработкаОС_Записи
	|	ПО ВыработкаОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ВыработкаОС_Записи.ПоказательНаработки = ДанныеРегистраРегистраторЗаписи.ПоказательНаработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	ДанныеРегистраРегистраторЗаписи.ПоказательНаработки КАК ПоказательНаработки,
	|	ВыработкаОС_Записи.ОбъемВыработки КАК ОбъемВыработки
	|
	|ПОМЕСТИТЬ ВыработкаОС_НаКонецМесяцаБУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.ПоказательНаработки КАК ПоказательНаработки,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДатБУ.Дата КАК Дата,
	|			ДанныеРегистраПериодЗаписи.ПоказательНаработки КАК ПоказательНаработки,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаДатБУ КАК ТаблицаДатБУ
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыработкаОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= КОНЕЦПЕРИОДА(ТаблицаДатБУ.Дата, МЕСЯЦ)
	|			
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДатБУ.Дата,
	|			ДанныеРегистраПериодЗаписи.ПоказательНаработки
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыработкаОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.ПоказательНаработки = ДанныеРегистраПериодЗаписи.ПоказательНаработки
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.ПоказательНаработки
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыработкаОС_Записи КАК ВыработкаОС_Записи
	|	ПО ВыработкаОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И ВыработкаОС_Записи.ПоказательНаработки = ДанныеРегистраРегистраторЗаписи.ПоказательНаработки";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СтоимостьОСБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистраРегистраторЗаписи.Дата КАК Дата,
	|	СтоимостьОС_Записи.Стоимость КАК Стоимость,
	|	СтоимостьОС_Записи.СтоимостьРегл КАК СтоимостьРегл
	|
	|ПОМЕСТИТЬ СтоимостьОСБУ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистраПериодЗаписи.Дата КАК Дата,
	|		ДанныеРегистраПериодЗаписи.Организация КАК Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи КАК ПериодЗаписи,
	|		МАКСИМУМ(ДанныеРегистраРегистраторЗаписи.Регистратор) КАК РегистраторЗаписи
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДатБУ.Дата КАК Дата,
	|			ТаблицаДатБУ.Организация КАК Организация,
	|			МАКСИМУМ(ДанныеРегистраПериодЗаписи.Период) КАК ПериодЗаписи
	|		ИЗ
	|			ТаблицаДатБУ КАК ТаблицаДатБУ
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтоимостьОС_Записи КАК ДанныеРегистраПериодЗаписи
	|				ПО ДанныеРегистраПериодЗаписи.Период <= ТаблицаДатБУ.ДатаПараметров
	|					И ДанныеРегистраПериодЗаписи.Организация = ТаблицаДатБУ.Организация
	|				
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДатБУ.Дата,
	|			ТаблицаДатБУ.Организация
	|
	|		) КАК ДанныеРегистраПериодЗаписи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтоимостьОС_Записи КАК ДанныеРегистраРегистраторЗаписи
	|		ПО ДанныеРегистраРегистраторЗаписи.Период = ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|			И ДанныеРегистраРегистраторЗаписи.Организация = ДанныеРегистраПериодЗаписи.Организация
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистраПериодЗаписи.Дата,
	|		ДанныеРегистраПериодЗаписи.Организация,
	|		ДанныеРегистраПериодЗаписи.ПериодЗаписи
	|
	|	) КАК ДанныеРегистраРегистраторЗаписи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтоимостьОС_Записи КАК СтоимостьОС_Записи
	|	ПО СтоимостьОС_Записи.Регистратор = ДанныеРегистраРегистраторЗаписи.РегистраторЗаписи
	|		И СтоимостьОС_Записи.Период = ДанныеРегистраРегистраторЗаписи.ПериодЗаписи
	|		И СтоимостьОС_Записи.Организация = ДанныеРегистраРегистраторЗаписи.Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СтоимостьНаНачалоГода
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтоимостьОС.СтоимостьОстаток КАК Стоимость,
	|	СтоимостьОС.СтоимостьРеглОстаток КАК СтоимостьРегл
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.Остатки(&КонецПредыдущегоГодаГраница, ОсновноеСредство = &ОсновноеСредство) КАК СтоимостьОС";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область АмортизацияНаНачалоГода
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	-АмортизацияОС.АмортизацияОстаток КАК Амортизация,
	|	-АмортизацияОС.АмортизацияРеглОстаток КАК АмортизацияРегл
	|ИЗ
	|	РегистрНакопления.АмортизацияОС.Остатки(&КонецПредыдущегоГодаГраница, ОсновноеСредство = &ОсновноеСредство) КАК АмортизацияОС";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область АмортизацияНаНачалоПериода
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	-АмортизацияОС.АмортизацияОстаток КАК Амортизация,
	|	-АмортизацияОС.АмортизацияРеглОстаток КАК АмортизацияРегл
	|ИЗ
	|	РегистрНакопления.АмортизацияОС.Остатки(&КонецПредыдущегоМесяцаГраница, ОсновноеСредство = &ОсновноеСредство) КАК АмортизацияОС";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ДатаВводаВЭксплуатациюБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&Дата,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство = &ОсновноеСредство) КАК ПервоначальныеСведенияОС";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВыборкаПараметровБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ТаблицаДатБУ.Дата, ДЕНЬ) КАК Дата,
	|
	|	ЕСТЬNULL(СтоимостьОСБУ.СтоимостьРегл, ЕСТЬNULL(ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ, 0)) КАК СтоимостьБУ,
	|
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.КоэффициентУскорения, 0) КАК КоэффициентУскоренияБУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ЛиквидационнаяСтоимость, 0) КАК ЛиквидационнаяСтоимость,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ, ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПустаяСсылка)) КАК МетодНачисленияАмортизацииБУ,
	|
	|	ЕСТЬNULL(ПорядокУчетаОСБУ.НачислятьАмортизациюБУ, ЛОЖЬ) КАК НачислятьАмортизациюБУ,
	|
	|	ЕСТЬNULL(ВыработкаОС_НаКонецМесяцаБУ.ОбъемВыработки, 0)
	|		-ЕСТЬNULL(ВыработкаОС_НаНачалоМесяцаБУ.ОбъемВыработки, 0) КАК ОбъемВыработки,
	|
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ОбъемПродукцииРаботДляВычисленияАмортизации, 0) КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|
	|	ЕСТЬNULL(ПорядокУчетаОС.ПоказательНаработки, ЗНАЧЕНИЕ(Справочник.ПоказателиНаработки.ПустаяСсылка)) КАК ПоказательНаработки,
	|
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизации, 0) КАК СрокИспользованияДляВычисленияАмортизации
	|
	|ИЗ
	|	ТаблицаДатБУ КАК ТаблицаДатБУ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОСБУ КАК ПервоначальныеСведенияОС
	|		ПО ПервоначальныеСведенияОС.Дата = ТаблицаДатБУ.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО ПорядокУчетаОСБУ.Дата = ТаблицаДатБУ.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ
	|		ПО ПараметрыАмортизацииОСБУ.Дата = ТаблицаДатБУ.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС_БУ КАК ПорядокУчетаОС
	|		ПО ПорядокУчетаОС.Дата = ТаблицаДатБУ.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьОСБУ КАК СтоимостьОСБУ
	|		ПО СтоимостьОСБУ.Дата = ТаблицаДатБУ.Дата
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыработкаОС_НаНачалоМесяцаБУ КАК ВыработкаОС_НаНачалоМесяцаБУ
	|		ПО ВыработкаОС_НаНачалоМесяцаБУ.Дата = ПорядокУчетаОС.Дата
	|			И ВыработкаОС_НаНачалоМесяцаБУ.ПоказательНаработки = ПорядокУчетаОС.ПоказательНаработки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыработкаОС_НаКонецМесяцаБУ КАК ВыработкаОС_НаКонецМесяцаБУ
	|		ПО ВыработкаОС_НаКонецМесяцаБУ.Дата = ПорядокУчетаОС.Дата
	|			И ВыработкаОС_НаКонецМесяцаБУ.ПоказательНаработки = ПорядокУчетаОС.ПоказательНаработки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = Параметры.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Параметры.Ссылка);
	Запрос.УстановитьПараметр("Дата", Параметры.ДатаДокумента);
	Запрос.УстановитьПараметр("Организация", Параметры.Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", Параметры.ОсновноеСредство);
	Запрос.УстановитьПараметр("НачалоПериода", Параметры.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", Параметры.КонецПериода);
	Запрос.УстановитьПараметр("КонецПериодаУпр", Параметры.КонецПериодаУпр);
	Запрос.УстановитьПараметр("КонецПериодаРегл", Параметры.КонецПериодаРегл);
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяца", Параметры.НачалоПериода-1);
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяцаГраница", Новый Граница(Параметры.НачалоПериода-1, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПредыдущегоГодаГраница", Новый Граница(НачалоГода(Параметры.НачалоПериода)-1, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПоСтандартамМУ", Параметры.ПоСтандартамМУ);
	Запрос.УстановитьПараметр("ПорядокНачисленияАмортизацииРегл", Параметры.ПорядокНачисленияАмортизацииРегл);
	Запрос.УстановитьПараметр("РеглУчетВНАВедетсяНезависимо", Параметры.РеглУчетВНАВедетсяНезависимо);
	Запрос.УстановитьПараметр("ПериодСреза", Параметры.ПериодСреза);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Выборка = Результат[Результат.ВГраница()-4].Выбрать();
	Если Выборка.Следующий() Тогда
		
		Объект.СтоимостьРеглНаНачалоГода = Выборка.СтоимостьРегл;
		
	КонецЕсли;

	Выборка = Результат[Результат.ВГраница()-3].Выбрать();
	Если Выборка.Следующий() Тогда
		Объект.АмортизацияРеглНаНачалоГода = Выборка.АмортизацияРегл;
	Иначе
		Объект.АмортизацияРеглНаНачалоГода = 0;
	КонецЕсли;

	Выборка = Результат[Результат.ВГраница()-2].Выбрать();
	Если Выборка.Следующий() Тогда
		Объект.АмортизацияРеглНаНачалоПериода = Выборка.АмортизацияРегл;
	Иначе
		Объект.АмортизацияРеглНаНачалоПериода = 0;
	КонецЕсли;
	
	Выборка = Результат[Результат.ВГраница()-1].Выбрать();
	Если Выборка.Следующий() Тогда
		
		Объект.ДатаВводаВЭксплуатациюБУ = Выборка.ДатаВводаВЭксплуатациюБУ;
		
	КонецЕсли;
	
	ВыборкаПоДатам = Результат[Результат.ВГраница()].Выбрать();
	Пока ВыборкаПоДатам.Следующий() Цикл
	
		СтрокаПараметры = Объект.ПараметрыЗаПериодБУ.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПараметры, ВыборкаПоДатам);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область РасчетАмортизации

Процедура НачатьРасчетАмортизацииПоЗаданнымПараметрам(Объект, ВспомогательныеПараметры = Неопределено, РазделУчета = Неопределено) Экспорт
	
	Если НЕ Объект.КорректировкаСПрошлойДаты
		ИЛИ Объект.НачалоПериода = '000101010000' Тогда
		Возврат;
	КонецЕсли;
	
	Если ВспомогательныеПараметры = Неопределено Тогда
		ВспомогательныеПараметры = Новый Структура;
		ПолучитьПараметрыУчетныхПолитикЗаПериод(Объект, ВспомогательныеПараметры);
		ВспомогательныеПараметры.Вставить("ЭтоАрендованныеОС", ЭтоАрендованныеОС(Объект));
	КонецЕсли;
	
	Если РазделУчета <> Неопределено Тогда
		
		СписокРазделовУчета = СтрРазделить(РазделУчета, ",");
	
	Иначе
		
		СписокРазделовУчета = Новый Массив;
		СписокРазделовУчета.Добавить("УУ");
		
		Если ВспомогательныеПараметры.РеглУчетВНАВедетсяНезависимо_ЗаПериод Тогда
			СписокРазделовУчета.Добавить("БУ");
		КонецЕсли;
		
	КонецЕсли;
	
	НачатьРасчетАмортизацииПоЗаданнымПараметрамБУ(Объект, ВспомогательныеПараметры, СписокРазделовУчета);
	НачатьРасчетАмортизацииПоЗаданнымПараметрамУУ(Объект, ВспомогательныеПараметры, СписокРазделовУчета);
	
	КорректировкаСтоимостиИАмортизацииОСЛокализация.НачатьРасчетАмортизацииПоЗаданнымПараметрам(Объект, РазделУчета);
	
КонецПроцедуры

Процедура НачатьРасчетАмортизацииПоЗаданнымПараметрамБУ(Объект, ВспомогательныеПараметры, СписокРазделовУчета)
	
	Если СписокРазделовУчета.Найти("БУ") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	АмортизацияРассчитана = КорректировкаСтоимостиИАмортизацииОСЛокализация.НачатьРасчетАмортизацииПоЗаданнымПараметрамБУ(
		Объект, ВспомогательныеПараметры);
	
	Если АмортизацияРассчитана Тогда
		Возврат;
	КонецЕсли;
		
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПараметрыЗаПериод.Дата КАК Период,
	|	ПараметрыЗаПериод.НеРассчитыватьАмортизациюБУ КАК НеРассчитыватьАмортизацию,
	|
	|	0 КАК Амортизация,
	|	ПараметрыЗаПериод.АмортизацияБУ КАК АмортизацияРегл,
	|	0 КАК Стоимость,
	|	ПараметрыЗаПериод.СтоимостьБУ КАК СтоимостьРегл,
	|	0 КАК АмортизацияИзменение,
	|	ПараметрыЗаПериод.АмортизацияРеглИзменение КАК АмортизацияРеглИзменение,
	|
	|	ПараметрыЗаПериод.КоэффициентУскоренияБУ КАК КоэффициентУскорения,
	|	0 КАК ЛиквидационнаяСтоимость,
	|	ПараметрыЗаПериод.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимостьРегл,
	|	ПараметрыЗаПериод.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииУУ,
	|	ПараметрыЗаПериод.НачислятьАмортизациюБУ КАК НачислятьАмортизациюУУ,
	|	ПараметрыЗаПериод.ОбъемВыработки КАК ОбъемВыработки,
	|	ПараметрыЗаПериод.ОбъемВыработкиНаНачалоМесяца КАК ОбъемВыработкиНаНачалоМесяца,
	|	ПараметрыЗаПериод.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыЗаПериод.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	0 КАК СтоимостьДляВычисленияАмортизации,
	|	0 КАК СтоимостьДляВычисленияАмортизацииРегл,
	|
	|	&ЭтоАрендованныеОС КАК ЭтоАрендованныеОС,
	|	&Организация КАК Организация,
	|	&ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюУУ,
	|	0 КАК СтоимостьНаНачалоГода,
	|	&СтоимостьРеглНаНачалоГода КАК СтоимостьРеглНаНачалоГода,
	|	0 КАК АмортизацияНаНачалоГода,
	|	&АмортизацияРеглНаНачалоГода КАК АмортизацияРеглНаНачалоГода,
	|	0 КАК АмортизацияНаНачалоПериода,
	|	&АмортизацияРеглНаНачалоПериода КАК АмортизацияРеглНаНачалоПериода
	|
	|ПОМЕСТИТЬ ЗначенияПараметров
	|
	|ИЗ
	|	&ПараметрыЗаПериодБУ КАК ПараметрыЗаПериод";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПараметрыЗаПериодБУ", Объект.ПараметрыЗаПериодБУ.Выгрузить());
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ДатаВводаВЭксплуатациюБУ", Объект.ДатаВводаВЭксплуатациюБУ);
	Запрос.УстановитьПараметр("СтоимостьРеглНаНачалоГода", Объект.СтоимостьРеглНаНачалоГода);
	Запрос.УстановитьПараметр("АмортизацияРеглНаНачалоГода", Объект.АмортизацияРеглНаНачалоГода);
	Запрос.УстановитьПараметр("АмортизацияРеглНаНачалоПериода", Объект.АмортизацияРеглНаНачалоПериода);
	Запрос.УстановитьПараметр("ЭтоАрендованныеОС", ВспомогательныеПараметры.ЭтоАрендованныеОС);
	
	Запрос.Выполнить();
		
	РезультатРасчета = РассчитатьАмортизациюПоЗаданнымПараметрам(
		"БУ", Объект.НачалоПериода, НачалоМесяца(Объект.Дата)-1, МенеджерВременныхТаблиц);
		
	Для Каждого СтрокаПараметры Из Объект.ПараметрыЗаПериодБУ Цикл
		
		СтрокаАмортизация = РезультатРасчета.Найти(СтрокаПараметры.Дата, "Период");
		
		Если СтрокаАмортизация <> Неопределено Тогда
			
			СтрокаПараметры.АмортизацияБУ = СтрокаАмортизация.АмортизацияРегл;
			
		Иначе
			
			СтрокаПараметры.АмортизацияБУ = 0;
		
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура НачатьРасчетАмортизацииПоЗаданнымПараметрамУУ(Объект, ВспомогательныеПараметры, СписокРазделовУчета)
	
	Если СписокРазделовУчета.Найти("УУ") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПараметрыЗаПериод.Дата КАК Период,
	|	ПараметрыЗаПериод.НеРассчитыватьАмортизацию КАК НеРассчитыватьАмортизацию,
	|
	|	ПараметрыЗаПериод.Амортизация КАК Амортизация,
	|	ПараметрыЗаПериод.АмортизацияРегл КАК АмортизацияРегл,
	|	ПараметрыЗаПериод.Стоимость КАК Стоимость,
	|	ПараметрыЗаПериод.СтоимостьРегл КАК СтоимостьРегл,
	|	ПараметрыЗаПериод.АмортизацияИзменение КАК АмортизацияИзменение,
	|	ПараметрыЗаПериод.АмортизацияРеглИзменение КАК АмортизацияРеглИзменение,
	|
	|	ПараметрыЗаПериод.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ПараметрыЗаПериод.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	ПараметрыЗаПериод.ЛиквидационнаяСтоимостьРегл КАК ЛиквидационнаяСтоимостьРегл,
	|	ПараметрыЗаПериод.МетодНачисленияАмортизацииУУ КАК МетодНачисленияАмортизацииУУ,
	|	ПараметрыЗаПериод.НачислятьАмортизациюУУ КАК НачислятьАмортизациюУУ,
	|	ПараметрыЗаПериод.ОбъемВыработки КАК ОбъемВыработки,
	|	ПараметрыЗаПериод.ОбъемВыработкиНаНачалоМесяца КАК ОбъемВыработкиНаНачалоМесяца,
	|	ПараметрыЗаПериод.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыЗаПериод.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыЗаПериод.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ПараметрыЗаПериод.СтоимостьДляВычисленияАмортизацииРегл КАК СтоимостьДляВычисленияАмортизацииРегл,
	|
	|	&ЭтоАрендованныеОС КАК ЭтоАрендованныеОС,
	|	&Организация КАК Организация,
	|	&ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ,
	|	&СтоимостьНаНачалоГода КАК СтоимостьНаНачалоГода,
	|	&СтоимостьРеглНаНачалоГода КАК СтоимостьРеглНаНачалоГода,
	|	&АмортизацияНаНачалоГода КАК АмортизацияНаНачалоГода,
	|	&АмортизацияРеглНаНачалоГода КАК АмортизацияРеглНаНачалоГода,
	|	&АмортизацияНаНачалоПериода КАК АмортизацияНаНачалоПериода,
	|	&АмортизацияРеглНаНачалоПериода КАК АмортизацияРеглНаНачалоПериода
	|
	|ПОМЕСТИТЬ ЗначенияПараметров
	|
	|ИЗ
	|	&ПараметрыЗаПериод КАК ПараметрыЗаПериод";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПараметрыЗаПериод", Объект.ПараметрыЗаПериод.Выгрузить());
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ДатаВводаВЭксплуатациюУУ", Объект.ДатаВводаВЭксплуатациюУУ);
	Запрос.УстановитьПараметр("СтоимостьНаНачалоГода", Объект.СтоимостьНаНачалоГода);
	Запрос.УстановитьПараметр("СтоимостьРеглНаНачалоГода", Объект.СтоимостьРеглНаНачалоГода);
	Запрос.УстановитьПараметр("АмортизацияНаНачалоГода", Объект.АмортизацияНаНачалоГода);
	Запрос.УстановитьПараметр("АмортизацияРеглНаНачалоГода", Объект.АмортизацияРеглНаНачалоГода);
	Запрос.УстановитьПараметр("АмортизацияНаНачалоПериода", Объект.АмортизацияНаНачалоПериода);
	Запрос.УстановитьПараметр("АмортизацияРеглНаНачалоПериода", Объект.АмортизацияРеглНаНачалоПериода);
	Запрос.УстановитьПараметр("ЭтоАрендованныеОС", ВспомогательныеПараметры.ЭтоАрендованныеОС);
	
	КорректировкаСтоимостиИАмортизацииОСЛокализация.УстановитьПараметрыРасчетаАмортизации(Объект, Запрос);
	
	Запрос.Выполнить();
		
	РезультатРасчета = РассчитатьАмортизациюПоЗаданнымПараметрам(
		"УУ", Объект.НачалоПериода, НачалоМесяца(Объект.Дата)-1, МенеджерВременныхТаблиц);
		
	Для Каждого СтрокаПараметры Из Объект.ПараметрыЗаПериод Цикл
		
		СтрокаАмортизация = РезультатРасчета.Найти(СтрокаПараметры.Дата, "Период");
		
		Если СтрокаАмортизация <> Неопределено Тогда
			
			СтрокаПараметры.Амортизация = СтрокаАмортизация.Амортизация;
			СтрокаПараметры.АмортизацияРегл = СтрокаАмортизация.АмортизацияРегл;
			
		Иначе
			
			СтрокаПараметры.Амортизация = 0;
			СтрокаПараметры.АмортизацияРегл = 0;
		
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

Функция РассчитатьАмортизациюПоЗаданнымПараметрам(ВидУчета, НачалоПериода, КонецПериода, МенеджерВременныхТаблиц)
	
	РезультатРасчета = Новый ТаблицаЗначений();
	РезультатРасчета.Колонки.Добавить("Период", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	РезультатРасчета.Колонки.Добавить("Амортизация", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	РезультатРасчета.Колонки.Добавить("АмортизацияРегл", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	
	ИспользуемыеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	УчетнаяПолитика_Период.Период КАК Период,
	|	УчетнаяПолитика_Период.Организация КАК Организация,
	|
	|	ВЫБОР
	|		КОГДА &ВидУчета = ""БУ""
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамМУ) 
	|		ИНАЧЕ УчетнаяПолитика.ПорядокУчетаВНА
	|	КОНЕЦ КАК ПорядокУчетаВНА,
	|
	|	ВЫБОР
	|		КОГДА &ВидУчета = ""БУ"" И УчетнаяПолитика_Период.ЭтоАрендованныеОС
	|			ТОГДА УчетнаяПолитика.ПорядокНачисленияАмортизацииАрендаРегл 
	|		КОГДА &ВидУчета = ""БУ"" И НЕ УчетнаяПолитика_Период.ЭтоАрендованныеОС
	|			ТОГДА УчетнаяПолитика.ПорядокНачисленияАмортизацииОСРегл 
	|		КОГДА УчетнаяПолитика_Период.ЭтоАрендованныеОС
	|			ТОГДА УчетнаяПолитика.ПорядокНачисленияАмортизацииАренда 
	|		ИНАЧЕ УчетнаяПолитика.ПорядокНачисленияАмортизацииОС
	|	КОНЕЦ КАК ПорядокНачисленияАмортизации,
	|
	|	УчетнаяПолитика.МесяцНачалаФинансовогоГода КАК МесяцНачалаФинансовогоГода
	|
	|ПОМЕСТИТЬ УчетнаяПолитика
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗначенияПараметров.Период КАК Период,
	|		ЗначенияПараметров.Организация КАК Организация,
	|		ЗначенияПараметров.ЭтоАрендованныеОС КАК ЭтоАрендованныеОС,
	|		Организации.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|		МАКСИМУМ(УчетнаяПолитика.Период) КАК ПериодУчетнаяПолитика
	|	ИЗ
	|		ЗначенияПараметров КАК ЗначенияПараметров
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|			ПО Организации.Ссылка = ЗначенияПараметров.Организация
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК УчетнаяПолитика
	|			ПО УчетнаяПолитика.Организация = Организации.ГоловнаяОрганизация
	|				И УчетнаяПолитика.Период <= ЗначенияПараметров.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		ЗначенияПараметров.Период,
	|		ЗначенияПараметров.Организация,
	|		ЗначенияПараметров.ЭтоАрендованныеОС,
	|		Организации.ГоловнаяОрганизация
	|
	|	) КАК УчетнаяПолитика_Период
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК УчетнаяПолитика
	|		ПО УчетнаяПолитика.Организация = УчетнаяПолитика_Период.ГоловнаяОрганизация
	|			И УчетнаяПолитика.Период = УчетнаяПолитика_Период.ПериодУчетнаяПолитика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияПараметров.Период КАК Период,
	|	ЕСТЬNULL(УчетнаяПолитика.ПорядокУчетаВНА, ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамМУ)) КАК ПорядокУчетаВНА,
	|	ЕСТЬNULL(УчетнаяПолитика.ПорядокНачисленияАмортизации, ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)) КАК ПорядокНачисленияАмортизации,
	|
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(ЗначенияПараметров.Период) < ЕСТЬNULL(УчетнаяПолитика.МесяцНачалаФинансовогоГода, 1)
	|			ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ЗначенияПараметров.Период, ГОД), МЕСЯЦ, ЕСТЬNULL(УчетнаяПолитика.МесяцНачалаФинансовогоГода, 1) - 13)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ЗначенияПараметров.Период, ГОД), МЕСЯЦ, ЕСТЬNULL(УчетнаяПолитика.МесяцНачалаФинансовогоГода, 1) - 1) 
	|	КОНЕЦ КАК НачалоФинансовогоГода,
	|	
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(ЗначенияПараметров.Период) < ЕСТЬNULL(УчетнаяПолитика.МесяцНачалаФинансовогоГода, 1)
	|			ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ЗначенияПараметров.Период, ГОД), МЕСЯЦ, ЕСТЬNULL(УчетнаяПолитика.МесяцНачалаФинансовогоГода, 1) - 1)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ЗначенияПараметров.Период, ГОД), МЕСЯЦ, ЕСТЬNULL(УчетнаяПолитика.МесяцНачалаФинансовогоГода, 1) + 11) 
	|	КОНЕЦ КАК КонецФинансовогоГода
	|
	|ИЗ	
	|	ЗначенияПараметров КАК ЗначенияПараметров
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитика КАК УчетнаяПолитика
	|		ПО УчетнаяПолитика.Период = ЗначенияПараметров.Период
	|			И УчетнаяПолитика.Организация = ЗначенияПараметров.Организация
	|
	|ГДЕ
	|	(ЕСТЬNULL(УчетнаяПолитика.ПорядокУчетаВНА, ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамМУ)) = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамМУ)
	|			И ЕСТЬNULL(УчетнаяПолитика.ПорядокНачисленияАмортизации, ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)) = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|		ИЛИ КОНЕЦПЕРИОДА(ЗначенияПараметров.Период, ДЕНЬ) = КОНЕЦПЕРИОДА(ЗначенияПараметров.Период, МЕСЯЦ))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВидУчета", ВидУчета);
	ВнеоборотныеАктивы.УстановитьПараметрыЗапросаДляРасчетаАмортизации(Запрос);
	
	АмортизацияЗаПериод = 0;
	АмортизацияРеглЗаПериод = 0;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Запрос.УстановитьПараметр("Период", КонецДня(Выборка.Период));
		Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Выборка.Период));
		Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Выборка.Период));
		Запрос.УстановитьПараметр("АмортизацияЗаПериод", АмортизацияЗаПериод);
		Запрос.УстановитьПараметр("АмортизацияРеглЗаПериод", АмортизацияРеглЗаПериод);
		Запрос.УстановитьПараметр("ПорядокУчетаВНА", Выборка.ПорядокУчетаВНА);
		Запрос.УстановитьПараметр("ПорядокНачисленияАмортизации", Выборка.ПорядокНачисленияАмортизации);
		Запрос.УстановитьПараметр("НачалоФинансовогоГода", Выборка.НачалоФинансовогоГода);
		Запрос.УстановитьПараметр("КонецФинансовогоГода", Выборка.КонецФинансовогоГода);
		
		ПодготовитьПараметрыДляРасчетаАмортизации(Запрос);
		РассчитатьАмортизацию(РезультатРасчета, Запрос, АмортизацияЗаПериод, АмортизацияРеглЗаПериод);
		
		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);
		
	КонецЦикла;
	
	Возврат РезультатРасчета;
	
КонецФункции

Процедура ПодготовитьПараметрыДляРасчетаАмортизации(Запрос)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ЗначенияПараметров.Период, МЕСЯЦ) КАК НачалоМесяца,
	|	КОНЕЦПЕРИОДА(ЗначенияПараметров.Период, МЕСЯЦ) КАК КонецМесяца,
	|
	|	КОНЕЦПЕРИОДА(ЗначенияПараметров.Период, ДЕНЬ) КАК Период,
	|	ЗначенияПараметров.Организация КАК Организация,
	|	ЗначенияПараметров.НеРассчитыватьАмортизацию КАК НеРассчитыватьАмортизацию,
	|	ЗначенияПараметров.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	ЗначенияПараметров.ЛиквидационнаяСтоимостьРегл КАК ЛиквидационнаяСтоимостьРегл,
	|	ЗначенияПараметров.НачислятьАмортизациюУУ КАК НачислятьАмортизациюУУ,
	|	ЗначенияПараметров.СтоимостьДляВычисленияАмортизацииРегл КАК СтоимостьДляВычисленияАмортизацииРегл,
	|	ЗначенияПараметров.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ЗначенияПараметров.МетодНачисленияАмортизацииУУ КАК МетодНачисленияАмортизацииУУ,
	|	ЗначенияПараметров.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ЗначенияПараметров.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|
	|	ЗначенияПараметров.Стоимость КАК Стоимость,
	|	ЗначенияПараметров.СтоимостьРегл КАК СтоимостьРегл,
	|
	|	ЗначенияПараметров.Амортизация КАК Амортизация,
	|	ЗначенияПараметров.АмортизацияРегл КАК АмортизацияРегл,
	|	ЗначенияПараметров.АмортизацияИзменение КАК АмортизацияИзменение,
	|	ЗначенияПараметров.АмортизацияРеглИзменение КАК АмортизацияРеглИзменение,
	|
	|	ЗначенияПараметров.СтоимостьНаНачалоГода КАК СтоимостьНаНачалоГода,
	|	ЗначенияПараметров.СтоимостьРеглНаНачалоГода КАК СтоимостьРеглНаНачалоГода,
	|
	|	ЗначенияПараметров.АмортизацияНаНачалоГода КАК АмортизацияНаНачалоГода,
	|	ЗначенияПараметров.АмортизацияРеглНаНачалоГода КАК АмортизацияРеглНаНачалоГода,
	|
	|	ЗначенияПараметров.ОбъемВыработки КАК ОбъемВыработки,
	|	ЗначенияПараметров.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ЗначенияПараметров.АмортизацияНаНачалоПериода КАК АмортизацияНаНачалоПериода,
	|	ЗначенияПараметров.АмортизацияРеглНаНачалоПериода КАК АмортизацияРеглНаНачалоПериода,
	|	ЗначенияПараметров.ОбъемВыработкиНаНачалоМесяца КАК ОбъемВыработкиНаНачалоМесяца,
	|	
	|	ВЫБОР
	|		КОГДА &ПорядокНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|			ТОГДА ЗначенияПараметров.ДатаВводаВЭксплуатациюУУ
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ЗначенияПараметров.ДатаВводаВЭксплуатациюУУ, МЕСЯЦ, 1), МЕСЯЦ)
	|	КОНЕЦ КАК ДатаПоследнегоИзменения
	|
	|ПОМЕСТИТЬ ЗначенияПараметровЗаМесяц
	|
	|ИЗ
	|	ЗначенияПараметров КАК ЗначенияПараметров
	|
	|ГДЕ
	|	(&ПорядокУчетаВНА = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамМУ)
	|			И &ПорядокНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|			И ЗначенияПараметров.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|
	|		ИЛИ (&ПорядокУчетаВНА = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл)
	|				ИЛИ &ПорядокНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца))
	|			И КОНЕЦПЕРИОДА(ЗначенияПараметров.Период, ДЕНЬ) = &Период)
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияПараметров.НачалоМесяца КАК НачалоМесяца,
	|	ЗначенияПараметров.Период КАК Период,
	|	ЕСТЬNULL(МАКСИМУМ(ЗначенияПараметровПредыдущее.Период), ДАТАВРЕМЯ(1,1,1)) КАК ПериодПредыдущее
	|
	|ПОМЕСТИТЬ ЗначенияПараметровПредыдущее
	|
	|ИЗ
	|	ЗначенияПараметровЗаМесяц КАК ЗначенияПараметров
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначенияПараметровЗаМесяц КАК ЗначенияПараметровПредыдущее
	|		ПО (ЗначенияПараметровПредыдущее.НачалоМесяца = ЗначенияПараметров.НачалоМесяца)
	|			И (ЗначенияПараметровПредыдущее.Период < ЗначенияПараметров.Период)
	|			И (&ПорядокУчетаВНА = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамМУ))
	|			И (&ПорядокНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету))
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗначенияПараметров.НачалоМесяца,
	|	ЗначенияПараметров.Период
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияПараметров.НачалоМесяца КАК НачалоМесяца,
	|	ЗначенияПараметров.Период КАК Период,
	|
	|	ВЫБОР
	|		КОГДА ЗначенияПараметровПредыдущее.ПериодПредыдущее <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА РАЗНОСТЬДАТ(ЗначенияПараметровПредыдущее.ПериодПредыдущее, ЗначенияПараметров.Период, ДЕНЬ)
	|		КОГДА НАЧАЛОПЕРИОДА(ЗначенияПараметров.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ЗначенияПараметров.ДатаПоследнегоИзменения, МЕСЯЦ)
	|			ТОГДА РАЗНОСТЬДАТ(ЗначенияПараметров.ДатаПоследнегоИзменения, ЗначенияПараметров.Период, ДЕНЬ)
	|		ИНАЧЕ РАЗНОСТЬДАТ(ЗначенияПараметров.НачалоМесяца, ЗначенияПараметров.Период, ДЕНЬ)
	|	КОНЕЦ 
	|		+ ВЫБОР
	|			КОГДА ЗначенияПараметров.Период = ЗначенияПараметров.КонецМесяца
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Количество
	|
	|ПОМЕСТИТЬ КоличествоДнейИспользования
	|
	|ИЗ
	|	ЗначенияПараметровЗаМесяц КАК ЗначенияПараметров
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначенияПараметровПредыдущее КАК ЗначенияПараметровПредыдущее
	|		ПО (ЗначенияПараметровПредыдущее.Период = ЗначенияПараметров.Период)
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияПараметров.Период КАК Период,
	|	ЗначенияПараметров.Организация КАК Организация,
	|
	|	&ПорядокУчетаВНА = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамМУ) КАК АмортизацияНачисляетсяПоСтандартамМУ,
	|	НЕОПРЕДЕЛЕНО КАК ВариантПроводокПоОбесценениюВНА,
	|	&НачалоФинансовогоГода КАК НачалоФинансовогоГода,
	|	&КонецФинансовогоГода КАК КонецФинансовогоГода,
	|
	|	ЗначенияПараметров.НеРассчитыватьАмортизацию КАК НеРассчитыватьАмортизацию,
	|	ЗначенияПараметров.Амортизация КАК Амортизация,
	|	ЗначенияПараметров.АмортизацияРегл КАК АмортизацияРегл,
	|
	|	ЗначенияПараметров.АмортизацияИзменение КАК АмортизацияИзменение,
	|	ЗначенияПараметров.АмортизацияРеглИзменение КАК АмортизацияРеглИзменение,
	|
	|	ЗначенияПараметров.Стоимость
	|		- ЗначенияПараметров.АмортизацияНаНачалоПериода
	|		- &АмортизацияЗаПериод КАК ОстаточнаяСтоимость,
	|
	|	ЗначенияПараметров.СтоимостьРегл
	|		- ЗначенияПараметров.АмортизацияРеглНаНачалоПериода
	|		- &АмортизацияРеглЗаПериод КАК ОстаточнаяСтоимостьРегл,
	|
	|	ЗначенияПараметров.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	ЗначенияПараметров.ЛиквидационнаяСтоимостьРегл КАК ЛиквидационнаяСтоимостьРегл,
	|
	|	ЗначенияПараметров.НачислятьАмортизациюУУ КАК НачислятьАмортизацию,
	|	ЗначенияПараметров.МетодНачисленияАмортизацииУУ КАК МетодНачисленияАмортизации,
	|
	|	ЗначенияПараметров.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ЗначенияПараметров.ДатаПоследнегоИзменения КАК ДатаПоследнегоИзменения,
	|
	|	ЛОЖЬ КАК ЭтоДоначисление,
	|
	// РесурсНазначенный
	|	ВЫБОР 
	|		КОГДА ЗначенияПараметров.МетодНачисленияАмортизацииУУ = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции)
	|			ТОГДА ЗначенияПараметров.ОбъемПродукцииРаботДляВычисленияАмортизации
	|		ИНАЧЕ ЗначенияПараметров.СрокИспользованияДляВычисленияАмортизации
	|	КОНЕЦ КАК РесурсНазначенный,
	|
	// РесурсВыработанныйЗаТекущийПериод
	|	ВЫБОР 
	|		КОГДА ЗначенияПараметров.МетодНачисленияАмортизацииУУ = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции)
	|			ТОГДА ВЫРАЗИТЬ(КоличествоДнейИспользования.Количество / ДЕНЬ(ЗначенияПараметров.КонецМесяца) * ЗначенияПараметров.ОбъемВыработки КАК ЧИСЛО(20,8)) 
	|	
	|		ИНАЧЕ ВЫРАЗИТЬ(КоличествоДнейИспользования.Количество / ДЕНЬ(ЗначенияПараметров.КонецМесяца) КАК ЧИСЛО(20,8)) 
	|
	|	КОНЕЦ КАК РесурсВыработанныйЗаТекущийПериод,
	|	
	// РесурсВыработанныйЗаПрошлыйПериод
	|	ВЫРАЗИТЬ(ВЫБОР 
	|		КОГДА ЗначенияПараметров.МетодНачисленияАмортизацииУУ = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции)
	|			ТОГДА ЗначенияПараметров.ОбъемВыработкиНаНачалоМесяца
	|
			// В месяце принятия к учету
	|		КОГДА НАЧАЛОПЕРИОДА(ЗначенияПараметров.ДатаПоследнегоИзменения, МЕСЯЦ) = ЗначенияПараметров.НачалоМесяца
	|			ТОГДА 0
	|
			// В следующем месяце после принятия к учету
	|		КОГДА КОНЕЦПЕРИОДА(ЗначенияПараметров.ДатаПоследнегоИзменения, МЕСЯЦ) = КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(ЗначенияПараметров.НачалоМесяца, МЕСЯЦ, -1), МЕСЯЦ)
	|			ТОГДА (РАЗНОСТЬДАТ(ЗначенияПараметров.ДатаПоследнегоИзменения, КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(ЗначенияПараметров.НачалоМесяца, МЕСЯЦ, -1), МЕСЯЦ), ДЕНЬ) + 1)
	|					/ ДЕНЬ(КОНЕЦПЕРИОДА(ЗначенияПараметров.ДатаПоследнегоИзменения, МЕСЯЦ))
	|	
			// Расшифровка формулы: [кол-во отработанных дней в мес принятия] / [всего дней в мес принятия] + [кол-во месяцев после принятия до начала месяца]
	|		ИНАЧЕ
	|			(РАЗНОСТЬДАТ(ЗначенияПараметров.ДатаПоследнегоИзменения, КОНЕЦПЕРИОДА(ЗначенияПараметров.ДатаПоследнегоИзменения, МЕСЯЦ), ДЕНЬ) + 1)
	|					/ ДЕНЬ(КОНЕЦПЕРИОДА(ЗначенияПараметров.ДатаПоследнегоИзменения, МЕСЯЦ))
	|				+ РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ЗначенияПараметров.ДатаПоследнегоИзменения, МЕСЯЦ, 1), МЕСЯЦ), ЗначенияПараметров.КонецМесяца, МЕСЯЦ)
	|	КОНЕЦ КАК ЧИСЛО(20,8)) КАК РесурсВыработанныйЗаПрошлыйПериод,
	|
	// СтоимостьДляВычисленияАмортизации
	|	ВЫБОР 
	|		КОГДА &ПорядокУчетаВНА = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл)
	|			ТОГДА ЗначенияПараметров.СтоимостьДляВычисленияАмортизации
	|		ИНАЧЕ ЗначенияПараметров.Стоимость - ЗначенияПараметров.АмортизацияНаНачалоПериода - &АмортизацияЗаПериод
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизации,
	|	
	// СтоимостьДляВычисленияАмортизацииРегл
	|	ВЫБОР 
	|		КОГДА &ПорядокУчетаВНА = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл)
	|			ТОГДА ЗначенияПараметров.СтоимостьДляВычисленияАмортизацииРегл
	|		ИНАЧЕ ЗначенияПараметров.СтоимостьРегл - ЗначенияПараметров.АмортизацияРеглНаНачалоПериода - &АмортизацияРеглЗаПериод
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизацииРегл,
	|	
	// СтоимостьНаНачалоГода
	|	ЗначенияПараметров.СтоимостьНаНачалоГода
	|		- ЗначенияПараметров.АмортизацияНаНачалоГода КАК СтоимостьНаНачалоГода,
	|	
	// СтоимостьРеглНаНачалоГода
	|	ЗначенияПараметров.СтоимостьРеглНаНачалоГода
	|		- ЗначенияПараметров.АмортизацияРеглНаНачалоГода КАК СтоимостьРеглНаНачалоГода,
	|
	// ОтработанныхМесяцевПолныхЛет
	|	ВЫБОР
	|		КОГДА ГОД(ЗначенияПараметров.ДатаПоследнегоИзменения) <> ГОД(ЗначенияПараметров.НачалоМесяца) ТОГДА
	|			13 - МЕСЯЦ(ЗначенияПараметров.ДатаПоследнегоИзменения)
	|				+ 12 * (ГОД(ЗначенияПараметров.НачалоМесяца) - Год(ЗначенияПараметров.ДатаПоследнегоИзменения) - 1)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОтработанныхМесяцевПолныхЛет
	|
	|ПОМЕСТИТЬ ВТ_СписокОССПараметрами_УУ
	|
	|ИЗ
	|	ЗначенияПараметровЗаМесяц КАК ЗначенияПараметров
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КоличествоДнейИспользования КАК КоличествоДнейИспользования
	|		ПО (КоличествоДнейИспользования.Период = ЗначенияПараметров.Период)
	|ГДЕ
	|	ЗначенияПараметров.Период = &Период";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьАмортизацию(РезультатРасчета, Запрос, АмортизацияЗаПериод, АмортизацияРеглЗаПериод)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СписокОС.Период, ДЕНЬ) КАК Период,
	|
	|	СписокОС.АмортизацияИзменение КАК АмортизацияИзменение,
	|	СписокОС.АмортизацияРеглИзменение КАК АмортизацияРеглИзменение,
	|
	|	ВЫБОР
	|		КОГДА СписокОС.НеРассчитыватьАмортизацию
	|			ТОГДА СписокОС.Амортизация
	|	
	|		КОГДА (СписокОС.ОстаточнаяСтоимость - (&СуммаАмортизацииУУ)) > СписокОС.ЛиквидационнаяСтоимость
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА (СписокОС.ОстаточнаяСтоимость - (&СуммаАмортизацииУУ) - СписокОС.ЛиквидационнаяСтоимость) < &МинимальнаяОстаточнаяСтоимостьУпр
	|
	|						ТОГДА СписокОС.ОстаточнаяСтоимость - СписокОС.ЛиквидационнаяСтоимость
	|
	|					ИНАЧЕ &СуммаАмортизацииУУ
	|				КОНЕЦ
	|
	|		КОГДА (СписокОС.ОстаточнаяСтоимость - СписокОС.ЛиквидационнаяСтоимость) > 0
	|			ТОГДА (СписокОС.ОстаточнаяСтоимость -СписокОС.ЛиквидационнаяСтоимость)
	|
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУУ,
	|
	|	ВЫБОР 
	|		КОГДА СписокОС.НеРассчитыватьАмортизацию
	|			ТОГДА СписокОС.АмортизацияРегл
	|	
	|		КОГДА (СписокОС.ОстаточнаяСтоимостьРегл - (&СуммаАмортизацииБУ)) > СписокОС.ЛиквидационнаяСтоимостьРегл
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА (СписокОС.ОстаточнаяСтоимостьРегл - (&СуммаАмортизацииБУ) - СписокОС.ЛиквидационнаяСтоимостьРегл) < &МинимальнаяОстаточнаяСтоимостьРегл
	|
	|						ТОГДА СписокОС.ОстаточнаяСтоимостьРегл - СписокОС.ЛиквидационнаяСтоимостьРегл
	|
	|					ИНАЧЕ &СуммаАмортизацииБУ
	|				КОНЕЦ
	|
	|		КОГДА (СписокОС.ОстаточнаяСтоимостьРегл - СписокОС.ЛиквидационнаяСтоимостьРегл) > 0
	|			ТОГДА (СписокОС.ОстаточнаяСтоимостьРегл - СписокОС.ЛиквидационнаяСтоимостьРегл)
	|
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБУ
	|
	|ИЗ
	|	ВТ_СписокОССПараметрами_УУ КАК СписокОС";
	
	ЗаменитьПараметрыТекстаЗапросаДляРасчетаАмортизации(ТекстЗапроса);
	
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаАмортизация = РезультатРасчета.Добавить();
		СтрокаАмортизация.Период = Выборка.Период;
		
		СтрокаАмортизация.Амортизация = Выборка.СуммаУУ;
		СтрокаАмортизация.АмортизацияРегл = Выборка.СуммаБУ;
		
		АмортизацияЗаПериод = АмортизацияЗаПериод + СтрокаАмортизация.Амортизация + Выборка.АмортизацияИзменение;
		АмортизацияРеглЗаПериод = АмортизацияРеглЗаПериод + СтрокаАмортизация.АмортизацияРегл + Выборка.АмортизацияРеглИзменение;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаменитьПараметрыТекстаЗапросаДляРасчетаАмортизации(ТекстЗапроса)
	
	ПараметрыТекстаЗапроса = Документы.АмортизацияОС2_4.ПараметрыТекстаЗапросаСуммаАмортизацииУУ();

	ПараметрыТекстаЗапроса.ТекстСтоимостьДляВычисленияАмортизации = "СписокОС.СтоимостьДляВычисленияАмортизации";
	ПараметрыТекстаЗапроса.ТекстОстаточнаяСтоимость = "СписокОС.ОстаточнаяСтоимость";
	ПараметрыТекстаЗапроса.ТекстЛиквидационнаяСтоимость = "СписокОС.ЛиквидационнаяСтоимость";
	ПараметрыТекстаЗапроса.ТекстСтоимостьНаНачалоГода = "СписокОС.СтоимостьНаНачалоГода";
	ТекстСуммаАмортизацииУУ = Документы.АмортизацияОС2_4.ТекстЗапросаСуммаАмортизацииУУ(ПараметрыТекстаЗапроса);
	
	//
	ПараметрыТекстаЗапроса.ТекстСтоимостьДляВычисленияАмортизации = "СписокОС.СтоимостьДляВычисленияАмортизацииРегл";
	ПараметрыТекстаЗапроса.ТекстОстаточнаяСтоимость = "СписокОС.ОстаточнаяСтоимостьРегл";
	ПараметрыТекстаЗапроса.ТекстЛиквидационнаяСтоимость = "СписокОС.ЛиквидационнаяСтоимостьРегл";
	ПараметрыТекстаЗапроса.ТекстСтоимостьНаНачалоГода = "СписокОС.СтоимостьРеглНаНачалоГода";
	ТекстСуммаАмортизацииБУ = Документы.АмортизацияОС2_4.ТекстЗапросаСуммаАмортизацииУУ(ПараметрыТекстаЗапроса);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаАмортизацииУУ", ТекстСуммаАмортизацииУУ);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаАмортизацииБУ", ТекстСуммаАмортизацииБУ);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ПараметрыВыбораСтатейИАналитик() Экспорт
	
	ПараметрыВыбораСтатьиИАналитики = Новый Массив;
	
	// СтатьяРасходов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект";
	ПараметрыВыбора.Статья = "СтатьяРасходов";
	ПараметрыВыбора.ТипСтатьи = "ТипСтатьиРасходов";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходов";
	
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивовРасходов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("АналитикаАктивовПассивовРасходов");
	
	ПараметрыВыбораСтатьиИАналитики.Добавить(ПараметрыВыбора);
	
	// СтатьяДоходов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект";
	ПараметрыВыбора.Статья = "СтатьяДоходов";
	ПараметрыВыбора.ТипСтатьи = "ТипСтатьиДоходов";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиДоходов = Истина;
	ПараметрыВыбора.АналитикаДоходов = "АналитикаДоходов";
	
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивовДоходов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяДоходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаДоходов.Добавить("АналитикаДоходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("АналитикаАктивовПассивовДоходов");
	
	ПараметрыВыбораСтатьиИАналитики.Добавить(ПараметрыВыбора);
	
	Возврат ПараметрыВыбораСтатьиИАналитики;
	
КонецФункции

Функция ПараметрыНастройкиСчетовУчета() Экспорт
	
	МассивПараметров = Новый Массив();
	
	#Область Расходы
	ПараметрыНастройки = НастройкаСчетовУчетаСервер.ПараметрыНастройки();
	ПараметрыНастройки.ПутьКДанным = "Объект";
	ПараметрыНастройки.НастройкаСчетовУчета = "НастройкаСчетовУчетаРасходов";
	ПараметрыНастройки.СтатьяАктивовПассивов = "СтатьяРасходов";
	ПараметрыНастройки.АналитикаАктивовПассивов = "АналитикаАктивовПассивовРасходов";
	ПараметрыНастройки.Представление = "ПредставлениеОтраженияРасходовВРеглУчете";
	ПараметрыНастройки.ТипСтатьи     = "ТипСтатьиРасходов";
	
	ПараметрыНастройки.Организация = "Объект.Организация";

	ПараметрыНастройки.ЭлементыФормы.Добавить("ПредставлениеОтраженияРасходовВРеглУчете");
	МассивПараметров.Добавить(ПараметрыНастройки);
	#КонецОбласти
		
	#Область Доходы
	ПараметрыНастройки = НастройкаСчетовУчетаСервер.ПараметрыНастройки();
	ПараметрыНастройки.ПутьКДанным = "Объект";
	ПараметрыНастройки.НастройкаСчетовУчета = "НастройкаСчетовУчетаДоходов";
	ПараметрыНастройки.СтатьяАктивовПассивов = "СтатьяДоходов";
	ПараметрыНастройки.АналитикаАктивовПассивов = "АналитикаАктивовПассивовДоходов";
	ПараметрыНастройки.Представление = "ПредставлениеОтраженияДоходовВРеглУчете";
	ПараметрыНастройки.ТипСтатьи     = "ТипСтатьиДоходов";

	ПараметрыНастройки.Организация = "Объект.Организация";

	ПараметрыНастройки.ЭлементыФормы.Добавить("ПредставлениеОтраженияДоходовВРеглУчете");
	МассивПараметров.Добавить(ПараметрыНастройки);
	#КонецОбласти
	
	Возврат МассивПараметров;
	
КонецФункции

Процедура ЗаполнитьПоДаннымУчета(Объект, ВыбранныеСтроки = Неопределено) Экспорт

	Если ВыбранныеСтроки <> Неопределено
		И ВыбранныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = КорректировкаСтоимостиИАмортизацииОСЛокализация.ТекстЗапросаЗаполнитьПоДаннымУчета();
	
	Если ТекстЗапроса = Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СтоимостьИАмортизация.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(СтоимостьИАмортизация.СтоимостьУУ) КАК СтоимостьУУ,
		|	СУММА(СтоимостьИАмортизация.СтоимостьБУ) КАК СтоимостьБУ,
		|	СУММА(СтоимостьИАмортизация.СтоимостьНУ) КАК СтоимостьНУ,
		|	СУММА(СтоимостьИАмортизация.СтоимостьПР) КАК СтоимостьПР,
		|	СУММА(СтоимостьИАмортизация.СтоимостьЦФ) КАК СтоимостьЦФ,
		|	СУММА(СтоимостьИАмортизация.ЗалоговаяСтоимость) КАК ЗалоговаяСтоимость,
		|	СУММА(СтоимостьИАмортизация.АмортизацияБУ) КАК АмортизацияБУ,
		|	СУММА(СтоимостьИАмортизация.АмортизацияНУ) КАК АмортизацияНУ,
		|	СУММА(СтоимостьИАмортизация.АмортизацияПР) КАК АмортизацияПР,
		|	СУММА(СтоимостьИАмортизация.АмортизацияУУ) КАК АмортизацияУУ,
		|	СУММА(СтоимостьИАмортизация.АмортизацияЦФ) КАК АмортизацияЦФ,
		|	МАКСИМУМ(ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ) КАК ПервоначальнаяСтоимостьБУ,
		|	МАКСИМУМ(ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ) КАК ПервоначальнаяСтоимостьУУ,
		|	МАКСИМУМ(ПараметрыАмортизацииОСУУ.СтоимостьДляВычисленияАмортизации) КАК СтоимостьДляВычисленияАмортизацииУУ,
		|	МАКСИМУМ(ПараметрыАмортизацииОСУУ.СтоимостьДляВычисленияАмортизацииРегл) КАК СтоимостьДляВычисленияАмортизацииБУ
		|ИЗ
		|	(ВЫБРАТЬ
		|		СтоимостьОСОстатки.ОсновноеСредство КАК ОсновноеСредство,
		|		СтоимостьОСОстатки.СтоимостьОстаток КАК СтоимостьУУ,
		|		СтоимостьОСОстатки.СтоимостьРеглОстаток КАК СтоимостьБУ,
		|		СтоимостьОСОстатки.СтоимостьНУОстаток КАК СтоимостьНУ,
		|		СтоимостьОСОстатки.СтоимостьПРОстаток КАК СтоимостьПР,
		|		СтоимостьОСОстатки.СтоимостьЦФОстаток КАК СтоимостьЦФ,
		|		СтоимостьОСОстатки.ЗалоговаяСтоимостьОстаток КАК ЗалоговаяСтоимость,
		|		0 КАК АмортизацияБУ,
		|		0 КАК АмортизацияНУ,
		|		0 КАК АмортизацияПР,
		|		0 КАК АмортизацияУУ,
		|		0 КАК АмортизацияЦФ
		|	ИЗ
		|		РегистрНакопления.СтоимостьОС.Остатки(
		|				&ПериодГраница,
		|				Организация = &Организация
		|					И ОсновноеСредство В (&СписокОС)) КАК СтоимостьОСОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СтоимостьОС.ОсновноеСредство,
		|		СтоимостьОС.Стоимость,
		|		ВЫБОР
		|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -СтоимостьОС.СтоимостьРегл
		|			ИНАЧЕ СтоимостьОС.СтоимостьРегл
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -СтоимостьОС.СтоимостьНУ
		|			ИНАЧЕ СтоимостьОС.СтоимостьНУ
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -СтоимостьОС.СтоимостьПР
		|			ИНАЧЕ СтоимостьОС.СтоимостьПР
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -СтоимостьОС.СтоимостьЦФ
		|			ИНАЧЕ СтоимостьОС.СтоимостьЦФ
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА -СтоимостьОС.ЗалоговаяСтоимость
		|			ИНАЧЕ СтоимостьОС.ЗалоговаяСтоимость
		|		КОНЕЦ,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		РегистрНакопления.СтоимостьОС КАК СтоимостьОС
		|	ГДЕ
		|		СтоимостьОС.Регистратор = &Ссылка
		|		И СтоимостьОС.Организация = &Организация
		|		И СтоимостьОС.Период < &Период
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		АмортизацияОСОстатки.ОсновноеСредство,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		-АмортизацияОСОстатки.АмортизацияРеглОстаток,
		|		-АмортизацияОСОстатки.АмортизацияНУОстаток,
		|		-АмортизацияОСОстатки.АмортизацияПРОстаток,
		|		-АмортизацияОСОстатки.АмортизацияОстаток,
		|		-АмортизацияОСОстатки.АмортизацияЦФОстаток
		|	ИЗ
		|		РегистрНакопления.АмортизацияОС.Остатки(
		|				&ПериодГраница,
		|				Организация = &Организация
		|					И ОсновноеСредство В (&СписокОС)) КАК АмортизацияОСОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		АмортизацияОС.ОсновноеСредство,
		|		АмортизацияОС.Амортизация,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.АмортизацияРегл
		|			ИНАЧЕ АмортизацияОС.АмортизацияРегл
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.АмортизацияНУ
		|			ИНАЧЕ АмортизацияОС.АмортизацияНУ
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.АмортизацияПР
		|			ИНАЧЕ АмортизацияОС.АмортизацияПР
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.Амортизация
		|			ИНАЧЕ АмортизацияОС.Амортизация
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.АмортизацияЦФ
		|			ИНАЧЕ АмортизацияОС.АмортизацияЦФ
		|		КОНЕЦ
		|	ИЗ
		|		РегистрНакопления.АмортизацияОС КАК АмортизацияОС
		|	ГДЕ
		|		АмортизацияОС.Регистратор = &Ссылка
		|		И АмортизацияОС.Организация = &Организация
		|		И АмортизацияОС.Период < &Период
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		АмортизацияОС.ОсновноеСредство,
		|		АмортизацияОС.Амортизация,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.АмортизацияРегл
		|			ИНАЧЕ АмортизацияОС.АмортизацияРегл
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.АмортизацияНУ
		|			ИНАЧЕ АмортизацияОС.АмортизацияНУ
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.АмортизацияПР
		|			ИНАЧЕ АмортизацияОС.АмортизацияПР
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.Амортизация
		|			ИНАЧЕ АмортизацияОС.Амортизация
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -АмортизацияОС.АмортизацияЦФ
		|			ИНАЧЕ АмортизацияОС.АмортизацияЦФ
		|		КОНЕЦ
		|	ИЗ
		|		РегистрНакопления.АмортизацияОС КАК АмортизацияОС
		|	ГДЕ
		|		АмортизацияОС.Регистратор ССЫЛКА Документ.АмортизацияОС2_4
		|		И АмортизацияОС.Организация = &Организация
		|		И АмортизацияОС.Период < &Период
		|		И АмортизацияОС.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
		|
		|	) КАК СтоимостьИАмортизация
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
		|			&Период,
		|			Регистратор <> &Ссылка
		|				И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|				И Организация = &Организация
		|				И ОсновноеСредство В (&СписокОС)) КАК ПервоначальныеСведенияОС
		|		ПО (ПервоначальныеСведенияОС.ОсновноеСредство = СтоимостьИАмортизация.ОсновноеСредство)
		|			И (ПервоначальныеСведенияОС.Организация = &Организация)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСУУ.СрезПоследних(
		|			&Период,
		|			Регистратор <> &Ссылка
		|				И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|				И Организация = &Организация
		|				И ОсновноеСредство В (&СписокОС)) КАК ПараметрыАмортизацииОСУУ
		|		ПО (ПараметрыАмортизацииОСУУ.ОсновноеСредство = СтоимостьИАмортизация.ОсновноеСредство)
		|			И (ПараметрыАмортизацииОСУУ.Организация = &Организация)
		|
		|СГРУППИРОВАТЬ ПО
		|	СтоимостьИАмортизация.ОсновноеСредство";
		
	КонецЕсли; 
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Организация, "ГоловнаяОрганизация"));
	Запрос.УстановитьПараметр("ВедетсяРегламентированныйУчетВНА", ВнеоборотныеАктивыСлужебный.ВедетсяРегламентированныйУчетВНА());
	Запрос.УстановитьПараметр("ВидСобытияОС", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СобытиеОС, "ВидСобытияОС"));
	
	Период = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ПериодГраница", Новый Граница(Период, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ПериодУП", Период+1);
	
	СписокОС = Объект.ОС.Выгрузить(ВыбранныеСтроки).ВыгрузитьКолонку("ОсновноеСредство");
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	
	СтоимостьИАмортизация = Запрос.Выполнить().Выгрузить();
	СтоимостьИАмортизация.Индексы.Добавить("ОсновноеСредство");
	
	Если ВыбранныеСтроки <> Неопределено Тогда
		СписокСтрок = ВыбранныеСтроки;
	Иначе
		СписокСтрок = Объект.ОС;
	КонецЕсли; 
	
	Для каждого ДанныеСтроки Из СписокСтрок Цикл
		
		ДанныеУчета = СтоимостьИАмортизация.Найти(ДанныеСтроки.ОсновноеСредство, "ОсновноеСредство");
		Если ДанныеУчета <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ДанныеСтроки, ДанныеУчета);
		Иначе
			ДанныеСтроки.СтоимостьБУ = 0;
			ДанныеСтроки.СтоимостьНУ = 0;
			ДанныеСтроки.СтоимостьПР = 0;
			ДанныеСтроки.СтоимостьУУ = 0;
			ДанныеСтроки.СтоимостьЦФ = 0;
			ДанныеСтроки.АмортизацияБУ = 0;
			ДанныеСтроки.АмортизацияНУ = 0;
			ДанныеСтроки.АмортизацияПР = 0;
			ДанныеСтроки.АмортизацияУУ = 0;
			ДанныеСтроки.АмортизацияЦФ = 0;
			ДанныеСтроки.ЗалоговаяСтоимость = 0;
			ДанныеСтроки.ПервоначальнаяСтоимостьБУ = 0;
			ДанныеСтроки.ПервоначальнаяСтоимостьНУ = 0;
			ДанныеСтроки.ПервоначальнаяСтоимостьУУ = 0;
			ДанныеСтроки.СтоимостьДляВычисленияАмортизацииБУ = 0;
			ДанныеСтроки.СтоимостьДляВычисленияАмортизацииУУ = 0;
			ДанныеСтроки.ПРДляВычисленияАмортизации = 0;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
 
// 
// Параметры:
//  Объект - ДокументОбъект.КорректировкаСтоимостиИАмортизацииОС - 
//  СлужебныеПараметрыФормы - Структура -
// 
Процедура ПолучитьПараметрыУчетныхПолитикЗаПериод(Объект, СлужебныеПараметрыФормы) Экспорт
	
	ПорядокНачисленияАмортизацииУпр = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
	ПорядокНачисленияАмортизацииРегл = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
	ПорядокНачисленияАмортизацииУпрАренда = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
	ПорядокНачисленияАмортизацииАрендаРегл = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
	РеглУчетВНАВедетсяНезависимо = Истина;
	ПрименяетсяФСБУ6 = Истина;
	
	ПараметрыРеглПолучены = КорректировкаСтоимостиИАмортизацииОСЛокализация.ПолучитьПараметрыУчетныхПолитикЗаПериод(
								Объект, СлужебныеПараметрыФормы);
	
	Если Объект.КорректировкаСПрошлойДаты
		И ЗначениеЗаполнено(Объект.НачалоПериода)
		И ЗначениеЗаполнено(Объект.Организация) Тогда
			
		ДатаДокумента = ?(Объект.Дата <> '000101010000', Объект.Дата, ТекущаяДатаСеанса());
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР 
		|		КОГДА УчетнаяПолитика.ПорядокНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету) 
		|			ТОГДА ИСТИНА 
		|		ИНАЧЕ ЛОЖЬ 
		|	КОНЕЦ), ИСТИНА) КАК СДатыПринятияКУчетуУпр,
		|
		|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР 
		|		КОГДА УчетнаяПолитика.ПорядокНачисленияАмортизацииРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету) 
		|			ТОГДА ИСТИНА 
		|		ИНАЧЕ ЛОЖЬ 
		|	КОНЕЦ), ИСТИНА) КАК СДатыПринятияКУчетуРегл,
		|
		|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР 
		|		КОГДА УчетнаяПолитика.ПорядокНачисленияАмортизацииАренда = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету) 
		|			ТОГДА ИСТИНА 
		|		ИНАЧЕ ЛОЖЬ 
		|	КОНЕЦ), ИСТИНА) КАК СДатыПринятияКУчетуУпрАренда,
		|
		|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР 
		|		КОГДА УчетнаяПолитика.ПорядокНачисленияАмортизацииАрендаРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету) 
		|			ТОГДА ИСТИНА 
		|		ИНАЧЕ ЛОЖЬ 
		|	КОНЕЦ), ИСТИНА) КАК СДатыПринятияКУчетуРеглАренда,
		|
		|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР 
		|		КОГДА УчетнаяПолитика.ПорядокУчетаВНАРегл = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНАРегл.Независимый) 
		|			ТОГДА ИСТИНА 
		|		ИНАЧЕ ЛОЖЬ 
		|	КОНЕЦ), ИСТИНА) КАК РеглУчетВНАВедетсяНезависимо
		|
		|ИЗ
		|	(ВЫБРАТЬ
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииОС КАК ПорядокНачисленияАмортизации,
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииОСРегл КАК ПорядокНачисленияАмортизацииРегл,
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииАренда КАК ПорядокНачисленияАмортизацииАренда,
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииАрендаРегл КАК ПорядокНачисленияАмортизацииАрендаРегл,
		|		УчетнаяПолитика.ПорядокУчетаВНАРегл КАК ПорядокУчетаВНАРегл
		|	ИЗ
		|		РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК УчетнаяПолитика
		|	ГДЕ
		|		УчетнаяПолитика.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|		И УчетнаяПолитика.Организация = &ГоловнаяОрганизация
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииОС КАК ПорядокНачисленияАмортизации,
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииОСРегл КАК ПорядокНачисленияАмортизацииРегл,
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииАренда КАК ПорядокНачисленияАмортизацииАренда,
		|		УчетнаяПолитика.ПорядокНачисленияАмортизацииАрендаРегл КАК ПорядокНачисленияАмортизацииАрендаРегл,
		|		УчетнаяПолитика.ПорядокУчетаВНАРегл КАК ПорядокУчетаВНАРегл
		|	ИЗ
		|		РегистрСведений.УчетнаяПолитикаФинансовогоУчета.СрезПоследних(&НачалоПериода, Организация = &ГоловнаяОрганизация) КАК УчетнаяПолитика
		|
		|	) КАК УчетнаяПолитика
		|";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Организация, "ГоловнаяОрганизация"));
		Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);
		Запрос.УстановитьПараметр("КонецПериода", НачалоДня(ДатаДокумента) - 1);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			Если Выборка.СДатыПринятияКУчетуУпр Тогда
				ПорядокНачисленияАмортизацииУпр = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
			Иначе
				ПорядокНачисленияАмортизацииУпр = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца;
			КонецЕсли;
			
			Если Выборка.СДатыПринятияКУчетуРегл Тогда
				ПорядокНачисленияАмортизацииРегл = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
			Иначе
				ПорядокНачисленияАмортизацииРегл = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца;
			КонецЕсли;
			
			Если Выборка.СДатыПринятияКУчетуУпрАренда Тогда
				ПорядокНачисленияАмортизацииУпрАренда = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
			Иначе
				ПорядокНачисленияАмортизацииУпрАренда = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца;
			КонецЕсли;
			
			Если Выборка.СДатыПринятияКУчетуРеглАренда Тогда
				ПорядокНачисленияАмортизацииАрендаРегл = Перечисления.ПорядокНачисленияАмортизации.СДатыПринятияКУчету;
			Иначе
				ПорядокНачисленияАмортизацииАрендаРегл = Перечисления.ПорядокНачисленияАмортизации.СоСледующегоМесяца;
			КонецЕсли;
			
			РеглУчетВНАВедетсяНезависимо = Выборка.РеглУчетВНАВедетсяНезависимо;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
		"ПорядокНачисленияАмортизацииУпр_ЗаПериод",
		ПорядокНачисленияАмортизацииУпр,
		СлужебныеПараметрыФормы);
	
	ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
		"ПорядокНачисленияАмортизацииУпрАренда_ЗаПериод",
		ПорядокНачисленияАмортизацииУпрАренда,
		СлужебныеПараметрыФормы);
	
	Если НЕ ПараметрыРеглПолучены Тогда
		
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"ПорядокНачисленияАмортизацииРегл_ЗаПериод",
			ПорядокНачисленияАмортизацииРегл,
			СлужебныеПараметрыФормы);
	
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"ПорядокНачисленияАмортизацииРеглАренда_ЗаПериод",
			ПорядокНачисленияАмортизацииАрендаРегл,
			СлужебныеПараметрыФормы);
	
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"РеглУчетВНАВедетсяНезависимо_ЗаПериод",
			РеглУчетВНАВедетсяНезависимо,
			СлужебныеПараметрыФормы);
		
		ВнеоборотныеАктивыСлужебный.УстановитьСвойствоСтруктуры(
			"ПрименяетсяФСБУ6_ЗаПериод",
			ПрименяетсяФСБУ6,
			СлужебныеПараметрыФормы);
			
	КонецЕсли;
		
КонецПроцедуры

Функция ЭтоАрендованныеОС(Объект) Экспорт
	
	ЭтоАрендованныеОС = Ложь;
	Для Каждого ДанныеСтроки Из Объект.ОС Цикл
		Если ЗначениеЗаполнено(ДанныеСтроки.ОсновноеСредство) Тогда
			ЭтоАрендованныеОС = ВнеоборотныеАктивы.ОсновноеСредствоПолученоВАренду(
									ДанныеСтроки.ОсновноеСредство,
									?(Объект.Дата <> '000101010000', Объект.Дата, ТекущаяДатаСеанса()));
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЭтоАрендованныеОС;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
