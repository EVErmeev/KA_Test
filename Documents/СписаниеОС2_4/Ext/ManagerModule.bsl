#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("ОсновныеСредства");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("УчетДоходовРасходов");
	
	СписаниеОСЛокализация.ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента);
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура:
//     * Ключ - Строка - Имя таблицы.
//     * Значение - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда

		Если ДопПараметры <> Неопределено
			И ДопПараметры.Свойство("МенеджерВременныхТаблиц") Тогда
			Запрос.МенеджерВременныхТаблиц = ДопПараметры.МенеджерВременныхТаблиц;
		Иначе
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		КонецЕсли;
		
		ЗаполнитьПараметрыИнициализации(Запрос, Документ);
		
		ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса);
		СформироватьРасширеннуюТаблицуОС(Запрос, ТекстыЗапроса);
		
		ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПорядокУчетаОСУУ(ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаПереданныеВАрендуОС(ТекстыЗапроса, Регистры);

		
		СписаниеОСЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	
	КонецЕсли;
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

// Формирует таблицы движений при отложенном проведении.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.СписаниеОС2_4 - Документ, для которого формируются движения
//  МенеджерВременныхТаблиц	- МенеджерВременныхТаблиц - Содержит вспомогательные временные таблицы, которые могут использоваться для формирования движений.
//
// Возвращаемое значение:
//  см. ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения
//
Функция ТаблицыОтложенногоФормированияДвижений(ДокументСсылка, МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	СформироватьРасширеннуюТаблицуОС(Запрос, ТекстыЗапроса);
	
	ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Неопределено);
	ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(ТекстыЗапроса);
	ТекстЗапросаТаблицаПараметрыАмортизацииОСУУ(ТекстыЗапроса);
	ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Неопределено);
	ТекстЗапросаТаблицаПорядокУчетаОСУУ(ТекстыЗапроса, Неопределено);
	ТекстЗапросаТаблицаПереданныеВАрендуОС(ТекстыЗапроса, Неопределено);	
	
	ТекстЗапросаТаблицаСтоимостьОС(ТекстыЗапроса);
	ТекстЗапросаТаблицаАмортизацияОС(ТекстыЗапроса);
	ТекстЗапросаТаблицаОбесценениеВНА(ТекстыЗапроса);
	ТекстЗапросаТаблицаПрочиеРасходы(ТекстыЗапроса);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(ТекстыЗапроса);
	ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса);
	ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(ТекстыЗапроса);
	
	СписаниеОСЛокализация.ТаблицыОтложенногоФормированияДвижений(ТекстыЗапроса);
	
	ТаблицыДляДвижений = ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(
							Запрос, ТекстыЗапроса, Неопределено);
	
	
	Возврат ТаблицыДляДвижений;
	
КонецФункции

// Формирует таблицы движений при выполнении операции "Закрытие расходов от выбытия ОС".
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.СписаниеОС2_4 - Документ, для которого формируются движения
//  МенеджерВременныхТаблиц	- МенеджерВременныхТаблиц - Содержит вспомогательные временные таблицы, которые могут использоваться для формирования движений.
//
// Возвращаемое значение:
//  см. ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения
//
Функция ТаблицыДвиженийПриЗакрытииРасходовОтВыбытияОС(ДокументСсылка, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ЗакрытиеРасходовОтВыбытияОС.УстановитьПараметрыЗапроса(Запрос);
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ЗакрытиеРасходовОтВыбытияОС.ТекстЗапросаТаблицаПрочиеРасходы(ТекстыЗапроса);
	ЗакрытиеРасходовОтВыбытияОС.ТекстЗапросаТаблицаПартииПрочихРасходов(ТекстыЗапроса);
	ЗакрытиеРасходовОтВыбытияОС.ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(ТекстыЗапроса);
	ЗакрытиеРасходовОтВыбытияОС.ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса);
	
	ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	ДопПараметры.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ДопПараметры.ТолькоПомеченные = Истина;
	
	ТаблицыДляДвижений = ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
	Возврат ТаблицыДляДвижений;
	
КонецФункции

#КонецОбласти

#Область Команды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.ПрочееОприходованиеТоваров.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Команда = ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Если Команда <> Неопределено Тогда
		Команда.ВидимостьВФормах = "ФормаСписка";
	КонецЕсли;
	
	СписаниеОСЛокализация.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры);

КонецПроцедуры

// Добавляет команду создания документа "Списание ОС".
//
// Параметры:
//   КомандыСозданияНаОсновании - См. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Порядок						 - Число			 - Порядок команды.
//
// Возвращаемое значение:
//	СтрокаТаблицыЗначений - добавленная команда
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании, Порядок = 0) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.СписаниеОС2_4) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СписаниеОС2_4.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СписаниеОС2_4);
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьВнеоборотныеАктивы2_4";
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.Порядок = Порядок;
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	СписаниеОСЛокализация.ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры);

КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	СписаниеОСЛокализация.ДобавитьКомандыПечати(КомандыПечати);

КонецПроцедуры

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область РабочееМесто

// Формирует данные для рабочего места.
// 
// Параметры:
//  Параметры - Структура - Содержит:
//  	* НачалоПериода - Дата -
//  	* КонецПериода - Дата -
//  	* Организация - СправочникСсылка.Организации
//  	* ДокументСписания - Строка -
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Данные рабочего места
Функция ДанныеРабочегоМеста(Параметры) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТМЦВЭксплуатации.Период КАК Период,
	|	ТМЦВЭксплуатации.Организация КАК Организация,
	|	ТМЦВЭксплуатации.Регистратор КАК ДокументВыбытия,
	|	ТМЦВЭксплуатации.Партия КАК Партия,
	|	ТМЦВЭксплуатации.Партия.ОсновноеСредство КАК ОсновноеСредство
	|
	|ПОМЕСТИТЬ ВыбытияТМЦ
	|
	|ИЗ
	|	РегистрНакопления.ТМЦВЭксплуатации КАК ТМЦВЭксплуатации
	|ГДЕ
	|	(ТМЦВЭксплуатации.Период >= &НачалоПериода
	|		ИЛИ &НачалоПериода = ДАТАВРЕМЯ(1,1,1))
	|
	|	И (ТМЦВЭксплуатации.Период <= &КонецПериода
	|		ИЛИ &КонецПериода = ДАТАВРЕМЯ(1,1,1))
	|	
	|	И (ТМЦВЭксплуатации.Организация = &Организация
	|		ИЛИ &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|
	|	И ТМЦВЭксплуатации.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеИзЭксплуатации),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзЭксплуатации))
	|
	|	И ТМЦВЭксплуатации.Партия.КатегорияЭксплуатации.УчитыватьВВидеГрупповогоОС
	|
	|	И ТМЦВЭксплуатации.Активность
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТаблицаОснования.Ссылка КАК Ссылка,
	|	ТаблицаОснования.ДокументОснование КАК ДокументОснование
	|
	|ПОМЕСТИТЬ СписанияОС
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаОснования.Ссылка КАК Ссылка,
	|		ТаблицаОснования.ДокументОснование КАК ДокументОснование
	|	ИЗ
	|		Документ.СписаниеОС2_4.Основания КАК ТаблицаОснования
	|	ГДЕ
	|		ТаблицаОснования.Ссылка.Проведен
	|
	|		И ТаблицаОснования.ДокументОснование В (
	|			ВЫБРАТЬ
	|				ВыбытияТМЦ.ДокументВыбытия
	|			ИЗ
	|				ВыбытияТМЦ КАК ВыбытияТМЦ)
	|
	|		И ТаблицаОснования.Ссылка В (
	|			ВЫБРАТЬ
	|				ТаблицаОС.Ссылка
	|			ИЗ
	|				Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|			ГДЕ
	|				ТаблицаОС.Ссылка = ТаблицаОснования.Ссылка
	|				И ТаблицаОС.ОсновноеСредство В (
	|					ВЫБРАТЬ
	|						ВыбытияТМЦ.ОсновноеСредство
	|					ИЗ
	|						ВыбытияТМЦ КАК ВыбытияТМЦ))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТаблицаОснования.Ссылка КАК Ссылка,
	|		ТаблицаОснования.ДокументОснование КАК ДокументОснование
	|	ИЗ
	|		Документ.СписаниеОС2_4 КАК ТаблицаОснования
	|	ГДЕ
	|		ТаблицаОснования.Проведен
	|
	|		И ТаблицаОснования.ДокументОснование В (
	|			ВЫБРАТЬ
	|				ВыбытияТМЦ.ДокументВыбытия
	|			ИЗ
	|				ВыбытияТМЦ КАК ВыбытияТМЦ)
	|
	|		И ТаблицаОснования.Ссылка В (
	|			ВЫБРАТЬ
	|				ТаблицаОС.Ссылка
	|			ИЗ
	|				Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|			ГДЕ
	|				ТаблицаОС.Ссылка = ТаблицаОснования.Ссылка
	|				И ТаблицаОС.ОсновноеСредство В (
	|					ВЫБРАТЬ
	|						ВыбытияТМЦ.ОсновноеСредство
	|					ИЗ
	|						ВыбытияТМЦ КАК ВыбытияТМЦ))
	|
	|	) КАК ТаблицаОснования
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВыбытияТМЦ.Период, МЕСЯЦ) КАК МесяцВыбытия,
	|	ВыбытияТМЦ.Период КАК ДатаВыбытия,
	|	ВыбытияТМЦ.Организация КАК Организация,
	|	ВыбытияТМЦ.ОсновноеСредство КАК ОсновноеСредство,
	|	ВыбытияТМЦ.Партия КАК Партия,
	|	ВыбытияТМЦ.ДокументВыбытия КАК ДокументВыбытия,
	|	ЕСТЬNULL(СписанияПроведен.Ссылка, НЕОПРЕДЕЛЕНО) КАК ДокументСписания
	|
	|ИЗ
	|	ВыбытияТМЦ КАК ВыбытияТМЦ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписанияОС КАК СписанияПроведен
	|		ПО СписанияПроведен.ДокументОснование = ВыбытияТМЦ.ДокументВыбытия
	|
	|ГДЕ
	|	(&ДокументСписания = """"
	|		ИЛИ &ДокументСписания = ""НеОформлен""
	|				И ЕСТЬNULL(СписанияПроведен.Ссылка,НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО
	|		ИЛИ &ДокументСписания = ""Оформлен""
	|				И ЕСТЬNULL(СписанияПроведен.Ссылка, НЕОПРЕДЕЛЕНО) <> НЕОПРЕДЕЛЕНО)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ДатаВыбытия,
	|	ДокументВыбытия,
	|	ОсновноеСредство";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачалоПериода", Параметры.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", Параметры.КонецПериода);
	Запрос.УстановитьПараметр("Организация", Параметры.Организация);
	Запрос.УстановитьПараметр("ДокументСписания", Параметры.ДокументСписания);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Представление реквизитов.
// 
// Параметры:
//  Организация - СправочникСсылка.Организации
// 
// Возвращаемое значение:
//  Соответствие - Представление реквизитов
Функция ПредставлениеРеквизитов(Организация) Экспорт

	ПредставлениеРеквизитов = Новый Соответствие;

	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегл = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Организация);
	
	ВалютаРеглПредставление = "";
	Если ЗначениеЗаполнено(ВалютаРегл) Тогда
		ВалютаРеглПредставление = "(" + Строка(ВалютаРегл) + ")";
	КонецЕсли;
	
	ВедетсяРегламентированныйУчетВНА = ВнеоборотныеАктивыСлужебный.ВедетсяРегламентированныйУчетВНА();
	
	Если ВедетсяРегламентированныйУчетВНА Тогда
		
		ПредставлениеРеквизитов.Вставить("ОС.СуммаСписанияБУ", СокрЛП(СтрШаблон(НСтр("ru = 'Сумма регл. %1'"), ВалютаРеглПредставление)));
		ПредставлениеРеквизитов.Вставить("ОС.СуммаСписанияУУ", СтрШаблон(НСтр("ru = 'Сумма упр. (%1)'"), Строка(ВалютаУпр)));
		
	Иначе
		
		Если ВалютаРегл = ВалютаУпр Тогда
			ПредставлениеРеквизитов.Вставить("ОС.СуммаСписанияБУ", НСтр("ru = 'Сумма'"));
			ПредставлениеРеквизитов.Вставить("ОС.СуммаСписанияУУ", НСтр("ru = 'Сумма'"));
		Иначе
			ПредставлениеРеквизитов.Вставить("ОС.СуммаСписанияБУ", СокрЛП(СтрШаблон(НСтр("ru = 'Сумма %1'"), ВалютаРеглПредставление)));
			ПредставлениеРеквизитов.Вставить("ОС.СуммаСписанияУУ", СтрШаблон(НСтр("ru = 'Сумма (%1)'"), Строка(ВалютаУпр)));
		КонецЕсли;
		
	КонецЕсли; 
	
	Возврат ПредставлениеРеквизитов;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	Возврат ИсточникиДанных;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.СписаниеОС2_4";
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать", """""");
	
	ВЗапросеЕстьИсточник = Истина;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "";
		ВЗапросеЕстьИсточник = Ложь;
		
	ИначеЕсли ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов"
		ИЛИ ИмяРегистра = "ДокументыПоОС" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                     КАК Ссылка,
	|	ДанныеДокумента.Дата                       КАК Период,
	|	ДанныеДокумента.Номер                      КАК Номер,
	|	ДанныеДокумента.Организация                КАК Организация,
	|	ДанныеДокумента.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ДанныеДокумента.Ответственный              КАК Ответственный,
	|	ДанныеДокумента.Комментарий                КАК Комментарий,
	|	ДанныеДокумента.Проведен                   КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления            КАК ПометкаУдаления,
	|	ДанныеДокумента.ОтражатьВРеглУчете         КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете          КАК ОтражатьВУпрУчете,
	|	ДанныеДокумента.ОтражатьВРеглУчете         КАК ОтражатьВБУ,
	|	ДанныеДокумента.ОтражатьВРеглУчете         КАК ОтражатьВНУ,
	|	ДанныеДокумента.Подразделение              КАК Подразделение,
	|	ДанныеДокумента.ХозяйственнаяОперация      КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СтатьяРасходов             КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов          КАК АналитикаРасходов,
	|	ДанныеДокумента.АналитикаАктивовПассивов   КАК АналитикаАктивовПассивов,
	|	ДанныеДокумента.НастройкаСчетовУчета       КАК НастройкаСчетовУчета,
	|	ДанныеДокумента.СобытиеОС                  КАК СобытиеОС,
	|	ДанныеДокумента.СписаниеСПрошлойДаты       КАК СписаниеСПрошлойДаты,
	|	КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаСписания, ДЕНЬ) КАК ДатаСписания,
	|	НастройкиХозяйственныхОпераций.Ссылка      КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.СписаниеОС2_4 КАК ДанныеДокумента
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|		ПО ДанныеДокумента.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

// Определяет необходимость дополнять таблицу ОС принадлежащими им компонентами и узлами
//  и при необходимости формирует временную таблицу.
//
// Параметры:
//  Запрос - Запрос -
//  ТекстыЗапроса - СписокЗначений из Строка -
Процедура СформироватьРасширеннуюТаблицуОС(Запрос, ТекстыЗапроса)

	Если Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеОС Тогда
		ТекстЗапросаТаблицаВтРасширеннаяТаблицаОС(ТекстыЗапроса);
	КонецЕсли;

КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)
	
	ЗначенияПараметровПроведения = Новый Структура;
	ВнеоборотныеАктивы.ДополнитьЗначенияПараметровПроведенияПриСписанииОС(ЗначенияПараметровПроведения);

	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СписаниеОС2_4"));
	ЗначенияПараметровПроведения.Вставить("НазваниеДокумента", НСтр("ru='Списание ОС'"));
	
	ЗначенияПараметровПроведения.Вставить("ИспользоватьУчетПрочихДоходовРасходов",ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	ЗначенияПараметровПроведения.Вставить("ИспользоватьУчетПрочихАктивовПассивов",ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов"));
	ЗначенияПараметровПроведения.Вставить("ИспользоватьУчетПрослеживаемыхИмпортныхТоваров",ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрослеживаемыхИмпортныхТоваров"));
	ЗначенияПараметровПроведения.Вставить("ВедетсяРегламентированныйУчетВНА", ВнеоборотныеАктивыСлужебный.ВедетсяРегламентированныйУчетВНА());

	ЗначенияПараметровПроведения.Вставить("СтатьяВыбытияОС", ПланыВидовХарактеристик.СтатьиРасходов.РасходыПриСписанииОС);
	
	Если Реквизиты <> Неопределено Тогда
		ЗначенияПараметровПроведения.Вставить("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	КонецЕсли;
	
	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Функция ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДокументыПоОС";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаОС.НомерСтроки-1, 0) КАК НомерЗаписи,
	|	&Ссылка                          КАК Ссылка,
	|	&Период                          КАК Дата,
	|	&Организация                     КАК Организация,
	|	&Подразделение                   КАК Подразделение,
	|	&ИдентификаторМетаданных         КАК ТипСсылки,
	|	&ХозяйственнаяОперация           КАК ХозяйственнаяОперация,
	|	&Проведен                        КАК Проведен,
	|	&ОтражатьВРеглУчете              КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете               КАК ОтражатьВУпрУчете,
	|	&СобытиеОС                       КАК СобытиеОС,
	|	ТаблицаОС.ОсновноеСредство       КАК ОсновноеСредство,
	|	&СписаниеСПрошлойДаты            КАК ЭтоИсправление,
	|
	|	ВЫБОР
	|		КОГДА &СписаниеСПрошлойДаты
	|			ТОГДА &ДатаСписания
	|		ИНАЧЕ ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ                             КАК НачалоПериодаИсправления,
	|
	|	ВЫБОР
	|		КОГДА &СписаниеСПрошлойДаты
	|			ТОГДА КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ                             КАК КонецПериодаИсправления
	|ИЗ
	|	Документ.СписаниеОС2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОС.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                         КАК Ссылка,
	|	&Период                         КАК ДатаДокументаИБ,
	|	&Номер                          КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных        КАК ТипСсылки,
	|	&Организация                    КАК Организация,
	|	&ХозяйственнаяОперация          КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                    КАК НаправлениеДеятельности,
	|	&Подразделение                  КАК Подразделение,
	|	&Ответственный                  КАК Ответственный,
	|	&Комментарий                    КАК Комментарий,
	|	&Проведен                       КАК Проведен,
	|	&ПометкаУдаления                КАК ПометкаУдаления,
	|	ЛОЖЬ                            КАК ДополнительнаяЗапись,
	|	&Период                         КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                  КАК НомерПервичногоДокумента,
	|	ЛОЖЬ                            КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО                    КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО                    КАК ИсправляемыйДокумент,
	|	&Период                         КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО                    КАК Приоритет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПервоначальныеСведенияОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПервоначальныеСведенияОС(ТекстыЗапроса, ПолноеИмяОбъекта());
	
	ТекстЗапроса = СписаниеОСЛокализация.ТекстЗапросаТаблицаПервоначальныеСведенияОС();
	Если ТекстЗапроса = Неопределено Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Период КАК Период,
		|	ДАТАВРЕМЯ(1,1,1) КАК ДатаИсправления,
		|
		|	&Организация КАК Организация,
		|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
		|
		|	ПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
		|	ПервоначальныеСведенияОС.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
		|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
		|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
		|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ,
		|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
		|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ,
		|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ,
		|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ КАК ДокументВводаВЭксплуатациюУУ,
		|
		|	ВЫБОР
		|		КОГДА &ОтражатьВРеглУчете
		|			ТОГДА &Ссылка 
		|		ИНАЧЕ ПервоначальныеСведенияОС.ДокументСнятияСУчетаБУ
		|	КОНЕЦ КАК ДокументСнятияСУчетаБУ,
		|
		|	ВЫБОР
		|		КОГДА &ОтражатьВУпрУчете
		|			ТОГДА &Ссылка 
		|		ИНАЧЕ ПервоначальныеСведенияОС.ДокументСнятияСУчетаУУ
		|	КОНЕЦ КАК ДокументСнятияСУчетаУУ
		|ИЗ
		|	втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
		|			&Период,
		|			&СписаниеСПрошлойДаты
		|				И Регистратор <> &Ссылка
		|				И Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						СписокОС.ОсновноеСредство
		|					ИЗ
		|						втСписокОС КАК СписокОС)) КАК ДанныеРегистраПоследнее
		|		ПО (ДанныеРегистраПоследнее.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство)
		|
		|ГДЕ
		|	&ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)
		|
		|	И (НЕ &СписаниеСПрошлойДаты
		|		ИЛИ ЕСТЬNULL(ДанныеРегистраПоследнее.Период, ДАТАВРЕМЯ(1,1,1)) < &ДатаСписания)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&ДатаСписания КАК Период,
		|	&Период КАК ДатаИсправления,
		|
		|	&Организация КАК Организация,
		|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
		|
		|	ПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
		|	ПервоначальныеСведенияОС.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
		|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
		|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
		|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ,
		|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
		|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ,
		|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ,
		|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ КАК ДокументВводаВЭксплуатациюУУ,
		|
		|	ВЫБОР
		|		КОГДА &ОтражатьВРеглУчете
		|			ТОГДА &Ссылка 
		|		ИНАЧЕ ПервоначальныеСведенияОС.ДокументСнятияСУчетаБУ
		|	КОНЕЦ КАК ДокументСнятияСУчетаБУ,
		|
		|	ВЫБОР
		|		КОГДА &ОтражатьВУпрУчете
		|			ТОГДА &Ссылка 
		|		ИНАЧЕ ПервоначальныеСведенияОС.ДокументСнятияСУчетаУУ
		|	КОНЕЦ КАК ДокументСнятияСУчетаУУ
		|ИЗ
		|	Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
		|			&ДатаСписания,
		|			&СписаниеСПрошлойДаты
		|				И Регистратор <> &Ссылка
		|				И Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						СписокОС.ОсновноеСредство
		|					ИЗ
		|						втСписокОС КАК СписокОС)) КАК ПервоначальныеСведенияОС
		|		ПО (ПервоначальныеСведенияОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
		|
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)
		|	И &СписаниеСПрошлойДаты";
		
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОСБУ";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПорядокУчетаОСБУ(ТекстыЗапроса, "Документ.СписаниеОС2_4");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                           КАК Период,
	|	ДАТАВРЕМЯ(1,1,1)                                  КАК ДатаИсправления,
	|
	|	&Организация                                      КАК Организация,
	|	ПорядокУчетаОСБУ.ОсновноеСредство                 КАК ОсновноеСредство,
	|
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа            КАК АмортизационнаяГруппа,
	|	ПорядокУчетаОСБУ.НедвижимоеИмущество              КАК НедвижимоеИмущество,
	|
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)    КАК СостояниеБУ,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)    КАК СостояниеНУ,
	|	ЛОЖЬ                                              КАК НачислятьАмортизациюБУ,
	|	ЛОЖЬ                                              КАК НачислятьАмортизациюНУ
	|
	|ИЗ
	|	втПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Период,
	|			&СписаниеСПрошлойДаты
	|				И Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ДанныеРегистраПоследнее
	|		ПО (ДанныеРегистраПоследнее.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство)
	|
	|ГДЕ
	|	&ОтражатьВРеглУчете
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)
	|
	|	И (НЕ &СписаниеСПрошлойДаты
	|		ИЛИ ЕСТЬNULL(ДанныеРегистраПоследнее.Период, ДАТАВРЕМЯ(1,1,1)) < &ДатаСписания)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ДатаСписания                                     КАК Период,
	|	&Период                                           КАК ДатаИсправления,
	|
	|	&Организация                                      КАК Организация,
	|	ПорядокУчетаОСБУ.ОсновноеСредство                 КАК ОсновноеСредство,
	|
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа            КАК АмортизационнаяГруппа,
	|	ПорядокУчетаОСБУ.НедвижимоеИмущество              КАК НедвижимоеИмущество,
	|
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)    КАК СостояниеБУ,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)    КАК СостояниеНУ,
	|	ЛОЖЬ                                              КАК НачислятьАмортизациюБУ,
	|	ЛОЖЬ                                              КАК НачислятьАмортизациюНУ
	|
	|ИЗ
	|	Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&ДатаСписания,
	|			&СписаниеСПрошлойДаты
	|				И Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ПорядокУчетаОСБУ
	|		ПО (ПорядокУчетаОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
	|
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)
	|	И &СписаниеСПрошлойДаты";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаОСУУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОСУУ";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, ПолноеИмяОбъекта());
	ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса);
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПорядокУчетаОСУУ(ТекстыЗапроса, ПолноеИмяОбъекта());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                    КАК Период,
	|	ДАТАВРЕМЯ(1,1,1)           КАК ДатаИсправления,
	|	&Организация               КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета) КАК Состояние,
	|	ЛОЖЬ                       КАК НачислятьАмортизациюУУ
	|ИЗ
	|	втТаблицаОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПорядокУчетаОСУУ КАК ПорядокУчета
	|		ПО ТаблицаОС.ОсновноеСредство = ПорядокУчета.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|			&Период,
	|			&СписаниеСПрошлойДаты
	|				И Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ДанныеРегистраПоследнее
	|		ПО (ДанныеРегистраПоследнее.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
	|
	|ГДЕ
	|	&ОтражатьВУпрУчете
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)
	|
	|	И (НЕ &СписаниеСПрошлойДаты
	|		ИЛИ ЕСТЬNULL(ДанныеРегистраПоследнее.Период, ДАТАВРЕМЯ(1,1,1)) < &ДатаСписания)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ДатаСписания              КАК Период,
	|	&Период                    КАК ДатаИсправления,
	|	&Организация               КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета) КАК Состояние,
	|	ЛОЖЬ                       КАК НачислятьАмортизациюУУ
	|ИЗ
	|	втТаблицаОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|			&ДатаСписания,
	|			&СписаниеСПрошлойДаты
	|				И Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ПорядокУчетаОСУУ
	|		ПО (ПорядокУчетаОСУУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
	|
	|ГДЕ
	|	&ОтражатьВУпрУчете
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)
	|	И &СписаниеСПрошлойДаты";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПереданныеВАрендуОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПереданныеВАрендуОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, ПолноеИмяОбъекта());
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПереданныеВАрендуОС(ТекстыЗапроса, ПолноеИмяОбъекта());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                               КАК Период,
	|	ДАТАВРЕМЯ(1,1,1)                      КАК ДатаИсправления,
	|	&Организация                          КАК Организация,
	|	ПереданныеВАрендуОС.ОсновноеСредство  КАК ОсновноеСредство
	|ИЗ
	|	ВтПереданныеВАрендуОС КАК ПереданныеВАрендуОС
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПереданныеВАрендуОС.СрезПоследних(
	|			&Период,
	|			&СписаниеСПрошлойДаты
	|				И Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ДанныеРегистраПоследнее
	|		ПО (ДанныеРегистраПоследнее.ОсновноеСредство = ПереданныеВАрендуОС.ОсновноеСредство)
	|ГДЕ
	|	&ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеУзловКомпонентовАмортизации)
	|
	|	И (НЕ &СписаниеСПрошлойДаты
	|		ИЛИ ЕСТЬNULL(ДанныеРегистраПоследнее.Период, ДАТАВРЕМЯ(1,1,1)) < &ДатаСписания)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ДатаСписания                         КАК Период,
	|	&Период                               КАК ДатаИсправления,
	|	&Организация                          КАК Организация,
	|	ПереданныеВАрендуОС.ОсновноеСредство  КАК ОсновноеСредство
	|ИЗ
	|	Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПереданныеВАрендуОС.СрезПоследних(
	|			&ДатаСписания,
	|			&СписаниеСПрошлойДаты
	|				И Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ПереданныеВАрендуОС
	|		ПО (ПереданныеВАрендуОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
	|
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеУзловКомпонентовАмортизации)
	|	И &СписаниеСПрошлойДаты";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры	

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(ТекстыЗапроса)

	ИмяРегистра = "ПараметрыАмортизацииОСБУ";
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПараметрыАмортизацииОСБУ(ТекстыЗапроса, "Документ.СписаниеОС2_4");
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтНаработкиОбъектовЭксплуатации(ТекстыЗапроса, "Документ.СписаниеОС2_4");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                      КАК Регистратор,
	|	&Период                      КАК Период,
	|	&Организация                 КАК Организация,
	|	&Период                      КАК ДатаПоследнегоИзменения,
	|	ТаблицаОС.ОсновноеСредство   КАК ОсновноеСредство,
	|
	// СтоимостьДляВычисленияАмортизации
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0) = 0 
	|			ТОГДА 0
	|		ИНАЧЕ (ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0))
	|				- (ЕСТЬNULL(АмортизацияОС.АмортизацияРегл, 0) + ЕСТЬNULL(АмортизацияОС.АмортизацияЦФ, 0))
	|				- (ТаблицаОС.СуммаСписанияБУ 
	|					- (ВЫРАЗИТЬ((ЕСТЬNULL(АмортизацияОС.АмортизацияРегл, 0) + ЕСТЬNULL(АмортизацияОС.АмортизацияЦФ, 0)) 
	|						* ТаблицаОС.СуммаСписанияБУ 
	|						/ (ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0)) КАК ЧИСЛО(31,2))))
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизации,
	|
	// СтоимостьДляВычисленияАмортизацииЦФ
	|	ВЫБОР 
	|		КОГДА ПараметрыАмортизацииОСБУ.СтоимостьДляВычисленияАмортизацииЦФ = 0
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0) = 0 
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0)
	|				- ЕСТЬNULL(АмортизацияОС.АмортизацияЦФ, 0)
	|				- (ТаблицаОС.СуммаСписанияБУ 
	|					- (ВЫРАЗИТЬ(ЕСТЬNULL(АмортизацияОС.АмортизацияЦФ, 0) 
	|						* ТаблицаОС.СуммаСписанияБУ 
	|						/ (ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) + ЕСТЬNULL(СтоимостьОС.СтоимостьЦФ, 0)) КАК ЧИСЛО(31,2))))
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизацииЦФ,
	|
	// ПРДляВычисленияАмортизации
	|	ВЫБОР
	|		КОГДА ТаблицаОС.СуммаСписанияПР <> 0 И (ЕСТЬNULL(СтоимостьОС.СтоимостьПР, 0) + ЕСТЬNULL(СтоимостьОС.СтоимостьПРЦФ, 0)) <> 0
	|			ТОГДА ПараметрыАмортизацииОСБУ.ПРДляВычисленияАмортизации
	|					- ПараметрыАмортизацииОСБУ.ПРДляВычисленияАмортизации
	|						* ТаблицаОС.СуммаСписанияПР / (ЕСТЬNULL(СтоимостьОС.СтоимостьПР, 0) + ЕСТЬNULL(СтоимостьОС.СтоимостьПРЦФ, 0))
	|		ИНАЧЕ ПараметрыАмортизацииОСБУ.ПРДляВычисленияАмортизации
	|	КОНЕЦ КАК ПРДляВычисленияАмортизации,
	|
	|	ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияБУ         КАК СрокПолезногоИспользованияБУ,
	|	ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияНУ         КАК СрокПолезногоИспользованияНУ,
	|	ПараметрыАмортизацииОСБУ.КоэффициентАмортизацииБУ             КАК КоэффициентАмортизацииБУ,
	|	ПараметрыАмортизацииОСБУ.КоэффициентУскорения                 КАК КоэффициентУскорения,
	|	ПараметрыАмортизацииОСБУ.ГрафикАмортизации                    КАК ГрафикАмортизации,
	|	ПараметрыАмортизацииОСБУ.СпециальныйКоэффициент               КАК СпециальныйКоэффициент,
	|	ТаблицаОС.ЛиквидационнаяСтоимостьРегл                         КАК ЛиквидационнаяСтоимость,
	|
	// ОбъемПродукцииРаботДляВычисленияАмортизации
	|	ПараметрыАмортизацииОСБУ.ОбъемПродукцииРаботДляВычисленияАмортизации
	|		- ЕСТЬNULL(НаработкиОбъектовЭксплуатации.Значение, 0) КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|
	// СрокИспользованияДляВычисленияАмортизации
	|	ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизации
	|		- РАЗНОСТЬДАТ(ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ДатаПоследнегоИзменения, &Период), &Период, МЕСЯЦ) КАК СрокИспользованияДляВычисленияАмортизации
	|ИЗ
	|	Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьОС
	|		ПО СтоимостьОС.Ссылка = ТаблицаОС.Ссылка
	|			И СтоимостьОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияВНА КАК АмортизацияОС
	|		ПО АмортизацияОС.Ссылка = ТаблицаОС.Ссылка
	|			И АмортизацияОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ
	|		ПО (ПараметрыАмортизацииОСБУ.Организация = &Организация)
	|			И (ПараметрыАмортизацииОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтНаработкиОбъектовЭксплуатации КАК НаработкиОбъектовЭксплуатации
	|		ПО ТаблицаОС.ОсновноеСредство = НаработкиОбъектовЭксплуатации.ОбъектЭксплуатации
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииОСУУ(ТекстыЗапроса)

	ИмяРегистра = "ПараметрыАмортизацииОСУУ";
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, ПолноеИмяОбъекта());
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтНаработкиОбъектовЭксплуатации(ТекстыЗапроса, ПолноеИмяОбъекта());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                      КАК Регистратор,
	|	&Период                      КАК Период,
	|	&Организация                 КАК Организация,
	|	&Период                      КАК ДатаПоследнегоИзменения,
	|	ТаблицаОС.ОсновноеСредство   КАК ОсновноеСредство,
	|
	|	ПараметрыАмортизацииОСУУ.СрокИспользования           КАК СрокИспользования,
	|	ПараметрыАмортизацииОСУУ.КоэффициентУскорения        КАК КоэффициентУскорения,
	|	ПараметрыАмортизацииОСУУ.МетодНачисленияАмортизации  КАК МетодНачисленияАмортизации,
	|	ТаблицаОС.ЛиквидационнаяСтоимость                    КАК ЛиквидационнаяСтоимость,
	|	ТаблицаОС.ЛиквидационнаяСтоимостьРегл                КАК ЛиквидационнаяСтоимостьРегл,
	|
	|	ПараметрыАмортизацииОСУУ.ОбъемПродукцииРаботДляВычисленияАмортизации
	|		- ЕСТЬNULL(НаработкиОбъектовЭксплуатации.Значение, 0) КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|
	|	ПараметрыАмортизацииОСУУ.СрокИспользованияДляВычисленияАмортизации
	|		- РАЗНОСТЬДАТ(ЕСТЬNULL(ПараметрыАмортизацииОСУУ.ДатаПоследнегоИзменения, &Период), &Период, МЕСЯЦ) КАК СрокИспользованияДляВычисленияАмортизации,
	|
	// СтоимостьДляВычисленияАмортизации
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СтоимостьОС.Стоимость, 0) = 0 
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОС.Стоимость, 0)
	|				- ЕСТЬNULL(АмортизацияОС.Амортизация, 0)
	|				- (ТаблицаОС.СуммаСписанияУУ 
	|					- (ВЫРАЗИТЬ(ЕСТЬNULL(АмортизацияОС.Амортизация, 0) 
	|						* ТаблицаОС.СуммаСписанияУУ 
	|						/ ЕСТЬNULL(СтоимостьОС.Стоимость, 0) КАК ЧИСЛО(31,2))))
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизации,
	|
	// СтоимостьДляВычисленияАмортизацииРегл
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) = 0
	|				ИЛИ &ВедетсяРегламентированныйУчетВНА
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0)
	|				- ЕСТЬNULL(АмортизацияОС.АмортизацияРегл, 0)
	|				- (ТаблицаОС.СуммаСписанияБУ 
	|					- (ВЫРАЗИТЬ(ЕСТЬNULL(АмортизацияОС.АмортизацияРегл, 0) 
	|						* ТаблицаОС.СуммаСписанияБУ 
	|						/ ЕСТЬNULL(СтоимостьОС.СтоимостьРегл, 0) КАК ЧИСЛО(31,2))))
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизацииРегл
	|ИЗ
	|	Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьОС
	|		ПО СтоимостьОС.Ссылка = ТаблицаОС.Ссылка
	|			И СтоимостьОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияВНА КАК АмортизацияОС
	|		ПО АмортизацияОС.Ссылка = ТаблицаОС.Ссылка
	|			И АмортизацияОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСУУ.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И &Организация = Организация
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ СписокОС.ОсновноеСредство ИЗ втСписокОС КАК СписокОС)) КАК ПараметрыАмортизацииОСУУ
	|		ПО (ПараметрыАмортизацииОСУУ.Организация = &Организация)
	|			И (ПараметрыАмортизацииОСУУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтНаработкиОбъектовЭксплуатации КАК НаработкиОбъектовЭксплуатации
	|		ПО ТаблицаОС.ОсновноеСредство = НаработкиОбъектовЭксплуатации.ОбъектЭксплуатации
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета.СрезПоследних(&Период) КАК УчетнаяПолитикаФинансовогоУчета
	|		ПО (УчетнаяПолитикаФинансовогоУчета.Организация = &ГоловнаяОрганизация)
	|
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВУпрУчете
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаАмортизацияОС(ТекстыЗапроса)

	ИмяРегистра = "АмортизацияОС";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса);

	ТекстЗапроса = ВнеоборотныеАктивыСлужебный.ТекстЗапросаСписанияАмортизацииОС(ТекстыЗапроса);
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаОбесценениеВНА(ТекстыЗапроса)

	ИмяРегистра = "ОбесценениеВНА";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса);

	ТекстЗапроса = ВнеоборотныеАктивыСлужебный.ТекстЗапросаСписанияОбесцененияОС(ТекстыЗапроса);
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСтоимостьОС(ТекстыЗапроса)

	ИмяРегистра = "СтоимостьОС";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса);
	
	ТекстЗапроса = ВнеоборотныеАктивыСлужебный.ТекстЗапросаСписанияСтоимостиОС(ТекстыЗапроса);
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат "";
	КонецЕсли;
	
	СписокЗапросовОбъединение = Новый Массив;
	СписокЗапросовОбъединение.Добавить(РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы());

	ТекстЗапроса = ВнеоборотныеАктивыСлужебный.ТекстЗапросаВыбытияОСВтИсходныеПрочиеРасходы(ТекстыЗапроса);
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(ТекстыЗапроса, Регистры = Неопределено)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаПрочиеАктивыПассивы(ТекстыЗапроса)

	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписаниеАмортизацииОС(ТекстыЗапроса);
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписаниеСтоимостиОС(ТекстыЗапроса);
	
	ТекстЗапроса =
	"// Резерв переоценки амортизации
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Период                                     КАК Период,
	|	&ХО_СписаниеРезерваПереоценкиАмортизацииОС  КАК ХозяйственнаяОперация,
	|	&Организация                                КАК Организация,
	|	&Подразделение                              КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности           КАК НаправлениеДеятельности,
	|
	|	&СтатьяАП_ОС                                КАК Статья,
	|	ТаблицаОС.ОсновноеСредство                  КАК Аналитика,
	|
	|	ТаблицаОС.РезервПереоценкиАмортизации       КАК Сумма
	|ИЗ
	|	втСписаниеАмортизацииОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.РезервПереоценкиАмортизации <> 0
	|	И &ОтражатьВУпрУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Резерв переоценки стоимости
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)      КАК ВидДвижения,
	|	&Период                                     КАК Период,
	|	&ХО_СписаниеРезерваПереоценкиСтоимостиОС    КАК ХозяйственнаяОперация,
	|	&Организация                                КАК Организация,
	|	&Подразделение                              КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности           КАК НаправлениеДеятельности,
	|
	|	&СтатьяАП_ОС                                КАК Статья,
	|	ТаблицаОС.ОсновноеСредство                  КАК Аналитика,
	|
	|	ТаблицаОС.РезервПереоценкиСтоимости         КАК Сумма
	|ИЗ
	|	втСписаниеСтоимостиОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.РезервПереоценкиСтоимости <> 0
	|	И &ОтражатьВУпрУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаДвиженияПоПрочимАктивамПассивам(ТекстыЗапроса)

	ИмяРегистра = "ДвиженияПоПрочимАктивамПассивам";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса);
	
	ТекстЗапроса = ВнеоборотныеАктивыСлужебный.ТекстЗапросаВыбытияОСДвиженияПоПрочимАктивамПассивам(ТекстыЗапроса);
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса)
	
	ИмяРегистра = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";

	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса);

	ТекстЗапроса = ВнеоборотныеАктивыСлужебный.ТекстЗапросаВыбытияОСДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса);
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);	
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса)
	
	ИмяТаблицы = "втТаблицаОС";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = СписаниеОСЛокализация.ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса);
	
	Если ТекстЗапроса = Неопределено Тогда
		
		ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПервоначальныеСведенияОС(ТекстыЗапроса, ПолноеИмяОбъекта());
		ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПорядокУчетаОС(ТекстыЗапроса, ПолноеИмяОбъекта());
		ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтМестонахождениеОС(ТекстыЗапроса, ПолноеИмяОбъекта());
		ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтУзлыОсновныхСредств(ТекстыЗапроса, "Документ.СписаниеОС2_4.ОС");
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаОС.НомерСтроки                  КАК НомерСтроки,
		|	ТаблицаОС.ОсновноеСредство             КАК ОсновноеСредство,
		|	ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК ОСВладелец,
		|
		|	ПорядокУчета.ГруппаФинансовогоУчета    КАК ГруппаФинансовогоУчета,
		|	ПорядокУчета.НаправлениеДеятельности   КАК НаправлениеДеятельности,
		|	ПорядокУчета.ПоказательНаработки       КАК ПоказательНаработки,
		|	ПорядокУчета.ОбъемНаработки            КАК ОбъемНаработки,
		|
		|	МестонахождениеОС.Организация          КАК Организация,
		|	МестонахождениеОС.МОЛ                  КАК МОЛ,
		|	МестонахождениеОС.Местонахождение      КАК Местонахождение,
		|	МестонахождениеОС.АдресМестонахождения КАК АдресМестонахождения,
		|	МестонахождениеОС.Арендатор            КАК Арендатор,
		|
		|	ЛОЖЬ                                   КАК НачислятьИзнос,
		|
		|	НЕОПРЕДЕЛЕНО                           КАК СтатьяДоходов,
		|	НЕОПРЕДЕЛЕНО                           КАК АналитикаДоходов,
		|
		|	ТаблицаОС.СуммаСписанияУУ              КАК СуммаСписанияУУ,
		|	ТаблицаОС.СуммаСписанияБУ              КАК СуммаСписанияБУ,
		|	ТаблицаОС.СуммаСписанияНУ              КАК СуммаСписанияНУ,
		|	ТаблицаОС.СуммаСписанияПР              КАК СуммаСписанияПР,
		|	ТаблицаОС.СуммаСписанияВР              КАК СуммаСписанияВР,
		|	
		|	ТаблицаОС.ИдентификаторСтроки 		   КАК ИдентификаторСтроки
		|	
		|ПОМЕСТИТЬ втТаблицаОС
		|ИЗ
		|	Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК ПорядокУчета
		|		ПО ТаблицаОС.ОсновноеСредство = ПорядокУчета.ОсновноеСредство
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождениеОС КАК МестонахождениеОС
		|		ПО ТаблицаОС.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
		|
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаОС.НомерСтроки                  КАК НомерСтроки,
		|	УзлыКомпоненты.УзелКомпонент           КАК ОсновноеСредство,
		|	ТаблицаОС.ОсновноеСредство             КАК ОСВладелец,
		|
		|	ПорядокУчета.ГруппаФинансовогоУчета    КАК ГруппаФинансовогоУчета,
		|	ПорядокУчета.НаправлениеДеятельности   КАК НаправлениеДеятельности,
		|	ПорядокУчета.ПоказательНаработки       КАК ПоказательНаработки,
		|	ПорядокУчета.ОбъемНаработки            КАК ОбъемНаработки,
		|
		|	МестонахождениеОС.Организация          КАК Организация,
		|	МестонахождениеОС.МОЛ                  КАК МОЛ,
		|	МестонахождениеОС.Местонахождение      КАК Местонахождение,
		|	МестонахождениеОС.АдресМестонахождения КАК АдресМестонахождения,
		|	МестонахождениеОС.Арендатор            КАК Арендатор,
		|
		|	ЛОЖЬ                                   КАК НачислятьИзнос,
		|
		|	НЕОПРЕДЕЛЕНО                           КАК СтатьяДоходов,
		|	НЕОПРЕДЕЛЕНО                           КАК АналитикаДоходов,
		|
		|	0                                      КАК СуммаСписанияУУ,
		|	0                                      КАК СуммаСписанияБУ,
		|	0                                      КАК СуммаСписанияНУ,
		|	0                                      КАК СуммаСписанияПР,
		|	0                                      КАК СуммаСписанияВР,
		|	
		|	УзлыКомпоненты.ИдентификаторСтроки     КАК ИдентификаторСтроки
		|ИЗ
		|	Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УзлыКомпонентыАмортизации.СрезПоследних(&Период, УзелКомпонент В
		|			(ВЫБРАТЬ
		|				ТаблицаУзлов.УзелКомпонент КАК УзелКомпонент
		|			ИЗ
		|				ВтУзлыОсновныхСредств КАК ТаблицаУзлов)) КАК УзлыКомпоненты
		|		ПО ТаблицаОС.ОсновноеСредство = УзлыКомпоненты.ОсновноеСредство
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК ПорядокУчета
		|		ПО УзлыКомпоненты.УзелКомпонент = ПорядокУчета.ОсновноеСредство
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождениеОС КАК МестонахождениеОС
		|		ПО УзлыКомпоненты.УзелКомпонент = МестонахождениеОС.ОсновноеСредство
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
		|		ПО УзлыКомпоненты.УзелКомпонент = ПервоначальныеСведенияОС.ОсновноеСредство
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОС)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство";
	
	КонецЕсли; 
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтРасширеннаяТаблицаОС(ТекстыЗапроса)
	
	ИмяРегистра = "ВтРасширеннаяТаблицаОС";
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтУзлыОсновныхСредств(ТекстыЗапроса, "Документ.СписаниеОС2_4.ОС");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство    КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК ОСВладелец,
	|	ТаблицаОС.Ссылка              КАК Ссылка,
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ВтРасширеннаяТаблицаОС
	|ИЗ
	|	Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УзлыКомпоненты.УзелКомпонент       КАК ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство         КАК ОСВладелец,
	|	ТаблицаОС.Ссылка                   КАК Ссылка,
	|	УзлыКомпоненты.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УзлыКомпонентыАмортизации.СрезПоследних(&Период, УзелКомпонент В
	|			(ВЫБРАТЬ
	|				ТаблицаУзлов.УзелКомпонент КАК УзелКомпонент
	|			ИЗ
	|				ВтУзлыОсновныхСредств КАК ТаблицаУзлов)) КАК УзлыКомпоненты
	|		ПО ТаблицаОС.ОсновноеСредство = УзлыКомпоненты.ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";	
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры


Функция ПолноеИмяОбъекта()

	Возврат "Документ.СписаниеОС2_4";

КонецФункции

#КонецОбласти

#Область ПроведениеПоРеглУчету

Функция ТекстОтраженияВРеглУчете() Экспорт

	Возврат СписаниеОСЛокализация.ТекстОтраженияВРеглУчете();

КонецФункции

Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт

	Возврат "";

КонецФункции

#КонецОбласти

#Область Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	СписаниеОСЛокализация.Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);

КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыОС4(МассивОбъектов) Экспорт
	
	Возврат СписаниеОСЛокализация.ПолучитьДанныеДляПечатнойФормыОС4(МассивОбъектов);
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция ПараметрыВыбораСтатейИАналитик() Экспорт
	
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "Объект";
	ПараметрыВыбора.Статья = "СтатьяРасходов";
	ПараметрыВыбора.ТипСтатьи = "ТипСтатьи";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходов";
	
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("АналитикаАктивовПассивов");
	
	Возврат ПараметрыВыбора;
	
КонецФункции

Функция ПараметрыНастройкиСчетовУчета() Экспорт
	
	ПараметрыНастройки = НастройкаСчетовУчетаСервер.ПараметрыНастройки();
	ПараметрыНастройки.ПутьКДанным = "Объект";
	ПараметрыНастройки.Представление = "ПредставлениеОтраженияВРеглУчете";
	ПараметрыНастройки.ТипСтатьи     = "ТипСтатьи";
	
	ПараметрыНастройки.Организация = "Объект.Организация";

	ПараметрыНастройки.ЭлементыФормы.Добавить("ПредставлениеОтраженияВРеглУчете");
	
	Возврат ПараметрыНастройки;
	
КонецФункции

// Заполняет сумму списания на основании выбытия ТМЦ.
// 
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - Документ
Процедура ЗаполнитьСуммуСписанияНаОснованииВыбытияТМЦ(Объект) Экспорт

	Если Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.СписаниеОСЧастичное Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ДанныеСтроки Из Объект.ОС Цикл
		
		ДанныеСтроки.СуммаСписанияУУ = 0;
		ДанныеСтроки.СуммаСписанияБУ = 0;
		ДанныеСтроки.СуммаСписанияНУ = 0;
		ДанныеСтроки.СуммаСписанияПР = 0;
		ДанныеСтроки.СуммаСписанияВР = 0;
		ДанныеСтроки.ЛиквидационнаяСтоимость = 0;
		ДанныеСтроки.ЛиквидационнаяСтоимостьРегл = 0;
				
	КонецЦикла;
	
	СписокОС = Новый Массив;
	Для Каждого ДанныеСтроки Из Объект.ОС Цикл
		Если ЗначениеЗаполнено(ДанныеСтроки.ОсновноеСредство) Тогда
			СписокОС.Добавить(ДанныеСтроки.ОсновноеСредство);
		КонецЕсли;
	КонецЦикла;
	
	Если СписокОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ВыбытияТМЦ = ВыбытияТМЦ(Объект);
	
	Если ВыбытияТМЦ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюНУ КАК ДатаВводаВЭксплуатациюНУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ
	|
	|ПОМЕСТИТЬ ПервоначальныеСведенияОС
	|
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|		&Дата,
	|		Организация = &Организация
	|			И ОсновноеСредство В(&СписокОС)) КАК ПервоначальныеСведенияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтоимостьОСОстатки.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	СтоимостьОСОстатки.СтоимостьРеглОстаток + СтоимостьОСОстатки.СтоимостьЦФОстаток КАК СтоимостьРегл,
	|	СтоимостьОСОстатки.СтоимостьНУОстаток + СтоимостьОСОстатки.СтоимостьНУЦФОстаток КАК СтоимостьНУ,
	|	СтоимостьОСОстатки.СтоимостьПРОстаток + СтоимостьОСОстатки.СтоимостьПРЦФОстаток КАК СтоимостьПР,
	|
	|	СтоимостьОСОстатки.СтоимостьОстаток КАК Стоимость
	|
	|ПОМЕСТИТЬ СтоимостьНаНачалоМесяца
	|
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.Остатки(
	|		&НачалоМесяца, 
	|		Организация = &Организация
	|			И ОсновноеСредство В(&СписокОС)) КАК СтоимостьОСОстатки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО ПервоначальныеСведенияОС.ОсновноеСредство = СтоимостьОСОстатки.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтоимостьОСОстатки.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	СтоимостьОСОстатки.ПредварительнаяСтоимостьРеглОстаток КАК СтоимостьРегл,
	|	СтоимостьОСОстатки.ПредварительнаяСтоимостьОстаток КАК Стоимость
	|
	|ПОМЕСТИТЬ ПредварительнаяСтоимость
	|
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.Остатки(
	|		&Дата, 
	|		Организация = &Организация
	|			И ОсновноеСредство В(&СписокОС)) КАК СтоимостьОСОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОСБУ.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСБУ
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБУ.СрезПоследних(
	|			&ДатаПервогоВыбытия,
	|			Регистратор <> &Ссылка
	|				И Организация = &Организация 
	|				И ОсновноеСредство В (&СписокОС)) КАК ПараметрыАмортизацииОСБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииОСУУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОСУУ.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСУУ
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСУУ.СрезПоследних(
	|			&ДатаПервогоВыбытия, 
	|			Регистратор <> &Ссылка
	|				И Организация = &Организация 
	|				И ОсновноеСредство В (&СписокОС)) КАК ПараметрыАмортизацииОСУУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ЛиквидационнаяСтоимость, 0) КАК ЛиквидационнаяСтоимостьРегл,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСУУ.ЛиквидационнаяСтоимость, 0) КАК ЛиквидационнаяСтоимость,
	|
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ, МЕСЯЦ) = &НачалоМесяца
	|			ТОГДА ЕСТЬNULL(ПредварительнаяСтоимость.СтоимостьРегл, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНаНачалоМесяца.СтоимостьРегл, 0)
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюНУ, МЕСЯЦ) = &НачалоМесяца
	|			ТОГДА ЕСТЬNULL(ПредварительнаяСтоимость.СтоимостьРегл, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНаНачалоМесяца.СтоимостьНУ, 0)
	|	КОНЕЦ КАК СтоимостьНУ,
	|
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюНУ, МЕСЯЦ) = &НачалоМесяца
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНаНачалоМесяца.СтоимостьПР, 0)
	|	КОНЕЦ КАК СтоимостьПР,
	|
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ, МЕСЯЦ) = &НачалоМесяца
	|			ТОГДА ЕСТЬNULL(ПредварительнаяСтоимость.Стоимость, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНаНачалоМесяца.Стоимость, 0)
	|	КОНЕЦ КАК Стоимость
	|
	|ИЗ
	|	ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьНаНачалоМесяца КАК СтоимостьНаНачалоМесяца
	|		ПО СтоимостьНаНачалоМесяца.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПредварительнаяСтоимость КАК ПредварительнаяСтоимость
	|		ПО ПредварительнаяСтоимость.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ
	|		ПО ПараметрыАмортизацииОСБУ.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСУУ КАК ПараметрыАмортизацииОСУУ
	|		ПО ПараметрыАмортизацииОСУУ.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаПервогоВыбытия", ВыбытияТМЦ[0].Период);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	
	ТаблицаСтоимости = Запрос.Выполнить().Выгрузить();
	ТаблицаСтоимости.Индексы.Добавить("ОсновноеСредство");
	
	Для Каждого ДанныеСтроки Из Объект.ОС Цикл
		
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.ОсновноеСредство) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаСтоимость = ТаблицаСтоимости.Найти(ДанныеСтроки.ОсновноеСредство, "ОсновноеСредство");
		
		Если СтрокаСтоимость = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаВыбытие Из ВыбытияТМЦ Цикл
			
			Если СтрокаВыбытие.ОсновноеСредство <> ДанныеСтроки.ОсновноеСредство Тогда
				Продолжить;
			КонецЕсли;

			Если СтрокаВыбытие.База <> СтрокаВыбытие.БазаДоВыбытия Тогда
				Коэффициент = ?(СтрокаВыбытие.БазаДоВыбытия <> 0, СтрокаВыбытие.База / СтрокаВыбытие.БазаДоВыбытия, 0);
			Иначе
				Коэффициент = 1;
			КонецЕсли;
				
			СуммаСписанияУУ = Окр(СтрокаСтоимость.Стоимость * Коэффициент, 2);
			СуммаСписанияБУ = Окр(СтрокаСтоимость.СтоимостьРегл * Коэффициент, 2);
			СуммаСписанияНУ = Окр(СтрокаСтоимость.СтоимостьНУ * Коэффициент, 2);
			СуммаСписанияПР = Окр(СтрокаСтоимость.СтоимостьПР * Коэффициент, 2);
			СуммаСписанияЛСБУ = Окр(СтрокаСтоимость.ЛиквидационнаяСтоимостьРегл * Коэффициент, 2);
			СуммаСписанияЛСУУ = Окр(СтрокаСтоимость.ЛиквидационнаяСтоимость * Коэффициент, 2);
			
			СтрокаСтоимость.Стоимость = СтрокаСтоимость.Стоимость - СуммаСписанияУУ;
			СтрокаСтоимость.СтоимостьРегл = СтрокаСтоимость.СтоимостьРегл - СуммаСписанияБУ;
			СтрокаСтоимость.СтоимостьНУ = СтрокаСтоимость.СтоимостьНУ - СуммаСписанияНУ;
			СтрокаСтоимость.СтоимостьПР = СтрокаСтоимость.СтоимостьПР - СуммаСписанияПР;
			
			СтрокаСтоимость.ЛиквидационнаяСтоимость = СтрокаСтоимость.ЛиквидационнаяСтоимость - СуммаСписанияЛСУУ;
			СтрокаСтоимость.ЛиквидационнаяСтоимостьРегл = СтрокаСтоимость.ЛиквидационнаяСтоимостьРегл - СуммаСписанияЛСБУ;
			
			Если СтрокаВыбытие.Учесть Тогда
			
				Если Объект.ОтражатьВУпрУчете Тогда
					ДанныеСтроки.СуммаСписанияУУ = ДанныеСтроки.СуммаСписанияУУ + СуммаСписанияУУ;
					ДанныеСтроки.ЛиквидационнаяСтоимость = СтрокаСтоимость.ЛиквидационнаяСтоимость;
				КонецЕсли;
				
				Если Объект.ОтражатьВРеглУчете Тогда
					
					ДанныеСтроки.СуммаСписанияБУ = ДанныеСтроки.СуммаСписанияБУ + СуммаСписанияБУ;
					ДанныеСтроки.СуммаСписанияНУ = ДанныеСтроки.СуммаСписанияНУ + СуммаСписанияНУ;
					ДанныеСтроки.СуммаСписанияПР = ДанныеСтроки.СуммаСписанияПР + СуммаСписанияПР;
					
					ДанныеСтроки.СуммаСписанияВР = 
						ДанныеСтроки.СуммаСписанияБУ
						- ДанныеСтроки.СуммаСписанияНУ
						- ДанныеСтроки.СуммаСписанияПР;
						
					ДанныеСтроки.ЛиквидационнаяСтоимостьРегл = СтрокаСтоимость.ЛиквидационнаяСтоимостьРегл;
					
				КонецЕсли;
		
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ВыбытияТМЦ(Объект)

	СписокОС = Новый Массив;
	Для Каждого ДанныеСтроки Из Объект.ОС Цикл
		Если ЗначениеЗаполнено(ДанныеСтроки.ОсновноеСредство) Тогда
			СписокОС.Добавить(ДанныеСтроки.ОсновноеСредство);
		КонецЕсли;
	КонецЦикла;
	
	СписокОснований = Новый Массив;
	Если ЗначениеЗаполнено(Объект.ДокументОснование)
		И (ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ПрочееОприходованиеТоваров")
			ИЛИ ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.СписаниеИзЭксплуатации")) Тогда
				
		СписокОснований.Добавить(Объект.ДокументОснование);
	КонецЕсли;
	Для Каждого ДанныеСтроки Из Объект.Основания Цикл
		Если ЗначениеЗаполнено(ДанныеСтроки.ДокументОснование)
			И (ТипЗнч(ДанныеСтроки.ДокументОснование) = Тип("ДокументСсылка.ПрочееОприходованиеТоваров")
				ИЛИ ТипЗнч(ДанныеСтроки.ДокументОснование) = Тип("ДокументСсылка.СписаниеИзЭксплуатации")) Тогда
					
			СписокОснований.Добавить(ДанныеСтроки.ДокументОснование);
		КонецЕсли;
	КонецЦикла;
	
	НачалоПериода = НачалоМесяца(Объект.Дата);
	КонецПериода = КонецДня(Объект.Дата);
		
	Если СписокОснований.Количество() <> 0 Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(МИНИМУМ(ДанныеДокумента.НачалоПериода), &НачалоПериода) КАК НачалоПериода,
		|	ЕСТЬNULL(МАКСИМУМ(ДанныеДокумента.КонецПериода), &КонецПериода) КАК КонецПериода
		|ИЗ
		|	(ВЫБРАТЬ
		|		МИНИМУМ(ДанныеДокумента.Дата) КАК НачалоПериода,
		|		МАКСИМУМ(ДанныеДокумента.Дата) КАК КонецПериода
		|	ИЗ
		|		Документ.ПрочееОприходованиеТоваров КАК ДанныеДокумента
		|	ГДЕ
		|		ДанныеДокумента.Ссылка В (&СписокОснований)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		МИНИМУМ(ДанныеДокумента.Дата) КАК НачалоПериода,
		|		МАКСИМУМ(ДанныеДокумента.Дата) КАК КонецПериода
		|	ИЗ
		|		Документ.СписаниеИзЭксплуатации КАК ДанныеДокумента
		|	ГДЕ
		|		ДанныеДокумента.Ссылка В (&СписокОснований)
		|
		|	) КАК ДанныеДокумента";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("СписокОснований", СписокОснований);
		Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
		Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			НачалоПериода = НачалоМесяца(Выборка.НачалоПериода);
			
			Если НачалоПериода > КонецПериода Тогда
				КонецПериода = Выборка.КонецПериода;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	СписокЗапросов = Новый Массив;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПартииТМЦ.Ссылка КАК Ссылка
	|
	|ПОМЕСТИТЬ ПартииТМЦ
	|
	|ИЗ
	|	Справочник.ПартииТМЦВЭксплуатации КАК ПартииТМЦ
	|ГДЕ
	|	ПартииТМЦ.ОсновноеСредство В (&СписокОС)
	|	И ПартииТМЦ.КатегорияЭксплуатации.УчитыватьВВидеГрупповогоОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТМЦВЭксплуатации.Период КАК Период,
	|	ТМЦВЭксплуатации.Регистратор КАК Регистратор,
	|	ТМЦВЭксплуатации.Организация КАК Организация,
	|	ТМЦВЭксплуатации.Партия.ОсновноеСредство КАК ОсновноеСредство,
	|	ТМЦВЭксплуатации.Номенклатура КАК Номенклатура,
	|	ТМЦВЭксплуатации.Характеристика КАК Характеристика,
	|	ТМЦВЭксплуатации.Серия КАК Серия,
	|	ТМЦВЭксплуатации.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ТМЦВЭксплуатации.Партия КАК Партия,
	|
	|	СУММА(ТМЦВЭксплуатации.Количество) КАК Количество
	|
	|ПОМЕСТИТЬ ВыбытиеТМЦ
	|
	|ИЗ
	|	РегистрНакопления.ТМЦВЭксплуатации КАК ТМЦВЭксплуатации
	|ГДЕ
	|	ТМЦВЭксплуатации.Активность
	|	И ТМЦВЭксплуатации.Организация = &Организация
	|	И ТМЦВЭксплуатации.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|	И ТМЦВЭксплуатации.Партия В
	|			(ВЫБРАТЬ
	|				ПартииТМЦ.Ссылка
	|			ИЗ
	|				ПартииТМЦ КАК ПартииТМЦ)
	|
	|	И ТМЦВЭксплуатации.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеИзЭксплуатации),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзЭксплуатации))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТМЦВЭксплуатации.Период,
	|	ТМЦВЭксплуатации.Регистратор,
	|	ТМЦВЭксплуатации.Организация,
	|	ТМЦВЭксплуатации.Партия.ОсновноеСредство,
	|	ТМЦВЭксплуатации.Номенклатура,
	|	ТМЦВЭксплуатации.Характеристика,
	|	ТМЦВЭксплуатации.Серия,
	|	ТМЦВЭксплуатации.ИнвентарныйНомер,
	|	ТМЦВЭксплуатации.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТМЦВЭксплуатации.Организация КАК Организация,
	|	ТМЦВЭксплуатации.Партия.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	ТМЦВЭксплуатации.Номенклатура КАК Номенклатура,
	|	ТМЦВЭксплуатации.Характеристика КАК Характеристика,
	|	ТМЦВЭксплуатации.Серия КАК Серия,
	|	ТМЦВЭксплуатации.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ТМЦВЭксплуатации.Партия КАК Партия,
	|
	|	ТМЦВЭксплуатации.КоличествоОстаток КАК Количество
	|
	|ПОМЕСТИТЬ ОстаткиТМЦ
	|
	|ИЗ
	|	РегистрНакопления.ТМЦВЭксплуатации.Остатки(
	|		&НачалоПериода,
	|		Организация = &Организация
	|			И Партия В
	|			(ВЫБРАТЬ
	|				ПартииТМЦ.Ссылка
	|			ИЗ
	|				ПартииТМЦ КАК ПартииТМЦ)) КАК ТМЦВЭксплуатации
	|
	|ГДЕ
	|	ТМЦВЭксплуатации.КоличествоОстаток > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(СписаниеОС.Дата) КАК Период
	|
	|ПОМЕСТИТЬ ПредыдущиеСписания
	|
	|ИЗ
	|	Документ.СписаниеОС2_4 КАК СписаниеОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС2_4.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = СписаниеОС.Ссылка
	|
	|ГДЕ
	|	СписаниеОС.Дата >= &НачалоПериода
	|	И СписаниеОС.Дата < &КонецПериода
	|	И ТаблицаОС.ОсновноеСредство В (
	|			ВЫБРАТЬ
	|				ВыбытиеТМЦ.ОсновноеСредство
	|			ИЗ 
	|				ВыбытиеТМЦ КАК ВыбытиеТМЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОС.ОсновноеСредство
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТМЦВЭксплуатации.ОсновноеСредство КАК ОсновноеСредство,
	|	ТМЦВЭксплуатации.Организация КАК Организация,
	|	ТМЦВЭксплуатации.Номенклатура КАК Номенклатура,
	|	ТМЦВЭксплуатации.Характеристика КАК Характеристика,
	|	ТМЦВЭксплуатации.Серия КАК Серия,
	|	ТМЦВЭксплуатации.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ТМЦВЭксплуатации.Партия КАК Партия
	|
	|ПОМЕСТИТЬ ТМЦВЭксплуатации_Все
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыбытиеТМЦ.Организация КАК Организация,
	|		ВыбытиеТМЦ.ОсновноеСредство КАК ОсновноеСредство,
	|		ВыбытиеТМЦ.Номенклатура КАК Номенклатура,
	|		ВыбытиеТМЦ.Характеристика КАК Характеристика,
	|		ВыбытиеТМЦ.Серия КАК Серия,
	|		ВыбытиеТМЦ.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|		ВыбытиеТМЦ.Партия КАК Партия
	|	ИЗ
	|		ВыбытиеТМЦ КАК ВыбытиеТМЦ
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ОстаткиТМЦ.Организация КАК Организация,
	|		ОстаткиТМЦ.ОсновноеСредство КАК ОсновноеСредство,
	|		ОстаткиТМЦ.Номенклатура КАК Номенклатура,
	|		ОстаткиТМЦ.Характеристика КАК Характеристика,
	|		ОстаткиТМЦ.Серия КАК Серия,
	|		ОстаткиТМЦ.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|		ОстаткиТМЦ.Партия КАК Партия
	|	ИЗ
	|		ОстаткиТМЦ КАК ОстаткиТМЦ
	|
	|	) КАК ТМЦВЭксплуатации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	ИнвентарныйНомер,
	|	Партия
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	ТМЦВЭксплуатации_Все.ОсновноеСредство КАК ОсновноеСредство,
	|	СтоимостьТМЦ.Организация КАК Организация,
	|	СтоимостьТМЦ.Номенклатура КАК Номенклатура,
	|	СтоимостьТМЦ.Характеристика КАК Характеристика,
	|	СтоимостьТМЦ.Серия КАК Серия,
	|	СтоимостьТМЦ.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	СтоимостьТМЦ.Партия КАК Партия,
	|
	|	ВЫБОР
	|		КОГДА СУММА(СтоимостьТМЦ.Количество) <> 0
	|			ТОГДА СУММА(СтоимостьТМЦ.СтоимостьУпр) / СУММА(СтоимостьТМЦ.Количество)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Цена
	|
	|ПОМЕСТИТЬ ТМЦВЭксплуатации_Цена
	|
	|ИЗ
	|	ТМЦВЭксплуатации_Все КАК ТМЦВЭксплуатации_Все
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТМЦВЭксплуатации КАК СтоимостьТМЦ
	|		ПО СтоимостьТМЦ.Организация = ТМЦВЭксплуатации_Все.Организация
	|			И СтоимостьТМЦ.Номенклатура = ТМЦВЭксплуатации_Все.Номенклатура
	|			И СтоимостьТМЦ.Характеристика = ТМЦВЭксплуатации_Все.Характеристика
	|			И СтоимостьТМЦ.Серия = ТМЦВЭксплуатации_Все.Серия
	|			И СтоимостьТМЦ.ИнвентарныйНомер = ТМЦВЭксплуатации_Все.ИнвентарныйНомер
	|			И СтоимостьТМЦ.Партия = ТМЦВЭксплуатации_Все.Партия
	|
	|СГРУППИРОВАТЬ ПО
	|	ТМЦВЭксплуатации_Все.ОсновноеСредство,
	|	СтоимостьТМЦ.Организация,
	|	СтоимостьТМЦ.Номенклатура,
	|	СтоимостьТМЦ.Характеристика,
	|	СтоимостьТМЦ.Серия,
	|	СтоимостьТМЦ.ИнвентарныйНомер,
	|	СтоимостьТМЦ.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыбытиеТМЦ.Период КАК Период,
	|	ВыбытиеТМЦ.Регистратор КАК Регистратор,
	|	ВыбытиеТМЦ.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	СУММА(ВыбытиеТМЦ.Количество) КАК Количество,
	|	СУММА(ВыбытиеТМЦ.Количество * ЕСТЬNULL(ТМЦВЭксплуатации_Цена.Цена, 0)) КАК База
	|
	|ПОМЕСТИТЬ ВыбытиеТМЦ_База
	|
	|ИЗ
	|	ВыбытиеТМЦ КАК ВыбытиеТМЦ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТМЦВЭксплуатации_Цена КАК ТМЦВЭксплуатации_Цена
	|		ПО ТМЦВЭксплуатации_Цена.ОсновноеСредство = ВыбытиеТМЦ.ОсновноеСредство
	|			И ТМЦВЭксплуатации_Цена.Организация = ВыбытиеТМЦ.Организация
	|			И ТМЦВЭксплуатации_Цена.Номенклатура = ВыбытиеТМЦ.Номенклатура
	|			И ТМЦВЭксплуатации_Цена.Характеристика = ВыбытиеТМЦ.Характеристика
	|			И ТМЦВЭксплуатации_Цена.Серия = ВыбытиеТМЦ.Серия
	|			И ТМЦВЭксплуатации_Цена.ИнвентарныйНомер = ВыбытиеТМЦ.ИнвентарныйНомер
	|			И ТМЦВЭксплуатации_Цена.Партия = ВыбытиеТМЦ.Партия
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыбытиеТМЦ.Период,
	|	ВыбытиеТМЦ.Регистратор,
	|	ВыбытиеТМЦ.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиТМЦ.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	СУММА(ОстаткиТМЦ.Количество) КАК Количество,
	|	СУММА(ОстаткиТМЦ.Количество * ЕСТЬNULL(ТМЦВЭксплуатации_Цена.Цена, 0)) КАК База
	|
	|ПОМЕСТИТЬ ОстаткиТМЦ_База
	|
	|ИЗ
	|	ОстаткиТМЦ КАК ОстаткиТМЦ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТМЦВЭксплуатации_Цена КАК ТМЦВЭксплуатации_Цена
	|		ПО ТМЦВЭксплуатации_Цена.ОсновноеСредство = ОстаткиТМЦ.ОсновноеСредство
	|			И ТМЦВЭксплуатации_Цена.Организация = ОстаткиТМЦ.Организация
	|			И ТМЦВЭксплуатации_Цена.Номенклатура = ОстаткиТМЦ.Номенклатура
	|			И ТМЦВЭксплуатации_Цена.Характеристика = ОстаткиТМЦ.Характеристика
	|			И ТМЦВЭксплуатации_Цена.Серия = ОстаткиТМЦ.Серия
	|			И ТМЦВЭксплуатации_Цена.ИнвентарныйНомер = ОстаткиТМЦ.ИнвентарныйНомер
	|			И ТМЦВЭксплуатации_Цена.Партия = ОстаткиТМЦ.Партия
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиТМЦ.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыбытиеТМЦ_База.Регистратор КАК Регистратор,
	|	ВыбытиеТМЦ_База.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	СУММА(ПредыдущееВыбытиеТМЦ_База.Количество) КАК Количество,
	|	СУММА(ПредыдущееВыбытиеТМЦ_База.База) КАК База
	|
	|ПОМЕСТИТЬ ПредыдущееВыбытиеТМЦ_База
	|
	|ИЗ
	|	ВыбытиеТМЦ_База КАК ВыбытиеТМЦ_База
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыбытиеТМЦ_База КАК ПредыдущееВыбытиеТМЦ_База
	|		ПО ПредыдущееВыбытиеТМЦ_База.ОсновноеСредство = ВыбытиеТМЦ_База.ОсновноеСредство
	|			И ПредыдущееВыбытиеТМЦ_База.Регистратор <> ВыбытиеТМЦ_База.Регистратор
	|			И ПредыдущееВыбытиеТМЦ_База.Период < ВыбытиеТМЦ_База.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыбытиеТМЦ_База.Регистратор,
	|	ВыбытиеТМЦ_База.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыбытиеТМЦ_База.Период КАК Период,
	|	ВыбытиеТМЦ_База.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	ВыбытиеТМЦ_База.Количество КАК Количество,
	|	ВыбытиеТМЦ_База.База КАК База,
	|
	|	ЕСТЬNULL(ОстаткиТМЦ_База.Количество, 0) - ЕСТЬNULL(ПредыдущееВыбытиеТМЦ_База.Количество, 0) КАК КоличествоДоВыбытия,
	|	ЕСТЬNULL(ОстаткиТМЦ_База.База, 0) - ЕСТЬNULL(ПредыдущееВыбытиеТМЦ_База.База, 0) КАК БазаДоВыбытия,
	|
	|	ВЫБОР
	|		КОГДА &ИспользоватьСписокОснований
	|			ТОГДА ВыбытиеТМЦ_База.Регистратор В (&СписокОснований)
	|		ИНАЧЕ ВыбытиеТМЦ_База.Период > ЕСТЬNULL(ПредыдущиеСписания.Период, ДАТАВРЕМЯ(1,1,1))
	|	КОНЕЦ КАК Учесть
	|
	|ИЗ
	|	ВыбытиеТМЦ_База КАК ВыбытиеТМЦ_База
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПредыдущиеСписания КАК ПредыдущиеСписания
	|		ПО ПредыдущиеСписания.ОсновноеСредство = ВыбытиеТМЦ_База.ОсновноеСредство
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиТМЦ_База КАК ОстаткиТМЦ_База
	|		ПО ОстаткиТМЦ_База.ОсновноеСредство = ВыбытиеТМЦ_База.ОсновноеСредство
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПредыдущееВыбытиеТМЦ_База КАК ПредыдущееВыбытиеТМЦ_База
	|		ПО ПредыдущееВыбытиеТМЦ_База.ОсновноеСредство = ВыбытиеТМЦ_База.ОсновноеСредство
	|			И ПредыдущееВыбытиеТМЦ_База.Регистратор = ВыбытиеТМЦ_База.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("СписокОснований", СписокОснований);
	Запрос.УстановитьПараметр("ИспользоватьСписокОснований", СписокОснований.Количество() <> 0);
	
	ВыбытияТМЦ = Запрос.Выполнить().Выгрузить();
	
	Возврат ВыбытияТМЦ;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
