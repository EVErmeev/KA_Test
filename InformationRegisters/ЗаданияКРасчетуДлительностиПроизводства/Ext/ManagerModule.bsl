#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Добавляет записи в регистр заданий.
//
// Параметры:
//  ОбъектРасчета	 - СправочникОбъект.ОбъектыРасчетов  - справочник, для которого необходимо добавить задание.
//  ПолныйРасчет	 - Булево							 - признак, необходимо рассчитать нормативную длительность этапов производства.
//  Автозапуск		 - Булево							 - автоматический запуск расчет фоновым заданием.
//
Процедура ДобавитьЗадание(ОбъектРасчета, ПолныйРасчет = Ложь, Автозапуск = Истина) Экспорт
	
	Задание = Новый Структура("ОбъектРасчета, ПолныйРасчет", ОбъектРасчета, ПолныйРасчет);
	
	Идентификаторы = ПроизводствоСервер.ДобавитьЗаданиеВОчередь("ЗаданияКРасчетуДлительностиПроизводства", Задание);
	
	Если Автозапуск Тогда
		
		ПроизводствоСервер.ЗапуститьЗаданиеОбработкиОчереди("ЗаданияКРасчетуДлительностиПроизводства", Задание, Идентификаторы);
		
	КонецЕсли;
	
КонецПроцедуры

// Запускает в фоновом режиме планирование производства
//
Процедура ЗапуститьЗадание() Экспорт
	
	ПроизводствоСервер.ЗапуститьЗаданиеОбработкиОчереди("ЗаданияКРасчетуДлительностиПроизводства");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПараметрыОбработки() Экспорт
	
	ПараметрыОбработки = Новый Структура;
	ПараметрыОбработки.Вставить("Обработчик", "РегистрыСведений.НормативнаяДлительностьПроизводства.ВыполнитьРасчет");
	ПараметрыОбработки.Вставить("ДополнительныеДанные", Новый Структура);
	Возврат ПараметрыОбработки;
	
КонецФункции

Функция ОчередьЗаданий(Отбор = Неопределено) Экспорт
	
	ЗаданияКОбработке = ПроизводствоСервер.ОчередьЗаданий("ЗаданияКРасчетуДлительностиПроизводства", Отбор);
	Возврат ЗаданияКОбработке;
	
КонецФункции

Функция ВыбратьИзОчереди(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ОбрабатываемыеЗадания.ОбъектРасчета КАК ОбъектРасчета,
	|	МАКСИМУМ(ОбрабатываемыеЗадания.ПолныйРасчет) КАК ПолныйРасчет
	|ИЗ
	|	ОбрабатываемыеЗадания КАК ОбрабатываемыеЗадания
	|СГРУППИРОВАТЬ ПО
	|	ОбрабатываемыеЗадания.ОбъектРасчета");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Очередь = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		Очередь.Добавить(Новый Структура("ОбъектРасчета, ПолныйРасчет", Выборка.ОбъектРасчета, Выборка.ПолныйРасчет));
	КонецЦикла;
	
	Возврат Очередь;
	
КонецФункции

Процедура УдалитьЗадание(Задание, МенеджерВременныхТаблиц) Экспорт
	
	ПроизводствоСервер.УдалитьЗадание("ЗаданияКРасчетуДлительностиПроизводства", Задание, МенеджерВременныхТаблиц);
	
КонецПроцедуры

Процедура ЗаписатьОшибку(Задание, ПропуститьЗадание, ИнформацияОбОшибке) Экспорт
	
	ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
	
	ПроизводствоСервер.ЗаписатьОшибкуОбработкиОчередиЗаданий("ЗаданияКРасчетуДлительностиПроизводства", ТекстОшибки, Задание, Задание.ОбъектРасчета);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли