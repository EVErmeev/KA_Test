#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.ПервоначальныеСведенияОС.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.9.24";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("18a37d35-aab4-4772-8fc6-df649d629050");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.ПервоначальныеСведенияОС.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Обновляет регистр ""Первоначальные сведения ОС"":
	|- в международной версии заполняет по данным упр. учета.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ВыбытиеАрендованныхОС.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ЗаключениеДоговораАренды.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ИзменениеПараметровОС2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.КорректировкаСтоимостиИАмортизацииОС.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.МодернизацияОС2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ОбъединениеОС.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПеремещениеОС2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПодготовкаКПередачеОС2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПоступлениеАрендованныхОС.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПринятиеКУчетуОС2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.РазукомплектацияОС.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.СписаниеОС2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.СтоимостьОС.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыСведений.ПервоначальныеСведенияОС.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.ДоговорыАренды.ПолноеИмя());

	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.ПервоначальныеСведенияОС.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.РегистрыСведений.ПервоначальныеСведенияОС.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.КорректировкаСтоимостиИАмортизацииОС.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "Любой";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.МодернизацияОС2_4.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "До";

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрСведений.ПервоначальныеСведенияОС";
		
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.ДатаВводаВЭксплуатациюБУ = ДАТАВРЕМЯ(1, 1, 1)
	|	И &ЭтоМеждународнаяВерсия
	|	И НЕ &РеглУчетВНАВедетсяНезависимо
	|	И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.КорректировкаРегистров";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ЭтоМеждународнаяВерсия", НЕ ПолучитьФункциональнуюОпцию("ЛокализацияРФ"));
	Запрос.УстановитьПараметр("РеглУчетВНАВедетсяНезависимо", НастройкиНалоговУчетныхПолитикПовтИсп.РеглУчетВНАВедетсяНезависимо());

	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ВнеоборотныеАктивы.СформироватьДвиженияПриОбновленииИБ("ПервоначальныеСведенияОС", Параметры);
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
