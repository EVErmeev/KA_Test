
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.ПараметрыАмортизацииОСБУ.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.9.88";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("330403b8-abad-495c-b00b-d63402397b92");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.ПараметрыАмортизацииОСБУ.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Обновляет регистр ""Параметры амортизации ОС (бухгалтерский и налоговый учет)""
	|- в международной версии заполняет по данным упр. учета
	|- заполняет ресурс ""Специальный коэффициент""'");
	
	Читаемые = Новый Массив;
	
	Читаемые.Добавить(Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ИзменениеПараметровОС2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.МодернизацияОС2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПеремещениеОС2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПринятиеКУчетуОС2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПринятиеКУчетуУзловКомпонентовАмортизации.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ОбъединениеОС.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.РазукомплектацияОС.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.СписаниеОС2_4.ПолноеИмя());
	
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.ПараметрыАмортизацииОСБУ.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.РегистрыСведений.ПараметрыАмортизацииОСБУ.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "РегистрСведений.ПараметрыАмортизацииОСБУ";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РегистрИсточник.Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСУУ КАК РегистрИсточник
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ КАК РегистрПриемник
	|		ПО РегистрПриемник.Регистратор = РегистрИсточник.Регистратор
	|
	|ГДЕ
	|	РегистрПриемник.Регистратор ЕСТЬ NULL
	|	И &ЭтоМеждународнаяВерсия
	|	И НЕ &РеглУчетВНАВедетсяНезависимо
	|	И ТИПЗНАЧЕНИЯ(РегистрИсточник.Регистратор) В (
	|			ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4),
	|			ТИП(Документ.ИзменениеПараметровОС2_4),
	|			ТИП(Документ.МодернизацияОС2_4),
	|			ТИП(Документ.ПеремещениеОС2_4),
	|			ТИП(Документ.ПринятиеКУчетуОС2_4),
	|			ТИП(Документ.ПринятиеКУчетуУзловКомпонентовАмортизации),
	|			ТИП(Документ.ОбъединениеОС),
	|			ТИП(Документ.РазукомплектацияОС),
	|			ТИП(Документ.СписаниеОС2_4))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ЭтоМеждународнаяВерсия", НЕ ПолучитьФункциональнуюОпцию("ЛокализацияРФ"));
	Запрос.УстановитьПараметр("РеглУчетВНАВедетсяНезависимо", НастройкиНалоговУчетныхПолитикПовтИсп.РеглУчетВНАВедетсяНезависимо());

	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяОбъекта);
	
	ВнеоборотныеАктивыЛокализация.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию_ПараметрыАмортизацииОСБУ(Параметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "РегистрСведений.ПараметрыАмортизацииОСБУ";

	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяОбъекта;

	Если НЕ ВнеоборотныеАктивы.РегистраторыОбновлены("ПараметрыАмортизацииОСБУ", Параметры) Тогда
		// Обновление не начнется пока есть необработанные документы, т.к. нужно обрабатывать записи в хронологическом порядке.
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;

	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ДопПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДопПараметры.ВыбиратьПорциями = Ложь;
	
	ПараметрыОбработки = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(
		Параметры.Очередь,
		Неопределено, 
		ПолноеИмяОбъекта, 
		МенеджерВременныхТаблиц,
		ДопПараметры);
	
	Если НЕ ПараметрыОбработки.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ ПараметрыОбработки.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивы.СоздатьВременнуюТаблицуСДаннымиДокументовДляОбработки(
		Метаданные.РегистрыСведений.ПараметрыАмортизацииОСБУ, 
		ПараметрыОбработки.ИмяВременнойТаблицы, 
		МенеджерВременныхТаблиц);
		
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 100
	|	СсылкиДляОбработки.Регистратор КАК Регистратор,
	|	ЕСТЬNULL(втДанныеДокументовДляОбработки.Дата, ДАТАВРЕМЯ(1,1,1)) КАК Дата,
	|	ЕСТЬNULL(втДанныеДокументовДляОбработки.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация
	|ИЗ
	|	ВТДляОбработки КАК СсылкиДляОбработки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДанныеДокументовДляОбработки КАК втДанныеДокументовДляОбработки
	|		ПО втДанныеДокументовДляОбработки.Ссылка = СсылкиДляОбработки.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЕСТЬNULL(втДанныеДокументовДляОбработки.Дата, ДАТАВРЕМЯ(1,1,1))";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТДляОбработки", ПараметрыОбработки.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();

	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			ИмяДокумента = ВРег(ОбщегоНазначения.ИмяТаблицыПоСсылке(Выборка.Регистратор));

			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПараметрыАмортизацииОСБУ.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Регистратор);

			ЭлементБлокировки = Блокировка.Добавить(ИмяДокумента);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Регистратор);

			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.ПараметрыАмортизацииОСБУ.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			
			Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.Регистратор, "Проведен") = Истина Тогда
				ЗаполнитьНаборЗаписей(НаборЗаписей, Выборка);
			КонецЕсли;
			
			Если НаборЗаписей.Модифицированность() Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Регистратор, ДополнительныеПараметры);
			КонецЕсли; 
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать записи регистра ""Параметры амортизации ОС (бухгалтерский и налоговый учет)"": %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.РегистрыСведений.ПараметрыАмортизацииОСБУ,
				Выборка.Регистратор,
				ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ЗаполнитьНаборЗаписей(НаборЗаписей, Выборка)

	ТаблицаРегистра = Неопределено;
	
	ТипДокумента = ТипЗнч(Выборка.Регистратор);	
	
	ЭтоМеждународнаяВерсия = НЕ ПолучитьФункциональнуюОпцию("ЛокализацияРФ");
	
	Если ТипДокумента = Тип("ДокументСсылка.ПринятиеКУчетуОС2_4") Тогда

		ТекстыЗапроса = Новый СписокЗначений();
		
		Если ЭтоМеждународнаяВерсия Тогда
			
			// Нужно сформировать временные таблицы, которые используются в запросе.
			#Область ВтРасчетСтоимостиСгруппированная
			ИмяТаблицы = "ВтРасчетСтоимостиСгруппированная";
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ПараметрыАмортизацииОСУУ.ОсновноеСредство КАК ОбъектУчета,
			|	0 КАК Стоимость,
			|	СУММА(ПараметрыАмортизацииОСУУ.СтоимостьДляВычисленияАмортизацииРегл) КАК СтоимостьРегл,
			|	0 КАК СтоимостьНУ,
			|	0 КАК СтоимостьПР,
			|	0 КАК СтоимостьВР,
			|	0 КАК СтоимостьЦФ,
			|	0 КАК СтоимостьНУЦФ,
			|	0 КАК СтоимостьПРЦФ,
			|	0 КАК СтоимостьВРЦФ,
			|	0 КАК НДС,
			|	0 КАК НДСРегл
			|
			|ПОМЕСТИТЬ ВтРасчетСтоимостиСгруппированная
			|
			|ИЗ
			|	РегистрСведений.ПараметрыАмортизацииОСУУ КАК ПараметрыАмортизацииОСУУ
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ
			|		ПО ПараметрыАмортизацииОСБУ.Регистратор = ПараметрыАмортизацииОСУУ.Регистратор
			|ГДЕ
			|	ПараметрыАмортизацииОСУУ.Регистратор = &Ссылка
			|	И ПараметрыАмортизацииОСБУ.Регистратор ЕСТЬ NULL
			|
			|СГРУППИРОВАТЬ ПО
			|	ПараметрыАмортизацииОСУУ.ОсновноеСредство
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ДанныеРегистра.ОсновноеСредство КАК ОбъектУчета,
			|	0 КАК Стоимость,
			|	СУММА(ДанныеРегистра.СтоимостьДляВычисленияАмортизации) КАК СтоимостьРегл,
			|	0 КАК СтоимостьНУ,
			|	0 КАК СтоимостьПР,
			|	0 КАК СтоимостьВР,
			|	0 КАК СтоимостьЦФ,
			|	0 КАК СтоимостьНУЦФ,
			|	0 КАК СтоимостьПРЦФ,
			|	0 КАК СтоимостьВРЦФ,
			|	0 КАК НДС,
			|	0 КАК НДСРегл
			|
			|ИЗ
			|	РегистрСведений.ПараметрыАмортизацииОСБУ КАК ДанныеРегистра
			|ГДЕ
			|	ДанныеРегистра.Регистратор = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ДанныеРегистра.ОсновноеСредство";
			ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
			#КонецОбласти
		
		КонецЕсли;
	
		ТаблицаРегистра = Документы.ПринятиеКУчетуОС2_4.ОбновитьТаблицуПараметрыАмортизацииОСБУ(Выборка.Регистратор, ТекстыЗапроса);
		
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.МодернизацияОС2_4") Тогда
		
		Если ЭтоМеждународнаяВерсия Тогда
			
			ТекстЗапроса =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ИСТИНА
			|ИЗ
			|	РегистрСведений.ПараметрыАмортизацииОСУУ КАК РегистрИсточник
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ КАК РегистрПриемник
			|		ПО РегистрПриемник.Регистратор = РегистрИсточник.Регистратор
			|ГДЕ
			|	РегистрИсточник.Регистратор = &Ссылка
			|	И РегистрПриемник.Регистратор ЕСТЬ NULL
			|	И НЕ &РеглУчетВНАВедетсяНезависимо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
			|ПОМЕСТИТЬ втСписокОС
			|
			|ИЗ
			|	Документ.МодернизацияОС2_4.ОС КАК ТаблицаОС
			|ГДЕ
			|	ТаблицаОС.Ссылка = &Ссылка
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДанныеДокумента.Ссылка                      КАК Регистратор,
			|	ДанныеДокумента.Дата                        КАК Период,
			|	ДанныеДокумента.Организация                 КАК Организация,
			|	ДанныеДокумента.Дата                        КАК ДатаПоследнегоИзменения,
			|	ТаблицаОС.ОсновноеСредство                  КАК ОсновноеСредство,
			|
			|	ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияБУ КАК СрокПолезногоИспользованияБУ,
			|	ПараметрыАмортизацииОСБУ.КоэффициентАмортизацииБУ     КАК КоэффициентАмортизацииБУ,
			|	ПараметрыАмортизацииОСБУ.ЛиквидационнаяСтоимость      КАК ЛиквидационнаяСтоимость,
			|
			|	ПараметрыАмортизацииОСУУ.СтоимостьДляВычисленияАмортизацииРегл КАК СтоимостьДляВычисленияАмортизации,
			|	ПараметрыАмортизацииОСУУ.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
			|	ПараметрыАмортизацииОСУУ.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации
			|
			|ИЗ
			|	Документ.МодернизацияОС2_4 КАК ДанныеДокумента
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияОС2_4.ОС КАК ТаблицаОС
			|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСУУ КАК ПараметрыАмортизацииОСУУ
			|		ПО (ПараметрыАмортизацииОСУУ.Регистратор = ДанныеДокумента.Ссылка)
			|			И (ПараметрыАмортизацииОСУУ.Организация = ДанныеДокумента.Организация)
			|			И (ПараметрыАмортизацииОСУУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ.СрезПоследних(
			|				&Период,
			|				Регистратор <> &Ссылка
			|					И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
			|					И ОсновноеСредство В
			|						(ВЫБРАТЬ СписокОС.ОсновноеСредство ИЗ втСписокОС КАК СписокОС)) КАК ПараметрыАмортизацииОСБУ
			|		ПО (ПараметрыАмортизацииОСБУ.Организация = ДанныеДокумента.Организация)
			|			И (ПараметрыАмортизацииОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
			|ГДЕ
			|	ДанныеДокумента.Ссылка = &Ссылка
			|	И ДанныеДокумента.ОтражатьВРеглУчете";
				
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.УстановитьПараметр("Ссылка", Выборка.Регистратор);
			Запрос.УстановитьПараметр("РеглУчетВНАВедетсяНезависимо", НастройкиНалоговУчетныхПолитикПовтИсп.РеглУчетВНАВедетсяНезависимо());
			
			РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Выборка.Регистратор, "Дата");
			Запрос.УстановитьПараметр("Период", РеквизитыОбъекта.Дата);
			
			Результат = Запрос.ВыполнитьПакет();
			
			Если НЕ Результат[0].Пустой() Тогда
				ТаблицаРегистра = Результат[Результат.ВГраница()].Выгрузить();
			КонецЕсли;
			
		КонецЕсли;
			
		Если ТаблицаРегистра = Неопределено Тогда
			ТекстыЗапроса = Новый СписокЗначений();
			ТаблицаРегистра = Документы.МодернизацияОС2_4.ОбновитьТаблицуПараметрыАмортизацииОСБУ(Выборка.Регистратор, ТекстыЗапроса);
		КонецЕсли;
	
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПереоценкаОС2_4") Тогда
		
		Если ЭтоМеждународнаяВерсия Тогда
			
			ТекстЗапроса =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ИСТИНА
			|ИЗ
			|	РегистрСведений.ПараметрыАмортизацииОСУУ КАК РегистрИсточник
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ КАК РегистрПриемник
			|		ПО РегистрПриемник.Регистратор = РегистрИсточник.Регистратор
			|ГДЕ
			|	РегистрИсточник.Регистратор = &Ссылка
			|	И РегистрПриемник.Регистратор ЕСТЬ NULL
			|	И НЕ &РеглУчетВНАВедетсяНезависимо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
			|ПОМЕСТИТЬ втСписокОС
			|
			|ИЗ
			|	Документ.ПереоценкаОС2_4.ОС КАК ТаблицаОС
			|ГДЕ
			|	ТаблицаОС.Ссылка = &Ссылка
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДанныеДокумента.Ссылка                      КАК Регистратор,
			|	ДанныеДокумента.Дата                        КАК Период,
			|	ДанныеДокумента.Организация                 КАК Организация,
			|	ДанныеДокумента.Дата                        КАК ДатаПоследнегоИзменения,
			|	ТаблицаОС.ОсновноеСредство                  КАК ОсновноеСредство,
			|
			|	ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияБУ КАК СрокПолезногоИспользованияБУ,
			|	ПараметрыАмортизацииОСБУ.КоэффициентАмортизацииБУ     КАК КоэффициентАмортизацииБУ,
			|	ПараметрыАмортизацииОСБУ.ЛиквидационнаяСтоимость      КАК ЛиквидационнаяСтоимость,
			|
			|	ПараметрыАмортизацииОСУУ.СтоимостьДляВычисленияАмортизацииРегл КАК СтоимостьДляВычисленияАмортизации,
			|	ПараметрыАмортизацииОСУУ.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
			|	ПараметрыАмортизацииОСУУ.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации
			|
			|ИЗ
			|	Документ.ПереоценкаОС2_4 КАК ДанныеДокумента
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПереоценкаОС2_4.ОС КАК ТаблицаОС
			|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСУУ КАК ПараметрыАмортизацииОСУУ
			|		ПО (ПараметрыАмортизацииОСУУ.Регистратор = ДанныеДокумента.Ссылка)
			|			И (ПараметрыАмортизацииОСУУ.Организация = ДанныеДокумента.Организация)
			|			И (ПараметрыАмортизацииОСУУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ.СрезПоследних(
			|				&Период,
			|				Регистратор <> &Ссылка
			|					И ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
			|					И ОсновноеСредство В
			|						(ВЫБРАТЬ СписокОС.ОсновноеСредство ИЗ втСписокОС КАК СписокОС)) КАК ПараметрыАмортизацииОСБУ
			|		ПО (ПараметрыАмортизацииОСБУ.Организация = ДанныеДокумента.Организация)
			|			И (ПараметрыАмортизацииОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
			|ГДЕ
			|	ДанныеДокумента.Ссылка = &Ссылка
			|	И ДанныеДокумента.ОтражатьВРеглУчете";
				
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.УстановитьПараметр("Ссылка", Выборка.Регистратор);
			Запрос.УстановитьПараметр("Период", Выборка.Дата);
			Запрос.УстановитьПараметр("РеглУчетВНАВедетсяНезависимо", НастройкиНалоговУчетныхПолитикПовтИсп.РеглУчетВНАВедетсяНезависимо());
			
			Результат = Запрос.ВыполнитьПакет();
			
			Если НЕ Результат[0].Пустой() Тогда
				ТаблицаРегистра = Результат[Результат.ВГраница()].Выгрузить();
			КонецЕсли;
			
		КонецЕсли;
			
		Если ТаблицаРегистра = Неопределено Тогда
			ТекстыЗапроса = Новый СписокЗначений();
			ТаблицаРегистра = Документы.ПереоценкаОС2_4.ОбновитьТаблицуПараметрыАмортизацииОСБУ(Выборка.Регистратор, ТекстыЗапроса);
		КонецЕсли;
	
	Иначе
		
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Выборка.Регистратор);
		ТаблицыДляДвижений = МенеджерДокумента.ДанныеДокументаДляПроведения(Выборка.Регистратор, "ПараметрыАмортизацииОСБУ");
		ТаблицыДляДвижений.Свойство("Таблица" + "ПараметрыАмортизацииОСБУ", ТаблицаРегистра);
		
	КонецЕсли;

	Если ТаблицаРегистра <> Неопределено Тогда
		НаборЗаписей.Загрузить(ТаблицаРегистра);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
