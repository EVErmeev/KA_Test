
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Записывает данные об изделиях спецификации в регистр
//
// Параметры:
//  Спецификации  - СправочникСсылка.РесурсныеСпецификации, Массив - спецификации, для которой записываются изделия.
//  ОчисткаЗаписейРегистра - Булево - определяет необходимость записи данных, либо только очистку уже имеющихся в регистре
//  ВызовИзОбработчикаОбновления - Булево - режим вызова из обработчика обновления
//
Процедура ЗаписатьИзделияПоСпецификации(Спецификации, ОчисткаЗаписейРегистра = Ложь, ВызовИзОбработчикаОбновления = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаИзделияСпецификации(ВызовИзОбработчикаОбновления);
	Запрос.УстановитьПараметр("Спецификации",     Спецификации);
	Запрос.УстановитьПараметр("ПрочитатьИзделия", НЕ ОчисткаЗаписейРегистра);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаСпецификации = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Спецификация");
		Пока ВыборкаСпецификации.Следующий() Цикл
			
			НаборЗаписей = РегистрыСведений.СпецификацииИзделий.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Спецификация.Установить(ВыборкаСпецификации.Спецификация);
			
			Порядок = 1;
			
			Выборка = ВыборкаСпецификации.Выбрать(ОбходРезультатаЗапроса.Прямой);
			Пока Выборка.Следующий() И Выборка.НомерСтроки <> Null Цикл
				
				НоваяСтрока = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				НоваяСтрока.Порядок = Порядок;
				
				Порядок = Порядок + 1;
				
			КонецЦикла;
			
			Если ВызовИзОбработчикаОбновления Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			Иначе
				НаборЗаписей.Записать();
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

Функция ТекстЗапросаИзделияСпецификации(ВызовИзОбработчикаОбновления = Ложь)
	
	ТекстЗапроса = "
	|// Сборка, Ремонт
	|ВЫБРАТЬ
	|	Т.Ссылка                                  КАК Спецификация,
	|	ВЫБОР
	|		КОГДА Т.Ссылка.ВариантНазначения = ЗНАЧЕНИЕ(Перечисление.ВариантыНазначенияСпецификации.ВидНоменклатуры)
	|			ТОГДА Т.ВидНоменклатуры
	|		ИНАЧЕ ЕСТЬNULL(Т.Номенклатура.ВидНоменклатуры, ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ                                     КАК Видноменклатуры,
	|	Т.Номенклатура                            КАК Номенклатура,
	|	Т.Характеристика                          КАК Характеристика,
	|	Т.КоличествоУпаковок                      КАК КоличествоУпаковокНаЕдиницуПартииЗапуска,
	|	Т.Упаковка                                КАК Упаковка,
	|	Т.Ссылка.ТипПроизводственногоПроцесса     КАК ТипПроизводственногоПроцесса,
	|	Т.Ссылка.Статус                           КАК Статус,
	|	Т.Ссылка.НачалоДействия                   КАК НачалоДействия,
	|	Т.Ссылка.КонецДействия                    КАК КонецДействия,
	|	Т.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук) КАК ЕдиницаИзмеренияШтучная,
	|	Т.НомерСтроки                             КАК НомерСтроки,
	|	Т.КлючСвязи                               КАК КлючСвязи,
	|	ЛОЖЬ                                      КАК ПобочныйВыход
	|ПОМЕСТИТЬ
	|	ВтИзделия
	|ИЗ
	|	Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК Т
	|ГДЕ
	|	Т.Ссылка В (&Спецификации)
	|	И Т.Ссылка.ТипПроизводственногоПроцесса В (ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Сборка),
	|													ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Ремонт))
	|	И Т.Ссылка.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСпецификаций.Действует), ЗНАЧЕНИЕ(Перечисление.СтатусыСпецификаций.ВРазработке))
	|	И Т.СпособАвтовыбораНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.СпособыАвтовыбораНоменклатуры.УказываетсяВНСИ),
	|											ЗНАЧЕНИЕ(Перечисление.СпособыАвтовыбораНоменклатуры.ПустаяСсылка))
	|	И Т.СпособАвтовыбораХарактеристики В (ЗНАЧЕНИЕ(Перечисление.СпособыАвтовыбораХарактеристики.УказываетсяВНСИ),
	|											ЗНАЧЕНИЕ(Перечисление.СпособыАвтовыбораХарактеристики.ПустаяСсылка))
	|	И (ВЫРАЗИТЬ(Т.АлгоритмРасчетаКоличества КАК СТРОКА(100))) = """"
	|	И ВЫБОР
	|		КОГДА Т.Ссылка.ВариантНазначения = ЗНАЧЕНИЕ(Перечисление.ВариантыНазначенияСпецификации.ВидНоменклатуры)
	|			ТОГДА Т.ВидНоменклатуры
	|		ИНАЧЕ ЕСТЬNULL(Т.Номенклатура.ВидНоменклатуры, ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|	И (Т.НомерСтроки = 1
	|			ИЛИ &ТекстПодстановкиРасчетПризнакаЕстьПараметризацияРесурсов = ЛОЖЬ)
	|	И &ПрочитатьИзделия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Побочный выпуск
	|ВЫБРАТЬ
	|	ПобочныйВыпуск.Спецификация,
	|	ПобочныйВыпуск.ВидНоменклатуры,
	|	ПобочныйВыпуск.Номенклатура,
	|	ПобочныйВыпуск.Характеристика,
	|	СУММА(ПобочныйВыпуск.Количество),
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ПобочныйВыпуск.ТипПроизводственногоПроцесса,
	|	ПобочныйВыпуск.Статус,
	|	ПобочныйВыпуск.НачалоДействия,
	|	ПобочныйВыпуск.КонецДействия,
	|	ПобочныйВыпуск.ЕдиницаИзмеренияШтучная,
	|	МИНИМУМ(ПобочныйВыпуск.НомерСтроки),
	|	МИНИМУМ(ПобочныйВыпуск.КлючСвязи),
	|	ИСТИНА
	|ИЗ
	|	(ВЫБРАТЬ
	|		Т.Ссылка                              КАК Спецификация,
	|		Т.Ссылка.ТипПроизводственногоПроцесса КАК ТипПроизводственногоПроцесса,
	|		Т.Ссылка.Статус                       КАК Статус,
	|		Т.Ссылка.НачалоДействия               КАК НачалоДействия,
	|		Т.Ссылка.КонецДействия                КАК КонецДействия,
	|		Т.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук) КАК ЕдиницаИзмеренияШтучная,
	|		Т.Номенклатура.ВидНоменклатуры        КАК ВидНоменклатуры,
	|		Т.Номенклатура                        КАК Номенклатура,
	|		Т.Характеристика                      КАК Характеристика,
	|		Т.НомерСтроки                         КАК НомерСтроки,
	|		Т.КлючСвязи                           КАК КлючСвязи,
	|		ВЫРАЗИТЬ(Т.КоличествоУпаковок * ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК ЧИСЛО(15, 3)) КАК Количество
	|	ИЗ
	|		Справочник.РесурсныеСпецификации.ВозвратныеОтходы КАК Т
	|	ГДЕ
	|		Т.Ссылка В (&Спецификации)
	|		И Т.Ссылка.ТипПроизводственногоПроцесса = ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Сборка)
	|		И Т.СпособАвтовыбораНоменклатуры = ЗНАЧЕНИЕ(Перечисление.СпособыАвтовыбораНоменклатуры.УказываетсяВНСИ)
	|		И Т.СпособАвтовыбораХарактеристики = ЗНАЧЕНИЕ(Перечисление.СпособыАвтовыбораХарактеристики.УказываетсяВНСИ)
	|		И (ВЫРАЗИТЬ(Т.АлгоритмРасчетаКоличества КАК СТРОКА(100))) = """"
	|		И &ПрочитатьИзделия
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.Ссылка,
	|		Т.Ссылка.ТипПроизводственногоПроцесса,
	|		Т.Ссылка.Статус,
	|		Т.Ссылка.НачалоДействия,
	|		Т.Ссылка.КонецДействия,
	|		Т.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук) КАК ЕдиницаИзмеренияШтучная,
	|		Т.Номенклатура.ВидНоменклатуры,
	|		Т.Номенклатура,
	|		Т.Характеристика,
	|		10000,
	|		Т.КлючСвязи,
	|		-(ВЫРАЗИТЬ(Т.КоличествоУпаковок * ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК ЧИСЛО(15, 3)))
	|	ИЗ
	|		Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК Т
	|	ГДЕ
	|		Т.Ссылка В (&Спецификации)
	|		И Т.Ссылка.ТипПроизводственногоПроцесса = ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Сборка)
	|		И Т.СпособПолученияМатериала = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе)
	|		И Т.СпособАвтовыбораНоменклатуры = ЗНАЧЕНИЕ(Перечисление.СпособыАвтовыбораНоменклатуры.УказываетсяВНСИ)
	|		И Т.СпособАвтовыбораХарактеристики = ЗНАЧЕНИЕ(Перечисление.СпособыАвтовыбораХарактеристики.УказываетсяВНСИ)
	|		И (ВЫРАЗИТЬ(Т.АлгоритмРасчетаКоличества КАК СТРОКА(100))) = """"
	|		И &ПрочитатьИзделия) КАК ПобочныйВыпуск
	|
	|СГРУППИРОВАТЬ ПО
	|	ПобочныйВыпуск.Спецификация,
	|	ПобочныйВыпуск.ВидНоменклатуры,
	|	ПобочныйВыпуск.Номенклатура,
	|	ПобочныйВыпуск.Характеристика,
	|	ПобочныйВыпуск.ТипПроизводственногоПроцесса,
	|	ПобочныйВыпуск.Статус,
	|	ПобочныйВыпуск.НачалоДействия,
	|	ПобочныйВыпуск.КонецДействия,
	|	ПобочныйВыпуск.ЕдиницаИзмеренияШтучная
	|	
	|ИМЕЮЩИЕ
	|	СУММА(ПобочныйВыпуск.Количество) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Разборка
	|ВЫБРАТЬ
	|	Т.Ссылка,
	|	ВЫБОР
	|		КОГДА Т.ВариантНазначения = ЗНАЧЕНИЕ(Перечисление.ВариантыНазначенияСпецификации.ВидНоменклатуры)
	|			ТОГДА Т.ОсновноеИзделиеВидНоменклатуры
	|		ИНАЧЕ ЕСТЬNULL(Т.ОсновноеИзделиеНоменклатура.ВидНоменклатуры, ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ,
	|	Т.ОсновноеИзделиеНоменклатура,
	|	Т.ОсновноеИзделиеХарактеристика,
	|	Т.ОсновноеИзделиеКоличествоУпаковок,
	|	Т.ОсновноеИзделиеУпаковка,
	|	Т.ТипПроизводственногоПроцесса,
	|	Т.Статус,
	|	Т.НачалоДействия,
	|	Т.КонецДействия,
	|	Т.ОсновноеИзделиеНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук) КАК ЕдиницаИзмеренияШтучная,
	|	1,
	|	NULL,
	|	ЛОЖЬ
	|ИЗ
	|	Справочник.РесурсныеСпецификации КАК Т
	|ГДЕ
	|	Т.Ссылка В (&Спецификации)
	|	И Т.ТипПроизводственногоПроцесса = ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Разборка)
	|	И Т.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСпецификаций.Действует), ЗНАЧЕНИЕ(Перечисление.СтатусыСпецификаций.ВРазработке))
	|	И ВЫБОР
	|		КОГДА Т.ВариантНазначения = ЗНАЧЕНИЕ(Перечисление.ВариантыНазначенияСпецификации.ВидНоменклатуры)
	|			ТОГДА Т.ОсновноеИзделиеВидНоменклатуры
	|		ИНАЧЕ ЕСТЬNULL(Т.ОсновноеИзделиеНоменклатура.ВидНоменклатуры, ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|	И &ПрочитатьИзделия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Спецификация
	|
	|;
	|
	|ВЫБРАТЬ
	|	Спецификации.Ссылка КАК Спецификация,
	|	Изделия.*
	|ИЗ
	|	Справочник.РесурсныеСпецификации КАК Спецификации
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтИзделия КАК Изделия
	|		ПО Спецификации.Ссылка = Изделия.Спецификация
	|ГДЕ
	|	Спецификации.Ссылка В (&Спецификации)
	|	И НЕ ИСТИНА В (ВЫБРАТЬ ПЕРВЫЕ 1
	|					ИСТИНА
	|				ИЗ
	|					ВтИзделия КАК Т
	|				ГДЕ
	|					Изделия.Спецификация = Т.Спецификация
	|					И Изделия.Номенклатура = Т.Номенклатура
	|					И Изделия.Характеристика = Т.Характеристика
	|					И ВЫБОР
	|						КОГДА Изделия.ПобочныйВыход = Т.ПобочныйВыход
	|							ТОГДА Т.НомерСтроки < Изделия.НомерСтроки
	|						ИНАЧЕ Т.ПобочныйВыход < Изделия.ПобочныйВыход
	|					КОНЕЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Изделия.ПобочныйВыход,
	|	Изделия.НомерСтроки
	|
	|ИТОГИ ПО
	|	Спецификации.Ссылка
	|
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковкиОсновноеИзделие",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Т.ОсновноеИзделиеУпаковка",
			"Т.ОсновноеИзделиеНоменклатура"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Т.Упаковка",
			"Т.Номенклатура"));
			
	Если ВызовИзОбработчикаОбновления Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&ТекстПодстановкиРасчетПризнакаЕстьПараметризацияРесурсов",
			Справочники.РесурсныеСпецификации.ТекстПодстановкиРасчетПризнакаЕстьПараметризацияРесурсов("Т.Ссылка"));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&ТекстПодстановкиРасчетПризнакаЕстьПараметризацияРесурсов",
			"Т.Ссылка.ЕстьПараметризацияРесурсов");
	КонецЕсли;
			
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.СпецификацииИзделий.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.9.57";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("43414af7-dddf-40f1-86c0-4c14f143823e");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.СпецификацииИзделий.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заполняет регистр изделий по спецификациям'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Справочники.РесурсныеСпецификации.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.СпецификацииИзделий.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.РегистрыСведений.СпецификацииИзделий.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрСведений.СпецификацииИзделий";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Реквизиты.Ссылка КАК Спецификация
	|ИЗ
	|	Справочник.РесурсныеСпецификации КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпецификацииИзделий КАК СпецификацииИзделий
	|		ПО (Реквизиты.Ссылка = СпецификацииИзделий.Спецификация)
	|ГДЕ
	|	Реквизиты.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСпецификаций.Действует),
	|							ЗНАЧЕНИЕ(Перечисление.СтатусыСпецификаций.ВРазработке))
	|	И СпецификацииИзделий.Порядок > 1
	|	И НЕ СпецификацииИзделий.ПобочныйВыход
	|	И &ТекстПодстановкиРасчетПризнакаЕстьПараметризацияРесурсов
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстПодстановкиРасчетПризнакаЕстьПараметризацияРесурсов",
		Справочники.РесурсныеСпецификации.ТекстПодстановкиРасчетПризнакаЕстьПараметризацияРесурсов("Реквизиты.Ссылка"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяРегистра;
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиИзмеренияНезависимогоРегистраСведений();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра             = ПолноеИмяРегистра;
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить(), ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрСведений.СпецификацииИзделий";
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	Если ОбновляемыеДанные.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяРегистра);
		Возврат;
	КонецЕсли;
	
	Спецификации = Новый Массив;
	Для каждого Выборка Из ОбновляемыеДанные Цикл
		Спецификации.Добавить(Выборка.Спецификация);
	КонецЦикла;
	
	НачатьТранзакцию();
	Попытка
		
		ЗаписатьИзделияПоСпецификации(Спецификации,,Истина);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Неопределено);
	КонецПопытки;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
