#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Рассчитывает нормативную длительность производства
//
// Параметры:
//  Задание				 - Структура - описание задания к расчету.
//  ПропуститьЗадание	 - Булево	 - признак, требуется пропустить выполнение задания (возвращаемое значение).
//  ДополнительныеДанные - Структура - дополнительные данные, используемые при обработке очереди
//
Процедура ВыполнитьРасчет(Задание, ПропуститьЗадание = Ложь, ДополнительныеДанные = Неопределено) Экспорт
	
	ЗамерВремени = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("РегистрСведений.НормативнаяДлительностьПроизводства.МодульМенеджера.Рассчитать");
	
	Рассчитать(Задание.ОбъектРасчета, Задание.ПолныйРасчет, ДополнительныеДанные);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ЗамерВремени, 1);
	
КонецПроцедуры

// Возвращает длительность производства по спецификации
//
// Параметры:
//  Спецификация - СправочникСсылка.РесурсныеСпецификации, Массив - спецификации.
// 
// Возвращаемое значение:
//   - Структура, Соответствие - длительность производства.
//
Функция ПолучитьДлительность(Спецификация) Экспорт
	
	ТекстЗапроса = ТекстЗапросаДлительностиПроизводстваПоСпецификации();
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивСсылок", ПроизводствоСервер.МассивЗначений(Спецификация));
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если ТипЗнч(Спецификация) <> Тип("Массив") Тогда
		
		Результат = СтруктураДанныхЗаписиРегистра();
		Если Не РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			ЗаполнитьЗначенияСвойств(Результат, Выборка);
		КонецЕсли;
		
	Иначе
		
		Результат = Новый Соответствие;
		Если Не РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				Данные = СтруктураДанныхЗаписиРегистра();
				ЗаполнитьЗначенияСвойств(Данные, Выборка);
				Результат.Вставить(Выборка.Спецификация, Данные);
			КонецЦикла;
		КонецЕсли;
		
		Для каждого Элемент Из Спецификация Цикл
			Если Результат.Получить(Элемент) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Данные = СтруктураДанныхЗаписиРегистра();
			Результат.Вставить(Элемент, Данные);
		КонецЦикла;

	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РасчетДлительности

Процедура Рассчитать(ОбъектРасчета, ПолныйРасчет = Ложь, ДополнительныеДанные = Неопределено)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЕстьОшибки = Ложь;
	ЕстьИзменения = Ложь;
	
	// расчет нормативной длительности производства
	
	РасчетПоСпецификации = ( ТипЗнч(ОбъектРасчета) = Тип("СправочникСсылка.РесурсныеСпецификации") );
	Если РасчетПоСпецификации Тогда
		
		Спецификация = ОбъектРасчета;
		
		Если ПолныйРасчет Тогда
			ЕстьОшибки = ЕстьОшибки ИЛИ Не РегистрыСведений.НормативнаяДлительностьЭтаповПроизводства.Рассчитать(Спецификация);
		КонецЕсли;
		
		Если Не ЕстьОшибки Тогда
			
			РезультатРасчета = ВычислитьДлительность(Спецификация);
			
			НачатьТранзакцию();
			Попытка
				
				Блокировка = Новый БлокировкаДанных;
				
				ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.НормативнаяДлительностьПроизводства");
				ЭлементБлокировки.УстановитьЗначение("Спецификация", Спецификация);
				
				Блокировка.Заблокировать();
				
				ДлительностьДоИзменения = ПолучитьДлительность(Спецификация);
				
				ЕстьИзменения = Не ДлительностиРавны(РезультатРасчета, ДлительностьДоИзменения);
				Если ЕстьИзменения Тогда
					ЗаписатьРезультатРасчета(Спецификация, РезультатРасчета);
				КонецЕсли;
				
				ЗафиксироватьТранзакцию();
				
			Исключение
				
				ОтменитьТранзакцию();
				
				СобытиеЖурналаРегистрации = ПроизводствоСервер.СобытиеРасчетНормативнойДлительности();
				
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось обработать спецификацию: %1 по причине: %2'"),
									Спецификация,
									ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
				ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка, Спецификация.Метаданные(), Спецификация, ТекстСообщения);
				
				ЕстьОшибки = Истина;
				ЕстьИзменения = Ложь;
			
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// добавление в очередь расчета зависимых объектов
	
	Если ЕстьИзменения Или Не РасчетПоСпецификации Тогда
		
		ДлительностьЗависимых = Новый Соответствие;
		
		ЗависимыеОбъекты = ЗависимыеОбъектыРасчета(ОбъектРасчета);
		
		Если ЗначениеЗаполнено(ЗависимыеОбъекты) Тогда
			
			Если РасчетПоСпецификации Тогда
				
				ДлительностьЗависимых = ПолучитьДлительность(ЗависимыеОбъекты);
				Для каждого КлючИЗначение Из ДлительностьЗависимых Цикл
					Если КлючИЗначение.Значение.Предел  >  Макс(РезультатРасчета.ПлановаяДлительность,
																ДлительностьДоИзменения.ПлановаяДлительность)
						И ( КлючИЗначение.Значение.ПовтИсп = РезультатРасчета.ПовтИсп
							ИЛИ РезультатРасчета.ПовтИсп = ДлительностьДоИзменения.ПовтИсп ) Тогда
						ЗависимыеОбъекты.Удалить(ЗависимыеОбъекты.Найти(КлючИЗначение.Ключ));
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
			
			Для каждого ЗависимыйОбъект Из ЗависимыеОбъекты Цикл
				ПолныйРасчет = Не РасчетПоСпецификации ИЛИ (ДлительностьЗависимых[ЗависимыйОбъект] <> Неопределено
															И ДлительностьЗависимых[ЗависимыйОбъект].ЕстьВложенныеСпецификации);
				РегистрыСведений.ЗаданияКРасчетуДлительностиПроизводства.ДобавитьЗадание(ЗависимыйОбъект, ПолныйРасчет, Ложь);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Функция ТекстЗапросаДлительностиПроизводстваПоСпецификации()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДлительностьПроизводства.Спецификация КАК Спецификация,
	|
	|	ДлительностьПроизводства.Длительность             КАК Длительность,
	|	ДлительностьПроизводства.ПлановаяДлительность     КАК ПлановаяДлительность,
	|	ДлительностьПроизводства.МаксимальнаяДлительность КАК МаксимальнаяДлительность,
	|
	|	ДлительностьПроизводства.Предел                    КАК Предел,
	|	ДлительностьПроизводства.ЕстьВложенныеСпецификации КАК ЕстьВложенныеСпецификации,
	|
	|	ДлительностьПроизводства.ПовтИсп КАК ПовтИсп
	|ИЗ
	|	РегистрСведений.НормативнаяДлительностьПроизводства КАК ДлительностьПроизводства
	|ГДЕ
	|	ДлительностьПроизводства.Спецификация В (&МассивСсылок)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРасчетСвязанныхСпецификаций(Отбор = Неопределено)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка,
	|	Таблица.Этап   КАК Этап,
	|
	|	Таблица.Спецификация   КАК Спецификация,
	|	Таблица.Альтернативная КАК Альтернативная,
	|
	|	МАКСИМУМ(Таблица.ВходящаяСпецификация)  КАК ВходящаяСпецификация,
	|	МАКСИМУМ(Таблица.ИсходящаяСпецификация) КАК ИсходящаяСпецификация,
	|	МАКСИМУМ(Таблица.ВложеннаяСпецификация) КАК ВложеннаяСпецификация
	|
	|ПОМЕСТИТЬ ВтСвязанныеСпецификации
	|ИЗ
	|(
	|ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка,
	|	Таблица.Этап КАК Этап,
	|	Таблица.Спецификация КАК Спецификация,
	|	ЛОЖЬ КАК Альтернативная,
	|	ЛОЖЬ КАК ВходящаяСпецификация,
	|	ИСТИНА КАК ИсходящаяСпецификация,
	|	ЛОЖЬ КАК ВложеннаяСпецификация
	|ИЗ
	|	Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Спецификация
	|	И Таблица.ОбработатьПоСпецификации
	|	И Таблица.Спецификация <> ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.Этап,
	|	Таблица.Спецификация,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	ЛОЖЬ
	|ИЗ
	|	Справочник.РесурсныеСпецификации.ВозвратныеОтходы КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Спецификация
	|	И Таблица.ОбработатьПоСпецификации
	|	И Таблица.Спецификация <> ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.Этап,
	|	Таблица.ИсточникПолученияПолуфабриката,
	|	Таблица.Альтернативный,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	ЛОЖЬ
	|ИЗ
	|	Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Спецификация
	|	И Таблица.ПроизводитсяВПроцессе
	|	И Таблица.СпособПолученияМатериала = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации)
	|	И Таблица.ИсточникПолученияПолуфабриката <> ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.Этап,
	|	Таблица.СпецификацияРемонта,
	|	Таблица.Альтернативный,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	ИСТИНА
	|ИЗ
	|	Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Спецификация
	|	И Таблица.ПроизводитсяВПроцессе
	|	И Таблица.СпецификацияРемонта <> ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.Этап,
	|	СпецификацииИзделий.Спецификация,
	|	Таблица.Альтернативный,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	ЛОЖЬ
	|ИЗ
	|	Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК Таблица
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СпецификацииИзделий КАК СпецификацииИзделий
	|		ПО Таблица.Номенклатура.ВидНоменклатуры = СпецификацииИзделий.ВидНоменклатуры
	|			И СпецификацииИзделий.Номенклатура В (Таблица.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|			И СпецификацииИзделий.Характеристика В (ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка), Таблица.Характеристика)
	|			И СпецификацииИзделий.ТипПроизводственногоПроцесса = ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Сборка)
	|			И СпецификацииИзделий.ПобочныйВыход = ЛОЖЬ
	|
	|ГДЕ
	|	Таблица.Ссылка = &Спецификация
	|	И Таблица.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И Таблица.ПроизводитсяВПроцессе
	|	И Таблица.СпособПолученияМатериала = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации)
	|	И Таблица.ИсточникПолученияПолуфабриката = ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
	|
	|) КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.Этап,
	|	Таблица.Спецификация,
	|	Таблица.Альтернативная
	|";
	
	Если ЗначениеЗаполнено(Отбор) Тогда
		
		Если Отбор.Свойство("Спецификация") Тогда
			
			ТекстОтбора =
				""
				+ "Таблица.Ссылка В "
				+ "("
				+ Отбор.Спецификация
				+ ")";
				
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Таблица.Ссылка = &Спецификация", ТекстОтбора);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРасчетДлительностиПроизводстваПоСпецификации()
	
	ТекстЗапроса = ТекстЗапросаРасчетСвязанныхСпецификаций()
						+ ОбщегоНазначения.РазделительПакетаЗапросов();
		
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка,
	|	Таблица.Этап   КАК Этап,
	|
	|	Таблица.Спецификация   КАК Спецификация,
	|	Таблица.Альтернативная КАК Альтернативная,
	|
	|	Таблица.ВходящаяСпецификация  КАК ВходящаяСпецификация,
	|	Таблица.ИсходящаяСпецификация КАК ИсходящаяСпецификация,
	|	Таблица.ВложеннаяСпецификация КАК ВложеннаяСпецификация,
	|
	|	ISNULL(ДлительностьСпецификаций.ПлановаяДлительность, 0)     КАК ПлановаяДлительность,
	|	ISNULL(ДлительностьСпецификаций.МаксимальнаяДлительность, 0) КАК МаксимальнаяДлительность,
	|
	|	ISNULL(ДлительностьСпецификаций.ПовтИсп, ЛОЖЬ) КАК ПовтИсп
	|
	|ПОМЕСТИТЬ ВтДлительностьСпецификаций
	|ИЗ
	|	ВтСвязанныеСпецификации КАК Таблица
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативнаяДлительностьПроизводства КАК ДлительностьСпецификаций
	|		ПО Таблица.Спецификация = ДлительностьСпецификаций.Спецификация
	|;
	|
	|////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|
	|	Таблица.Спецификация КАК Спецификация,
	|
	|	Таблица.Длительность КАК Длительность,
	|	Таблица.ПлановаяДлительность КАК ПлановаяДлительность,
	|	Таблица.МаксимальнаяДлительность КАК МаксимальнаяДлительность,
	|
	|	Таблица.Предел КАК Предел,
	|	Таблица.ЕстьВложенныеСпецификации КАК ЕстьВложенныеСпецификации,
	|
	|	Таблица.ПовтИсп И
	|	 НЕ ИСТИНА В
	|		(ВЫБРАТЬ
	|			ИСТИНА
	|		ИЗ
	|			Справочник.РесурсныеСпецификации КАК РесурсныеСпецификации
	|		ГДЕ
	|			Таблица.Спецификация = РесурсныеСпецификации.Ссылка
	|			И ( РесурсныеСпецификации.ОптимальнаяПартияВыпуска <> 0
	|				ИЛИ РесурсныеСпецификации.МинимальнаяПартияВыпуска <> 0
	|				ИЛИ РесурсныеСпецификации.ЕстьПараметризацияРесурсов
	|				ИЛИ РесурсныеСпецификации.ЕстьВложенныеСпецификации
	|				ИЛИ РесурсныеСпецификации.ЕстьРасчетВероятности
	|				ИЛИ РесурсныеСпецификации.ЕстьНекратныеНормативыВРЦ
	|				ИЛИ РесурсныеСпецификации.ВариантНазначения = ЗНАЧЕНИЕ(Перечисление.ВариантыНазначенияСпецификации.СписокНоменклатуры)
	|				ИЛИ РесурсныеСпецификации.ВыпускПроизвольнымиПорциями = ЛОЖЬ )
	|	) КАК ПовтИсп
	|
	|ИЗ (
	|
	|ВЫБРАТЬ
	|	ПроизводственныйПроцесс.Спецификация КАК Спецификация,
	|
	|	МАКСИМУМ(ПроизводственныйПроцесс.ДнейДоОкончания) КАК Длительность,
	|
	|	МАКСИМУМ(ПроизводственныйПроцесс.ДнейДоОкончания + ВЫБОР
	|			КОГДА ЕСТЬNULL(ДлительностьСпецификаций.ВходящаяСпецификация И НЕ ДлительностьСпецификаций.Альтернативная, ЛОЖЬ)
	|				ТОГДА ЕСТЬNULL(ДлительностьСпецификаций.ПлановаяДлительность, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ)
	|		+ ВЫБОР КОГДА МАКСИМУМ(ЕСТЬNULL(ВЫБОР
	|							КОГДА ДлительностьСпецификаций.ИсходящаяСпецификация И НЕ ДлительностьСпецификаций.Альтернативная
	|							ТОГДА ДлительностьСпецификаций.ПлановаяДлительность
	|							ИНАЧЕ 0
	|						КОНЕЦ + ПроизводственныйПроцесс.ДнейДоОкончания + ПроизводственныйПроцесс.ДнейОтНачала, 0)) - МАКСИМУМ(ПроизводственныйПроцесс.ДнейДоОкончания) > 0
	|			ТОГДА МАКСИМУМ(ЕСТЬNULL(ВЫБОР
	|							КОГДА ДлительностьСпецификаций.ИсходящаяСпецификация И НЕ ДлительностьСпецификаций.Альтернативная
	|							ТОГДА ДлительностьСпецификаций.ПлановаяДлительность
	|							ИНАЧЕ 0
	|						КОНЕЦ + ПроизводственныйПроцесс.ДнейДоОкончания + ПроизводственныйПроцесс.ДнейОтНачала, 0)) - МАКСИМУМ(ПроизводственныйПроцесс.ДнейДоОкончания)
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|			КАК ПлановаяДлительность,
	|
	|	МАКСИМУМ(ПроизводственныйПроцесс.ДнейДоОкончанияМакс + ВЫБОР
	|			КОГДА ЕСТЬNULL(ДлительностьСпецификаций.ВходящаяСпецификация, ЛОЖЬ)
	|				ТОГДА ЕСТЬNULL(ДлительностьСпецификаций.МаксимальнаяДлительность, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ)
	|		+ ВЫБОР КОГДА МАКСИМУМ(ЕСТЬNULL(ВЫБОР
	|						КОГДА ДлительностьСпецификаций.ИсходящаяСпецификация
	|							ТОГДА ДлительностьСпецификаций.МаксимальнаяДлительность
	|						ИНАЧЕ 0
	|					КОНЕЦ + ПроизводственныйПроцесс.ДнейДоОкончанияМакс + ПроизводственныйПроцесс.ДнейОтНачалаМакс, 0)) - МАКСИМУМ(ПроизводственныйПроцесс.ДнейДоОкончанияМакс) > 0
	|			ТОГДА МАКСИМУМ(ЕСТЬNULL(ВЫБОР
	|							КОГДА ДлительностьСпецификаций.ИсходящаяСпецификация
	|								ТОГДА ДлительностьСпецификаций.МаксимальнаяДлительность
	|							ИНАЧЕ 0
	|						КОНЕЦ + ПроизводственныйПроцесс.ДнейДоОкончанияМакс + ПроизводственныйПроцесс.ДнейОтНачалаМакс, 0)) - МАКСИМУМ(ПроизводственныйПроцесс.ДнейДоОкончанияМакс)
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|			КАК МаксимальнаяДлительность,
	|
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПроизводственныйПроцесс.Этап) > 1
	|			ТОГДА 0
	|		ИНАЧЕ МАКСИМУМ(ЕСТЬNULL(ВЫБОР
	|						КОГДА НЕ ДлительностьСпецификаций.Альтернативная
	|							ТОГДА ДлительностьСпецификаций.ПлановаяДлительность
	|						ИНАЧЕ 0
	|					КОНЕЦ, 0))
	|	КОНЕЦ                                                                    КАК Предел,
	|	МАКСИМУМ(ЕСТЬNULL(ДлительностьСпецификаций.ВложеннаяСпецификация, ЛОЖЬ)) КАК ЕстьВложенныеСпецификации,
	|
	|	МИНИМУМ(ЕСТЬNULL(ДлительностьСпецификаций.ПовтИсп, ИСТИНА)) КАК ПовтИсп
	|
	|ИЗ
	|	РегистрСведений.НормативнаяДлительностьЭтаповПроизводства КАК ПроизводственныйПроцесс
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДлительностьСпецификаций КАК ДлительностьСпецификаций
	|
	|			ПО ПроизводственныйПроцесс.Спецификация = ДлительностьСпецификаций.Ссылка
	|				И ПроизводственныйПроцесс.Этап      = ДлительностьСпецификаций.Этап
	|ГДЕ
	|	ПроизводственныйПроцесс.Спецификация = &Спецификация
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроизводственныйПроцесс.Спецификация
	|
	|) КАК Таблица
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВычислитьДлительность(Спецификация)
	
	ТекстЗапроса = ТекстЗапросаРасчетДлительностиПроизводстваПоСпецификации();
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Результат = СтруктураДанныхЗаписиРегистра();
		
	Иначе
		
		Результат = СтруктураДанныхЗаписиРегистра();
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ЗаписатьРезультатРасчета(Спецификация, РезультатРасчета, ВызовИзОбработчикаОбновления = Ложь)
	
	Набор = РегистрыСведений.НормативнаяДлительностьПроизводства.СоздатьНаборЗаписей();
	
	Набор.Отбор.Спецификация.Установить(Спецификация);
	
	НоваяЗапись = Набор.Добавить();
	
	ЗаполнитьЗначенияСвойств(НоваяЗапись, РезультатРасчета);
	НоваяЗапись.Спецификация = Спецификация;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ВызовИзОбработчикаОбновления Тогда
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
	Иначе
		Набор.Записать(Истина);
	КонецЕсли;
	
КонецФункции


#КонецОбласти

#Область ЗависимыеОбъектыРасчета

Функция ЗависимыеОбъектыРасчета(ОбъектРасчета)
	
	Если ТипЗнч(ОбъектРасчета) = Тип("СправочникСсылка.РесурсныеСпецификации") Тогда
		
		Возврат Справочники.РесурсныеСпецификации.ЗависимыеСпецификации(ОбъектРасчета);
		
	ИначеЕсли ТипЗнч(ОбъектРасчета) = Тип("СправочникСсылка.Календари") Тогда
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	СтруктураПредприятия.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ ВТПодразделения
			|ИЗ
			|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
			|		ЛЕВОЕ СОЕДИНЕНИЕ Константа.ОсновнойКалендарьПредприятия КАК ОсновнойКалендарьПредприятия
			|		ПО ИСТИНА
			|ГДЕ
			|	СтруктураПредприятия.СпособНастройкиГрафикаРаботы =
			|		ЗНАЧЕНИЕ(Перечисление.СпособыНастройкиГрафикаРаботыПодразделений.ОсновнойКалендарьПредприятия)
			|	И ОсновнойКалендарьПредприятия.Значение = &ОбъектРасчета
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	СтруктураПредприятияГрафикиРаботы.Ссылка
			|ИЗ
			|	Справочник.СтруктураПредприятия.ГрафикиРаботы КАК СтруктураПредприятияГрафикиРаботы
			|ГДЕ
			|	СтруктураПредприятияГрафикиРаботы.ГрафикРаботы = &ОбъектРасчета
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Таблица.Владелец КАК Спецификация
			|ИЗ
			|	Справочник.ЭтапыПроизводства КАК Таблица
			|ГДЕ
			|	Таблица.Владелец.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСпецификаций.Действует)
			|	И НЕ Таблица.ПометкаУдаления
			|	И НЕ Таблица.Владелец.ПометкаУдаления
			|	И ИСТИНА В (
			|		ВЫБРАТЬ ПЕРВЫЕ 1
			|			ИСТИНА
			|		ИЗ
			|			ВТПодразделения КАК Т
			|		ГДЕ
			|			Т.Ссылка = Таблица.Подразделение)");
		Запрос.УстановитьПараметр("ОбъектРасчета", ОбъектРасчета);
		Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
		
	ИначеЕсли ТипЗнч(ОбъектРасчета) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Таблица.Владелец КАК Спецификация
			|ИЗ
			|	Справочник.ЭтапыПроизводства КАК Таблица
			|ГДЕ
			|	Таблица.Владелец.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСпецификаций.Действует)
			|	И НЕ Таблица.ПометкаУдаления
			|	И НЕ Таблица.Владелец.ПометкаУдаления
			|	И Таблица.Подразделение = &ОбъектРасчета");
		Запрос.УстановитьПараметр("ОбъектРасчета", ОбъектРасчета);
		Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
		
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция СтруктураДанныхЗаписиРегистра()
	
	Результат = Новый Структура;
	
	Результат.Вставить("Длительность", 0);
	
	Результат.Вставить("ПлановаяДлительность", 0);
	Результат.Вставить("МаксимальнаяДлительность", 0);

	Результат.Вставить("Предел", -1);
	Результат.Вставить("ЕстьВложенныеСпецификации", Ложь);
	
	Результат.Вставить("ПовтИсп", Ложь);
	
	Результат.Вставить("Версия", Версия());
	
	Возврат Результат;
	
КонецФункции

Функция Версия()
	
	Возврат "2.0";
	
КонецФункции

Функция ДлительностиРавны(Длительность1, Длительность2)
	
	Для Каждого Свойство Из Длительность1 Цикл
		
		Если Длительность1[Свойство.Ключ] <> Длительность2[Свойство.Ключ] Тогда
			Возврат Ложь;
		КонецЕсли;
		
	КонецЦикла;
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
